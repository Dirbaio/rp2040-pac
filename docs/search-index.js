var searchIndex = JSON.parse('{\
"bare_metal":{"doc":"Abstractions common to bare metal systems","i":[[3,"Peripheral","bare_metal","A peripheral",null,null],[11,"new","","Creates a new peripheral",0,[[["usize",15]]]],[11,"borrow","","Borrows the peripheral for the duration of a critical …",0,[[["criticalsection",3]]]],[11,"get","","Returns a pointer to the register block",0,[[]]],[3,"CriticalSection","","Critical section token",null,null],[11,"new","","Creates a critical section token",1,[[]]],[3,"Mutex","","A “mutex” based on critical sections",null,null],[11,"new","","Creates a new mutex",2,[[]]],[11,"borrow","","Borrows the data for the duration of the critical section",2,[[["criticalsection",3]]]],[8,"Nr","","Interrupt number",null,null],[10,"nr","","Returns the number associated with an interrupt",3,[[],["u8",15]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"Peripheral"],[3,"CriticalSection"],[3,"Mutex"],[8,"Nr"]]},\
"bitfield":{"doc":"This crate provides macros to generate bitfield-like …","i":[[8,"BitRange","bitfield","A trait to get or set ranges of bits.",null,null],[10,"bit_range","","Get a range of bits.",0,[[["usize",15]]]],[10,"set_bit_range","","Set a range of bits.",0,[[["usize",15]]]],[8,"Bit","","A trait to get or set a single bit.",null,null],[10,"bit","","Get a single bit.",1,[[["usize",15]],["bool",15]]],[10,"set_bit","","Set a single bit.",1,[[["usize",15],["bool",15]]]],[14,"bitfield_fields","","Declares the fields of struct.",null,null],[14,"bitfield_debug","","Generates a <code>fmt::Debug</code> implementation.",null,null],[14,"bitfield_bitrange","","Implements <code>BitRange</code> for a tuple struct (or “newtype”).",null,null],[14,"bitfield","","Combines <code>bitfield_bitrange</code> and <code>bitfield_fields</code>.",null,null]],"p":[[8,"BitRange"],[8,"Bit"]]},\
"cortex_m":{"doc":"Low level access to Cortex-M processors","i":[[0,"asm","cortex_m","Miscellaneous assembly instructions",null,null],[5,"bkpt","cortex_m::asm","Puts the processor in Debug state. Debuggers can pick …",null,[[]]],[5,"delay","","Blocks the program for <em>at least</em> <code>cycles</code> CPU cycles.",null,[[["u32",15]]]],[5,"nop","","A no-operation. Useful to prevent delay loops from being …",null,[[]]],[5,"udf","","Generate an Undefined Instruction exception.",null,[[]]],[5,"wfe","","Wait For Event",null,[[]]],[5,"wfi","","Wait For Interrupt",null,[[]]],[5,"sev","","Send Event",null,[[]]],[5,"isb","","Instruction Synchronization Barrier",null,[[]]],[5,"dsb","","Data Synchronization Barrier",null,[[]]],[5,"dmb","","Data Memory Barrier",null,[[]]],[5,"semihosting_syscall","","Semihosting syscall.",null,[[["u32",15]],["u32",15]]],[5,"bootstrap","","Bootstrap.",null,[[]]],[5,"bootload","","Bootload.",null,[[]]],[0,"delay","cortex_m","A delay driver based on SysTick.",null,null],[3,"Delay","cortex_m::delay","System timer (SysTick) as a delay provider.",null,null],[11,"new","","Configures the system timer (SysTick) as a delay provider.",0,[[["u32",15],["syst",3]]]],[11,"free","","Releases the system timer (SysTick) resource.",0,[[],["syst",3]]],[0,"interrupt","cortex_m","Interrupts",null,null],[3,"CriticalSection","cortex_m::interrupt","Critical section token",null,null],[3,"Mutex","","A “mutex” based on critical sections",null,null],[8,"Nr","","Interrupt number",null,null],[10,"nr","","Returns the number associated with an interrupt",1,[[],["u8",15]]],[8,"InterruptNumber","","Trait for enums of external interrupt numbers.",null,null],[10,"number","","Return the interrupt number associated with this variant.",2,[[],["u16",15]]],[5,"disable","","Disables all interrupts",null,[[]]],[5,"enable","","Enables all the interrupts",null,[[]]],[5,"free","","Execute closure <code>f</code> in an interrupt-free context.",null,[[]]],[0,"itm","cortex_m","Instrumentation Trace Macrocell",null,null],[3,"Aligned","cortex_m::itm","A wrapper type that aligns its contents on a 4-Byte …",null,null],[12,"0","","",3,null],[5,"write_all","","Writes <code>buffer</code> to an ITM port.",null,[[["stim",3]]]],[5,"write_aligned","","Writes a 4-byte aligned <code>buffer</code> to an ITM port.",null,[[["stim",3],["aligned",3]]]],[5,"write_fmt","","Writes <code>fmt::Arguments</code> to the ITM <code>port</code>",null,[[["stim",3],["arguments",3]]]],[5,"write_str","","Writes a string to the ITM <code>port</code>",null,[[["stim",3],["str",15]]]],[0,"peripheral","cortex_m","Core peripherals.",null,null],[0,"cbp","cortex_m::peripheral","Cache and branch predictor maintenance operations",null,null],[3,"RegisterBlock","cortex_m::peripheral::cbp","Register block",null,null],[12,"iciallu","","I-cache invalidate all to PoU",4,null],[12,"icimvau","","I-cache invalidate by MVA to PoU",4,null],[12,"dcimvac","","D-cache invalidate by MVA to PoC",4,null],[12,"dcisw","","D-cache invalidate by set-way",4,null],[12,"dccmvau","","D-cache clean by MVA to PoU",4,null],[12,"dccmvac","","D-cache clean by MVA to PoC",4,null],[12,"dccsw","","D-cache clean by set-way",4,null],[12,"dccimvac","","D-cache clean and invalidate by MVA to PoC",4,null],[12,"dccisw","","D-cache clean and invalidate by set-way",4,null],[12,"bpiall","","Branch predictor invalidate all",4,null],[0,"cpuid","cortex_m::peripheral","CPUID",null,null],[3,"RegisterBlock","cortex_m::peripheral::cpuid","Register block",null,null],[12,"base","","CPUID base",5,null],[12,"pfr","","Processor Feature (not present on Cortex-M0 variants)",5,null],[12,"dfr","","Debug Feature (not present on Cortex-M0 variants)",5,null],[12,"afr","","Auxiliary Feature (not present on Cortex-M0 variants)",5,null],[12,"mmfr","","Memory Model Feature (not present on Cortex-M0 variants)",5,null],[12,"isar","","Instruction Set Attribute (not present on Cortex-M0 …",5,null],[12,"clidr","","Cache Level ID (only present on Cortex-M7)",5,null],[12,"ctr","","Cache Type (only present on Cortex-M7)",5,null],[12,"ccsidr","","Cache Size ID (only present on Cortex-M7)",5,null],[12,"csselr","","Cache Size Selection (only present on Cortex-M7)",5,null],[4,"CsselrCacheType","","Type of cache to select on CSSELR writes.",null,null],[13,"DataOrUnified","","Select DCache or unified cache",6,null],[13,"Instruction","","Select ICache",6,null],[0,"dcb","cortex_m::peripheral","Debug Control Block",null,null],[3,"RegisterBlock","cortex_m::peripheral::dcb","Register block",null,null],[12,"dhcsr","","Debug Halting Control and Status",7,null],[12,"dcrsr","","Debug Core Register Selector",7,null],[12,"dcrdr","","Debug Core Register Data",7,null],[12,"demcr","","Debug Exception and Monitor Control",7,null],[0,"dwt","cortex_m::peripheral","Data Watchpoint and Trace unit",null,null],[3,"RegisterBlock","cortex_m::peripheral::dwt","Register block",null,null],[12,"ctrl","","Control",8,null],[12,"cyccnt","","Cycle Count",8,null],[12,"cpicnt","","CPI Count",8,null],[12,"exccnt","","Exception Overhead Count",8,null],[12,"sleepcnt","","Sleep Count",8,null],[12,"lsucnt","","LSU Count",8,null],[12,"foldcnt","","Folded-instruction Count",8,null],[12,"pcsr","","Program Counter Sample",8,null],[12,"c","","Comparators",8,null],[12,"lar","","Lock Access",8,null],[12,"lsr","","Lock Status",8,null],[3,"Comparator","","Comparator",null,null],[12,"comp","","Comparator",9,null],[12,"mask","","Comparator Mask",9,null],[12,"function","","Comparator Function",9,null],[0,"fpb","cortex_m::peripheral","Flash Patch and Breakpoint unit",null,null],[3,"RegisterBlock","cortex_m::peripheral::fpb","Register block",null,null],[12,"ctrl","","Control",10,null],[12,"remap","","Remap",10,null],[12,"comp","","Comparator",10,null],[12,"lar","","Lock Access",10,null],[12,"lsr","","Lock Status",10,null],[0,"fpu","cortex_m::peripheral","Floating Point Unit",null,null],[3,"RegisterBlock","cortex_m::peripheral::fpu","Register block",null,null],[12,"fpccr","","Floating Point Context Control",11,null],[12,"fpcar","","Floating Point Context Address",11,null],[12,"fpdscr","","Floating Point Default Status Control",11,null],[12,"mvfr","","Media and FP Feature",11,null],[0,"icb","cortex_m::peripheral","Implementation Control Block",null,null],[3,"RegisterBlock","cortex_m::peripheral::icb","Register block",null,null],[12,"ictr","","Interrupt Controller Type Register",12,null],[12,"actlr","","Auxiliary Control Register",12,null],[0,"itm","cortex_m::peripheral","Instrumentation Trace Macrocell",null,null],[3,"RegisterBlock","cortex_m::peripheral::itm","Register block",null,null],[12,"stim","","Stimulus Port",13,null],[12,"ter","","Trace Enable",13,null],[12,"tpr","","Trace Privilege",13,null],[12,"tcr","","Trace Control",13,null],[12,"lar","","Lock Access",13,null],[12,"lsr","","Lock Status",13,null],[3,"Stim","","Stimulus Port",null,null],[11,"write_u8","","Writes an <code>u8</code> payload into the stimulus port",14,[[["u8",15]]]],[11,"write_u16","","Writes an <code>u16</code> payload into the stimulus port",14,[[["u16",15]]]],[11,"write_u32","","Writes an <code>u32</code> payload into the stimulus port",14,[[["u32",15]]]],[11,"is_fifo_ready","","Returns <code>true</code> if the stimulus port is ready to accept more …",14,[[],["bool",15]]],[0,"mpu","cortex_m::peripheral","Memory Protection Unit",null,null],[3,"RegisterBlock","cortex_m::peripheral::mpu","Register block for ARMv7-M",null,null],[12,"_type","","Type",15,null],[12,"ctrl","","Control",15,null],[12,"rnr","","Region Number",15,null],[12,"rbar","","Region Base Address",15,null],[12,"rasr","","Region Attribute and Size",15,null],[12,"rbar_a1","","Alias 1 of RBAR",15,null],[12,"rasr_a1","","Alias 1 of RASR",15,null],[12,"rbar_a2","","Alias 2 of RBAR",15,null],[12,"rasr_a2","","Alias 2 of RASR",15,null],[12,"rbar_a3","","Alias 3 of RBAR",15,null],[12,"rasr_a3","","Alias 3 of RASR",15,null],[0,"nvic","cortex_m::peripheral","Nested Vector Interrupt Controller",null,null],[3,"RegisterBlock","cortex_m::peripheral::nvic","Register block",null,null],[12,"iser","","Interrupt Set-Enable",16,null],[12,"icer","","Interrupt Clear-Enable",16,null],[12,"ispr","","Interrupt Set-Pending",16,null],[12,"icpr","","Interrupt Clear-Pending",16,null],[12,"iabr","","Interrupt Active Bit (not present on Cortex-M0 variants)",16,null],[12,"ipr","","Interrupt Priority",16,null],[12,"stir","","Software Trigger Interrupt",16,null],[0,"scb","cortex_m::peripheral","System Control Block",null,null],[3,"RegisterBlock","cortex_m::peripheral::scb","Register block",null,null],[12,"icsr","","Interrupt Control and State",17,null],[12,"vtor","","Vector Table Offset (not present on Cortex-M0 variants)",17,null],[12,"aircr","","Application Interrupt and Reset Control",17,null],[12,"scr","","System Control",17,null],[12,"ccr","","Configuration and Control",17,null],[12,"shpr","","System Handler Priority (word accessible only on …",17,null],[12,"shcsr","","System Handler Control and State",17,null],[12,"cfsr","","Configurable Fault Status (not present on Cortex-M0 …",17,null],[12,"hfsr","","HardFault Status (not present on Cortex-M0 variants)",17,null],[12,"dfsr","","Debug Fault Status (not present on Cortex-M0 variants)",17,null],[12,"mmfar","","MemManage Fault Address (not present on Cortex-M0 …",17,null],[12,"bfar","","BusFault Address (not present on Cortex-M0 variants)",17,null],[12,"afsr","","Auxiliary Fault Status (not present on Cortex-M0 variants)",17,null],[12,"cpacr","","Coprocessor Access Control (not present on Cortex-M0 …",17,null],[4,"Exception","","Processor core exceptions (internal interrupts)",null,null],[13,"NonMaskableInt","","Non maskable interrupt",18,null],[13,"HardFault","","Hard fault interrupt",18,null],[13,"MemoryManagement","","Memory management interrupt (not present on Cortex-M0 …",18,null],[13,"BusFault","","Bus fault interrupt (not present on Cortex-M0 variants)",18,null],[13,"UsageFault","","Usage fault interrupt (not present on Cortex-M0 variants)",18,null],[13,"SecureFault","","Secure fault interrupt (only on ARMv8-M)",18,null],[13,"SVCall","","SV call interrupt",18,null],[13,"DebugMonitor","","Debug monitor interrupt (not present on Cortex-M0 …",18,null],[13,"PendSV","","Pend SV interrupt",18,null],[13,"SysTick","","System Tick interrupt",18,null],[11,"irqn","","Returns the IRQ number of this <code>Exception</code>",18,[[],["i8",15]]],[4,"VectActive","","Active exception number",null,null],[13,"ThreadMode","","Thread mode",19,null],[13,"Exception","","Processor core exception (internal interrupts)",19,null],[13,"Interrupt","","Device specific exception (external interrupts)",19,null],[12,"irqn","cortex_m::peripheral::scb::VectActive","Interrupt number. This number is always within half open …",20,null],[11,"from","cortex_m::peripheral::scb","Converts a <code>byte</code> into <code>VectActive</code>",19,[[["u8",15]],["option",4]]],[4,"SystemHandler","","System handlers, exceptions with configurable priority",null,null],[13,"MemoryManagement","","Memory management interrupt (not present on Cortex-M0 …",21,null],[13,"BusFault","","Bus fault interrupt (not present on Cortex-M0 variants)",21,null],[13,"UsageFault","","Usage fault interrupt (not present on Cortex-M0 variants)",21,null],[13,"SecureFault","","Secure fault interrupt (only on ARMv8-M)",21,null],[13,"SVCall","","SV call interrupt",21,null],[13,"DebugMonitor","","Debug monitor interrupt (not present on Cortex-M0 …",21,null],[13,"PendSV","","Pend SV interrupt",21,null],[13,"SysTick","","System Tick interrupt",21,null],[0,"syst","cortex_m::peripheral","SysTick: System Timer",null,null],[3,"RegisterBlock","cortex_m::peripheral::syst","Register block",null,null],[12,"csr","","Control and Status",22,null],[12,"rvr","","Reload Value",22,null],[12,"cvr","","Current Value",22,null],[12,"calib","","Calibration Value",22,null],[4,"SystClkSource","","SysTick clock source",null,null],[13,"Core","","Core-provided clock",23,null],[13,"External","","External reference clock",23,null],[0,"tpiu","cortex_m::peripheral","Trace Port Interface Unit;",null,null],[3,"RegisterBlock","cortex_m::peripheral::tpiu","Register block",null,null],[12,"sspsr","","Supported Parallel Port Sizes",24,null],[12,"cspsr","","Current Parallel Port Size",24,null],[12,"acpr","","Asynchronous Clock Prescaler",24,null],[12,"sppr","","Selected Pin Control",24,null],[12,"ffcr","","Formatter and Flush Control",24,null],[12,"lar","","Lock Access",24,null],[12,"lsr","","Lock Status",24,null],[12,"_type","","TPIU Type",24,null],[3,"Peripherals","cortex_m::peripheral","Core peripherals",null,null],[12,"CBP","","Cache and branch predictor maintenance operations. Not …",25,null],[12,"CPUID","","CPUID",25,null],[12,"DCB","","Debug Control Block",25,null],[12,"DWT","","Data Watchpoint and Trace unit",25,null],[12,"FPB","","Flash Patch and Breakpoint unit. Not available on Armv6-M.",25,null],[12,"FPU","","Floating Point Unit.",25,null],[12,"ICB","","Implementation Control Block.",25,null],[12,"ITM","","Instrumentation Trace Macrocell. Not available on Armv6-M …",25,null],[12,"MPU","","Memory Protection Unit",25,null],[12,"NVIC","","Nested Vector Interrupt Controller",25,null],[12,"SAU","","Security Attribution Unit",25,null],[12,"SCB","","System Control Block",25,null],[12,"SYST","","SysTick: System Timer",25,null],[12,"TPIU","","Trace Port Interface Unit. Not available on Armv6-M.",25,null],[11,"take","","Returns all the core peripherals <em>once</em>",25,[[],["option",4]]],[11,"steal","","Unchecked version of <code>Peripherals::take</code>",25,[[]]],[3,"CBP","","Cache and branch predictor maintenance operations",null,null],[18,"PTR","","Pointer to the register block",26,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",26,[[]]],[3,"CPUID","","CPUID",null,null],[18,"PTR","","Pointer to the register block",27,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",27,[[]]],[3,"DCB","","Debug Control Block",null,null],[18,"PTR","","Pointer to the register block",28,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",28,[[]]],[3,"DWT","","Data Watchpoint and Trace unit",null,null],[18,"PTR","","Pointer to the register block",29,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",29,[[]]],[3,"FPB","","Flash Patch and Breakpoint unit",null,null],[18,"PTR","","Pointer to the register block",30,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",30,[[]]],[3,"FPU","","Floating Point Unit",null,null],[18,"PTR","","Pointer to the register block",31,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",31,[[]]],[3,"ICB","","Implementation Control Block.",null,null],[18,"PTR","","Pointer to the register block",32,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",32,[[]]],[3,"ITM","","Instrumentation Trace Macrocell",null,null],[18,"PTR","","Pointer to the register block",33,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",33,[[]]],[3,"MPU","","Memory Protection Unit",null,null],[18,"PTR","","Pointer to the register block",34,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",34,[[]]],[3,"NVIC","","Nested Vector Interrupt Controller",null,null],[18,"PTR","","Pointer to the register block",35,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",35,[[]]],[3,"SAU","","Security Attribution Unit",null,null],[3,"SCB","","System Control Block",null,null],[18,"PTR","","Pointer to the register block",36,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",36,[[]]],[3,"SYST","","SysTick: System Timer",null,null],[18,"PTR","","Pointer to the register block",37,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",37,[[]]],[3,"TPIU","","Trace Port Interface Unit",null,null],[18,"PTR","","Pointer to the register block",38,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",38,[[]]],[0,"prelude","cortex_m","Prelude",null,null],[8,"_embedded_hal_blocking_delay_DelayMs","cortex_m::prelude","Millisecond delay",null,null],[10,"delay_ms","","Pauses execution for <code>ms</code> milliseconds",39,[[]]],[8,"_embedded_hal_blocking_delay_DelayUs","","Microsecond delay",null,null],[10,"delay_us","","Pauses execution for <code>us</code> microseconds",40,[[]]],[8,"_embedded_hal_blocking_i2c_Read","","Blocking read",null,null],[16,"Error","","Error type",41,null],[10,"read","","Reads enough bytes from slave with <code>address</code> to fill <code>buffer</code>",41,[[["u8",15]],["result",4]]],[8,"_embedded_hal_blocking_i2c_Write","","Blocking write",null,null],[16,"Error","","Error type",42,null],[10,"write","","Sends bytes to slave with address <code>addr</code>",42,[[["u8",15]],["result",4]]],[8,"_embedded_hal_blocking_i2c_WriteRead","","Blocking write + read",null,null],[16,"Error","","Error type",43,null],[10,"write_read","","Sends bytes to slave with address <code>addr</code> and then reads …",43,[[["u8",15]],["result",4]]],[8,"_embedded_hal_blocking_serial_Write","","Write half of a serial interface (blocking variant)",null,null],[16,"Error","","The type of error that can occur when writing",44,null],[10,"bwrite_all","","Writes a slice, blocking until everything has been written",44,[[],["result",4]]],[10,"bflush","","Block until the serial interface has sent all buffered …",44,[[],["result",4]]],[8,"_embedded_hal_blocking_spi_Transfer","","Blocking transfer",null,null],[16,"Error","","Error type",45,null],[10,"transfer","","Sends <code>words</code> to the slave. Returns the <code>words</code> received from …",45,[[],["result",4]]],[8,"_embedded_hal_blocking_spi_Write","","Blocking write",null,null],[16,"Error","","Error type",46,null],[10,"write","","Sends <code>words</code> to the slave, ignoring all the incoming words",46,[[],["result",4]]],[8,"_embedded_hal_digital_OutputPin","","Single digital push-pull output pin",null,null],[10,"set_low","","Drives the pin low",47,[[]]],[10,"set_high","","Drives the pin high",47,[[]]],[8,"_embedded_hal_serial_Read","","Read half of a serial interface",null,null],[16,"Error","","Read error",48,null],[10,"read","","Reads a single word from the serial interface",48,[[],[["result",4],["error",4]]]],[8,"_embedded_hal_serial_Write","","Write half of a serial interface",null,null],[16,"Error","","Write error",49,null],[10,"write","","Writes a single word to the serial interface",49,[[],[["result",4],["error",4]]]],[10,"flush","","Ensures that none of the previously written words are …",49,[[],[["result",4],["error",4]]]],[8,"_embedded_hal_spi_FullDuplex","","Full duplex (master mode)",null,null],[16,"Error","","An enumeration of SPI errors",50,null],[10,"read","","Reads the word stored in the shift register",50,[[],[["result",4],["error",4]]]],[10,"send","","Sends a word to the slave",50,[[],[["error",4],["result",4]]]],[8,"_embedded_hal_timer_CountDown","","A count down timer",null,null],[16,"Time","","The unit of time used by this timer",51,null],[10,"start","","Starts a new count down",51,[[]]],[10,"wait","","Non-blockingly “waits” until the count down finishes",51,[[],[["error",4],["result",4]]]],[8,"_embedded_hal_PwmPin","","A single PWM channel / pin",null,null],[16,"Duty","","Type for the <code>duty</code> methods",52,null],[10,"disable","","Disables a PWM <code>channel</code>",52,[[]]],[10,"enable","","Enables a PWM <code>channel</code>",52,[[]]],[10,"get_duty","","Returns the current duty cycle",52,[[]]],[10,"get_max_duty","","Returns the maximum duty cycle value",52,[[]]],[10,"set_duty","","Sets a new duty cycle",52,[[]]],[0,"register","cortex_m","Processor core registers",null,null],[0,"basepri","cortex_m::register","Base Priority Mask Register",null,null],[5,"read","cortex_m::register::basepri","Reads the CPU register",null,[[],["u8",15]]],[5,"write","","Writes to the CPU register",null,[[["u8",15]]]],[0,"basepri_max","cortex_m::register","Base Priority Mask Register (conditional write)",null,null],[5,"write","cortex_m::register::basepri_max","Writes to BASEPRI <em>if</em>",null,[[["u8",15]]]],[0,"control","cortex_m::register","Control register",null,null],[3,"Control","cortex_m::register::control","Control register",null,null],[11,"from_bits","","Creates a <code>Control</code> value from raw bits.",53,[[["u32",15]]]],[11,"bits","","Returns the contents of the register as raw bits",53,[[],["u32",15]]],[11,"npriv","","Thread mode privilege level",53,[[],["npriv",4]]],[11,"set_npriv","","Sets the thread mode privilege level value (nPRIV).",53,[[["npriv",4]]]],[11,"spsel","","Currently active stack pointer",53,[[],["spsel",4]]],[11,"set_spsel","","Sets the SPSEL value.",53,[[["spsel",4]]]],[11,"fpca","","Whether context floating-point is currently active",53,[[],["fpca",4]]],[11,"set_fpca","","Sets the FPCA value.",53,[[["fpca",4]]]],[4,"Npriv","","Thread mode privilege level",null,null],[13,"Privileged","","Privileged",54,null],[13,"Unprivileged","","Unprivileged",54,null],[11,"is_privileged","","Is in privileged thread mode?",54,[[],["bool",15]]],[11,"is_unprivileged","","Is in unprivileged thread mode?",54,[[],["bool",15]]],[4,"Spsel","","Currently active stack pointer",null,null],[13,"Msp","","MSP is the current stack pointer",55,null],[13,"Psp","","PSP is the current stack pointer",55,null],[11,"is_msp","","Is MSP the current stack pointer?",55,[[],["bool",15]]],[11,"is_psp","","Is PSP the current stack pointer?",55,[[],["bool",15]]],[4,"Fpca","","Whether context floating-point is currently active",null,null],[13,"Active","","Floating-point context active.",56,null],[13,"NotActive","","No floating-point context active",56,null],[11,"is_active","","Is a floating-point context active?",56,[[],["bool",15]]],[11,"is_not_active","","Is a floating-point context not active?",56,[[],["bool",15]]],[5,"read","","Reads the CPU register",null,[[],["control",3]]],[5,"write","","Writes to the CPU register.",null,[[["control",3]]]],[0,"faultmask","cortex_m::register","Fault Mask Register",null,null],[4,"Faultmask","cortex_m::register::faultmask","All exceptions are …",null,null],[13,"Active","","Active",57,null],[13,"Inactive","","Inactive, expect for NMI",57,null],[11,"is_active","","All exceptions are active",57,[[],["bool",15]]],[11,"is_inactive","","All exceptions, except for NMI, are inactive",57,[[],["bool",15]]],[5,"read","","Reads the CPU register",null,[[],["faultmask",4]]],[0,"msp","cortex_m::register","Main Stack Pointer",null,null],[5,"read","cortex_m::register::msp","Reads the CPU register",null,[[],["u32",15]]],[5,"write","","Writes <code>bits</code> to the CPU register",null,[[["u32",15]]]],[0,"primask","cortex_m::register","Priority mask register",null,null],[4,"Primask","cortex_m::register::primask","All exceptions with configurable priority are …",null,null],[13,"Active","","Active",58,null],[13,"Inactive","","Inactive",58,null],[11,"is_active","","All exceptions with configurable priority are active",58,[[],["bool",15]]],[11,"is_inactive","","All exceptions with configurable priority are inactive",58,[[],["bool",15]]],[5,"read","","Reads the CPU register",null,[[],["primask",4]]],[0,"psp","cortex_m::register","Process Stack Pointer",null,null],[5,"read","cortex_m::register::psp","Reads the CPU register",null,[[],["u32",15]]],[5,"write","","Writes <code>bits</code> to the CPU register",null,[[["u32",15]]]],[14,"iprint","cortex_m","Macro for sending a formatted string through an ITM …",null,null],[14,"iprintln","","Macro for sending a formatted string through an ITM …",null,null],[14,"singleton","","Macro to create a mutable reference to a statically …",null,null],[11,"borrow","cortex_m::delay","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"borrow","cortex_m::interrupt","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"borrow","cortex_m::itm","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"borrow","cortex_m::peripheral::cbp","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"borrow","cortex_m::peripheral::cpuid","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"borrow","cortex_m::peripheral::dcb","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"borrow","cortex_m::peripheral::dwt","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"borrow","cortex_m::peripheral::fpb","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"borrow","cortex_m::peripheral::fpu","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"borrow","cortex_m::peripheral::icb","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"borrow","cortex_m::peripheral::itm","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"borrow","cortex_m::peripheral::mpu","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"borrow","cortex_m::peripheral::nvic","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"borrow","cortex_m::peripheral::scb","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"borrow","cortex_m::peripheral::syst","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"borrow","cortex_m::peripheral::tpiu","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"borrow","cortex_m::peripheral","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"borrow","cortex_m::register::control","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"borrow","cortex_m::register::faultmask","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"borrow","cortex_m::register::primask","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"write_str","cortex_m::prelude","",49,[[["str",15]],[["error",3],["result",4]]]],[11,"deref","cortex_m::peripheral","",26,[[]]],[11,"deref","","",27,[[]]],[11,"deref","","",28,[[]]],[11,"deref","","",29,[[]]],[11,"deref","","",30,[[]]],[11,"deref","","",31,[[]]],[11,"deref","","",32,[[]]],[11,"deref","","",33,[[]]],[11,"deref","","",34,[[]]],[11,"deref","","",35,[[]]],[11,"deref","","",36,[[]]],[11,"deref","","",37,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",32,[[]]],[11,"deref_mut","","",33,[[]]],[11,"fmt","cortex_m::peripheral::cpuid","",6,[[["formatter",3]],["result",6]]],[11,"fmt","cortex_m::peripheral::scb","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","cortex_m::peripheral::syst","",23,[[["formatter",3]],["result",6]]],[11,"fmt","cortex_m::register::control","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","cortex_m::register::faultmask","",57,[[["formatter",3]],["result",6]]],[11,"fmt","cortex_m::register::primask","",58,[[["formatter",3]],["result",6]]],[11,"eq","cortex_m::peripheral::cpuid","",6,[[["csselrcachetype",4]],["bool",15]]],[11,"eq","cortex_m::peripheral::scb","",18,[[["exception",4]],["bool",15]]],[11,"eq","","",19,[[["vectactive",4]],["bool",15]]],[11,"ne","","",19,[[["vectactive",4]],["bool",15]]],[11,"eq","","",21,[[["systemhandler",4]],["bool",15]]],[11,"eq","cortex_m::peripheral::syst","",23,[[["systclksource",4]],["bool",15]]],[11,"eq","cortex_m::register::control","",54,[[["npriv",4]],["bool",15]]],[11,"eq","","",55,[[["spsel",4]],["bool",15]]],[11,"eq","","",56,[[["fpca",4]],["bool",15]]],[11,"eq","cortex_m::register::faultmask","",57,[[["faultmask",4]],["bool",15]]],[11,"eq","cortex_m::register::primask","",58,[[["primask",4]],["bool",15]]],[11,"clone","cortex_m::peripheral::cpuid","",6,[[],["csselrcachetype",4]]],[11,"clone","cortex_m::peripheral::scb","",18,[[],["exception",4]]],[11,"clone","","",19,[[],["vectactive",4]]],[11,"clone","","",21,[[],["systemhandler",4]]],[11,"clone","cortex_m::peripheral::syst","",23,[[],["systclksource",4]]],[11,"clone","cortex_m::register::control","",53,[[],["control",3]]],[11,"clone","","",54,[[],["npriv",4]]],[11,"clone","","",55,[[],["spsel",4]]],[11,"clone","","",56,[[],["fpca",4]]],[11,"clone","cortex_m::register::faultmask","",57,[[],["faultmask",4]]],[11,"clone","cortex_m::register::primask","",58,[[],["primask",4]]],[11,"delay_ms","cortex_m::delay","",0,[[["u32",15]]]],[11,"delay_ms","","",0,[[["i32",15]]]],[11,"delay_ms","","",0,[[["u16",15]]]],[11,"delay_ms","","",0,[[["u8",15]]]],[11,"delay_us","","",0,[[["u32",15]]]],[11,"delay_us","","",0,[[["i32",15]]]],[11,"delay_us","","",0,[[["u16",15]]]],[11,"delay_us","","",0,[[["u8",15]]]],[11,"new","cortex_m::interrupt","Creates a critical section token",59,[[],["criticalsection",3]]],[11,"new","","Creates a new mutex",60,[[],["mutex",3]]],[11,"borrow","","Borrows the data for the duration of the critical section",60,[[["criticalsection",3]]]],[11,"iciallu","cortex_m::peripheral","I-cache invalidate all to PoU",26,[[]]],[11,"icimvau","","I-cache invalidate by MVA to PoU",26,[[["u32",15]]]],[11,"dcimvac","","D-cache invalidate by MVA to PoC",26,[[["u32",15]]]],[11,"dcisw","","D-cache invalidate by set-way",26,[[["u16",15]]]],[11,"dccmvau","","D-cache clean by MVA to PoU",26,[[["u32",15]]]],[11,"dccmvac","","D-cache clean by MVA to PoC",26,[[["u32",15]]]],[11,"dccsw","","D-cache clean by set-way",26,[[["u16",15]]]],[11,"dccimvac","","D-cache clean and invalidate by MVA to PoC",26,[[["u32",15]]]],[11,"dccisw","","D-cache clean and invalidate by set-way",26,[[["u16",15]]]],[11,"bpiall","","Branch predictor invalidate all",26,[[]]],[11,"select_cache","","Selects the current CCSIDR",27,[[["csselrcachetype",4],["u8",15]]]],[11,"cache_num_sets_ways","","Returns the number of sets and ways in the selected cache",27,[[["csselrcachetype",4],["u8",15]]]],[11,"cache_dminline","","Returns log2 of the number of words in the smallest cache …",27,[[],["u32",15]]],[11,"cache_iminline","","Returns log2 of the number of words in the smallest cache …",27,[[],["u32",15]]],[11,"enable_trace","","Enables TRACE. This is for example required by the …",28,[[]]],[11,"disable_trace","","Disables TRACE. See <code>DCB::enable_trace()</code> for more details",28,[[]]],[11,"is_debugger_attached","","Is there a debugger attached? (see note)",28,[[],["bool",15]]],[11,"enable_cycle_counter","","Enables the cycle counter",29,[[]]],[11,"get_cycle_count","","Returns the current clock cycle count",29,[[],["u32",15]]],[11,"unlock","","Removes the software lock on the DWT",29,[[]]],[11,"request","","Request an IRQ in software",35,[[]]],[11,"mask","","Disables <code>interrupt</code>",35,[[]]],[11,"unmask","","Enables <code>interrupt</code>",35,[[]]],[11,"get_priority","","Returns the NVIC priority of <code>interrupt</code>",35,[[],["u8",15]]],[11,"is_active","","Is <code>interrupt</code> active or pre-empted and stacked",35,[[],["bool",15]]],[11,"is_enabled","","Checks if <code>interrupt</code> is enabled",35,[[],["bool",15]]],[11,"is_pending","","Checks if <code>interrupt</code> is pending",35,[[],["bool",15]]],[11,"pend","","Forces <code>interrupt</code> into pending state",35,[[]]],[11,"set_priority","","Sets the “priority” of <code>interrupt</code> to <code>prio</code>",35,[[["u8",15]]]],[11,"unpend","","Clears <code>interrupt</code>’s pending state",35,[[]]],[11,"vect_active","","Returns the active exception number",36,[[],["vectactive",4]]],[11,"enable_icache","","Enables I-cache if currently disabled.",36,[[]]],[11,"disable_icache","","Disables I-cache if currently enabled.",36,[[]]],[11,"icache_enabled","","Returns whether the I-cache is currently enabled.",36,[[],["bool",15]]],[11,"invalidate_icache","","Invalidates the entire I-cache.",36,[[]]],[11,"enable_dcache","","Enables D-cache if currently disabled.",36,[[["cpuid",3]]]],[11,"disable_dcache","","Disables D-cache if currently enabled.",36,[[["cpuid",3]]]],[11,"dcache_enabled","","Returns whether the D-cache is currently enabled.",36,[[],["bool",15]]],[11,"clean_dcache","","Cleans the entire D-cache.",36,[[["cpuid",3]]]],[11,"clean_invalidate_dcache","","Cleans and invalidates the entire D-cache.",36,[[["cpuid",3]]]],[11,"invalidate_dcache_by_address","","Invalidates D-cache by address.",36,[[["usize",15]]]],[11,"invalidate_dcache_by_ref","","Invalidates an object from the D-cache.",36,[[]]],[11,"invalidate_dcache_by_slice","","Invalidates a slice from the D-cache.",36,[[]]],[11,"clean_dcache_by_address","","Cleans D-cache by address.",36,[[["usize",15]]]],[11,"clean_dcache_by_ref","","Cleans an object from the D-cache.",36,[[]]],[11,"clean_dcache_by_slice","","Cleans a slice from D-cache.",36,[[]]],[11,"clean_invalidate_dcache_by_address","","Cleans and invalidates D-cache by address.",36,[[["usize",15]]]],[11,"set_sleepdeep","","Set the SLEEPDEEP bit in the SCR register",36,[[]]],[11,"clear_sleepdeep","","Clear the SLEEPDEEP bit in the SCR register",36,[[]]],[11,"set_sleeponexit","","Set the SLEEPONEXIT bit in the SCR register",36,[[]]],[11,"clear_sleeponexit","","Clear the SLEEPONEXIT bit in the SCR register",36,[[]]],[11,"sys_reset","","Initiate a system reset request to reset the MCU",36,[[]]],[11,"set_pendsv","","Set the PENDSVSET bit in the ICSR register which will …",36,[[]]],[11,"is_pendsv_pending","","Check if PENDSVSET bit in the ICSR register is set …",36,[[],["bool",15]]],[11,"clear_pendsv","","Set the PENDSVCLR bit in the ICSR register which will …",36,[[]]],[11,"set_pendst","","Set the PENDSTSET bit in the ICSR register which will …",36,[[]]],[11,"is_pendst_pending","","Check if PENDSTSET bit in the ICSR register is set …",36,[[],["bool",15]]],[11,"clear_pendst","","Set the PENDSTCLR bit in the ICSR register which will …",36,[[]]],[11,"get_priority","","Returns the hardware priority of <code>system_handler</code>",36,[[["systemhandler",4]],["u8",15]]],[11,"set_priority","","Sets the hardware priority of <code>system_handler</code> to <code>prio</code>",36,[[["systemhandler",4],["u8",15]]]],[11,"enable","","Enable the exception",36,[[["exception",4]]]],[11,"disable","","Disable the exception",36,[[["exception",4]]]],[11,"is_enabled","","Check if an exception is enabled",36,[[["exception",4]],["bool",15]]],[11,"clear_current","","Clears current value to 0",37,[[]]],[11,"disable_counter","","Disables counter",37,[[]]],[11,"disable_interrupt","","Disables SysTick interrupt",37,[[]]],[11,"enable_counter","","Enables counter",37,[[]]],[11,"enable_interrupt","","Enables SysTick interrupt",37,[[]]],[11,"get_clock_source","","Gets clock source",37,[[],["systclksource",4]]],[11,"get_current","","Gets current value",37,[[],["u32",15]]],[11,"get_reload","","Gets reload value",37,[[],["u32",15]]],[11,"get_ticks_per_10ms","","Returns the reload value with which the counter would …",37,[[],["u32",15]]],[11,"has_reference_clock","","Checks if an external reference clock is available",37,[[],["bool",15]]],[11,"has_wrapped","","Checks if the counter wrapped (underflowed) since the …",37,[[],["bool",15]]],[11,"is_counter_enabled","","Checks if counter is enabled",37,[[],["bool",15]]],[11,"is_interrupt_enabled","","Checks if SysTick interrupt is enabled",37,[[],["bool",15]]],[11,"is_precise","","Checks if the calibration value is precise",37,[[],["bool",15]]],[11,"set_clock_source","","Sets clock source",37,[[["systclksource",4]]]],[11,"set_reload","","Sets reload value",37,[[["u32",15]]]]],"p":[[3,"Delay"],[8,"Nr"],[8,"InterruptNumber"],[3,"Aligned"],[3,"RegisterBlock"],[3,"RegisterBlock"],[4,"CsselrCacheType"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"Comparator"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"Stim"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"RegisterBlock"],[4,"Exception"],[4,"VectActive"],[13,"Interrupt"],[4,"SystemHandler"],[3,"RegisterBlock"],[4,"SystClkSource"],[3,"RegisterBlock"],[3,"Peripherals"],[3,"CBP"],[3,"CPUID"],[3,"DCB"],[3,"DWT"],[3,"FPB"],[3,"FPU"],[3,"ICB"],[3,"ITM"],[3,"MPU"],[3,"NVIC"],[3,"SCB"],[3,"SYST"],[3,"TPIU"],[8,"_embedded_hal_blocking_delay_DelayMs"],[8,"_embedded_hal_blocking_delay_DelayUs"],[8,"_embedded_hal_blocking_i2c_Read"],[8,"_embedded_hal_blocking_i2c_Write"],[8,"_embedded_hal_blocking_i2c_WriteRead"],[8,"_embedded_hal_blocking_serial_Write"],[8,"_embedded_hal_blocking_spi_Transfer"],[8,"_embedded_hal_blocking_spi_Write"],[8,"_embedded_hal_digital_OutputPin"],[8,"_embedded_hal_serial_Read"],[8,"_embedded_hal_serial_Write"],[8,"_embedded_hal_spi_FullDuplex"],[8,"_embedded_hal_timer_CountDown"],[8,"_embedded_hal_PwmPin"],[3,"Control"],[4,"Npriv"],[4,"Spsel"],[4,"Fpca"],[4,"Faultmask"],[4,"Primask"],[3,"CriticalSection"],[3,"Mutex"],[3,"SAU"]]},\
"embedded_hal":{"doc":"A Hardware Abstraction Layer (HAL) for embedded systems","i":[[0,"adc","embedded_hal","Analog-digital conversion traits",null,null],[0,"blocking","","Blocking API",null,null],[0,"delay","embedded_hal::blocking","Delays",null,null],[8,"DelayMs","embedded_hal::blocking::delay","Millisecond delay",null,null],[10,"delay_ms","","Pauses execution for <code>ms</code> milliseconds",0,[[]]],[8,"DelayUs","","Microsecond delay",null,null],[10,"delay_us","","Pauses execution for <code>us</code> microseconds",1,[[]]],[0,"i2c","embedded_hal::blocking","Blocking I2C API",null,null],[8,"Read","embedded_hal::blocking::i2c","Blocking read",null,null],[16,"Error","","Error type",2,null],[10,"read","","Reads enough bytes from slave with <code>address</code> to fill <code>buffer</code>",2,[[["u8",15]],["result",4]]],[8,"Write","","Blocking write",null,null],[16,"Error","","Error type",3,null],[10,"write","","Sends bytes to slave with address <code>addr</code>",3,[[["u8",15]],["result",4]]],[8,"WriteRead","","Blocking write + read",null,null],[16,"Error","","Error type",4,null],[10,"write_read","","Sends bytes to slave with address <code>addr</code> and then reads …",4,[[["u8",15]],["result",4]]],[0,"rng","embedded_hal::blocking","Blocking hardware random number generator",null,null],[0,"serial","","Blocking serial API",null,null],[0,"write","embedded_hal::blocking::serial","Blocking serial write",null,null],[8,"Default","embedded_hal::blocking::serial::write","Marker trait to opt into default blocking write …",null,null],[8,"Write","embedded_hal::blocking::serial","Write half of a serial interface (blocking variant)",null,null],[16,"Error","","The type of error that can occur when writing",5,null],[10,"bwrite_all","","Writes a slice, blocking until everything has been written",5,[[],["result",4]]],[10,"bflush","","Block until the serial interface has sent all buffered …",5,[[],["result",4]]],[0,"spi","embedded_hal::blocking","Blocking SPI API",null,null],[0,"transfer","embedded_hal::blocking::spi","Blocking transfer",null,null],[8,"Default","embedded_hal::blocking::spi::transfer","Default implementation of <code>blocking::spi::Transfer<W></code> for …",null,null],[0,"write","embedded_hal::blocking::spi","Blocking write",null,null],[8,"Default","embedded_hal::blocking::spi::write","Default implementation of <code>blocking::spi::Write<W></code> for …",null,null],[8,"Transfer","embedded_hal::blocking::spi","Blocking transfer",null,null],[16,"Error","","Error type",6,null],[10,"transfer","","Sends <code>words</code> to the slave. Returns the <code>words</code> received from …",6,[[],["result",4]]],[8,"Write","","Blocking write",null,null],[16,"Error","","Error type",7,null],[10,"write","","Sends <code>words</code> to the slave, ignoring all the incoming words",7,[[],["result",4]]],[0,"digital","embedded_hal","Digital I/O",null,null],[0,"v1","embedded_hal::digital","Digital I/O",null,null],[8,"OutputPin","embedded_hal::digital::v1","Single digital push-pull output pin",null,null],[10,"set_low","","Drives the pin low",8,[[]]],[10,"set_high","","Drives the pin high",8,[[]]],[0,"v2","embedded_hal::digital","Digital I/O",null,null],[8,"OutputPin","embedded_hal::digital::v2","Single digital push-pull output pin",null,null],[16,"Error","","Error type",9,null],[10,"set_low","","Drives the pin low",9,[[],["result",4]]],[10,"set_high","","Drives the pin high",9,[[],["result",4]]],[0,"v1_compat","embedded_hal::digital","v1 compatibility wrappers",null,null],[3,"OldOutputPin","embedded_hal::digital::v1_compat","Wrapper to allow fallible <code>v2::OutputPin</code> traits to be …",null,null],[11,"new","","Create a new OldOutputPin wrapper around a <code>v2::OutputPin</code>",10,[[]]],[0,"v2_compat","embedded_hal::digital","v2 compatibility shims",null,null],[0,"fmt","embedded_hal","Implementation of <code>core::fmt::Write</code> for the HAL’s …",null,null],[0,"prelude","","The prelude is a collection of all the traits in this …",null,null],[0,"serial","","Serial interface",null,null],[8,"Read","embedded_hal::serial","Read half of a serial interface",null,null],[16,"Error","","Read error",11,null],[10,"read","","Reads a single word from the serial interface",11,[[],["result",6]]],[8,"Write","","Write half of a serial interface",null,null],[16,"Error","","Write error",12,null],[10,"write","","Writes a single word to the serial interface",12,[[],["result",6]]],[10,"flush","","Ensures that none of the previously written words are …",12,[[],["result",6]]],[0,"spi","embedded_hal","Serial Peripheral Interface",null,null],[8,"FullDuplex","embedded_hal::spi","Full duplex (master mode)",null,null],[16,"Error","","An enumeration of SPI errors",13,null],[10,"read","","Reads the word stored in the shift register",13,[[],["result",6]]],[10,"send","","Sends a word to the slave",13,[[],["result",6]]],[4,"Polarity","","Clock polarity",null,null],[13,"IdleLow","","Clock signal low when idle",14,null],[13,"IdleHigh","","Clock signal high when idle",14,null],[4,"Phase","","Clock phase",null,null],[13,"CaptureOnFirstTransition","","Data in “captured” on the first clock transition",15,null],[13,"CaptureOnSecondTransition","","Data in “captured” on the second clock transition",15,null],[3,"Mode","","SPI mode",null,null],[12,"polarity","","Clock polarity",16,null],[12,"phase","","Clock phase",16,null],[17,"MODE_0","","Helper for CPOL = 0, CPHA = 0",null,null],[17,"MODE_1","","Helper for CPOL = 0, CPHA = 1",null,null],[17,"MODE_2","","Helper for CPOL = 1, CPHA = 0",null,null],[17,"MODE_3","","Helper for CPOL = 1, CPHA = 1",null,null],[0,"timer","embedded_hal","Timers",null,null],[8,"CountDown","embedded_hal::timer","A count down timer",null,null],[16,"Time","","The unit of time used by this timer",17,null],[10,"start","","Starts a new count down",17,[[]]],[10,"wait","","Non-blockingly “waits” until the count down finishes",17,[[],[["void",4],["result",6]]]],[8,"Periodic","","Marker trait that indicates that a timer is periodic",null,null],[8,"Cancel","","Trait for cancelable countdowns.",null,null],[16,"Error","","Error returned when a countdown can’t be canceled.",18,null],[10,"cancel","","Tries to cancel this countdown.",18,[[],["result",4]]],[0,"watchdog","embedded_hal","Traits for interactions with a processors watchdog timer.",null,null],[8,"PwmPin","","A single PWM channel / pin",null,null],[16,"Duty","","Type for the <code>duty</code> methods",19,null],[10,"disable","","Disables a PWM <code>channel</code>",19,[[]]],[10,"enable","","Enables a PWM <code>channel</code>",19,[[]]],[10,"get_duty","","Returns the current duty cycle",19,[[]]],[10,"get_max_duty","","Returns the maximum duty cycle value",19,[[]]],[10,"set_duty","","Sets a new duty cycle",19,[[]]],[11,"set_low","embedded_hal::digital::v1_compat","",10,[[],["result",4]]],[11,"set_high","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"borrow","embedded_hal::spi","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"set_low","embedded_hal::digital::v1_compat","",10,[[]]],[11,"set_high","","",10,[[]]],[11,"eq","embedded_hal::spi","",14,[[["polarity",4]],["bool",15]]],[11,"eq","","",15,[[["phase",4]],["bool",15]]],[11,"eq","","",16,[[["mode",3]],["bool",15]]],[11,"ne","","",16,[[["mode",3]],["bool",15]]],[11,"write_str","embedded_hal::serial","",12,[[["str",15]],["result",6]]],[11,"from","embedded_hal::digital::v1_compat","",10,[[]]],[11,"clone","embedded_hal::spi","",14,[[],["polarity",4]]],[11,"clone","","",15,[[],["phase",4]]],[11,"clone","","",16,[[],["mode",3]]]],"p":[[8,"DelayMs"],[8,"DelayUs"],[8,"Read"],[8,"Write"],[8,"WriteRead"],[8,"Write"],[8,"Transfer"],[8,"Write"],[8,"OutputPin"],[8,"OutputPin"],[3,"OldOutputPin"],[8,"Read"],[8,"Write"],[8,"FullDuplex"],[4,"Polarity"],[4,"Phase"],[3,"Mode"],[8,"CountDown"],[8,"Cancel"],[8,"PwmPin"]]},\
"rp2040_pac2":{"doc":"Peripheral access API (generated using svd2rust v0.17.0 …","i":[[0,"adc","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::adc","",null,null],[3,"Ints","rp2040_pac2::adc::regs","Interrupt status after masking & forcing",null,null],[12,"0","","",0,null],[11,"fifo","","Triggered when the sample FIFO reaches a certain level. …",0,[[],["bool",15]]],[11,"set_fifo","","Triggered when the sample FIFO reaches a certain level. …",0,[[["bool",15]]]],[3,"Div","","Clock divider. If non-zero, CS_START_MANY will start …",null,null],[12,"0","","",1,null],[11,"int","","Integer part of clock divisor.",1,[[],["u16",15]]],[11,"set_int","","Integer part of clock divisor.",1,[[["u16",15]]]],[11,"frac","","Fractional part of clock divisor. First-order delta-sigma.",1,[[],["u8",15]]],[11,"set_frac","","Fractional part of clock divisor. First-order delta-sigma.",1,[[["u8",15]]]],[3,"Inte","","Interrupt Enable",null,null],[12,"0","","",2,null],[11,"fifo","","Triggered when the sample FIFO reaches a certain level. …",2,[[],["bool",15]]],[11,"set_fifo","","Triggered when the sample FIFO reaches a certain level. …",2,[[["bool",15]]]],[3,"Fifo","","Conversion result FIFO",null,null],[12,"0","","",3,null],[11,"err","","1 if this particular sample experienced a conversion …",3,[[],["bool",15]]],[11,"set_err","","1 if this particular sample experienced a conversion …",3,[[["bool",15]]]],[11,"val","","",3,[[],["u16",15]]],[11,"set_val","","",3,[[["u16",15]]]],[3,"Intr","","Raw Interrupts",null,null],[12,"0","","",4,null],[11,"fifo","","Triggered when the sample FIFO reaches a certain level. …",4,[[],["bool",15]]],[11,"set_fifo","","Triggered when the sample FIFO reaches a certain level. …",4,[[["bool",15]]]],[3,"Fcs","","FIFO control and status",null,null],[12,"0","","",5,null],[11,"thresh","","DREQ/IRQ asserted when level >= threshold",5,[[],["u8",15]]],[11,"set_thresh","","DREQ/IRQ asserted when level >= threshold",5,[[["u8",15]]]],[11,"level","","The number of conversion results currently waiting in the …",5,[[],["u8",15]]],[11,"set_level","","The number of conversion results currently waiting in the …",5,[[["u8",15]]]],[11,"over","","1 if the FIFO has been overflowed. Write 1 to clear.",5,[[],["bool",15]]],[11,"set_over","","1 if the FIFO has been overflowed. Write 1 to clear.",5,[[["bool",15]]]],[11,"under","","1 if the FIFO has been underflowed. Write 1 to clear.",5,[[],["bool",15]]],[11,"set_under","","1 if the FIFO has been underflowed. Write 1 to clear.",5,[[["bool",15]]]],[11,"full","","",5,[[],["bool",15]]],[11,"set_full","","",5,[[["bool",15]]]],[11,"empty","","",5,[[],["bool",15]]],[11,"set_empty","","",5,[[["bool",15]]]],[11,"dreq_en","","If 1: assert DMA requests when FIFO contains data",5,[[],["bool",15]]],[11,"set_dreq_en","","If 1: assert DMA requests when FIFO contains data",5,[[["bool",15]]]],[11,"err","","If 1: conversion error bit appears in the FIFO alongside …",5,[[],["bool",15]]],[11,"set_err","","If 1: conversion error bit appears in the FIFO alongside …",5,[[["bool",15]]]],[11,"shift","","If 1: FIFO results are right-shifted to be one byte in …",5,[[],["bool",15]]],[11,"set_shift","","If 1: FIFO results are right-shifted to be one byte in …",5,[[["bool",15]]]],[11,"en","","If 1: write result to the FIFO after each conversion.",5,[[],["bool",15]]],[11,"set_en","","If 1: write result to the FIFO after each conversion.",5,[[["bool",15]]]],[3,"Intf","","Interrupt Force",null,null],[12,"0","","",6,null],[11,"fifo","","Triggered when the sample FIFO reaches a certain level. …",6,[[],["bool",15]]],[11,"set_fifo","","Triggered when the sample FIFO reaches a certain level. …",6,[[["bool",15]]]],[3,"Result","","Result of most recent ADC conversion",null,null],[12,"0","","",7,null],[11,"result","","",7,[[],["u16",15]]],[11,"set_result","","",7,[[["u16",15]]]],[3,"Cs","","ADC Control and Status",null,null],[12,"0","","",8,null],[11,"rrobin","","Round-robin sampling. 1 bit per channel. Set all bits to …",8,[[],["u8",15]]],[11,"set_rrobin","","Round-robin sampling. 1 bit per channel. Set all bits to …",8,[[["u8",15]]]],[11,"ainsel","","Select analog mux input. Updated automatically in …",8,[[],["u8",15]]],[11,"set_ainsel","","Select analog mux input. Updated automatically in …",8,[[["u8",15]]]],[11,"err_sticky","","Some past ADC conversion encountered an error. Write 1 to …",8,[[],["bool",15]]],[11,"set_err_sticky","","Some past ADC conversion encountered an error. Write 1 to …",8,[[["bool",15]]]],[11,"err","","The most recent ADC conversion encountered an error; …",8,[[],["bool",15]]],[11,"set_err","","The most recent ADC conversion encountered an error; …",8,[[["bool",15]]]],[11,"ready","","1 if the ADC is ready to start a new conversion. Implies …",8,[[],["bool",15]]],[11,"set_ready","","1 if the ADC is ready to start a new conversion. Implies …",8,[[["bool",15]]]],[11,"start_many","","Continuously perform conversions whilst this bit is 1. A …",8,[[],["bool",15]]],[11,"set_start_many","","Continuously perform conversions whilst this bit is 1. A …",8,[[["bool",15]]]],[11,"start_once","","Start a single conversion. Self-clearing. Ignored if …",8,[[],["bool",15]]],[11,"set_start_once","","Start a single conversion. Self-clearing. Ignored if …",8,[[["bool",15]]]],[11,"ts_en","","Power on temperature sensor. 1 - enabled. 0 - disabled.",8,[[],["bool",15]]],[11,"set_ts_en","","Power on temperature sensor. 1 - enabled. 0 - disabled.",8,[[["bool",15]]]],[11,"en","","Power on ADC and enable its clock. 1 - enabled. 0 - …",8,[[],["bool",15]]],[11,"set_en","","Power on ADC and enable its clock. 1 - enabled. 0 - …",8,[[["bool",15]]]],[3,"Adc","rp2040_pac2::adc","Control and data interface to SAR ADC",null,null],[12,"0","","",9,null],[11,"cs","","ADC Control and Status",9,[[],[["reg",3],["rw",3],["cs",3]]]],[11,"result","","Result of most recent ADC conversion",9,[[],[["rw",3],["reg",3],["result",3]]]],[11,"fcs","","FIFO control and status",9,[[],[["fcs",3],["reg",3],["rw",3]]]],[11,"fifo","","Conversion result FIFO",9,[[],[["rw",3],["reg",3],["fifo",3]]]],[11,"div","","Clock divider. If non-zero, CS_START_MANY will start …",9,[[],[["reg",3],["div",3],["rw",3]]]],[11,"intr","","Raw Interrupts",9,[[],[["intr",3],["reg",3],["rw",3]]]],[11,"inte","","Interrupt Enable",9,[[],[["reg",3],["rw",3],["inte",3]]]],[11,"intf","","Interrupt Force",9,[[],[["reg",3],["intf",3],["rw",3]]]],[11,"ints","","Interrupt status after masking & forcing",9,[[],[["reg",3],["ints",3],["rw",3]]]],[0,"busctrl","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::busctrl","",null,null],[3,"Perfctr3","rp2040_pac2::busctrl::regs","Bus fabric performance counter 3",null,null],[12,"0","","",10,null],[11,"perfctr3","","Busfabric saturating performance counter 3 Count some …",10,[[],["u32",15]]],[11,"set_perfctr3","","Busfabric saturating performance counter 3 Count some …",10,[[["u32",15]]]],[3,"Perfctr2","","Bus fabric performance counter 2",null,null],[12,"0","","",11,null],[11,"perfctr2","","Busfabric saturating performance counter 2 Count some …",11,[[],["u32",15]]],[11,"set_perfctr2","","Busfabric saturating performance counter 2 Count some …",11,[[["u32",15]]]],[3,"Perfctr0","","Bus fabric performance counter 0",null,null],[12,"0","","",12,null],[11,"perfctr0","","Busfabric saturating performance counter 0 Count some …",12,[[],["u32",15]]],[11,"set_perfctr0","","Busfabric saturating performance counter 0 Count some …",12,[[["u32",15]]]],[3,"Perfsel0","","Bus fabric performance event select for PERFCTR0",null,null],[12,"0","","",13,null],[11,"perfsel0","","Select a performance event for PERFCTR0",13,[[],["u8",15]]],[11,"set_perfsel0","","Select a performance event for PERFCTR0",13,[[["u8",15]]]],[3,"Perfsel2","","Bus fabric performance event select for PERFCTR2",null,null],[12,"0","","",14,null],[11,"perfsel2","","Select a performance event for PERFCTR2",14,[[],["u8",15]]],[11,"set_perfsel2","","Select a performance event for PERFCTR2",14,[[["u8",15]]]],[3,"Perfctr1","","Bus fabric performance counter 1",null,null],[12,"0","","",15,null],[11,"perfctr1","","Busfabric saturating performance counter 1 Count some …",15,[[],["u32",15]]],[11,"set_perfctr1","","Busfabric saturating performance counter 1 Count some …",15,[[["u32",15]]]],[3,"Perfsel3","","Bus fabric performance event select for PERFCTR3",null,null],[12,"0","","",16,null],[11,"perfsel3","","Select a performance event for PERFCTR3",16,[[],["u8",15]]],[11,"set_perfsel3","","Select a performance event for PERFCTR3",16,[[["u8",15]]]],[3,"BusPriorityAck","","Bus priority acknowledge",null,null],[12,"0","","",17,null],[11,"bus_priority_ack","","Goes to 1 once all arbiters have registered the new …",17,[[],["bool",15]]],[11,"set_bus_priority_ack","","Goes to 1 once all arbiters have registered the new …",17,[[["bool",15]]]],[3,"Perfsel1","","Bus fabric performance event select for PERFCTR1",null,null],[12,"0","","",18,null],[11,"perfsel1","","Select a performance event for PERFCTR1",18,[[],["u8",15]]],[11,"set_perfsel1","","Select a performance event for PERFCTR1",18,[[["u8",15]]]],[3,"BusPriority","","Set the priority of each master for bus arbitration.",null,null],[12,"0","","",19,null],[11,"dma_w","","0 - low priority, 1 - high priority",19,[[],["bool",15]]],[11,"set_dma_w","","0 - low priority, 1 - high priority",19,[[["bool",15]]]],[11,"dma_r","","0 - low priority, 1 - high priority",19,[[],["bool",15]]],[11,"set_dma_r","","0 - low priority, 1 - high priority",19,[[["bool",15]]]],[11,"proc1","","0 - low priority, 1 - high priority",19,[[],["bool",15]]],[11,"set_proc1","","0 - low priority, 1 - high priority",19,[[["bool",15]]]],[11,"proc0","","0 - low priority, 1 - high priority",19,[[],["bool",15]]],[11,"set_proc0","","0 - low priority, 1 - high priority",19,[[["bool",15]]]],[3,"Busctrl","rp2040_pac2::busctrl","Register block for busfabric control signals and …",null,null],[12,"0","","",20,null],[11,"bus_priority","","Set the priority of each master for bus arbitration.",20,[[],[["reg",3],["rw",3],["buspriority",3]]]],[11,"bus_priority_ack","","Bus priority acknowledge",20,[[],[["rw",3],["reg",3],["buspriorityack",3]]]],[11,"perfctr0","","Bus fabric performance counter 0",20,[[],[["perfctr0",3],["reg",3],["rw",3]]]],[11,"perfsel0","","Bus fabric performance event select for PERFCTR0",20,[[],[["reg",3],["rw",3],["perfsel0",3]]]],[11,"perfctr1","","Bus fabric performance counter 1",20,[[],[["perfctr1",3],["reg",3],["rw",3]]]],[11,"perfsel1","","Bus fabric performance event select for PERFCTR1",20,[[],[["perfsel1",3],["rw",3],["reg",3]]]],[11,"perfctr2","","Bus fabric performance counter 2",20,[[],[["reg",3],["perfctr2",3],["rw",3]]]],[11,"perfsel2","","Bus fabric performance event select for PERFCTR2",20,[[],[["perfsel2",3],["rw",3],["reg",3]]]],[11,"perfctr3","","Bus fabric performance counter 3",20,[[],[["reg",3],["perfctr3",3],["rw",3]]]],[11,"perfsel3","","Bus fabric performance event select for PERFCTR3",20,[[],[["reg",3],["perfsel3",3],["rw",3]]]],[0,"clocks","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::clocks","",null,null],[3,"ClkSysDiv","rp2040_pac2::clocks::regs","Clock divisor, can be changed on-the-fly",null,null],[12,"0","","",21,null],[11,"int","","Integer component of the divisor, 0 -> divide by 2^16",21,[[],["u32",15]]],[11,"set_int","","Integer component of the divisor, 0 -> divide by 2^16",21,[[["u32",15]]]],[11,"frac","","Fractional component of the divisor",21,[[],["u8",15]]],[11,"set_frac","","Fractional component of the divisor",21,[[["u8",15]]]],[3,"Fc0MaxKhz","","Maximum pass frequency in kHz. This is optional. Set to …",null,null],[12,"0","","",22,null],[11,"fc0_max_khz","","",22,[[],["u32",15]]],[11,"set_fc0_max_khz","","",22,[[["u32",15]]]],[3,"ClkGpout1Ctrl","","Clock control, can be changed on-the-fly (except for …",null,null],[12,"0","","",23,null],[11,"nudge","","An edge on this signal shifts the phase of the output by …",23,[[],["bool",15]]],[11,"set_nudge","","An edge on this signal shifts the phase of the output by …",23,[[["bool",15]]]],[11,"phase","","This delays the enable signal by up to 3 cycles of the …",23,[[],["u8",15]]],[11,"set_phase","","This delays the enable signal by up to 3 cycles of the …",23,[[["u8",15]]]],[11,"dc50","","Enables duty cycle correction for odd divisors",23,[[],["bool",15]]],[11,"set_dc50","","Enables duty cycle correction for odd divisors",23,[[["bool",15]]]],[11,"enable","","Starts and stops the clock generator cleanly",23,[[],["bool",15]]],[11,"set_enable","","Starts and stops the clock generator cleanly",23,[[["bool",15]]]],[11,"kill","","Asynchronously kills the clock generator",23,[[],["bool",15]]],[11,"set_kill","","Asynchronously kills the clock generator",23,[[["bool",15]]]],[11,"auxsrc","","Selects the auxiliary clock source, will glitch when …",23,[[],["clkgpout1ctrlauxsrc",3]]],[11,"set_auxsrc","","Selects the auxiliary clock source, will glitch when …",23,[[["clkgpout1ctrlauxsrc",3]]]],[3,"Fc0Src","","Clock sent to frequency counter, set to 0 when not …",null,null],[12,"0","","",24,null],[11,"fc0_src","","",24,[[],["fc0src",3]]],[11,"set_fc0_src","","",24,[[["fc0src",3]]]],[3,"Intr","","Raw Interrupts",null,null],[12,"0","","",25,null],[11,"clk_sys_resus","","",25,[[],["bool",15]]],[11,"set_clk_sys_resus","","",25,[[["bool",15]]]],[3,"ClkGpout1Div","","Clock divisor, can be changed on-the-fly",null,null],[12,"0","","",26,null],[11,"int","","Integer component of the divisor, 0 -> divide by 2^16",26,[[],["u32",15]]],[11,"set_int","","Integer component of the divisor, 0 -> divide by 2^16",26,[[["u32",15]]]],[11,"frac","","Fractional component of the divisor",26,[[],["u8",15]]],[11,"set_frac","","Fractional component of the divisor",26,[[["u8",15]]]],[3,"ClkGpout3Ctrl","","Clock control, can be changed on-the-fly (except for …",null,null],[12,"0","","",27,null],[11,"nudge","","An edge on this signal shifts the phase of the output by …",27,[[],["bool",15]]],[11,"set_nudge","","An edge on this signal shifts the phase of the output by …",27,[[["bool",15]]]],[11,"phase","","This delays the enable signal by up to 3 cycles of the …",27,[[],["u8",15]]],[11,"set_phase","","This delays the enable signal by up to 3 cycles of the …",27,[[["u8",15]]]],[11,"dc50","","Enables duty cycle correction for odd divisors",27,[[],["bool",15]]],[11,"set_dc50","","Enables duty cycle correction for odd divisors",27,[[["bool",15]]]],[11,"enable","","Starts and stops the clock generator cleanly",27,[[],["bool",15]]],[11,"set_enable","","Starts and stops the clock generator cleanly",27,[[["bool",15]]]],[11,"kill","","Asynchronously kills the clock generator",27,[[],["bool",15]]],[11,"set_kill","","Asynchronously kills the clock generator",27,[[["bool",15]]]],[11,"auxsrc","","Selects the auxiliary clock source, will glitch when …",27,[[],["clkgpout3ctrlauxsrc",3]]],[11,"set_auxsrc","","Selects the auxiliary clock source, will glitch when …",27,[[["clkgpout3ctrlauxsrc",3]]]],[3,"ClkUsbDiv","","Clock divisor, can be changed on-the-fly",null,null],[12,"0","","",28,null],[11,"int","","Integer component of the divisor, 0 -> divide by 2^16",28,[[],["u8",15]]],[11,"set_int","","Integer component of the divisor, 0 -> divide by 2^16",28,[[["u8",15]]]],[3,"Fc0Status","","Frequency counter status",null,null],[12,"0","","",29,null],[11,"died","","Test clock stopped during test",29,[[],["bool",15]]],[11,"set_died","","Test clock stopped during test",29,[[["bool",15]]]],[11,"fast","","Test clock faster than expected, only valid when …",29,[[],["bool",15]]],[11,"set_fast","","Test clock faster than expected, only valid when …",29,[[["bool",15]]]],[11,"slow","","Test clock slower than expected, only valid when …",29,[[],["bool",15]]],[11,"set_slow","","Test clock slower than expected, only valid when …",29,[[["bool",15]]]],[11,"fail","","Test failed",29,[[],["bool",15]]],[11,"set_fail","","Test failed",29,[[["bool",15]]]],[11,"waiting","","Waiting for test clock to start",29,[[],["bool",15]]],[11,"set_waiting","","Waiting for test clock to start",29,[[["bool",15]]]],[11,"running","","Test running",29,[[],["bool",15]]],[11,"set_running","","Test running",29,[[["bool",15]]]],[11,"done","","Test complete",29,[[],["bool",15]]],[11,"set_done","","Test complete",29,[[["bool",15]]]],[11,"pass","","Test passed",29,[[],["bool",15]]],[11,"set_pass","","Test passed",29,[[["bool",15]]]],[3,"WakeEn0","","enable clock in wake mode",null,null],[12,"0","","",30,null],[11,"clk_sys_sram3","","",30,[[],["bool",15]]],[11,"set_clk_sys_sram3","","",30,[[["bool",15]]]],[11,"clk_sys_sram2","","",30,[[],["bool",15]]],[11,"set_clk_sys_sram2","","",30,[[["bool",15]]]],[11,"clk_sys_sram1","","",30,[[],["bool",15]]],[11,"set_clk_sys_sram1","","",30,[[["bool",15]]]],[11,"clk_sys_sram0","","",30,[[],["bool",15]]],[11,"set_clk_sys_sram0","","",30,[[["bool",15]]]],[11,"clk_sys_spi1","","",30,[[],["bool",15]]],[11,"set_clk_sys_spi1","","",30,[[["bool",15]]]],[11,"clk_peri_spi1","","",30,[[],["bool",15]]],[11,"set_clk_peri_spi1","","",30,[[["bool",15]]]],[11,"clk_sys_spi0","","",30,[[],["bool",15]]],[11,"set_clk_sys_spi0","","",30,[[["bool",15]]]],[11,"clk_peri_spi0","","",30,[[],["bool",15]]],[11,"set_clk_peri_spi0","","",30,[[["bool",15]]]],[11,"clk_sys_sio","","",30,[[],["bool",15]]],[11,"set_clk_sys_sio","","",30,[[["bool",15]]]],[11,"clk_sys_rtc","","",30,[[],["bool",15]]],[11,"set_clk_sys_rtc","","",30,[[["bool",15]]]],[11,"clk_rtc_rtc","","",30,[[],["bool",15]]],[11,"set_clk_rtc_rtc","","",30,[[["bool",15]]]],[11,"clk_sys_rosc","","",30,[[],["bool",15]]],[11,"set_clk_sys_rosc","","",30,[[["bool",15]]]],[11,"clk_sys_rom","","",30,[[],["bool",15]]],[11,"set_clk_sys_rom","","",30,[[["bool",15]]]],[11,"clk_sys_resets","","",30,[[],["bool",15]]],[11,"set_clk_sys_resets","","",30,[[["bool",15]]]],[11,"clk_sys_pwm","","",30,[[],["bool",15]]],[11,"set_clk_sys_pwm","","",30,[[["bool",15]]]],[11,"clk_sys_psm","","",30,[[],["bool",15]]],[11,"set_clk_sys_psm","","",30,[[["bool",15]]]],[11,"clk_sys_pll_usb","","",30,[[],["bool",15]]],[11,"set_clk_sys_pll_usb","","",30,[[["bool",15]]]],[11,"clk_sys_pll_sys","","",30,[[],["bool",15]]],[11,"set_clk_sys_pll_sys","","",30,[[["bool",15]]]],[11,"clk_sys_pio1","","",30,[[],["bool",15]]],[11,"set_clk_sys_pio1","","",30,[[["bool",15]]]],[11,"clk_sys_pio0","","",30,[[],["bool",15]]],[11,"set_clk_sys_pio0","","",30,[[["bool",15]]]],[11,"clk_sys_pads","","",30,[[],["bool",15]]],[11,"set_clk_sys_pads","","",30,[[["bool",15]]]],[11,"clk_sys_vreg_and_chip_reset","","",30,[[],["bool",15]]],[11,"set_clk_sys_vreg_and_chip_reset","","",30,[[["bool",15]]]],[11,"clk_sys_jtag","","",30,[[],["bool",15]]],[11,"set_clk_sys_jtag","","",30,[[["bool",15]]]],[11,"clk_sys_io","","",30,[[],["bool",15]]],[11,"set_clk_sys_io","","",30,[[["bool",15]]]],[11,"clk_sys_i2c1","","",30,[[],["bool",15]]],[11,"set_clk_sys_i2c1","","",30,[[["bool",15]]]],[11,"clk_sys_i2c0","","",30,[[],["bool",15]]],[11,"set_clk_sys_i2c0","","",30,[[["bool",15]]]],[11,"clk_sys_dma","","",30,[[],["bool",15]]],[11,"set_clk_sys_dma","","",30,[[["bool",15]]]],[11,"clk_sys_busfabric","","",30,[[],["bool",15]]],[11,"set_clk_sys_busfabric","","",30,[[["bool",15]]]],[11,"clk_sys_busctrl","","",30,[[],["bool",15]]],[11,"set_clk_sys_busctrl","","",30,[[["bool",15]]]],[11,"clk_sys_adc","","",30,[[],["bool",15]]],[11,"set_clk_sys_adc","","",30,[[["bool",15]]]],[11,"clk_adc_adc","","",30,[[],["bool",15]]],[11,"set_clk_adc_adc","","",30,[[["bool",15]]]],[11,"clk_sys_clocks","","",30,[[],["bool",15]]],[11,"set_clk_sys_clocks","","",30,[[["bool",15]]]],[3,"ClkRtcDiv","","Clock divisor, can be changed on-the-fly",null,null],[12,"0","","",31,null],[11,"int","","Integer component of the divisor, 0 -> divide by 2^16",31,[[],["u32",15]]],[11,"set_int","","Integer component of the divisor, 0 -> divide by 2^16",31,[[["u32",15]]]],[11,"frac","","Fractional component of the divisor",31,[[],["u8",15]]],[11,"set_frac","","Fractional component of the divisor",31,[[["u8",15]]]],[3,"SleepEn0","","enable clock in sleep mode",null,null],[12,"0","","",32,null],[11,"clk_sys_sram3","","",32,[[],["bool",15]]],[11,"set_clk_sys_sram3","","",32,[[["bool",15]]]],[11,"clk_sys_sram2","","",32,[[],["bool",15]]],[11,"set_clk_sys_sram2","","",32,[[["bool",15]]]],[11,"clk_sys_sram1","","",32,[[],["bool",15]]],[11,"set_clk_sys_sram1","","",32,[[["bool",15]]]],[11,"clk_sys_sram0","","",32,[[],["bool",15]]],[11,"set_clk_sys_sram0","","",32,[[["bool",15]]]],[11,"clk_sys_spi1","","",32,[[],["bool",15]]],[11,"set_clk_sys_spi1","","",32,[[["bool",15]]]],[11,"clk_peri_spi1","","",32,[[],["bool",15]]],[11,"set_clk_peri_spi1","","",32,[[["bool",15]]]],[11,"clk_sys_spi0","","",32,[[],["bool",15]]],[11,"set_clk_sys_spi0","","",32,[[["bool",15]]]],[11,"clk_peri_spi0","","",32,[[],["bool",15]]],[11,"set_clk_peri_spi0","","",32,[[["bool",15]]]],[11,"clk_sys_sio","","",32,[[],["bool",15]]],[11,"set_clk_sys_sio","","",32,[[["bool",15]]]],[11,"clk_sys_rtc","","",32,[[],["bool",15]]],[11,"set_clk_sys_rtc","","",32,[[["bool",15]]]],[11,"clk_rtc_rtc","","",32,[[],["bool",15]]],[11,"set_clk_rtc_rtc","","",32,[[["bool",15]]]],[11,"clk_sys_rosc","","",32,[[],["bool",15]]],[11,"set_clk_sys_rosc","","",32,[[["bool",15]]]],[11,"clk_sys_rom","","",32,[[],["bool",15]]],[11,"set_clk_sys_rom","","",32,[[["bool",15]]]],[11,"clk_sys_resets","","",32,[[],["bool",15]]],[11,"set_clk_sys_resets","","",32,[[["bool",15]]]],[11,"clk_sys_pwm","","",32,[[],["bool",15]]],[11,"set_clk_sys_pwm","","",32,[[["bool",15]]]],[11,"clk_sys_psm","","",32,[[],["bool",15]]],[11,"set_clk_sys_psm","","",32,[[["bool",15]]]],[11,"clk_sys_pll_usb","","",32,[[],["bool",15]]],[11,"set_clk_sys_pll_usb","","",32,[[["bool",15]]]],[11,"clk_sys_pll_sys","","",32,[[],["bool",15]]],[11,"set_clk_sys_pll_sys","","",32,[[["bool",15]]]],[11,"clk_sys_pio1","","",32,[[],["bool",15]]],[11,"set_clk_sys_pio1","","",32,[[["bool",15]]]],[11,"clk_sys_pio0","","",32,[[],["bool",15]]],[11,"set_clk_sys_pio0","","",32,[[["bool",15]]]],[11,"clk_sys_pads","","",32,[[],["bool",15]]],[11,"set_clk_sys_pads","","",32,[[["bool",15]]]],[11,"clk_sys_vreg_and_chip_reset","","",32,[[],["bool",15]]],[11,"set_clk_sys_vreg_and_chip_reset","","",32,[[["bool",15]]]],[11,"clk_sys_jtag","","",32,[[],["bool",15]]],[11,"set_clk_sys_jtag","","",32,[[["bool",15]]]],[11,"clk_sys_io","","",32,[[],["bool",15]]],[11,"set_clk_sys_io","","",32,[[["bool",15]]]],[11,"clk_sys_i2c1","","",32,[[],["bool",15]]],[11,"set_clk_sys_i2c1","","",32,[[["bool",15]]]],[11,"clk_sys_i2c0","","",32,[[],["bool",15]]],[11,"set_clk_sys_i2c0","","",32,[[["bool",15]]]],[11,"clk_sys_dma","","",32,[[],["bool",15]]],[11,"set_clk_sys_dma","","",32,[[["bool",15]]]],[11,"clk_sys_busfabric","","",32,[[],["bool",15]]],[11,"set_clk_sys_busfabric","","",32,[[["bool",15]]]],[11,"clk_sys_busctrl","","",32,[[],["bool",15]]],[11,"set_clk_sys_busctrl","","",32,[[["bool",15]]]],[11,"clk_sys_adc","","",32,[[],["bool",15]]],[11,"set_clk_sys_adc","","",32,[[["bool",15]]]],[11,"clk_adc_adc","","",32,[[],["bool",15]]],[11,"set_clk_adc_adc","","",32,[[["bool",15]]]],[11,"clk_sys_clocks","","",32,[[],["bool",15]]],[11,"set_clk_sys_clocks","","",32,[[["bool",15]]]],[3,"Enabled1","","indicates the state of the clock enable",null,null],[12,"0","","",33,null],[11,"clk_sys_xosc","","",33,[[],["bool",15]]],[11,"set_clk_sys_xosc","","",33,[[["bool",15]]]],[11,"clk_sys_xip","","",33,[[],["bool",15]]],[11,"set_clk_sys_xip","","",33,[[["bool",15]]]],[11,"clk_sys_watchdog","","",33,[[],["bool",15]]],[11,"set_clk_sys_watchdog","","",33,[[["bool",15]]]],[11,"clk_usb_usbctrl","","",33,[[],["bool",15]]],[11,"set_clk_usb_usbctrl","","",33,[[["bool",15]]]],[11,"clk_sys_usbctrl","","",33,[[],["bool",15]]],[11,"set_clk_sys_usbctrl","","",33,[[["bool",15]]]],[11,"clk_sys_uart1","","",33,[[],["bool",15]]],[11,"set_clk_sys_uart1","","",33,[[["bool",15]]]],[11,"clk_peri_uart1","","",33,[[],["bool",15]]],[11,"set_clk_peri_uart1","","",33,[[["bool",15]]]],[11,"clk_sys_uart0","","",33,[[],["bool",15]]],[11,"set_clk_sys_uart0","","",33,[[["bool",15]]]],[11,"clk_peri_uart0","","",33,[[],["bool",15]]],[11,"set_clk_peri_uart0","","",33,[[["bool",15]]]],[11,"clk_sys_timer","","",33,[[],["bool",15]]],[11,"set_clk_sys_timer","","",33,[[["bool",15]]]],[11,"clk_sys_tbman","","",33,[[],["bool",15]]],[11,"set_clk_sys_tbman","","",33,[[["bool",15]]]],[11,"clk_sys_sysinfo","","",33,[[],["bool",15]]],[11,"set_clk_sys_sysinfo","","",33,[[["bool",15]]]],[11,"clk_sys_syscfg","","",33,[[],["bool",15]]],[11,"set_clk_sys_syscfg","","",33,[[["bool",15]]]],[11,"clk_sys_sram5","","",33,[[],["bool",15]]],[11,"set_clk_sys_sram5","","",33,[[["bool",15]]]],[11,"clk_sys_sram4","","",33,[[],["bool",15]]],[11,"set_clk_sys_sram4","","",33,[[["bool",15]]]],[3,"ClkAdcCtrl","","Clock control, can be changed on-the-fly (except for …",null,null],[12,"0","","",34,null],[11,"nudge","","An edge on this signal shifts the phase of the output by …",34,[[],["bool",15]]],[11,"set_nudge","","An edge on this signal shifts the phase of the output by …",34,[[["bool",15]]]],[11,"phase","","This delays the enable signal by up to 3 cycles of the …",34,[[],["u8",15]]],[11,"set_phase","","This delays the enable signal by up to 3 cycles of the …",34,[[["u8",15]]]],[11,"enable","","Starts and stops the clock generator cleanly",34,[[],["bool",15]]],[11,"set_enable","","Starts and stops the clock generator cleanly",34,[[["bool",15]]]],[11,"kill","","Asynchronously kills the clock generator",34,[[],["bool",15]]],[11,"set_kill","","Asynchronously kills the clock generator",34,[[["bool",15]]]],[11,"auxsrc","","Selects the auxiliary clock source, will glitch when …",34,[[],["clkadcctrlauxsrc",3]]],[11,"set_auxsrc","","Selects the auxiliary clock source, will glitch when …",34,[[["clkadcctrlauxsrc",3]]]],[3,"ClkRtcCtrl","","Clock control, can be changed on-the-fly (except for …",null,null],[12,"0","","",35,null],[11,"nudge","","An edge on this signal shifts the phase of the output by …",35,[[],["bool",15]]],[11,"set_nudge","","An edge on this signal shifts the phase of the output by …",35,[[["bool",15]]]],[11,"phase","","This delays the enable signal by up to 3 cycles of the …",35,[[],["u8",15]]],[11,"set_phase","","This delays the enable signal by up to 3 cycles of the …",35,[[["u8",15]]]],[11,"enable","","Starts and stops the clock generator cleanly",35,[[],["bool",15]]],[11,"set_enable","","Starts and stops the clock generator cleanly",35,[[["bool",15]]]],[11,"kill","","Asynchronously kills the clock generator",35,[[],["bool",15]]],[11,"set_kill","","Asynchronously kills the clock generator",35,[[["bool",15]]]],[11,"auxsrc","","Selects the auxiliary clock source, will glitch when …",35,[[],["clkrtcctrlauxsrc",3]]],[11,"set_auxsrc","","Selects the auxiliary clock source, will glitch when …",35,[[["clkrtcctrlauxsrc",3]]]],[3,"ClkSysCtrl","","Clock control, can be changed on-the-fly (except for …",null,null],[12,"0","","",36,null],[11,"auxsrc","","Selects the auxiliary clock source, will glitch when …",36,[[],["clksysctrlauxsrc",3]]],[11,"set_auxsrc","","Selects the auxiliary clock source, will glitch when …",36,[[["clksysctrlauxsrc",3]]]],[11,"src","","Selects the clock source glitchlessly, can be changed …",36,[[],["clksysctrlsrc",3]]],[11,"set_src","","Selects the clock source glitchlessly, can be changed …",36,[[["clksysctrlsrc",3]]]],[3,"ClkRefDiv","","Clock divisor, can be changed on-the-fly",null,null],[12,"0","","",37,null],[11,"int","","Integer component of the divisor, 0 -> divide by 2^16",37,[[],["u8",15]]],[11,"set_int","","Integer component of the divisor, 0 -> divide by 2^16",37,[[["u8",15]]]],[3,"ClkGpout0Div","","Clock divisor, can be changed on-the-fly",null,null],[12,"0","","",38,null],[11,"int","","Integer component of the divisor, 0 -> divide by 2^16",38,[[],["u32",15]]],[11,"set_int","","Integer component of the divisor, 0 -> divide by 2^16",38,[[["u32",15]]]],[11,"frac","","Fractional component of the divisor",38,[[],["u8",15]]],[11,"set_frac","","Fractional component of the divisor",38,[[["u8",15]]]],[3,"ClkUsbCtrl","","Clock control, can be changed on-the-fly (except for …",null,null],[12,"0","","",39,null],[11,"nudge","","An edge on this signal shifts the phase of the output by …",39,[[],["bool",15]]],[11,"set_nudge","","An edge on this signal shifts the phase of the output by …",39,[[["bool",15]]]],[11,"phase","","This delays the enable signal by up to 3 cycles of the …",39,[[],["u8",15]]],[11,"set_phase","","This delays the enable signal by up to 3 cycles of the …",39,[[["u8",15]]]],[11,"enable","","Starts and stops the clock generator cleanly",39,[[],["bool",15]]],[11,"set_enable","","Starts and stops the clock generator cleanly",39,[[["bool",15]]]],[11,"kill","","Asynchronously kills the clock generator",39,[[],["bool",15]]],[11,"set_kill","","Asynchronously kills the clock generator",39,[[["bool",15]]]],[11,"auxsrc","","Selects the auxiliary clock source, will glitch when …",39,[[],["clkusbctrlauxsrc",3]]],[11,"set_auxsrc","","Selects the auxiliary clock source, will glitch when …",39,[[["clkusbctrlauxsrc",3]]]],[3,"ClkGpout2Div","","Clock divisor, can be changed on-the-fly",null,null],[12,"0","","",40,null],[11,"int","","Integer component of the divisor, 0 -> divide by 2^16",40,[[],["u32",15]]],[11,"set_int","","Integer component of the divisor, 0 -> divide by 2^16",40,[[["u32",15]]]],[11,"frac","","Fractional component of the divisor",40,[[],["u8",15]]],[11,"set_frac","","Fractional component of the divisor",40,[[["u8",15]]]],[3,"Fc0Interval","","The test interval is 0.98us * 2<strong>interval, but let’s call …",null,null],[12,"0","","",41,null],[11,"fc0_interval","","",41,[[],["u8",15]]],[11,"set_fc0_interval","","",41,[[["u8",15]]]],[3,"WakeEn1","","enable clock in wake mode",null,null],[12,"0","","",42,null],[11,"clk_sys_xosc","","",42,[[],["bool",15]]],[11,"set_clk_sys_xosc","","",42,[[["bool",15]]]],[11,"clk_sys_xip","","",42,[[],["bool",15]]],[11,"set_clk_sys_xip","","",42,[[["bool",15]]]],[11,"clk_sys_watchdog","","",42,[[],["bool",15]]],[11,"set_clk_sys_watchdog","","",42,[[["bool",15]]]],[11,"clk_usb_usbctrl","","",42,[[],["bool",15]]],[11,"set_clk_usb_usbctrl","","",42,[[["bool",15]]]],[11,"clk_sys_usbctrl","","",42,[[],["bool",15]]],[11,"set_clk_sys_usbctrl","","",42,[[["bool",15]]]],[11,"clk_sys_uart1","","",42,[[],["bool",15]]],[11,"set_clk_sys_uart1","","",42,[[["bool",15]]]],[11,"clk_peri_uart1","","",42,[[],["bool",15]]],[11,"set_clk_peri_uart1","","",42,[[["bool",15]]]],[11,"clk_sys_uart0","","",42,[[],["bool",15]]],[11,"set_clk_sys_uart0","","",42,[[["bool",15]]]],[11,"clk_peri_uart0","","",42,[[],["bool",15]]],[11,"set_clk_peri_uart0","","",42,[[["bool",15]]]],[11,"clk_sys_timer","","",42,[[],["bool",15]]],[11,"set_clk_sys_timer","","",42,[[["bool",15]]]],[11,"clk_sys_tbman","","",42,[[],["bool",15]]],[11,"set_clk_sys_tbman","","",42,[[["bool",15]]]],[11,"clk_sys_sysinfo","","",42,[[],["bool",15]]],[11,"set_clk_sys_sysinfo","","",42,[[["bool",15]]]],[11,"clk_sys_syscfg","","",42,[[],["bool",15]]],[11,"set_clk_sys_syscfg","","",42,[[["bool",15]]]],[11,"clk_sys_sram5","","",42,[[],["bool",15]]],[11,"set_clk_sys_sram5","","",42,[[["bool",15]]]],[11,"clk_sys_sram4","","",42,[[],["bool",15]]],[11,"set_clk_sys_sram4","","",42,[[["bool",15]]]],[3,"ClkAdcDiv","","Clock divisor, can be changed on-the-fly",null,null],[12,"0","","",43,null],[11,"int","","Integer component of the divisor, 0 -> divide by 2^16",43,[[],["u8",15]]],[11,"set_int","","Integer component of the divisor, 0 -> divide by 2^16",43,[[["u8",15]]]],[3,"Intf","","Interrupt Force",null,null],[12,"0","","",44,null],[11,"clk_sys_resus","","",44,[[],["bool",15]]],[11,"set_clk_sys_resus","","",44,[[["bool",15]]]],[3,"ClkGpout3Div","","Clock divisor, can be changed on-the-fly",null,null],[12,"0","","",45,null],[11,"int","","Integer component of the divisor, 0 -> divide by 2^16",45,[[],["u32",15]]],[11,"set_int","","Integer component of the divisor, 0 -> divide by 2^16",45,[[["u32",15]]]],[11,"frac","","Fractional component of the divisor",45,[[],["u8",15]]],[11,"set_frac","","Fractional component of the divisor",45,[[["u8",15]]]],[3,"ClkGpout0Ctrl","","Clock control, can be changed on-the-fly (except for …",null,null],[12,"0","","",46,null],[11,"nudge","","An edge on this signal shifts the phase of the output by …",46,[[],["bool",15]]],[11,"set_nudge","","An edge on this signal shifts the phase of the output by …",46,[[["bool",15]]]],[11,"phase","","This delays the enable signal by up to 3 cycles of the …",46,[[],["u8",15]]],[11,"set_phase","","This delays the enable signal by up to 3 cycles of the …",46,[[["u8",15]]]],[11,"dc50","","Enables duty cycle correction for odd divisors",46,[[],["bool",15]]],[11,"set_dc50","","Enables duty cycle correction for odd divisors",46,[[["bool",15]]]],[11,"enable","","Starts and stops the clock generator cleanly",46,[[],["bool",15]]],[11,"set_enable","","Starts and stops the clock generator cleanly",46,[[["bool",15]]]],[11,"kill","","Asynchronously kills the clock generator",46,[[],["bool",15]]],[11,"set_kill","","Asynchronously kills the clock generator",46,[[["bool",15]]]],[11,"auxsrc","","Selects the auxiliary clock source, will glitch when …",46,[[],["clkgpout0ctrlauxsrc",3]]],[11,"set_auxsrc","","Selects the auxiliary clock source, will glitch when …",46,[[["clkgpout0ctrlauxsrc",3]]]],[3,"ClkPeriCtrl","","Clock control, can be changed on-the-fly (except for …",null,null],[12,"0","","",47,null],[11,"enable","","Starts and stops the clock generator cleanly",47,[[],["bool",15]]],[11,"set_enable","","Starts and stops the clock generator cleanly",47,[[["bool",15]]]],[11,"kill","","Asynchronously kills the clock generator",47,[[],["bool",15]]],[11,"set_kill","","Asynchronously kills the clock generator",47,[[["bool",15]]]],[11,"auxsrc","","Selects the auxiliary clock source, will glitch when …",47,[[],["clkperictrlauxsrc",3]]],[11,"set_auxsrc","","Selects the auxiliary clock source, will glitch when …",47,[[["clkperictrlauxsrc",3]]]],[3,"Fc0Result","","Result of frequency measurement, only valid when …",null,null],[12,"0","","",48,null],[11,"khz","","",48,[[],["u32",15]]],[11,"set_khz","","",48,[[["u32",15]]]],[11,"frac","","",48,[[],["u8",15]]],[11,"set_frac","","",48,[[["u8",15]]]],[3,"ClkSysResusStatus","","",null,null],[12,"0","","",49,null],[11,"resussed","","Clock has been resuscitated, correct the error then send …",49,[[],["bool",15]]],[11,"set_resussed","","Clock has been resuscitated, correct the error then send …",49,[[["bool",15]]]],[3,"Fc0MinKhz","","Minimum pass frequency in kHz. This is optional. Set to 0 …",null,null],[12,"0","","",50,null],[11,"fc0_min_khz","","",50,[[],["u32",15]]],[11,"set_fc0_min_khz","","",50,[[["u32",15]]]],[3,"ClkRefCtrl","","Clock control, can be changed on-the-fly (except for …",null,null],[12,"0","","",51,null],[11,"auxsrc","","Selects the auxiliary clock source, will glitch when …",51,[[],["clkrefctrlauxsrc",3]]],[11,"set_auxsrc","","Selects the auxiliary clock source, will glitch when …",51,[[["clkrefctrlauxsrc",3]]]],[11,"src","","Selects the clock source glitchlessly, can be changed …",51,[[],["clkrefctrlsrc",3]]],[11,"set_src","","Selects the clock source glitchlessly, can be changed …",51,[[["clkrefctrlsrc",3]]]],[3,"ClkSysResusCtrl","","",null,null],[12,"0","","",52,null],[11,"clear","","For clearing the resus after the fault that triggered it …",52,[[],["bool",15]]],[11,"set_clear","","For clearing the resus after the fault that triggered it …",52,[[["bool",15]]]],[11,"frce","","Force a resus, for test purposes only",52,[[],["bool",15]]],[11,"set_frce","","Force a resus, for test purposes only",52,[[["bool",15]]]],[11,"enable","","Enable resus",52,[[],["bool",15]]],[11,"set_enable","","Enable resus",52,[[["bool",15]]]],[11,"timeout","","This is expressed as a number of clk_ref cycles and must …",52,[[],["u8",15]]],[11,"set_timeout","","This is expressed as a number of clk_ref cycles and must …",52,[[["u8",15]]]],[3,"SleepEn1","","enable clock in sleep mode",null,null],[12,"0","","",53,null],[11,"clk_sys_xosc","","",53,[[],["bool",15]]],[11,"set_clk_sys_xosc","","",53,[[["bool",15]]]],[11,"clk_sys_xip","","",53,[[],["bool",15]]],[11,"set_clk_sys_xip","","",53,[[["bool",15]]]],[11,"clk_sys_watchdog","","",53,[[],["bool",15]]],[11,"set_clk_sys_watchdog","","",53,[[["bool",15]]]],[11,"clk_usb_usbctrl","","",53,[[],["bool",15]]],[11,"set_clk_usb_usbctrl","","",53,[[["bool",15]]]],[11,"clk_sys_usbctrl","","",53,[[],["bool",15]]],[11,"set_clk_sys_usbctrl","","",53,[[["bool",15]]]],[11,"clk_sys_uart1","","",53,[[],["bool",15]]],[11,"set_clk_sys_uart1","","",53,[[["bool",15]]]],[11,"clk_peri_uart1","","",53,[[],["bool",15]]],[11,"set_clk_peri_uart1","","",53,[[["bool",15]]]],[11,"clk_sys_uart0","","",53,[[],["bool",15]]],[11,"set_clk_sys_uart0","","",53,[[["bool",15]]]],[11,"clk_peri_uart0","","",53,[[],["bool",15]]],[11,"set_clk_peri_uart0","","",53,[[["bool",15]]]],[11,"clk_sys_timer","","",53,[[],["bool",15]]],[11,"set_clk_sys_timer","","",53,[[["bool",15]]]],[11,"clk_sys_tbman","","",53,[[],["bool",15]]],[11,"set_clk_sys_tbman","","",53,[[["bool",15]]]],[11,"clk_sys_sysinfo","","",53,[[],["bool",15]]],[11,"set_clk_sys_sysinfo","","",53,[[["bool",15]]]],[11,"clk_sys_syscfg","","",53,[[],["bool",15]]],[11,"set_clk_sys_syscfg","","",53,[[["bool",15]]]],[11,"clk_sys_sram5","","",53,[[],["bool",15]]],[11,"set_clk_sys_sram5","","",53,[[["bool",15]]]],[11,"clk_sys_sram4","","",53,[[],["bool",15]]],[11,"set_clk_sys_sram4","","",53,[[["bool",15]]]],[3,"Inte","","Interrupt Enable",null,null],[12,"0","","",54,null],[11,"clk_sys_resus","","",54,[[],["bool",15]]],[11,"set_clk_sys_resus","","",54,[[["bool",15]]]],[3,"ClkGpout2Ctrl","","Clock control, can be changed on-the-fly (except for …",null,null],[12,"0","","",55,null],[11,"nudge","","An edge on this signal shifts the phase of the output by …",55,[[],["bool",15]]],[11,"set_nudge","","An edge on this signal shifts the phase of the output by …",55,[[["bool",15]]]],[11,"phase","","This delays the enable signal by up to 3 cycles of the …",55,[[],["u8",15]]],[11,"set_phase","","This delays the enable signal by up to 3 cycles of the …",55,[[["u8",15]]]],[11,"dc50","","Enables duty cycle correction for odd divisors",55,[[],["bool",15]]],[11,"set_dc50","","Enables duty cycle correction for odd divisors",55,[[["bool",15]]]],[11,"enable","","Starts and stops the clock generator cleanly",55,[[],["bool",15]]],[11,"set_enable","","Starts and stops the clock generator cleanly",55,[[["bool",15]]]],[11,"kill","","Asynchronously kills the clock generator",55,[[],["bool",15]]],[11,"set_kill","","Asynchronously kills the clock generator",55,[[["bool",15]]]],[11,"auxsrc","","Selects the auxiliary clock source, will glitch when …",55,[[],["clkgpout2ctrlauxsrc",3]]],[11,"set_auxsrc","","Selects the auxiliary clock source, will glitch when …",55,[[["clkgpout2ctrlauxsrc",3]]]],[3,"Enabled0","","indicates the state of the clock enable",null,null],[12,"0","","",56,null],[11,"clk_sys_sram3","","",56,[[],["bool",15]]],[11,"set_clk_sys_sram3","","",56,[[["bool",15]]]],[11,"clk_sys_sram2","","",56,[[],["bool",15]]],[11,"set_clk_sys_sram2","","",56,[[["bool",15]]]],[11,"clk_sys_sram1","","",56,[[],["bool",15]]],[11,"set_clk_sys_sram1","","",56,[[["bool",15]]]],[11,"clk_sys_sram0","","",56,[[],["bool",15]]],[11,"set_clk_sys_sram0","","",56,[[["bool",15]]]],[11,"clk_sys_spi1","","",56,[[],["bool",15]]],[11,"set_clk_sys_spi1","","",56,[[["bool",15]]]],[11,"clk_peri_spi1","","",56,[[],["bool",15]]],[11,"set_clk_peri_spi1","","",56,[[["bool",15]]]],[11,"clk_sys_spi0","","",56,[[],["bool",15]]],[11,"set_clk_sys_spi0","","",56,[[["bool",15]]]],[11,"clk_peri_spi0","","",56,[[],["bool",15]]],[11,"set_clk_peri_spi0","","",56,[[["bool",15]]]],[11,"clk_sys_sio","","",56,[[],["bool",15]]],[11,"set_clk_sys_sio","","",56,[[["bool",15]]]],[11,"clk_sys_rtc","","",56,[[],["bool",15]]],[11,"set_clk_sys_rtc","","",56,[[["bool",15]]]],[11,"clk_rtc_rtc","","",56,[[],["bool",15]]],[11,"set_clk_rtc_rtc","","",56,[[["bool",15]]]],[11,"clk_sys_rosc","","",56,[[],["bool",15]]],[11,"set_clk_sys_rosc","","",56,[[["bool",15]]]],[11,"clk_sys_rom","","",56,[[],["bool",15]]],[11,"set_clk_sys_rom","","",56,[[["bool",15]]]],[11,"clk_sys_resets","","",56,[[],["bool",15]]],[11,"set_clk_sys_resets","","",56,[[["bool",15]]]],[11,"clk_sys_pwm","","",56,[[],["bool",15]]],[11,"set_clk_sys_pwm","","",56,[[["bool",15]]]],[11,"clk_sys_psm","","",56,[[],["bool",15]]],[11,"set_clk_sys_psm","","",56,[[["bool",15]]]],[11,"clk_sys_pll_usb","","",56,[[],["bool",15]]],[11,"set_clk_sys_pll_usb","","",56,[[["bool",15]]]],[11,"clk_sys_pll_sys","","",56,[[],["bool",15]]],[11,"set_clk_sys_pll_sys","","",56,[[["bool",15]]]],[11,"clk_sys_pio1","","",56,[[],["bool",15]]],[11,"set_clk_sys_pio1","","",56,[[["bool",15]]]],[11,"clk_sys_pio0","","",56,[[],["bool",15]]],[11,"set_clk_sys_pio0","","",56,[[["bool",15]]]],[11,"clk_sys_pads","","",56,[[],["bool",15]]],[11,"set_clk_sys_pads","","",56,[[["bool",15]]]],[11,"clk_sys_vreg_and_chip_reset","","",56,[[],["bool",15]]],[11,"set_clk_sys_vreg_and_chip_reset","","",56,[[["bool",15]]]],[11,"clk_sys_jtag","","",56,[[],["bool",15]]],[11,"set_clk_sys_jtag","","",56,[[["bool",15]]]],[11,"clk_sys_io","","",56,[[],["bool",15]]],[11,"set_clk_sys_io","","",56,[[["bool",15]]]],[11,"clk_sys_i2c1","","",56,[[],["bool",15]]],[11,"set_clk_sys_i2c1","","",56,[[["bool",15]]]],[11,"clk_sys_i2c0","","",56,[[],["bool",15]]],[11,"set_clk_sys_i2c0","","",56,[[["bool",15]]]],[11,"clk_sys_dma","","",56,[[],["bool",15]]],[11,"set_clk_sys_dma","","",56,[[["bool",15]]]],[11,"clk_sys_busfabric","","",56,[[],["bool",15]]],[11,"set_clk_sys_busfabric","","",56,[[["bool",15]]]],[11,"clk_sys_busctrl","","",56,[[],["bool",15]]],[11,"set_clk_sys_busctrl","","",56,[[["bool",15]]]],[11,"clk_sys_adc","","",56,[[],["bool",15]]],[11,"set_clk_sys_adc","","",56,[[["bool",15]]]],[11,"clk_adc_adc","","",56,[[],["bool",15]]],[11,"set_clk_adc_adc","","",56,[[["bool",15]]]],[11,"clk_sys_clocks","","",56,[[],["bool",15]]],[11,"set_clk_sys_clocks","","",56,[[["bool",15]]]],[3,"Fc0RefKhz","","Reference clock frequency in kHz",null,null],[12,"0","","",57,null],[11,"fc0_ref_khz","","",57,[[],["u32",15]]],[11,"set_fc0_ref_khz","","",57,[[["u32",15]]]],[3,"Ints","","Interrupt status after masking & forcing",null,null],[12,"0","","",58,null],[11,"clk_sys_resus","","",58,[[],["bool",15]]],[11,"set_clk_sys_resus","","",58,[[["bool",15]]]],[3,"Fc0Delay","","Delays the start of frequency counting to allow the mux …",null,null],[12,"0","","",59,null],[11,"fc0_delay","","",59,[[],["u8",15]]],[11,"set_fc0_delay","","",59,[[["u8",15]]]],[0,"vals","rp2040_pac2::clocks","",null,null],[3,"ClkSysCtrlSrc","rp2040_pac2::clocks::vals","Clock control, can be changed on-the-fly (except for …",null,null],[12,"0","","",60,null],[18,"CLK_REF","","",60,null],[18,"CLKSRC_CLK_SYS_AUX","","",60,null],[3,"ClkGpout0CtrlAuxsrc","","Clock control, can be changed on-the-fly (except for …",null,null],[12,"0","","",61,null],[18,"CLKSRC_PLL_SYS","","",61,null],[18,"CLKSRC_GPIN0","","",61,null],[18,"CLKSRC_GPIN1","","",61,null],[18,"CLKSRC_PLL_USB","","",61,null],[18,"ROSC_CLKSRC","","",61,null],[18,"XOSC_CLKSRC","","",61,null],[18,"CLK_SYS","","",61,null],[18,"CLK_USB","","",61,null],[18,"CLK_ADC","","",61,null],[18,"CLK_RTC","","",61,null],[18,"CLK_REF","","",61,null],[3,"Fc0Src","","Clock sent to frequency counter, set to 0 when not …",null,null],[12,"0","","",62,null],[18,"NULL","","",62,null],[18,"PLL_SYS_CLKSRC_PRIMARY","","",62,null],[18,"PLL_USB_CLKSRC_PRIMARY","","",62,null],[18,"ROSC_CLKSRC","","",62,null],[18,"ROSC_CLKSRC_PH","","",62,null],[18,"XOSC_CLKSRC","","",62,null],[18,"CLKSRC_GPIN0","","",62,null],[18,"CLKSRC_GPIN1","","",62,null],[18,"CLK_REF","","",62,null],[18,"CLK_SYS","","",62,null],[18,"CLK_PERI","","",62,null],[18,"CLK_USB","","",62,null],[18,"CLK_ADC","","",62,null],[18,"CLK_RTC","","",62,null],[3,"ClkGpout2CtrlAuxsrc","","Clock control, can be changed on-the-fly (except for …",null,null],[12,"0","","",63,null],[18,"CLKSRC_PLL_SYS","","",63,null],[18,"CLKSRC_GPIN0","","",63,null],[18,"CLKSRC_GPIN1","","",63,null],[18,"CLKSRC_PLL_USB","","",63,null],[18,"ROSC_CLKSRC_PH","","",63,null],[18,"XOSC_CLKSRC","","",63,null],[18,"CLK_SYS","","",63,null],[18,"CLK_USB","","",63,null],[18,"CLK_ADC","","",63,null],[18,"CLK_RTC","","",63,null],[18,"CLK_REF","","",63,null],[3,"ClkAdcCtrlAuxsrc","","Clock control, can be changed on-the-fly (except for …",null,null],[12,"0","","",64,null],[18,"CLKSRC_PLL_USB","","",64,null],[18,"CLKSRC_PLL_SYS","","",64,null],[18,"ROSC_CLKSRC_PH","","",64,null],[18,"XOSC_CLKSRC","","",64,null],[18,"CLKSRC_GPIN0","","",64,null],[18,"CLKSRC_GPIN1","","",64,null],[3,"ClkPeriCtrlAuxsrc","","Clock control, can be changed on-the-fly (except for …",null,null],[12,"0","","",65,null],[18,"CLK_SYS","","",65,null],[18,"CLKSRC_PLL_SYS","","",65,null],[18,"CLKSRC_PLL_USB","","",65,null],[18,"ROSC_CLKSRC_PH","","",65,null],[18,"XOSC_CLKSRC","","",65,null],[18,"CLKSRC_GPIN0","","",65,null],[18,"CLKSRC_GPIN1","","",65,null],[3,"ClkUsbCtrlAuxsrc","","Clock control, can be changed on-the-fly (except for …",null,null],[12,"0","","",66,null],[18,"CLKSRC_PLL_USB","","",66,null],[18,"CLKSRC_PLL_SYS","","",66,null],[18,"ROSC_CLKSRC_PH","","",66,null],[18,"XOSC_CLKSRC","","",66,null],[18,"CLKSRC_GPIN0","","",66,null],[18,"CLKSRC_GPIN1","","",66,null],[3,"ClkRefCtrlSrc","","Clock control, can be changed on-the-fly (except for …",null,null],[12,"0","","",67,null],[18,"ROSC_CLKSRC_PH","","",67,null],[18,"CLKSRC_CLK_REF_AUX","","",67,null],[18,"XOSC_CLKSRC","","",67,null],[3,"ClkRtcCtrlAuxsrc","","Clock control, can be changed on-the-fly (except for …",null,null],[12,"0","","",68,null],[18,"CLKSRC_PLL_USB","","",68,null],[18,"CLKSRC_PLL_SYS","","",68,null],[18,"ROSC_CLKSRC_PH","","",68,null],[18,"XOSC_CLKSRC","","",68,null],[18,"CLKSRC_GPIN0","","",68,null],[18,"CLKSRC_GPIN1","","",68,null],[3,"ClkSysCtrlAuxsrc","","Clock control, can be changed on-the-fly (except for …",null,null],[12,"0","","",69,null],[18,"CLKSRC_PLL_SYS","","",69,null],[18,"CLKSRC_PLL_USB","","",69,null],[18,"ROSC_CLKSRC","","",69,null],[18,"XOSC_CLKSRC","","",69,null],[18,"CLKSRC_GPIN0","","",69,null],[18,"CLKSRC_GPIN1","","",69,null],[3,"ClkGpout3CtrlAuxsrc","","Clock control, can be changed on-the-fly (except for …",null,null],[12,"0","","",70,null],[18,"CLKSRC_PLL_SYS","","",70,null],[18,"CLKSRC_GPIN0","","",70,null],[18,"CLKSRC_GPIN1","","",70,null],[18,"CLKSRC_PLL_USB","","",70,null],[18,"ROSC_CLKSRC_PH","","",70,null],[18,"XOSC_CLKSRC","","",70,null],[18,"CLK_SYS","","",70,null],[18,"CLK_USB","","",70,null],[18,"CLK_ADC","","",70,null],[18,"CLK_RTC","","",70,null],[18,"CLK_REF","","",70,null],[3,"ClkGpout1CtrlAuxsrc","","Clock control, can be changed on-the-fly (except for …",null,null],[12,"0","","",71,null],[18,"CLKSRC_PLL_SYS","","",71,null],[18,"CLKSRC_GPIN0","","",71,null],[18,"CLKSRC_GPIN1","","",71,null],[18,"CLKSRC_PLL_USB","","",71,null],[18,"ROSC_CLKSRC","","",71,null],[18,"XOSC_CLKSRC","","",71,null],[18,"CLK_SYS","","",71,null],[18,"CLK_USB","","",71,null],[18,"CLK_ADC","","",71,null],[18,"CLK_RTC","","",71,null],[18,"CLK_REF","","",71,null],[3,"ClkRefCtrlAuxsrc","","Clock control, can be changed on-the-fly (except for …",null,null],[12,"0","","",72,null],[18,"CLKSRC_PLL_USB","","",72,null],[18,"CLKSRC_GPIN0","","",72,null],[18,"CLKSRC_GPIN1","","",72,null],[3,"Clocks","rp2040_pac2::clocks","",null,null],[12,"0","","",73,null],[11,"clk_gpout0_ctrl","","Clock control, can be changed on-the-fly (except for …",73,[[],[["rw",3],["clkgpout0ctrl",3],["reg",3]]]],[11,"clk_gpout0_div","","Clock divisor, can be changed on-the-fly",73,[[],[["reg",3],["clkgpout0div",3],["rw",3]]]],[11,"clk_gpout0_selected","","Indicates which src is currently selected (one-hot)",73,[[],[["u32",15],["reg",3],["r",3]]]],[11,"clk_gpout1_ctrl","","Clock control, can be changed on-the-fly (except for …",73,[[],[["clkgpout1ctrl",3],["reg",3],["rw",3]]]],[11,"clk_gpout1_div","","Clock divisor, can be changed on-the-fly",73,[[],[["clkgpout1div",3],["reg",3],["rw",3]]]],[11,"clk_gpout1_selected","","Indicates which src is currently selected (one-hot)",73,[[],[["u32",15],["reg",3],["r",3]]]],[11,"clk_gpout2_ctrl","","Clock control, can be changed on-the-fly (except for …",73,[[],[["clkgpout2ctrl",3],["rw",3],["reg",3]]]],[11,"clk_gpout2_div","","Clock divisor, can be changed on-the-fly",73,[[],[["reg",3],["clkgpout2div",3],["rw",3]]]],[11,"clk_gpout2_selected","","Indicates which src is currently selected (one-hot)",73,[[],[["u32",15],["reg",3],["r",3]]]],[11,"clk_gpout3_ctrl","","Clock control, can be changed on-the-fly (except for …",73,[[],[["rw",3],["reg",3],["clkgpout3ctrl",3]]]],[11,"clk_gpout3_div","","Clock divisor, can be changed on-the-fly",73,[[],[["reg",3],["clkgpout3div",3],["rw",3]]]],[11,"clk_gpout3_selected","","Indicates which src is currently selected (one-hot)",73,[[],[["u32",15],["reg",3],["r",3]]]],[11,"clk_ref_ctrl","","Clock control, can be changed on-the-fly (except for …",73,[[],[["clkrefctrl",3],["rw",3],["reg",3]]]],[11,"clk_ref_div","","Clock divisor, can be changed on-the-fly",73,[[],[["clkrefdiv",3],["rw",3],["reg",3]]]],[11,"clk_ref_selected","","Indicates which src is currently selected (one-hot)",73,[[],[["u32",15],["reg",3],["r",3]]]],[11,"clk_sys_ctrl","","Clock control, can be changed on-the-fly (except for …",73,[[],[["rw",3],["reg",3],["clksysctrl",3]]]],[11,"clk_sys_div","","Clock divisor, can be changed on-the-fly",73,[[],[["reg",3],["clksysdiv",3],["rw",3]]]],[11,"clk_sys_selected","","Indicates which src is currently selected (one-hot)",73,[[],[["u32",15],["reg",3],["r",3]]]],[11,"clk_peri_ctrl","","Clock control, can be changed on-the-fly (except for …",73,[[],[["reg",3],["rw",3],["clkperictrl",3]]]],[11,"clk_peri_selected","","Indicates which src is currently selected (one-hot)",73,[[],[["u32",15],["reg",3],["r",3]]]],[11,"clk_usb_ctrl","","Clock control, can be changed on-the-fly (except for …",73,[[],[["clkusbctrl",3],["rw",3],["reg",3]]]],[11,"clk_usb_div","","Clock divisor, can be changed on-the-fly",73,[[],[["reg",3],["rw",3],["clkusbdiv",3]]]],[11,"clk_usb_selected","","Indicates which src is currently selected (one-hot)",73,[[],[["u32",15],["reg",3],["r",3]]]],[11,"clk_adc_ctrl","","Clock control, can be changed on-the-fly (except for …",73,[[],[["clkadcctrl",3],["rw",3],["reg",3]]]],[11,"clk_adc_div","","Clock divisor, can be changed on-the-fly",73,[[],[["clkadcdiv",3],["rw",3],["reg",3]]]],[11,"clk_adc_selected","","Indicates which src is currently selected (one-hot)",73,[[],[["u32",15],["reg",3],["r",3]]]],[11,"clk_rtc_ctrl","","Clock control, can be changed on-the-fly (except for …",73,[[],[["clkrtcctrl",3],["reg",3],["rw",3]]]],[11,"clk_rtc_div","","Clock divisor, can be changed on-the-fly",73,[[],[["clkrtcdiv",3],["rw",3],["reg",3]]]],[11,"clk_rtc_selected","","Indicates which src is currently selected (one-hot)",73,[[],[["u32",15],["reg",3],["r",3]]]],[11,"clk_sys_resus_ctrl","","",73,[[],[["rw",3],["clksysresusctrl",3],["reg",3]]]],[11,"clk_sys_resus_status","","",73,[[],[["clksysresusstatus",3],["rw",3],["reg",3]]]],[11,"fc0_ref_khz","","Reference clock frequency in kHz",73,[[],[["rw",3],["reg",3],["fc0refkhz",3]]]],[11,"fc0_min_khz","","Minimum pass frequency in kHz. This is optional. Set to 0 …",73,[[],[["rw",3],["reg",3],["fc0minkhz",3]]]],[11,"fc0_max_khz","","Maximum pass frequency in kHz. This is optional. Set to …",73,[[],[["fc0maxkhz",3],["rw",3],["reg",3]]]],[11,"fc0_delay","","Delays the start of frequency counting to allow the mux …",73,[[],[["reg",3],["fc0delay",3],["rw",3]]]],[11,"fc0_interval","","The test interval is 0.98us * 2<strong>interval, but let’s call …",73,[[],[["fc0interval",3],["reg",3],["rw",3]]]],[11,"fc0_src","","Clock sent to frequency counter, set to 0 when not …",73,[[],[["reg",3],["fc0src",3],["rw",3]]]],[11,"fc0_status","","Frequency counter status",73,[[],[["reg",3],["fc0status",3],["rw",3]]]],[11,"fc0_result","","Result of frequency measurement, only valid when …",73,[[],[["reg",3],["fc0result",3],["rw",3]]]],[11,"wake_en0","","enable clock in wake mode",73,[[],[["wakeen0",3],["rw",3],["reg",3]]]],[11,"wake_en1","","enable clock in wake mode",73,[[],[["rw",3],["wakeen1",3],["reg",3]]]],[11,"sleep_en0","","enable clock in sleep mode",73,[[],[["reg",3],["sleepen0",3],["rw",3]]]],[11,"sleep_en1","","enable clock in sleep mode",73,[[],[["reg",3],["sleepen1",3],["rw",3]]]],[11,"enabled0","","indicates the state of the clock enable",73,[[],[["reg",3],["rw",3],["enabled0",3]]]],[11,"enabled1","","indicates the state of the clock enable",73,[[],[["enabled1",3],["reg",3],["rw",3]]]],[11,"intr","","Raw Interrupts",73,[[],[["rw",3],["reg",3],["intr",3]]]],[11,"inte","","Interrupt Enable",73,[[],[["rw",3],["inte",3],["reg",3]]]],[11,"intf","","Interrupt Force",73,[[],[["intf",3],["reg",3],["rw",3]]]],[11,"ints","","Interrupt status after masking & forcing",73,[[],[["reg",3],["ints",3],["rw",3]]]],[0,"dma","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::dma","",null,null],[3,"FifoLevels","rp2040_pac2::dma::regs","Debug RAF, WAF, TDF levels",null,null],[12,"0","","",74,null],[11,"raf_lvl","","Current Read-Address-FIFO fill level",74,[[],["u8",15]]],[11,"set_raf_lvl","","Current Read-Address-FIFO fill level",74,[[["u8",15]]]],[11,"waf_lvl","","Current Write-Address-FIFO fill level",74,[[],["u8",15]]],[11,"set_waf_lvl","","Current Write-Address-FIFO fill level",74,[[["u8",15]]]],[11,"tdf_lvl","","Current Transfer-Data-FIFO fill level",74,[[],["u8",15]]],[11,"set_tdf_lvl","","Current Transfer-Data-FIFO fill level",74,[[["u8",15]]]],[3,"Inte0","","Interrupt Enables for IRQ 0",null,null],[12,"0","","",75,null],[11,"inte0","","Set bit n to pass interrupts from channel n to DMA IRQ 0.",75,[[],["u16",15]]],[11,"set_inte0","","Set bit n to pass interrupts from channel n to DMA IRQ 0.",75,[[["u16",15]]]],[3,"Intf0","","Force Interrupts",null,null],[12,"0","","",76,null],[11,"intf0","","Write 1s to force the corresponding bits in INTE0. The …",76,[[],["u16",15]]],[11,"set_intf0","","Write 1s to force the corresponding bits in INTE0. The …",76,[[["u16",15]]]],[3,"Ints0","","Interrupt Status for IRQ 0",null,null],[12,"0","","",77,null],[11,"ints0","","Indicates active channel interrupt requests which are …",77,[[],["u16",15]]],[11,"set_ints0","","Indicates active channel interrupt requests which are …",77,[[["u16",15]]]],[3,"Intf1","","Force Interrupts for IRQ 1",null,null],[12,"0","","",78,null],[11,"intf1","","Write 1s to force the corresponding bits in INTE0. The …",78,[[],["u16",15]]],[11,"set_intf1","","Write 1s to force the corresponding bits in INTE0. The …",78,[[["u16",15]]]],[3,"Ints1","","Interrupt Status (masked) for IRQ 1",null,null],[12,"0","","",79,null],[11,"ints1","","Indicates active channel interrupt requests which are …",79,[[],["u16",15]]],[11,"set_ints1","","Indicates active channel interrupt requests which are …",79,[[["u16",15]]]],[3,"Inte1","","Interrupt Enables for IRQ 1",null,null],[12,"0","","",80,null],[11,"inte1","","Set bit n to pass interrupts from channel n to DMA IRQ 1.",80,[[],["u16",15]]],[11,"set_inte1","","Set bit n to pass interrupts from channel n to DMA IRQ 1.",80,[[["u16",15]]]],[3,"Intr","","Interrupt Status (raw)",null,null],[12,"0","","",81,null],[11,"intr","","Raw interrupt status for DMA Channels 0..15. Bit n …",81,[[],["u16",15]]],[11,"set_intr","","Raw interrupt status for DMA Channels 0..15. Bit n …",81,[[["u16",15]]]],[3,"NChannels","","The number of channels this DMA instance is equipped …",null,null],[12,"0","","",82,null],[11,"n_channels","","",82,[[],["u8",15]]],[11,"set_n_channels","","",82,[[["u8",15]]]],[3,"DbgCtdreq","","Read: get channel DREQ counter (i.e. how many accesses …",null,null],[12,"0","","",83,null],[11,"ch0_dbg_ctdreq","","",83,[[],["u8",15]]],[11,"set_ch0_dbg_ctdreq","","",83,[[["u8",15]]]],[3,"Timer","","Pacing (X/Y) Fractional Timer The pacing timer produces …",null,null],[12,"0","","",84,null],[11,"x","","Pacing Timer Dividend. Specifies the X value for the …",84,[[],["u16",15]]],[11,"set_x","","Pacing Timer Dividend. Specifies the X value for the …",84,[[["u16",15]]]],[11,"y","","Pacing Timer Divisor. Specifies the Y value for the (X/Y) …",84,[[],["u16",15]]],[11,"set_y","","Pacing Timer Divisor. Specifies the Y value for the (X/Y) …",84,[[["u16",15]]]],[3,"CtrlTrig","","DMA Channel 6 Control and Status",null,null],[12,"0","","",85,null],[11,"ahb_error","","Logical OR of the READ_ERROR and WRITE_ERROR flags. The …",85,[[],["bool",15]]],[11,"set_ahb_error","","Logical OR of the READ_ERROR and WRITE_ERROR flags. The …",85,[[["bool",15]]]],[11,"read_error","","If 1, the channel received a read bus error. Write one to …",85,[[],["bool",15]]],[11,"set_read_error","","If 1, the channel received a read bus error. Write one to …",85,[[["bool",15]]]],[11,"write_error","","If 1, the channel received a write bus error. Write one …",85,[[],["bool",15]]],[11,"set_write_error","","If 1, the channel received a write bus error. Write one …",85,[[["bool",15]]]],[11,"busy","","This flag goes high when the channel starts a new …",85,[[],["bool",15]]],[11,"set_busy","","This flag goes high when the channel starts a new …",85,[[["bool",15]]]],[11,"sniff_en","","If 1, this channel’s data transfers are visible to the …",85,[[],["bool",15]]],[11,"set_sniff_en","","If 1, this channel’s data transfers are visible to the …",85,[[["bool",15]]]],[11,"bswap","","Apply byte-swap transformation to DMA data. For byte …",85,[[],["bool",15]]],[11,"set_bswap","","Apply byte-swap transformation to DMA data. For byte …",85,[[["bool",15]]]],[11,"irq_quiet","","In QUIET mode, the channel does not generate IRQs at the …",85,[[],["bool",15]]],[11,"set_irq_quiet","","In QUIET mode, the channel does not generate IRQs at the …",85,[[["bool",15]]]],[11,"treq_sel","","Select a Transfer Request signal. The channel uses the …",85,[[],["treqsel",3]]],[11,"set_treq_sel","","Select a Transfer Request signal. The channel uses the …",85,[[["treqsel",3]]]],[11,"chain_to","","When this channel completes, it will trigger the channel …",85,[[],["u8",15]]],[11,"set_chain_to","","When this channel completes, it will trigger the channel …",85,[[["u8",15]]]],[11,"ring_sel","","Select whether RING_SIZE applies to read or write …",85,[[],["bool",15]]],[11,"set_ring_sel","","Select whether RING_SIZE applies to read or write …",85,[[["bool",15]]]],[11,"ring_size","","Size of address wrap region. If 0, don’t wrap. For …",85,[[],["u8",15]]],[11,"set_ring_size","","Size of address wrap region. If 0, don’t wrap. For …",85,[[["u8",15]]]],[11,"incr_write","","If 1, the write address increments with each transfer. If …",85,[[],["bool",15]]],[11,"set_incr_write","","If 1, the write address increments with each transfer. If …",85,[[["bool",15]]]],[11,"incr_read","","If 1, the read address increments with each transfer. If …",85,[[],["bool",15]]],[11,"set_incr_read","","If 1, the read address increments with each transfer. If …",85,[[["bool",15]]]],[11,"data_size","","Set the size of each bus transfer (byte/halfword/word). …",85,[[],["datasize",3]]],[11,"set_data_size","","Set the size of each bus transfer (byte/halfword/word). …",85,[[["datasize",3]]]],[11,"high_priority","","HIGH_PRIORITY gives a channel preferential treatment in …",85,[[],["bool",15]]],[11,"set_high_priority","","HIGH_PRIORITY gives a channel preferential treatment in …",85,[[["bool",15]]]],[11,"en","","DMA Channel Enable. When 1, the channel will respond to …",85,[[],["bool",15]]],[11,"set_en","","DMA Channel Enable. When 1, the channel will respond to …",85,[[["bool",15]]]],[3,"ChanAbort","","Abort an in-progress transfer sequence on one or more …",null,null],[12,"0","","",86,null],[11,"chan_abort","","Each bit corresponds to a channel. Writing a 1 aborts …",86,[[],["u16",15]]],[11,"set_chan_abort","","Each bit corresponds to a channel. Writing a 1 aborts …",86,[[["u16",15]]]],[3,"SniffCtrl","","Sniffer Control",null,null],[12,"0","","",87,null],[11,"out_inv","","If set, the result appears inverted (bitwise complement) …",87,[[],["bool",15]]],[11,"set_out_inv","","If set, the result appears inverted (bitwise complement) …",87,[[["bool",15]]]],[11,"out_rev","","If set, the result appears bit-reversed when read. This …",87,[[],["bool",15]]],[11,"set_out_rev","","If set, the result appears bit-reversed when read. This …",87,[[["bool",15]]]],[11,"bswap","","Locally perform a byte reverse on the sniffed data, …",87,[[],["bool",15]]],[11,"set_bswap","","Locally perform a byte reverse on the sniffed data, …",87,[[["bool",15]]]],[11,"calc","","",87,[[],["sniffctrlcalc",3]]],[11,"set_calc","","",87,[[["sniffctrlcalc",3]]]],[11,"dmach","","DMA channel for Sniffer to observe",87,[[],["u8",15]]],[11,"set_dmach","","DMA channel for Sniffer to observe",87,[[["u8",15]]]],[11,"en","","Enable sniffer",87,[[],["bool",15]]],[11,"set_en","","Enable sniffer",87,[[["bool",15]]]],[3,"MultiChanTrigger","","Trigger one or more channels simultaneously",null,null],[12,"0","","",88,null],[11,"multi_chan_trigger","","Each bit in this register corresponds to a DMA channel. …",88,[[],["u16",15]]],[11,"set_multi_chan_trigger","","Each bit in this register corresponds to a DMA channel. …",88,[[["u16",15]]]],[0,"vals","rp2040_pac2::dma","",null,null],[3,"TreqSel","rp2040_pac2::dma::vals","DMA Channel 1 Control and Status",null,null],[12,"0","","",89,null],[18,"TIMER0","","Select Timer 0 as TREQ",89,null],[18,"TIMER1","","Select Timer 1 as TREQ",89,null],[18,"TIMER2","","Select Timer 2 as TREQ (Optional)",89,null],[18,"TIMER3","","Select Timer 3 as TREQ (Optional)",89,null],[18,"PERMANENT","","Permanent request, for unpaced transfers.",89,null],[3,"SniffCtrlCalc","","Sniffer Control",null,null],[12,"0","","",90,null],[18,"CRC32","","Calculate a CRC-32 (IEEE802.3 polynomial)",90,null],[18,"CRC32R","","Calculate a CRC-32 (IEEE802.3 polynomial) with bit …",90,null],[18,"CRC16","","Calculate a CRC-16-CCITT",90,null],[18,"CRC16R","","Calculate a CRC-16-CCITT with bit reversed data",90,null],[18,"EVEN","","XOR reduction over all data. == 1 if the total 1 …",90,null],[18,"SUM","","Calculate a simple 32-bit checksum (addition with a 32 …",90,null],[3,"DataSize","","DMA Channel 8 Control and Status",null,null],[12,"0","","",91,null],[18,"SIZE_BYTE","","",91,null],[18,"SIZE_HALFWORD","","",91,null],[18,"SIZE_WORD","","",91,null],[3,"Dma","rp2040_pac2::dma","DMA with separate read and write masters",null,null],[12,"0","","",92,null],[11,"intr","","Interrupt Status (raw)",92,[[],[["reg",3],["intr",3],["rw",3]]]],[11,"inte0","","Interrupt Enables for IRQ 0",92,[[],[["reg",3],["inte0",3],["rw",3]]]],[11,"intf0","","Force Interrupts",92,[[],[["reg",3],["intf0",3],["rw",3]]]],[11,"ints0","","Interrupt Status for IRQ 0",92,[[],[["reg",3],["ints0",3],["rw",3]]]],[11,"inte1","","Interrupt Enables for IRQ 1",92,[[],[["inte1",3],["rw",3],["reg",3]]]],[11,"intf1","","Force Interrupts for IRQ 1",92,[[],[["intf1",3],["rw",3],["reg",3]]]],[11,"ints1","","Interrupt Status (masked) for IRQ 1",92,[[],[["rw",3],["reg",3],["ints1",3]]]],[11,"multi_chan_trigger","","Trigger one or more channels simultaneously",92,[[],[["rw",3],["multichantrigger",3],["reg",3]]]],[11,"sniff_ctrl","","Sniffer Control",92,[[],[["sniffctrl",3],["reg",3],["rw",3]]]],[11,"sniff_data","","Data accumulator for sniff hardware Write an initial seed …",92,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"fifo_levels","","Debug RAF, WAF, TDF levels",92,[[],[["rw",3],["reg",3],["fifolevels",3]]]],[11,"chan_abort","","Abort an in-progress transfer sequence on one or more …",92,[[],[["reg",3],["chanabort",3],["rw",3]]]],[11,"n_channels","","The number of channels this DMA instance is equipped …",92,[[],[["nchannels",3],["rw",3],["reg",3]]]],[11,"ch","","",92,[[["usize",15]],["channel",3]]],[11,"timer","","Pacing (X/Y) Fractional Timer The pacing timer produces …",92,[[["usize",15]],[["timer",3],["rw",3],["reg",3]]]],[3,"Channel","","",null,null],[12,"0","","",93,null],[11,"read_addr","","DMA Channel 1 Read Address pointer This register updates …",93,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"write_addr","","DMA Channel 1 Write Address pointer This register updates …",93,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"trans_count","","DMA Channel 1 Transfer Count Program the number of bus …",93,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"ctrl_trig","","DMA Channel 1 Control and Status",93,[[],[["ctrltrig",3],["rw",3],["reg",3]]]],[11,"al1_ctrl","","Alias for channel 1 CTRL register",93,[[],[["u32",15],["reg",3],["r",3]]]],[11,"al1_read_addr","","Alias for channel 1 READ_ADDR register",93,[[],[["u32",15],["reg",3],["r",3]]]],[11,"al1_write_addr","","Alias for channel 1 WRITE_ADDR register",93,[[],[["u32",15],["reg",3],["r",3]]]],[11,"al1_trans_count_trig","","Alias for channel 1 TRANS_COUNT register This is a …",93,[[],[["u32",15],["reg",3],["r",3]]]],[11,"al2_ctrl","","Alias for channel 1 CTRL register",93,[[],[["u32",15],["reg",3],["r",3]]]],[11,"al2_trans_count","","Alias for channel 1 TRANS_COUNT register",93,[[],[["u32",15],["reg",3],["r",3]]]],[11,"al2_read_addr","","Alias for channel 1 READ_ADDR register",93,[[],[["u32",15],["reg",3],["r",3]]]],[11,"al2_write_addr_trig","","Alias for channel 1 WRITE_ADDR register This is a trigger …",93,[[],[["u32",15],["reg",3],["r",3]]]],[11,"al3_ctrl","","Alias for channel 1 CTRL register",93,[[],[["u32",15],["reg",3],["r",3]]]],[11,"al3_write_addr","","Alias for channel 1 WRITE_ADDR register",93,[[],[["u32",15],["reg",3],["r",3]]]],[11,"al3_trans_count","","Alias for channel 1 TRANS_COUNT register",93,[[],[["u32",15],["reg",3],["r",3]]]],[11,"al3_read_addr_trig","","Alias for channel 1 READ_ADDR register This is a trigger …",93,[[],[["u32",15],["reg",3],["r",3]]]],[11,"dbg_ctdreq","","Read: get channel DREQ counter (i.e. how many accesses …",93,[[],[["reg",3],["dbgctdreq",3],["rw",3]]]],[11,"dbg_tcr","","Read to get channel TRANS_COUNT reload value, i.e. the …",93,[[],[["u32",15],["reg",3],["r",3]]]],[0,"generic","rp2040_pac2","",null,null],[3,"RW","rp2040_pac2::generic","",null,null],[3,"R","","",null,null],[3,"W","","",null,null],[8,"Access","","",null,null],[8,"Read","","",null,null],[8,"Write","","",null,null],[3,"Reg","","",null,null],[11,"from_ptr","","",94,[[]]],[11,"ptr","","",94,[[]]],[11,"read","","",94,[[]]],[11,"write_value","","",94,[[]]],[11,"write","","",94,[[]]],[11,"modify","","",94,[[]]],[0,"i2c","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::i2c","",null,null],[3,"IcSar","rp2040_pac2::i2c::regs","I2C Slave Address Register",null,null],[12,"0","","",95,null],[11,"ic_sar","","The IC_SAR holds the slave address when the I2C is …",95,[[],["u16",15]]],[11,"set_ic_sar","","The IC_SAR holds the slave address when the I2C is …",95,[[["u16",15]]]],[3,"IcAckGeneralCall","","I2C ACK General Call Register The register controls …",null,null],[12,"0","","",96,null],[11,"ack_gen_call","","ACK General Call. When set to 1, DW_apb_i2c responds with …",96,[[],["icackgeneralcallackgencall",3]]],[11,"set_ack_gen_call","","ACK General Call. When set to 1, DW_apb_i2c responds with …",96,[[["icackgeneralcallackgencall",3]]]],[3,"IcDmaCr","","DMA Control Register The register is used to enable the …",null,null],[12,"0","","",97,null],[11,"tdmae","","Transmit DMA Enable. This bit enables/disables the …",97,[[],["icdmacrtdmae",3]]],[11,"set_tdmae","","Transmit DMA Enable. This bit enables/disables the …",97,[[["icdmacrtdmae",3]]]],[11,"rdmae","","Receive DMA Enable. This bit enables/disables the receive …",97,[[],["icdmacrrdmae",3]]],[11,"set_rdmae","","Receive DMA Enable. This bit enables/disables the receive …",97,[[["icdmacrrdmae",3]]]],[3,"IcClrRdReq","","Clear RD_REQ Interrupt Register",null,null],[12,"0","","",98,null],[11,"clr_rd_req","","Read this register to clear the RD_REQ interrupt (bit 5) …",98,[[],["bool",15]]],[11,"set_clr_rd_req","","Read this register to clear the RD_REQ interrupt (bit 5) …",98,[[["bool",15]]]],[3,"IcRawIntrStat","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[12,"0","","",99,null],[11,"master_on_hold","","Indicates whether master is holding the bus and TX FIFO …",99,[[],["icrawintrstatmasteronhold",3]]],[11,"set_master_on_hold","","Indicates whether master is holding the bus and TX FIFO …",99,[[["icrawintrstatmasteronhold",3]]]],[11,"restart_det","","Indicates whether a RESTART condition has occurred on the …",99,[[],["icrawintrstatrestartdet",3]]],[11,"set_restart_det","","Indicates whether a RESTART condition has occurred on the …",99,[[["icrawintrstatrestartdet",3]]]],[11,"gen_call","","Set only when a General Call address is received and it …",99,[[],["icrawintrstatgencall",3]]],[11,"set_gen_call","","Set only when a General Call address is received and it …",99,[[["icrawintrstatgencall",3]]]],[11,"start_det","","Indicates whether a START or RESTART condition has …",99,[[],["icrawintrstatstartdet",3]]],[11,"set_start_det","","Indicates whether a START or RESTART condition has …",99,[[["icrawintrstatstartdet",3]]]],[11,"stop_det","","Indicates whether a STOP condition has occurred on the …",99,[[],["icrawintrstatstopdet",3]]],[11,"set_stop_det","","Indicates whether a STOP condition has occurred on the …",99,[[["icrawintrstatstopdet",3]]]],[11,"activity","","This bit captures DW_apb_i2c activity and stays set until …",99,[[],["icrawintrstatactivity",3]]],[11,"set_activity","","This bit captures DW_apb_i2c activity and stays set until …",99,[[["icrawintrstatactivity",3]]]],[11,"rx_done","","When the DW_apb_i2c is acting as a slave-transmitter, …",99,[[],["icrawintrstatrxdone",3]]],[11,"set_rx_done","","When the DW_apb_i2c is acting as a slave-transmitter, …",99,[[["icrawintrstatrxdone",3]]]],[11,"tx_abrt","","This bit indicates if DW_apb_i2c, as an I2C transmitter, …",99,[[],["icrawintrstattxabrt",3]]],[11,"set_tx_abrt","","This bit indicates if DW_apb_i2c, as an I2C transmitter, …",99,[[["icrawintrstattxabrt",3]]]],[11,"rd_req","","This bit is set to 1 when DW_apb_i2c is acting as a slave …",99,[[],["icrawintrstatrdreq",3]]],[11,"set_rd_req","","This bit is set to 1 when DW_apb_i2c is acting as a slave …",99,[[["icrawintrstatrdreq",3]]]],[11,"tx_empty","","The behavior of the TX_EMPTY interrupt status differs …",99,[[],["icrawintrstattxempty",3]]],[11,"set_tx_empty","","The behavior of the TX_EMPTY interrupt status differs …",99,[[["icrawintrstattxempty",3]]]],[11,"tx_over","","Set during transmit if the transmit buffer is filled to …",99,[[],["icrawintrstattxover",3]]],[11,"set_tx_over","","Set during transmit if the transmit buffer is filled to …",99,[[["icrawintrstattxover",3]]]],[11,"rx_full","","Set when the receive buffer reaches or goes above the …",99,[[],["icrawintrstatrxfull",3]]],[11,"set_rx_full","","Set when the receive buffer reaches or goes above the …",99,[[["icrawintrstatrxfull",3]]]],[11,"rx_over","","Set if the receive buffer is completely filled to …",99,[[],["icrawintrstatrxover",3]]],[11,"set_rx_over","","Set if the receive buffer is completely filled to …",99,[[["icrawintrstatrxover",3]]]],[11,"rx_under","","Set if the processor attempts to read the receive buffer …",99,[[],["icrawintrstatrxunder",3]]],[11,"set_rx_under","","Set if the processor attempts to read the receive buffer …",99,[[["icrawintrstatrxunder",3]]]],[3,"IcFsSpklen","","I2C SS, FS or FM+ spike suppression limit This register …",null,null],[12,"0","","",100,null],[11,"ic_fs_spklen","","This register must be set before any I2C bus transaction …",100,[[],["u8",15]]],[11,"set_ic_fs_spklen","","This register must be set before any I2C bus transaction …",100,[[["u8",15]]]],[3,"IcCon","","I2C Control Register. This register can be written only …",null,null],[12,"0","","",101,null],[11,"stop_det_if_master_active","","Master issues the STOP_DET interrupt irrespective of …",101,[[],["bool",15]]],[11,"set_stop_det_if_master_active","","Master issues the STOP_DET interrupt irrespective of …",101,[[["bool",15]]]],[11,"rx_fifo_full_hld_ctrl","","This bit controls whether DW_apb_i2c should hold the bus …",101,[[],["icconrxfifofullhldctrl",3]]],[11,"set_rx_fifo_full_hld_ctrl","","This bit controls whether DW_apb_i2c should hold the bus …",101,[[["icconrxfifofullhldctrl",3]]]],[11,"tx_empty_ctrl","","This bit controls the generation of the TX_EMPTY …",101,[[],["iccontxemptyctrl",3]]],[11,"set_tx_empty_ctrl","","This bit controls the generation of the TX_EMPTY …",101,[[["iccontxemptyctrl",3]]]],[11,"stop_det_ifaddressed","","In slave mode: - 1’b1: issues the STOP_DET interrupt …",101,[[],["icconstopdetifaddressed",3]]],[11,"set_stop_det_ifaddressed","","In slave mode: - 1’b1: issues the STOP_DET interrupt …",101,[[["icconstopdetifaddressed",3]]]],[11,"ic_slave_disable","","This bit controls whether I2C has its slave disabled, …",101,[[],["icconicslavedisable",3]]],[11,"set_ic_slave_disable","","This bit controls whether I2C has its slave disabled, …",101,[[["icconicslavedisable",3]]]],[11,"ic_restart_en","","Determines whether RESTART conditions may be sent when …",101,[[],["icconicrestarten",3]]],[11,"set_ic_restart_en","","Determines whether RESTART conditions may be sent when …",101,[[["icconicrestarten",3]]]],[11,"ic_10bitaddr_master","","Controls whether the DW_apb_i2c starts its transfers in …",101,[[],["icconic10bitaddrmaster",3]]],[11,"set_ic_10bitaddr_master","","Controls whether the DW_apb_i2c starts its transfers in …",101,[[["icconic10bitaddrmaster",3]]]],[11,"ic_10bitaddr_slave","","When acting as a slave, this bit controls whether the …",101,[[],["icconic10bitaddrslave",3]]],[11,"set_ic_10bitaddr_slave","","When acting as a slave, this bit controls whether the …",101,[[["icconic10bitaddrslave",3]]]],[11,"speed","","These bits control at which speed the DW_apb_i2c …",101,[[],["icconspeed",3]]],[11,"set_speed","","These bits control at which speed the DW_apb_i2c …",101,[[["icconspeed",3]]]],[11,"master_mode","","This bit controls whether the DW_apb_i2c master is …",101,[[],["icconmastermode",3]]],[11,"set_master_mode","","This bit controls whether the DW_apb_i2c master is …",101,[[["icconmastermode",3]]]],[3,"IcStatus","","I2C Status Register This is a read-only register used to …",null,null],[12,"0","","",102,null],[11,"slv_activity","","Slave FSM Activity Status. When the Slave Finite State …",102,[[],["icstatusslvactivity",3]]],[11,"set_slv_activity","","Slave FSM Activity Status. When the Slave Finite State …",102,[[["icstatusslvactivity",3]]]],[11,"mst_activity","","Master FSM Activity Status. When the Master Finite State …",102,[[],["icstatusmstactivity",3]]],[11,"set_mst_activity","","Master FSM Activity Status. When the Master Finite State …",102,[[["icstatusmstactivity",3]]]],[11,"rff","","Receive FIFO Completely Full. When the receive FIFO is …",102,[[],["icstatusrff",3]]],[11,"set_rff","","Receive FIFO Completely Full. When the receive FIFO is …",102,[[["icstatusrff",3]]]],[11,"rfne","","Receive FIFO Not Empty. This bit is set when the receive …",102,[[],["icstatusrfne",3]]],[11,"set_rfne","","Receive FIFO Not Empty. This bit is set when the receive …",102,[[["icstatusrfne",3]]]],[11,"tfe","","Transmit FIFO Completely Empty. When the transmit FIFO is …",102,[[],["icstatustfe",3]]],[11,"set_tfe","","Transmit FIFO Completely Empty. When the transmit FIFO is …",102,[[["icstatustfe",3]]]],[11,"tfnf","","Transmit FIFO Not Full. Set when the transmit FIFO …",102,[[],["icstatustfnf",3]]],[11,"set_tfnf","","Transmit FIFO Not Full. Set when the transmit FIFO …",102,[[["icstatustfnf",3]]]],[11,"activity","","I2C Activity Status. Reset value: 0x0",102,[[],["icstatusactivity",3]]],[11,"set_activity","","I2C Activity Status. Reset value: 0x0",102,[[["icstatusactivity",3]]]],[3,"IcIntrMask","","I2C Interrupt Mask Register. These bits mask their …",null,null],[12,"0","","",103,null],[11,"m_master_on_hold_read_only","","This M_MASTER_ON_HOLD_read_only bit masks the …",103,[[],["icintrmaskmmasteronholdreadonly",3]]],[11,"set_m_master_on_hold_read_only","","This M_MASTER_ON_HOLD_read_only bit masks the …",103,[[["icintrmaskmmasteronholdreadonly",3]]]],[11,"m_restart_det","","This bit masks the R_RESTART_DET interrupt in …",103,[[],["icintrmaskmrestartdet",3]]],[11,"set_m_restart_det","","This bit masks the R_RESTART_DET interrupt in …",103,[[["icintrmaskmrestartdet",3]]]],[11,"m_gen_call","","This bit masks the R_GEN_CALL interrupt in IC_INTR_STAT …",103,[[],["icintrmaskmgencall",3]]],[11,"set_m_gen_call","","This bit masks the R_GEN_CALL interrupt in IC_INTR_STAT …",103,[[["icintrmaskmgencall",3]]]],[11,"m_start_det","","This bit masks the R_START_DET interrupt in IC_INTR_STAT …",103,[[],["icintrmaskmstartdet",3]]],[11,"set_m_start_det","","This bit masks the R_START_DET interrupt in IC_INTR_STAT …",103,[[["icintrmaskmstartdet",3]]]],[11,"m_stop_det","","This bit masks the R_STOP_DET interrupt in IC_INTR_STAT …",103,[[],["icintrmaskmstopdet",3]]],[11,"set_m_stop_det","","This bit masks the R_STOP_DET interrupt in IC_INTR_STAT …",103,[[["icintrmaskmstopdet",3]]]],[11,"m_activity","","This bit masks the R_ACTIVITY interrupt in IC_INTR_STAT …",103,[[],["icintrmaskmactivity",3]]],[11,"set_m_activity","","This bit masks the R_ACTIVITY interrupt in IC_INTR_STAT …",103,[[["icintrmaskmactivity",3]]]],[11,"m_rx_done","","This bit masks the R_RX_DONE interrupt in IC_INTR_STAT …",103,[[],["icintrmaskmrxdone",3]]],[11,"set_m_rx_done","","This bit masks the R_RX_DONE interrupt in IC_INTR_STAT …",103,[[["icintrmaskmrxdone",3]]]],[11,"m_tx_abrt","","This bit masks the R_TX_ABRT interrupt in IC_INTR_STAT …",103,[[],["icintrmaskmtxabrt",3]]],[11,"set_m_tx_abrt","","This bit masks the R_TX_ABRT interrupt in IC_INTR_STAT …",103,[[["icintrmaskmtxabrt",3]]]],[11,"m_rd_req","","This bit masks the R_RD_REQ interrupt in IC_INTR_STAT …",103,[[],["icintrmaskmrdreq",3]]],[11,"set_m_rd_req","","This bit masks the R_RD_REQ interrupt in IC_INTR_STAT …",103,[[["icintrmaskmrdreq",3]]]],[11,"m_tx_empty","","This bit masks the R_TX_EMPTY interrupt in IC_INTR_STAT …",103,[[],["icintrmaskmtxempty",3]]],[11,"set_m_tx_empty","","This bit masks the R_TX_EMPTY interrupt in IC_INTR_STAT …",103,[[["icintrmaskmtxempty",3]]]],[11,"m_tx_over","","This bit masks the R_TX_OVER interrupt in IC_INTR_STAT …",103,[[],["icintrmaskmtxover",3]]],[11,"set_m_tx_over","","This bit masks the R_TX_OVER interrupt in IC_INTR_STAT …",103,[[["icintrmaskmtxover",3]]]],[11,"m_rx_full","","This bit masks the R_RX_FULL interrupt in IC_INTR_STAT …",103,[[],["icintrmaskmrxfull",3]]],[11,"set_m_rx_full","","This bit masks the R_RX_FULL interrupt in IC_INTR_STAT …",103,[[["icintrmaskmrxfull",3]]]],[11,"m_rx_over","","This bit masks the R_RX_OVER interrupt in IC_INTR_STAT …",103,[[],["icintrmaskmrxover",3]]],[11,"set_m_rx_over","","This bit masks the R_RX_OVER interrupt in IC_INTR_STAT …",103,[[["icintrmaskmrxover",3]]]],[11,"m_rx_under","","This bit masks the R_RX_UNDER interrupt in IC_INTR_STAT …",103,[[],["icintrmaskmrxunder",3]]],[11,"set_m_rx_under","","This bit masks the R_RX_UNDER interrupt in IC_INTR_STAT …",103,[[["icintrmaskmrxunder",3]]]],[3,"IcClrRxUnder","","Clear RX_UNDER Interrupt Register",null,null],[12,"0","","",104,null],[11,"clr_rx_under","","Read this register to clear the RX_UNDER interrupt (bit …",104,[[],["bool",15]]],[11,"set_clr_rx_under","","Read this register to clear the RX_UNDER interrupt (bit …",104,[[["bool",15]]]],[3,"IcClrStartDet","","Clear START_DET Interrupt Register",null,null],[12,"0","","",105,null],[11,"clr_start_det","","Read this register to clear the START_DET interrupt (bit …",105,[[],["bool",15]]],[11,"set_clr_start_det","","Read this register to clear the START_DET interrupt (bit …",105,[[["bool",15]]]],[3,"IcClrRestartDet","","Clear RESTART_DET Interrupt Register",null,null],[12,"0","","",106,null],[11,"clr_restart_det","","Read this register to clear the RESTART_DET interrupt …",106,[[],["bool",15]]],[11,"set_clr_restart_det","","Read this register to clear the RESTART_DET interrupt …",106,[[["bool",15]]]],[3,"IcClrTxAbrt","","Clear TX_ABRT Interrupt Register",null,null],[12,"0","","",107,null],[11,"clr_tx_abrt","","Read this register to clear the TX_ABRT interrupt (bit 6) …",107,[[],["bool",15]]],[11,"set_clr_tx_abrt","","Read this register to clear the TX_ABRT interrupt (bit 6) …",107,[[["bool",15]]]],[3,"IcTar","","I2C Target Address Register This register is 12 bits …",null,null],[12,"0","","",108,null],[11,"special","","This bit indicates whether software performs a Device-ID …",108,[[],["ictarspecial",3]]],[11,"set_special","","This bit indicates whether software performs a Device-ID …",108,[[["ictarspecial",3]]]],[11,"gc_or_start","","If bit 11 (SPECIAL) is set to 1 and bit 13(Device-ID) is …",108,[[],["ictargcorstart",3]]],[11,"set_gc_or_start","","If bit 11 (SPECIAL) is set to 1 and bit 13(Device-ID) is …",108,[[["ictargcorstart",3]]]],[11,"ic_tar","","This is the target address for any master transaction. …",108,[[],["u16",15]]],[11,"set_ic_tar","","This is the target address for any master transaction. …",108,[[["u16",15]]]],[3,"IcClrGenCall","","Clear GEN_CALL Interrupt Register",null,null],[12,"0","","",109,null],[11,"clr_gen_call","","Read this register to clear the GEN_CALL interrupt (bit …",109,[[],["bool",15]]],[11,"set_clr_gen_call","","Read this register to clear the GEN_CALL interrupt (bit …",109,[[["bool",15]]]],[3,"IcClrRxDone","","Clear RX_DONE Interrupt Register",null,null],[12,"0","","",110,null],[11,"clr_rx_done","","Read this register to clear the RX_DONE interrupt (bit 7) …",110,[[],["bool",15]]],[11,"set_clr_rx_done","","Read this register to clear the RX_DONE interrupt (bit 7) …",110,[[["bool",15]]]],[3,"IcSlvDataNackOnly","","Generate Slave Data NACK Register The register is used to …",null,null],[12,"0","","",111,null],[11,"nack","","Generate NACK. This NACK generation only occurs when …",111,[[],["icslvdatanackonlynack",3]]],[11,"set_nack","","Generate NACK. This NACK generation only occurs when …",111,[[["icslvdatanackonlynack",3]]]],[3,"IcEnableStatus","","I2C Enable Status Register The register is used to report …",null,null],[12,"0","","",112,null],[11,"slv_rx_data_lost","","Slave Received Data Lost. This bit indicates if a …",112,[[],["icenablestatusslvrxdatalost",3]]],[11,"set_slv_rx_data_lost","","Slave Received Data Lost. This bit indicates if a …",112,[[["icenablestatusslvrxdatalost",3]]]],[11,"slv_disabled_while_busy","","Slave Disabled While Busy (Transmit, Receive). This bit …",112,[[],["icenablestatusslvdisabledwhilebusy",3]]],[11,"set_slv_disabled_while_busy","","Slave Disabled While Busy (Transmit, Receive). This bit …",112,[[["icenablestatusslvdisabledwhilebusy",3]]]],[11,"ic_en","","ic_en Status. This bit always reflects the value driven …",112,[[],["icenablestatusicen",3]]],[11,"set_ic_en","","ic_en Status. This bit always reflects the value driven …",112,[[["icenablestatusicen",3]]]],[3,"IcSsSclHcnt","","Standard Speed I2C Clock SCL High Count Register",null,null],[12,"0","","",113,null],[11,"ic_ss_scl_hcnt","","This register must be set before any I2C bus transaction …",113,[[],["u16",15]]],[11,"set_ic_ss_scl_hcnt","","This register must be set before any I2C bus transaction …",113,[[["u16",15]]]],[3,"IcRxflr","","I2C Receive FIFO Level Register This register contains …",null,null],[12,"0","","",114,null],[11,"rxflr","","Receive FIFO Level. Contains the number of valid data …",114,[[],["u8",15]]],[11,"set_rxflr","","Receive FIFO Level. Contains the number of valid data …",114,[[["u8",15]]]],[3,"IcDmaRdlr","","I2C Receive Data Level Register",null,null],[12,"0","","",115,null],[11,"dmardl","","Receive Data Level. This bit field controls the level at …",115,[[],["u8",15]]],[11,"set_dmardl","","Receive Data Level. This bit field controls the level at …",115,[[["u8",15]]]],[3,"IcClrActivity","","Clear ACTIVITY Interrupt Register",null,null],[12,"0","","",116,null],[11,"clr_activity","","Reading this register clears the ACTIVITY interrupt if …",116,[[],["bool",15]]],[11,"set_clr_activity","","Reading this register clears the ACTIVITY interrupt if …",116,[[["bool",15]]]],[3,"IcFsSclHcnt","","Fast Mode or Fast Mode Plus I2C Clock SCL High Count …",null,null],[12,"0","","",117,null],[11,"ic_fs_scl_hcnt","","This register must be set before any I2C bus transaction …",117,[[],["u16",15]]],[11,"set_ic_fs_scl_hcnt","","This register must be set before any I2C bus transaction …",117,[[["u16",15]]]],[3,"IcSdaSetup","","I2C SDA Setup Register This register controls the amount …",null,null],[12,"0","","",118,null],[11,"sda_setup","","SDA Setup. It is recommended that if the required delay …",118,[[],["u8",15]]],[11,"set_sda_setup","","SDA Setup. It is recommended that if the required delay …",118,[[["u8",15]]]],[3,"IcSsSclLcnt","","Standard Speed I2C Clock SCL Low Count Register",null,null],[12,"0","","",119,null],[11,"ic_ss_scl_lcnt","","This register must be set before any I2C bus transaction …",119,[[],["u16",15]]],[11,"set_ic_ss_scl_lcnt","","This register must be set before any I2C bus transaction …",119,[[["u16",15]]]],[3,"IcSdaHold","","I2C SDA Hold Time Length Register The bits [15:0] of this …",null,null],[12,"0","","",120,null],[11,"ic_sda_rx_hold","","Sets the required SDA hold time in units of ic_clk …",120,[[],["u8",15]]],[11,"set_ic_sda_rx_hold","","Sets the required SDA hold time in units of ic_clk …",120,[[["u8",15]]]],[11,"ic_sda_tx_hold","","Sets the required SDA hold time in units of ic_clk …",120,[[],["u16",15]]],[11,"set_ic_sda_tx_hold","","Sets the required SDA hold time in units of ic_clk …",120,[[["u16",15]]]],[3,"IcClrTxOver","","Clear TX_OVER Interrupt Register",null,null],[12,"0","","",121,null],[11,"clr_tx_over","","Read this register to clear the TX_OVER interrupt (bit 3) …",121,[[],["bool",15]]],[11,"set_clr_tx_over","","Read this register to clear the TX_OVER interrupt (bit 3) …",121,[[["bool",15]]]],[3,"IcClrStopDet","","Clear STOP_DET Interrupt Register",null,null],[12,"0","","",122,null],[11,"clr_stop_det","","Read this register to clear the STOP_DET interrupt (bit …",122,[[],["bool",15]]],[11,"set_clr_stop_det","","Read this register to clear the STOP_DET interrupt (bit …",122,[[["bool",15]]]],[3,"IcTxTl","","I2C Transmit FIFO Threshold Register",null,null],[12,"0","","",123,null],[11,"tx_tl","","Transmit FIFO Threshold Level. Controls the level of …",123,[[],["u8",15]]],[11,"set_tx_tl","","Transmit FIFO Threshold Level. Controls the level of …",123,[[["u8",15]]]],[3,"IcEnable","","I2C Enable Register",null,null],[12,"0","","",124,null],[11,"tx_cmd_block","","In Master mode: - 1’b1: Blocks the transmission of data …",124,[[],["icenabletxcmdblock",3]]],[11,"set_tx_cmd_block","","In Master mode: - 1’b1: Blocks the transmission of data …",124,[[["icenabletxcmdblock",3]]]],[11,"abort","","When set, the controller initiates the transfer abort. - …",124,[[],["icenableabort",3]]],[11,"set_abort","","When set, the controller initiates the transfer abort. - …",124,[[["icenableabort",3]]]],[11,"enable","","Controls whether the DW_apb_i2c is enabled. - 0: Disables …",124,[[],["icenableenable",3]]],[11,"set_enable","","Controls whether the DW_apb_i2c is enabled. - 0: Disables …",124,[[["icenableenable",3]]]],[3,"IcCompParam1","","Component Parameter Register 1 Note This register is not …",null,null],[12,"0","","",125,null],[11,"tx_buffer_depth","","TX Buffer Depth = 16",125,[[],["u8",15]]],[11,"set_tx_buffer_depth","","TX Buffer Depth = 16",125,[[["u8",15]]]],[11,"rx_buffer_depth","","RX Buffer Depth = 16",125,[[],["u8",15]]],[11,"set_rx_buffer_depth","","RX Buffer Depth = 16",125,[[["u8",15]]]],[11,"add_encoded_params","","Encoded parameters not visible",125,[[],["bool",15]]],[11,"set_add_encoded_params","","Encoded parameters not visible",125,[[["bool",15]]]],[11,"has_dma","","DMA handshaking signals are enabled",125,[[],["bool",15]]],[11,"set_has_dma","","DMA handshaking signals are enabled",125,[[["bool",15]]]],[11,"intr_io","","COMBINED Interrupt outputs",125,[[],["bool",15]]],[11,"set_intr_io","","COMBINED Interrupt outputs",125,[[["bool",15]]]],[11,"hc_count_values","","Programmable count values for each mode.",125,[[],["bool",15]]],[11,"set_hc_count_values","","Programmable count values for each mode.",125,[[["bool",15]]]],[11,"max_speed_mode","","MAX SPEED MODE = FAST MODE",125,[[],["u8",15]]],[11,"set_max_speed_mode","","MAX SPEED MODE = FAST MODE",125,[[["u8",15]]]],[11,"apb_data_width","","APB data bus width is 32 bits",125,[[],["u8",15]]],[11,"set_apb_data_width","","APB data bus width is 32 bits",125,[[["u8",15]]]],[3,"IcClrIntr","","Clear Combined and Individual Interrupt Register",null,null],[12,"0","","",126,null],[11,"clr_intr","","Read this register to clear the combined interrupt, all …",126,[[],["bool",15]]],[11,"set_clr_intr","","Read this register to clear the combined interrupt, all …",126,[[["bool",15]]]],[3,"IcFsSclLcnt","","Fast Mode or Fast Mode Plus I2C Clock SCL Low Count …",null,null],[12,"0","","",127,null],[11,"ic_fs_scl_lcnt","","This register must be set before any I2C bus transaction …",127,[[],["u16",15]]],[11,"set_ic_fs_scl_lcnt","","This register must be set before any I2C bus transaction …",127,[[["u16",15]]]],[3,"IcTxAbrtSource","","I2C Transmit Abort Source Register This register has 32 …",null,null],[12,"0","","",128,null],[11,"tx_flush_cnt","","This field indicates the number of Tx FIFO Data Commands …",128,[[],["u16",15]]],[11,"set_tx_flush_cnt","","This field indicates the number of Tx FIFO Data Commands …",128,[[["u16",15]]]],[11,"abrt_user_abrt","","This is a master-mode-only bit. Master has detected the …",128,[[],["ictxabrtsourceabrtuserabrt",3]]],[11,"set_abrt_user_abrt","","This is a master-mode-only bit. Master has detected the …",128,[[["ictxabrtsourceabrtuserabrt",3]]]],[11,"abrt_slvrd_intx","","1: When the processor side responds to a slave mode …",128,[[],["ictxabrtsourceabrtslvrdintx",3]]],[11,"set_abrt_slvrd_intx","","1: When the processor side responds to a slave mode …",128,[[["ictxabrtsourceabrtslvrdintx",3]]]],[11,"abrt_slv_arblost","","This field indicates that a Slave has lost the bus while …",128,[[],["ictxabrtsourceabrtslvarblost",3]]],[11,"set_abrt_slv_arblost","","This field indicates that a Slave has lost the bus while …",128,[[["ictxabrtsourceabrtslvarblost",3]]]],[11,"abrt_slvflush_txfifo","","This field specifies that the Slave has received a read …",128,[[],["ictxabrtsourceabrtslvflushtxfifo",3]]],[11,"set_abrt_slvflush_txfifo","","This field specifies that the Slave has received a read …",128,[[["ictxabrtsourceabrtslvflushtxfifo",3]]]],[11,"arb_lost","","This field specifies that the Master has lost …",128,[[],["ictxabrtsourcearblost",3]]],[11,"set_arb_lost","","This field specifies that the Master has lost …",128,[[["ictxabrtsourcearblost",3]]]],[11,"abrt_master_dis","","This field indicates that the User tries to initiate a …",128,[[],["ictxabrtsourceabrtmasterdis",3]]],[11,"set_abrt_master_dis","","This field indicates that the User tries to initiate a …",128,[[["ictxabrtsourceabrtmasterdis",3]]]],[11,"abrt_10b_rd_norstrt","","This field indicates that the restart is disabled …",128,[[],["ictxabrtsourceabrt10brdnorstrt",3]]],[11,"set_abrt_10b_rd_norstrt","","This field indicates that the restart is disabled …",128,[[["ictxabrtsourceabrt10brdnorstrt",3]]]],[11,"abrt_sbyte_norstrt","","To clear Bit 9, the source of the ABRT_SBYTE_NORSTRT must …",128,[[],["ictxabrtsourceabrtsbytenorstrt",3]]],[11,"set_abrt_sbyte_norstrt","","To clear Bit 9, the source of the ABRT_SBYTE_NORSTRT must …",128,[[["ictxabrtsourceabrtsbytenorstrt",3]]]],[11,"abrt_hs_norstrt","","This field indicates that the restart is disabled …",128,[[],["ictxabrtsourceabrthsnorstrt",3]]],[11,"set_abrt_hs_norstrt","","This field indicates that the restart is disabled …",128,[[["ictxabrtsourceabrthsnorstrt",3]]]],[11,"abrt_sbyte_ackdet","","This field indicates that the Master has sent a START …",128,[[],["ictxabrtsourceabrtsbyteackdet",3]]],[11,"set_abrt_sbyte_ackdet","","This field indicates that the Master has sent a START …",128,[[["ictxabrtsourceabrtsbyteackdet",3]]]],[11,"abrt_hs_ackdet","","This field indicates that the Master is in High Speed …",128,[[],["ictxabrtsourceabrthsackdet",3]]],[11,"set_abrt_hs_ackdet","","This field indicates that the Master is in High Speed …",128,[[["ictxabrtsourceabrthsackdet",3]]]],[11,"abrt_gcall_read","","This field indicates that DW_apb_i2c in the master mode …",128,[[],["ictxabrtsourceabrtgcallread",3]]],[11,"set_abrt_gcall_read","","This field indicates that DW_apb_i2c in the master mode …",128,[[["ictxabrtsourceabrtgcallread",3]]]],[11,"abrt_gcall_noack","","This field indicates that DW_apb_i2c in master mode has …",128,[[],["ictxabrtsourceabrtgcallnoack",3]]],[11,"set_abrt_gcall_noack","","This field indicates that DW_apb_i2c in master mode has …",128,[[["ictxabrtsourceabrtgcallnoack",3]]]],[11,"abrt_txdata_noack","","This field indicates the master-mode only bit. When the …",128,[[],["ictxabrtsourceabrttxdatanoack",3]]],[11,"set_abrt_txdata_noack","","This field indicates the master-mode only bit. When the …",128,[[["ictxabrtsourceabrttxdatanoack",3]]]],[11,"abrt_10addr2_noack","","This field indicates that the Master is in 10-bit address …",128,[[],["ictxabrtsourceabrt10addr2noack",3]]],[11,"set_abrt_10addr2_noack","","This field indicates that the Master is in 10-bit address …",128,[[["ictxabrtsourceabrt10addr2noack",3]]]],[11,"abrt_10addr1_noack","","This field indicates that the Master is in 10-bit address …",128,[[],["ictxabrtsourceabrt10addr1noack",3]]],[11,"set_abrt_10addr1_noack","","This field indicates that the Master is in 10-bit address …",128,[[["ictxabrtsourceabrt10addr1noack",3]]]],[11,"abrt_7b_addr_noack","","This field indicates that the Master is in 7-bit …",128,[[],["ictxabrtsourceabrt7baddrnoack",3]]],[11,"set_abrt_7b_addr_noack","","This field indicates that the Master is in 7-bit …",128,[[["ictxabrtsourceabrt7baddrnoack",3]]]],[3,"IcDmaTdlr","","DMA Transmit Data Level Register",null,null],[12,"0","","",129,null],[11,"dmatdl","","Transmit Data Level. This bit field controls the level at …",129,[[],["u8",15]]],[11,"set_dmatdl","","Transmit Data Level. This bit field controls the level at …",129,[[["u8",15]]]],[3,"IcDataCmd","","I2C Rx/Tx Data Buffer and Command Register; this is the …",null,null],[12,"0","","",130,null],[11,"first_data_byte","","Indicates the first data byte received after the address …",130,[[],["icdatacmdfirstdatabyte",3]]],[11,"set_first_data_byte","","Indicates the first data byte received after the address …",130,[[["icdatacmdfirstdatabyte",3]]]],[11,"restart","","This bit controls whether a RESTART is issued before the …",130,[[],["icdatacmdrestart",3]]],[11,"set_restart","","This bit controls whether a RESTART is issued before the …",130,[[["icdatacmdrestart",3]]]],[11,"stop","","This bit controls whether a STOP is issued after the byte …",130,[[],["icdatacmdstop",3]]],[11,"set_stop","","This bit controls whether a STOP is issued after the byte …",130,[[["icdatacmdstop",3]]]],[11,"cmd","","This bit controls whether a read or a write is performed. …",130,[[],["icdatacmdcmd",3]]],[11,"set_cmd","","This bit controls whether a read or a write is performed. …",130,[[["icdatacmdcmd",3]]]],[11,"dat","","This register contains the data to be transmitted or …",130,[[],["u8",15]]],[11,"set_dat","","This register contains the data to be transmitted or …",130,[[["u8",15]]]],[3,"IcTxflr","","I2C Transmit FIFO Level Register This register contains …",null,null],[12,"0","","",131,null],[11,"txflr","","Transmit FIFO Level. Contains the number of valid data …",131,[[],["u8",15]]],[11,"set_txflr","","Transmit FIFO Level. Contains the number of valid data …",131,[[["u8",15]]]],[3,"IcIntrStat","","I2C Interrupt Status Register Each bit in this register …",null,null],[12,"0","","",132,null],[11,"r_master_on_hold","","See IC_RAW_INTR_STAT for a detailed description of …",132,[[],["icintrstatrmasteronhold",3]]],[11,"set_r_master_on_hold","","See IC_RAW_INTR_STAT for a detailed description of …",132,[[["icintrstatrmasteronhold",3]]]],[11,"r_restart_det","","See IC_RAW_INTR_STAT for a detailed description of …",132,[[],["icintrstatrrestartdet",3]]],[11,"set_r_restart_det","","See IC_RAW_INTR_STAT for a detailed description of …",132,[[["icintrstatrrestartdet",3]]]],[11,"r_gen_call","","See IC_RAW_INTR_STAT for a detailed description of …",132,[[],["icintrstatrgencall",3]]],[11,"set_r_gen_call","","See IC_RAW_INTR_STAT for a detailed description of …",132,[[["icintrstatrgencall",3]]]],[11,"r_start_det","","See IC_RAW_INTR_STAT for a detailed description of …",132,[[],["icintrstatrstartdet",3]]],[11,"set_r_start_det","","See IC_RAW_INTR_STAT for a detailed description of …",132,[[["icintrstatrstartdet",3]]]],[11,"r_stop_det","","See IC_RAW_INTR_STAT for a detailed description of …",132,[[],["icintrstatrstopdet",3]]],[11,"set_r_stop_det","","See IC_RAW_INTR_STAT for a detailed description of …",132,[[["icintrstatrstopdet",3]]]],[11,"r_activity","","See IC_RAW_INTR_STAT for a detailed description of …",132,[[],["icintrstatractivity",3]]],[11,"set_r_activity","","See IC_RAW_INTR_STAT for a detailed description of …",132,[[["icintrstatractivity",3]]]],[11,"r_rx_done","","See IC_RAW_INTR_STAT for a detailed description of …",132,[[],["icintrstatrrxdone",3]]],[11,"set_r_rx_done","","See IC_RAW_INTR_STAT for a detailed description of …",132,[[["icintrstatrrxdone",3]]]],[11,"r_tx_abrt","","See IC_RAW_INTR_STAT for a detailed description of …",132,[[],["icintrstatrtxabrt",3]]],[11,"set_r_tx_abrt","","See IC_RAW_INTR_STAT for a detailed description of …",132,[[["icintrstatrtxabrt",3]]]],[11,"r_rd_req","","See IC_RAW_INTR_STAT for a detailed description of …",132,[[],["icintrstatrrdreq",3]]],[11,"set_r_rd_req","","See IC_RAW_INTR_STAT for a detailed description of …",132,[[["icintrstatrrdreq",3]]]],[11,"r_tx_empty","","See IC_RAW_INTR_STAT for a detailed description of …",132,[[],["icintrstatrtxempty",3]]],[11,"set_r_tx_empty","","See IC_RAW_INTR_STAT for a detailed description of …",132,[[["icintrstatrtxempty",3]]]],[11,"r_tx_over","","See IC_RAW_INTR_STAT for a detailed description of …",132,[[],["icintrstatrtxover",3]]],[11,"set_r_tx_over","","See IC_RAW_INTR_STAT for a detailed description of …",132,[[["icintrstatrtxover",3]]]],[11,"r_rx_full","","See IC_RAW_INTR_STAT for a detailed description of …",132,[[],["icintrstatrrxfull",3]]],[11,"set_r_rx_full","","See IC_RAW_INTR_STAT for a detailed description of …",132,[[["icintrstatrrxfull",3]]]],[11,"r_rx_over","","See IC_RAW_INTR_STAT for a detailed description of …",132,[[],["icintrstatrrxover",3]]],[11,"set_r_rx_over","","See IC_RAW_INTR_STAT for a detailed description of …",132,[[["icintrstatrrxover",3]]]],[11,"r_rx_under","","See IC_RAW_INTR_STAT for a detailed description of …",132,[[],["icintrstatrrxunder",3]]],[11,"set_r_rx_under","","See IC_RAW_INTR_STAT for a detailed description of …",132,[[["icintrstatrrxunder",3]]]],[3,"IcRxTl","","I2C Receive FIFO Threshold Register",null,null],[12,"0","","",133,null],[11,"rx_tl","","Receive FIFO Threshold Level. Controls the level of …",133,[[],["u8",15]]],[11,"set_rx_tl","","Receive FIFO Threshold Level. Controls the level of …",133,[[["u8",15]]]],[3,"IcClrRxOver","","Clear RX_OVER Interrupt Register",null,null],[12,"0","","",134,null],[11,"clr_rx_over","","Read this register to clear the RX_OVER interrupt (bit 1) …",134,[[],["bool",15]]],[11,"set_clr_rx_over","","Read this register to clear the RX_OVER interrupt (bit 1) …",134,[[["bool",15]]]],[0,"vals","rp2040_pac2::i2c","",null,null],[3,"IcTxAbrtSourceAbrtHsNorstrt","rp2040_pac2::i2c::vals","I2C Transmit Abort Source Register This register has 32 …",null,null],[12,"0","","",135,null],[18,"ABRT_HS_NORSTRT_VOID","","User trying to switch Master to HS mode when RESTART …",135,null],[18,"ABRT_HS_NORSTRT_GENERATED","","User trying to switch Master to HS mode when RESTART …",135,null],[3,"IcRawIntrStatRdReq","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[12,"0","","",136,null],[18,"INACTIVE","","RD_REQ interrupt is inactive",136,null],[18,"ACTIVE","","RD_REQ interrupt is active",136,null],[3,"IcSlvDataNackOnlyNack","","Generate Slave Data NACK Register The register is used to …",null,null],[12,"0","","",137,null],[18,"DISABLED","","Slave receiver generates NACK normally",137,null],[18,"ENABLED","","Slave receiver generates NACK upon data reception only",137,null],[3,"IcStatusTfnf","","I2C Status Register This is a read-only register used to …",null,null],[12,"0","","",138,null],[18,"FULL","","Tx FIFO is full",138,null],[18,"NOT_FULL","","Tx FIFO not full",138,null],[3,"IcIntrMaskMStopDet","","I2C Interrupt Mask Register. These bits mask their …",null,null],[12,"0","","",139,null],[18,"ENABLED","","STOP_DET interrupt is masked",139,null],[18,"DISABLED","","STOP_DET interrupt is unmasked",139,null],[3,"IcRawIntrStatGenCall","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[12,"0","","",140,null],[18,"INACTIVE","","GEN_CALL interrupt is inactive",140,null],[18,"ACTIVE","","GEN_CALL interrupt is active",140,null],[3,"IcRawIntrStatTxEmpty","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[12,"0","","",141,null],[18,"INACTIVE","","TX_EMPTY interrupt is inactive",141,null],[18,"ACTIVE","","TX_EMPTY interrupt is active",141,null],[3,"IcIntrStatRTxAbrt","","I2C Interrupt Status Register Each bit in this register …",null,null],[12,"0","","",142,null],[18,"INACTIVE","","R_TX_ABRT interrupt is inactive",142,null],[18,"ACTIVE","","R_TX_ABRT interrupt is active",142,null],[3,"IcIntrStatRActivity","","I2C Interrupt Status Register Each bit in this register …",null,null],[12,"0","","",143,null],[18,"INACTIVE","","R_ACTIVITY interrupt is inactive",143,null],[18,"ACTIVE","","R_ACTIVITY interrupt is active",143,null],[3,"IcIntrMaskMTxAbrt","","I2C Interrupt Mask Register. These bits mask their …",null,null],[12,"0","","",144,null],[18,"ENABLED","","TX_ABORT interrupt is masked",144,null],[18,"DISABLED","","TX_ABORT interrupt is unmasked",144,null],[3,"IcTxAbrtSourceAbrt10bRdNorstrt","","I2C Transmit Abort Source Register This register has 32 …",null,null],[12,"0","","",145,null],[18,"ABRT_10B_RD_VOID","","Master not trying to read in 10Bit addressing mode when …",145,null],[18,"ABRT_10B_RD_GENERATED","","Master trying to read in 10Bit addressing mode when …",145,null],[3,"IcTxAbrtSourceAbrtHsAckdet","","I2C Transmit Abort Source Register This register has 32 …",null,null],[12,"0","","",146,null],[18,"ABRT_HS_ACK_VOID","","HS Master code ACKed in HS Mode- scenario not present",146,null],[18,"ABRT_HS_ACK_GENERATED","","HS Master code ACKed in HS Mode",146,null],[3,"IcTxAbrtSourceArbLost","","I2C Transmit Abort Source Register This register has 32 …",null,null],[12,"0","","",147,null],[18,"ABRT_LOST_VOID","","Master or Slave-Transmitter lost arbitration- scenario …",147,null],[18,"ABRT_LOST_GENERATED","","Master or Slave-Transmitter lost arbitration",147,null],[3,"IcEnableAbort","","I2C Enable Register",null,null],[12,"0","","",148,null],[18,"DISABLE","","ABORT operation not in progress",148,null],[18,"ENABLED","","ABORT operation in progress",148,null],[3,"IcIntrStatRStopDet","","I2C Interrupt Status Register Each bit in this register …",null,null],[12,"0","","",149,null],[18,"INACTIVE","","R_STOP_DET interrupt is inactive",149,null],[18,"ACTIVE","","R_STOP_DET interrupt is active",149,null],[3,"IcTxAbrtSourceAbrt10addr2Noack","","I2C Transmit Abort Source Register This register has 32 …",null,null],[12,"0","","",150,null],[18,"INACTIVE","","This abort is not generated",150,null],[18,"ACTIVE","","Byte 2 of 10Bit Address not ACKed by any slave",150,null],[3,"IcIntrStatRRxDone","","I2C Interrupt Status Register Each bit in this register …",null,null],[12,"0","","",151,null],[18,"INACTIVE","","R_RX_DONE interrupt is inactive",151,null],[18,"ACTIVE","","R_RX_DONE interrupt is active",151,null],[3,"IcConRxFifoFullHldCtrl","","I2C Control Register. This register can be written only …",null,null],[12,"0","","",152,null],[18,"DISABLED","","Overflow when RX_FIFO is full",152,null],[18,"ENABLED","","Hold bus when RX_FIFO is full",152,null],[3,"IcIntrMaskMRdReq","","I2C Interrupt Mask Register. These bits mask their …",null,null],[12,"0","","",153,null],[18,"ENABLED","","RD_REQ interrupt is masked",153,null],[18,"DISABLED","","RD_REQ interrupt is unmasked",153,null],[3,"IcTxAbrtSourceAbrtMasterDis","","I2C Transmit Abort Source Register This register has 32 …",null,null],[12,"0","","",154,null],[18,"ABRT_MASTER_DIS_VOID","","User initiating master operation when MASTER disabled- …",154,null],[18,"ABRT_MASTER_DIS_GENERATED","","User initiating master operation when MASTER disabled",154,null],[3,"IcStatusRfne","","I2C Status Register This is a read-only register used to …",null,null],[12,"0","","",155,null],[18,"EMPTY","","Rx FIFO is empty",155,null],[18,"NOT_EMPTY","","Rx FIFO not empty",155,null],[3,"IcTarGcOrStart","","I2C Target Address Register This register is 12 bits …",null,null],[12,"0","","",156,null],[18,"GENERAL_CALL","","GENERAL_CALL byte transmission",156,null],[18,"START_BYTE","","START byte transmission",156,null],[3,"IcIntrMaskMActivity","","I2C Interrupt Mask Register. These bits mask their …",null,null],[12,"0","","",157,null],[18,"ENABLED","","ACTIVITY interrupt is masked",157,null],[18,"DISABLED","","ACTIVITY interrupt is unmasked",157,null],[3,"IcConMasterMode","","I2C Control Register. This register can be written only …",null,null],[12,"0","","",158,null],[18,"DISABLED","","Master mode is disabled",158,null],[18,"ENABLED","","Master mode is enabled",158,null],[3,"IcDataCmdFirstDataByte","","I2C Rx/Tx Data Buffer and Command Register; this is the …",null,null],[12,"0","","",159,null],[18,"INACTIVE","","Sequential data byte received",159,null],[18,"ACTIVE","","Non sequential data byte received",159,null],[3,"IcTxAbrtSourceAbrtUserAbrt","","I2C Transmit Abort Source Register This register has 32 …",null,null],[12,"0","","",160,null],[18,"ABRT_USER_ABRT_VOID","","Transfer abort detected by master- scenario not present",160,null],[18,"ABRT_USER_ABRT_GENERATED","","Transfer abort detected by master",160,null],[3,"IcRawIntrStatActivity","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[12,"0","","",161,null],[18,"INACTIVE","","RAW_INTR_ACTIVITY interrupt is inactive",161,null],[18,"ACTIVE","","RAW_INTR_ACTIVITY interrupt is active",161,null],[3,"IcConIc10bitaddrSlave","","I2C Control Register. This register can be written only …",null,null],[12,"0","","",162,null],[18,"ADDR_7BITS","","Slave 7Bit addressing",162,null],[18,"ADDR_10BITS","","Slave 10Bit addressing",162,null],[3,"IcIntrStatRGenCall","","I2C Interrupt Status Register Each bit in this register …",null,null],[12,"0","","",163,null],[18,"INACTIVE","","R_GEN_CALL interrupt is inactive",163,null],[18,"ACTIVE","","R_GEN_CALL interrupt is active",163,null],[3,"IcDataCmdRestart","","I2C Rx/Tx Data Buffer and Command Register; this is the …",null,null],[12,"0","","",164,null],[18,"DISABLE","","Don’t Issue RESTART before this command",164,null],[18,"ENABLE","","Issue RESTART before this command",164,null],[3,"IcIntrMaskMMasterOnHoldReadOnly","","I2C Interrupt Mask Register. These bits mask their …",null,null],[12,"0","","",165,null],[18,"ENABLED","","MASTER_ON_HOLD interrupt is masked",165,null],[18,"DISABLED","","MASTER_ON_HOLD interrupt is unmasked",165,null],[3,"IcAckGeneralCallAckGenCall","","I2C ACK General Call Register The register controls …",null,null],[12,"0","","",166,null],[18,"DISABLED","","Generate NACK for a General Call",166,null],[18,"ENABLED","","Generate ACK for a General Call",166,null],[3,"IcEnableStatusSlvRxDataLost","","I2C Enable Status Register The register is used to report …",null,null],[12,"0","","",167,null],[18,"INACTIVE","","Slave RX Data is not lost",167,null],[18,"ACTIVE","","Slave RX Data is lost",167,null],[3,"IcTxAbrtSourceAbrtTxdataNoack","","I2C Transmit Abort Source Register This register has 32 …",null,null],[12,"0","","",168,null],[18,"ABRT_TXDATA_NOACK_VOID","","Transmitted data non-ACKed by addressed slave-scenario …",168,null],[18,"ABRT_TXDATA_NOACK_GENERATED","","Transmitted data not ACKed by addressed slave",168,null],[3,"IcRawIntrStatTxOver","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[12,"0","","",169,null],[18,"INACTIVE","","TX_OVER interrupt is inactive",169,null],[18,"ACTIVE","","TX_OVER interrupt is active",169,null],[3,"IcStatusActivity","","I2C Status Register This is a read-only register used to …",null,null],[12,"0","","",170,null],[18,"INACTIVE","","I2C is idle",170,null],[18,"ACTIVE","","I2C is active",170,null],[3,"IcConSpeed","","I2C Control Register. This register can be written only …",null,null],[12,"0","","",171,null],[18,"STANDARD","","Standard Speed mode of operation",171,null],[18,"FAST","","Fast or Fast Plus mode of operation",171,null],[18,"HIGH","","High Speed mode of operation",171,null],[3,"IcDataCmdStop","","I2C Rx/Tx Data Buffer and Command Register; this is the …",null,null],[12,"0","","",172,null],[18,"DISABLE","","Don’t Issue STOP after this command",172,null],[18,"ENABLE","","Issue STOP after this command",172,null],[3,"IcIntrStatRStartDet","","I2C Interrupt Status Register Each bit in this register …",null,null],[12,"0","","",173,null],[18,"INACTIVE","","R_START_DET interrupt is inactive",173,null],[18,"ACTIVE","","R_START_DET interrupt is active",173,null],[3,"IcIntrStatRRdReq","","I2C Interrupt Status Register Each bit in this register …",null,null],[12,"0","","",174,null],[18,"INACTIVE","","R_RD_REQ interrupt is inactive",174,null],[18,"ACTIVE","","R_RD_REQ interrupt is active",174,null],[3,"IcIntrStatRTxEmpty","","I2C Interrupt Status Register Each bit in this register …",null,null],[12,"0","","",175,null],[18,"INACTIVE","","R_TX_EMPTY interrupt is inactive",175,null],[18,"ACTIVE","","R_TX_EMPTY interrupt is active",175,null],[3,"IcRawIntrStatStopDet","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[12,"0","","",176,null],[18,"INACTIVE","","STOP_DET interrupt is inactive",176,null],[18,"ACTIVE","","STOP_DET interrupt is active",176,null],[3,"IcRawIntrStatRxFull","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[12,"0","","",177,null],[18,"INACTIVE","","RX_FULL interrupt is inactive",177,null],[18,"ACTIVE","","RX_FULL interrupt is active",177,null],[3,"IcStatusMstActivity","","I2C Status Register This is a read-only register used to …",null,null],[12,"0","","",178,null],[18,"IDLE","","Master is idle",178,null],[18,"ACTIVE","","Master not idle",178,null],[3,"IcIntrStatRRxFull","","I2C Interrupt Status Register Each bit in this register …",null,null],[12,"0","","",179,null],[18,"INACTIVE","","R_RX_FULL interrupt is inactive",179,null],[18,"ACTIVE","","R_RX_FULL interrupt is active",179,null],[3,"IcEnableStatusSlvDisabledWhileBusy","","I2C Enable Status Register The register is used to report …",null,null],[12,"0","","",180,null],[18,"INACTIVE","","Slave is disabled when it is idle",180,null],[18,"ACTIVE","","Slave is disabled when it is active",180,null],[3,"IcIntrMaskMTxEmpty","","I2C Interrupt Mask Register. These bits mask their …",null,null],[12,"0","","",181,null],[18,"ENABLED","","TX_EMPTY interrupt is masked",181,null],[18,"DISABLED","","TX_EMPTY interrupt is unmasked",181,null],[3,"IcTxAbrtSourceAbrtSbyteNorstrt","","I2C Transmit Abort Source Register This register has 32 …",null,null],[12,"0","","",182,null],[18,"ABRT_SBYTE_NORSTRT_VOID","","User trying to send START byte when RESTART disabled- …",182,null],[18,"ABRT_SBYTE_NORSTRT_GENERATED","","User trying to send START byte when RESTART disabled",182,null],[3,"IcRawIntrStatRestartDet","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[12,"0","","",183,null],[18,"INACTIVE","","RESTART_DET interrupt is inactive",183,null],[18,"ACTIVE","","RESTART_DET interrupt is active",183,null],[3,"IcRawIntrStatStartDet","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[12,"0","","",184,null],[18,"INACTIVE","","START_DET interrupt is inactive",184,null],[18,"ACTIVE","","START_DET interrupt is active",184,null],[3,"IcTxAbrtSourceAbrtGcallRead","","I2C Transmit Abort Source Register This register has 32 …",null,null],[12,"0","","",185,null],[18,"ABRT_GCALL_READ_VOID","","GCALL is followed by read from bus-scenario not present",185,null],[18,"ABRT_GCALL_READ_GENERATED","","GCALL is followed by read from bus",185,null],[3,"IcTxAbrtSourceAbrtGcallNoack","","I2C Transmit Abort Source Register This register has 32 …",null,null],[12,"0","","",186,null],[18,"ABRT_GCALL_NOACK_VOID","","GCALL not ACKed by any slave-scenario not present",186,null],[18,"ABRT_GCALL_NOACK_GENERATED","","GCALL not ACKed by any slave",186,null],[3,"IcRawIntrStatTxAbrt","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[12,"0","","",187,null],[18,"INACTIVE","","TX_ABRT interrupt is inactive",187,null],[18,"ACTIVE","","TX_ABRT interrupt is active",187,null],[3,"IcIntrStatRRestartDet","","I2C Interrupt Status Register Each bit in this register …",null,null],[12,"0","","",188,null],[18,"INACTIVE","","R_RESTART_DET interrupt is inactive",188,null],[18,"ACTIVE","","R_RESTART_DET interrupt is active",188,null],[3,"IcTxAbrtSourceAbrt7bAddrNoack","","I2C Transmit Abort Source Register This register has 32 …",null,null],[12,"0","","",189,null],[18,"INACTIVE","","This abort is not generated",189,null],[18,"ACTIVE","","This abort is generated because of NOACK for 7-bit address",189,null],[3,"IcStatusTfe","","I2C Status Register This is a read-only register used to …",null,null],[12,"0","","",190,null],[18,"NON_EMPTY","","Tx FIFO not empty",190,null],[18,"EMPTY","","Tx FIFO is empty",190,null],[3,"IcEnableStatusIcEn","","I2C Enable Status Register The register is used to report …",null,null],[12,"0","","",191,null],[18,"DISABLED","","I2C disabled",191,null],[18,"ENABLED","","I2C enabled",191,null],[3,"IcConTxEmptyCtrl","","I2C Control Register. This register can be written only …",null,null],[12,"0","","",192,null],[18,"DISABLED","","Default behaviour of TX_EMPTY interrupt",192,null],[18,"ENABLED","","Controlled generation of TX_EMPTY interrupt",192,null],[3,"IcTxAbrtSourceAbrtSlvrdIntx","","I2C Transmit Abort Source Register This register has 32 …",null,null],[12,"0","","",193,null],[18,"ABRT_SLVRD_INTX_VOID","","Slave trying to transmit to remote master in read mode- …",193,null],[18,"ABRT_SLVRD_INTX_GENERATED","","Slave trying to transmit to remote master in read mode",193,null],[3,"IcIntrMaskMGenCall","","I2C Interrupt Mask Register. These bits mask their …",null,null],[12,"0","","",194,null],[18,"ENABLED","","GEN_CALL interrupt is masked",194,null],[18,"DISABLED","","GEN_CALL interrupt is unmasked",194,null],[3,"IcIntrStatRRxUnder","","I2C Interrupt Status Register Each bit in this register …",null,null],[12,"0","","",195,null],[18,"INACTIVE","","RX_UNDER interrupt is inactive",195,null],[18,"ACTIVE","","RX_UNDER interrupt is active",195,null],[3,"IcConIc10bitaddrMaster","","I2C Control Register. This register can be written only …",null,null],[12,"0","","",196,null],[18,"ADDR_7BITS","","Master 7Bit addressing mode",196,null],[18,"ADDR_10BITS","","Master 10Bit addressing mode",196,null],[3,"IcRawIntrStatRxUnder","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[12,"0","","",197,null],[18,"INACTIVE","","RX_UNDER interrupt is inactive",197,null],[18,"ACTIVE","","RX_UNDER interrupt is active",197,null],[3,"IcTxAbrtSourceAbrt10addr1Noack","","I2C Transmit Abort Source Register This register has 32 …",null,null],[12,"0","","",198,null],[18,"INACTIVE","","This abort is not generated",198,null],[18,"ACTIVE","","Byte 1 of 10Bit Address not ACKed by any slave",198,null],[3,"IcIntrStatRRxOver","","I2C Interrupt Status Register Each bit in this register …",null,null],[12,"0","","",199,null],[18,"INACTIVE","","R_RX_OVER interrupt is inactive",199,null],[18,"ACTIVE","","R_RX_OVER interrupt is active",199,null],[3,"IcIntrMaskMRxOver","","I2C Interrupt Mask Register. These bits mask their …",null,null],[12,"0","","",200,null],[18,"ENABLED","","RX_OVER interrupt is masked",200,null],[18,"DISABLED","","RX_OVER interrupt is unmasked",200,null],[3,"IcEnableTxCmdBlock","","I2C Enable Register",null,null],[12,"0","","",201,null],[18,"NOT_BLOCKED","","Tx Command execution not blocked",201,null],[18,"BLOCKED","","Tx Command execution blocked",201,null],[3,"IcDmaCrTdmae","","DMA Control Register The register is used to enable the …",null,null],[12,"0","","",202,null],[18,"DISABLED","","transmit FIFO DMA channel disabled",202,null],[18,"ENABLED","","Transmit FIFO DMA channel enabled",202,null],[3,"IcConIcSlaveDisable","","I2C Control Register. This register can be written only …",null,null],[12,"0","","",203,null],[18,"SLAVE_ENABLED","","Slave mode is enabled",203,null],[18,"SLAVE_DISABLED","","Slave mode is disabled",203,null],[3,"IcEnableEnable","","I2C Enable Register",null,null],[12,"0","","",204,null],[18,"DISABLED","","I2C is disabled",204,null],[18,"ENABLED","","I2C is enabled",204,null],[3,"IcDataCmdCmd","","I2C Rx/Tx Data Buffer and Command Register; this is the …",null,null],[12,"0","","",205,null],[18,"WRITE","","Master Write Command",205,null],[18,"READ","","Master Read Command",205,null],[3,"IcIntrMaskMRestartDet","","I2C Interrupt Mask Register. These bits mask their …",null,null],[12,"0","","",206,null],[18,"ENABLED","","RESTART_DET interrupt is masked",206,null],[18,"DISABLED","","RESTART_DET interrupt is unmasked",206,null],[3,"IcTxAbrtSourceAbrtSlvArblost","","I2C Transmit Abort Source Register This register has 32 …",null,null],[12,"0","","",207,null],[18,"ABRT_SLV_ARBLOST_VOID","","Slave lost arbitration to remote master- scenario not …",207,null],[18,"ABRT_SLV_ARBLOST_GENERATED","","Slave lost arbitration to remote master",207,null],[3,"IcIntrMaskMStartDet","","I2C Interrupt Mask Register. These bits mask their …",null,null],[12,"0","","",208,null],[18,"ENABLED","","START_DET interrupt is masked",208,null],[18,"DISABLED","","START_DET interrupt is unmasked",208,null],[3,"IcIntrMaskMRxUnder","","I2C Interrupt Mask Register. These bits mask their …",null,null],[12,"0","","",209,null],[18,"ENABLED","","RX_UNDER interrupt is masked",209,null],[18,"DISABLED","","RX_UNDER interrupt is unmasked",209,null],[3,"IcIntrMaskMRxFull","","I2C Interrupt Mask Register. These bits mask their …",null,null],[12,"0","","",210,null],[18,"ENABLED","","RX_FULL interrupt is masked",210,null],[18,"DISABLED","","RX_FULL interrupt is unmasked",210,null],[3,"IcTxAbrtSourceAbrtSlvflushTxfifo","","I2C Transmit Abort Source Register This register has 32 …",null,null],[12,"0","","",211,null],[18,"ABRT_SLVFLUSH_TXFIFO_VOID","","Slave flushes existing data in TX-FIFO upon getting read …",211,null],[18,"ABRT_SLVFLUSH_TXFIFO_GENERATED","","Slave flushes existing data in TX-FIFO upon getting read …",211,null],[3,"IcIntrMaskMTxOver","","I2C Interrupt Mask Register. These bits mask their …",null,null],[12,"0","","",212,null],[18,"ENABLED","","TX_OVER interrupt is masked",212,null],[18,"DISABLED","","TX_OVER interrupt is unmasked",212,null],[3,"IcStatusSlvActivity","","I2C Status Register This is a read-only register used to …",null,null],[12,"0","","",213,null],[18,"IDLE","","Slave is idle",213,null],[18,"ACTIVE","","Slave not idle",213,null],[3,"IcIntrStatRTxOver","","I2C Interrupt Status Register Each bit in this register …",null,null],[12,"0","","",214,null],[18,"INACTIVE","","R_TX_OVER interrupt is inactive",214,null],[18,"ACTIVE","","R_TX_OVER interrupt is active",214,null],[3,"IcConIcRestartEn","","I2C Control Register. This register can be written only …",null,null],[12,"0","","",215,null],[18,"DISABLED","","Master restart disabled",215,null],[18,"ENABLED","","Master restart enabled",215,null],[3,"IcTarSpecial","","I2C Target Address Register This register is 12 bits …",null,null],[12,"0","","",216,null],[18,"DISABLED","","Disables programming of GENERAL_CALL or START_BYTE …",216,null],[18,"ENABLED","","Enables programming of GENERAL_CALL or START_BYTE …",216,null],[3,"IcDmaCrRdmae","","DMA Control Register The register is used to enable the …",null,null],[12,"0","","",217,null],[18,"DISABLED","","Receive FIFO DMA channel disabled",217,null],[18,"ENABLED","","Receive FIFO DMA channel enabled",217,null],[3,"IcIntrStatRMasterOnHold","","I2C Interrupt Status Register Each bit in this register …",null,null],[12,"0","","",218,null],[18,"INACTIVE","","R_MASTER_ON_HOLD interrupt is inactive",218,null],[18,"ACTIVE","","R_MASTER_ON_HOLD interrupt is active",218,null],[3,"IcStatusRff","","I2C Status Register This is a read-only register used to …",null,null],[12,"0","","",219,null],[18,"NOT_FULL","","Rx FIFO not full",219,null],[18,"FULL","","Rx FIFO is full",219,null],[3,"IcConStopDetIfaddressed","","I2C Control Register. This register can be written only …",null,null],[12,"0","","",220,null],[18,"DISABLED","","slave issues STOP_DET intr always",220,null],[18,"ENABLED","","slave issues STOP_DET intr only if addressed",220,null],[3,"IcTxAbrtSourceAbrtSbyteAckdet","","I2C Transmit Abort Source Register This register has 32 …",null,null],[12,"0","","",221,null],[18,"ABRT_SBYTE_ACKDET_VOID","","ACK detected for START byte- scenario not present",221,null],[18,"ABRT_SBYTE_ACKDET_GENERATED","","ACK detected for START byte",221,null],[3,"IcIntrMaskMRxDone","","I2C Interrupt Mask Register. These bits mask their …",null,null],[12,"0","","",222,null],[18,"ENABLED","","RX_DONE interrupt is masked",222,null],[18,"DISABLED","","RX_DONE interrupt is unmasked",222,null],[3,"IcRawIntrStatRxOver","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[12,"0","","",223,null],[18,"INACTIVE","","RX_OVER interrupt is inactive",223,null],[18,"ACTIVE","","RX_OVER interrupt is active",223,null],[3,"IcRawIntrStatMasterOnHold","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[12,"0","","",224,null],[18,"INACTIVE","","MASTER_ON_HOLD interrupt is inactive",224,null],[18,"ACTIVE","","MASTER_ON_HOLD interrupt is active",224,null],[3,"IcRawIntrStatRxDone","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[12,"0","","",225,null],[18,"INACTIVE","","RX_DONE interrupt is inactive",225,null],[18,"ACTIVE","","RX_DONE interrupt is active",225,null],[3,"I2c","rp2040_pac2::i2c","DW_apb_i2c address block",null,null],[12,"0","","",226,null],[11,"ic_con","","I2C Control Register. This register can be written only …",226,[[],[["rw",3],["reg",3],["iccon",3]]]],[11,"ic_tar","","I2C Target Address Register This register is 12 bits …",226,[[],[["ictar",3],["rw",3],["reg",3]]]],[11,"ic_sar","","I2C Slave Address Register",226,[[],[["rw",3],["reg",3],["icsar",3]]]],[11,"ic_data_cmd","","I2C Rx/Tx Data Buffer and Command Register; this is the …",226,[[],[["reg",3],["rw",3],["icdatacmd",3]]]],[11,"ic_ss_scl_hcnt","","Standard Speed I2C Clock SCL High Count Register",226,[[],[["icsssclhcnt",3],["rw",3],["reg",3]]]],[11,"ic_ss_scl_lcnt","","Standard Speed I2C Clock SCL Low Count Register",226,[[],[["rw",3],["icssscllcnt",3],["reg",3]]]],[11,"ic_fs_scl_hcnt","","Fast Mode or Fast Mode Plus I2C Clock SCL High Count …",226,[[],[["reg",3],["icfssclhcnt",3],["rw",3]]]],[11,"ic_fs_scl_lcnt","","Fast Mode or Fast Mode Plus I2C Clock SCL Low Count …",226,[[],[["rw",3],["reg",3],["icfsscllcnt",3]]]],[11,"ic_intr_stat","","I2C Interrupt Status Register Each bit in this register …",226,[[],[["icintrstat",3],["reg",3],["rw",3]]]],[11,"ic_intr_mask","","I2C Interrupt Mask Register. These bits mask their …",226,[[],[["icintrmask",3],["rw",3],["reg",3]]]],[11,"ic_raw_intr_stat","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",226,[[],[["reg",3],["icrawintrstat",3],["rw",3]]]],[11,"ic_rx_tl","","I2C Receive FIFO Threshold Register",226,[[],[["reg",3],["icrxtl",3],["rw",3]]]],[11,"ic_tx_tl","","I2C Transmit FIFO Threshold Register",226,[[],[["ictxtl",3],["reg",3],["rw",3]]]],[11,"ic_clr_intr","","Clear Combined and Individual Interrupt Register",226,[[],[["rw",3],["icclrintr",3],["reg",3]]]],[11,"ic_clr_rx_under","","Clear RX_UNDER Interrupt Register",226,[[],[["reg",3],["rw",3],["icclrrxunder",3]]]],[11,"ic_clr_rx_over","","Clear RX_OVER Interrupt Register",226,[[],[["rw",3],["icclrrxover",3],["reg",3]]]],[11,"ic_clr_tx_over","","Clear TX_OVER Interrupt Register",226,[[],[["rw",3],["reg",3],["icclrtxover",3]]]],[11,"ic_clr_rd_req","","Clear RD_REQ Interrupt Register",226,[[],[["rw",3],["icclrrdreq",3],["reg",3]]]],[11,"ic_clr_tx_abrt","","Clear TX_ABRT Interrupt Register",226,[[],[["rw",3],["reg",3],["icclrtxabrt",3]]]],[11,"ic_clr_rx_done","","Clear RX_DONE Interrupt Register",226,[[],[["icclrrxdone",3],["rw",3],["reg",3]]]],[11,"ic_clr_activity","","Clear ACTIVITY Interrupt Register",226,[[],[["rw",3],["reg",3],["icclractivity",3]]]],[11,"ic_clr_stop_det","","Clear STOP_DET Interrupt Register",226,[[],[["icclrstopdet",3],["reg",3],["rw",3]]]],[11,"ic_clr_start_det","","Clear START_DET Interrupt Register",226,[[],[["icclrstartdet",3],["reg",3],["rw",3]]]],[11,"ic_clr_gen_call","","Clear GEN_CALL Interrupt Register",226,[[],[["rw",3],["icclrgencall",3],["reg",3]]]],[11,"ic_enable","","I2C Enable Register",226,[[],[["reg",3],["icenable",3],["rw",3]]]],[11,"ic_status","","I2C Status Register This is a read-only register used to …",226,[[],[["reg",3],["icstatus",3],["rw",3]]]],[11,"ic_txflr","","I2C Transmit FIFO Level Register This register contains …",226,[[],[["rw",3],["reg",3],["ictxflr",3]]]],[11,"ic_rxflr","","I2C Receive FIFO Level Register This register contains …",226,[[],[["icrxflr",3],["rw",3],["reg",3]]]],[11,"ic_sda_hold","","I2C SDA Hold Time Length Register The bits [15:0] of this …",226,[[],[["reg",3],["icsdahold",3],["rw",3]]]],[11,"ic_tx_abrt_source","","I2C Transmit Abort Source Register This register has 32 …",226,[[],[["rw",3],["reg",3],["ictxabrtsource",3]]]],[11,"ic_slv_data_nack_only","","Generate Slave Data NACK Register The register is used to …",226,[[],[["icslvdatanackonly",3],["reg",3],["rw",3]]]],[11,"ic_dma_cr","","DMA Control Register The register is used to enable the …",226,[[],[["icdmacr",3],["rw",3],["reg",3]]]],[11,"ic_dma_tdlr","","DMA Transmit Data Level Register",226,[[],[["reg",3],["icdmatdlr",3],["rw",3]]]],[11,"ic_dma_rdlr","","I2C Receive Data Level Register",226,[[],[["reg",3],["icdmardlr",3],["rw",3]]]],[11,"ic_sda_setup","","I2C SDA Setup Register This register controls the amount …",226,[[],[["rw",3],["reg",3],["icsdasetup",3]]]],[11,"ic_ack_general_call","","I2C ACK General Call Register The register controls …",226,[[],[["reg",3],["icackgeneralcall",3],["rw",3]]]],[11,"ic_enable_status","","I2C Enable Status Register The register is used to report …",226,[[],[["icenablestatus",3],["rw",3],["reg",3]]]],[11,"ic_fs_spklen","","I2C SS, FS or FM+ spike suppression limit This register …",226,[[],[["reg",3],["icfsspklen",3],["rw",3]]]],[11,"ic_clr_restart_det","","Clear RESTART_DET Interrupt Register",226,[[],[["rw",3],["reg",3],["icclrrestartdet",3]]]],[11,"ic_comp_param_1","","Component Parameter Register 1 Note This register is not …",226,[[],[["rw",3],["reg",3],["iccompparam1",3]]]],[11,"ic_comp_version","","I2C Component Version Register",226,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"ic_comp_type","","I2C Component Type Register",226,[[],[["u32",15],["reg",3],["rw",3]]]],[0,"io","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::io","",null,null],[3,"GpioStatus","rp2040_pac2::io::regs","GPIO status",null,null],[12,"0","","",227,null],[11,"irqtoproc","","interrupt to processors, after override is applied",227,[[],["bool",15]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",227,[[["bool",15]]]],[11,"irqfrompad","","interrupt from pad before override is applied",227,[[],["bool",15]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",227,[[["bool",15]]]],[11,"intoperi","","input signal to peripheral, after override is applied",227,[[],["bool",15]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",227,[[["bool",15]]]],[11,"infrompad","","input signal from pad, before override is applied",227,[[],["bool",15]]],[11,"set_infrompad","","input signal from pad, before override is applied",227,[[["bool",15]]]],[11,"oetopad","","output enable to pad after register override is applied",227,[[],["bool",15]]],[11,"set_oetopad","","output enable to pad after register override is applied",227,[[["bool",15]]]],[11,"oefromperi","","output enable from selected peripheral, before register …",227,[[],["bool",15]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",227,[[["bool",15]]]],[11,"outtopad","","output signal to pad after register override is applied",227,[[],["bool",15]]],[11,"set_outtopad","","output signal to pad after register override is applied",227,[[["bool",15]]]],[11,"outfromperi","","output signal from selected peripheral, before register …",227,[[],["bool",15]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",227,[[["bool",15]]]],[3,"Int","","Interrupt status after masking & forcing for proc1",null,null],[12,"0","","",228,null],[11,"level_low","","",228,[[["usize",15]],["bool",15]]],[11,"set_level_low","","",228,[[["usize",15],["bool",15]]]],[11,"level_high","","",228,[[["usize",15]],["bool",15]]],[11,"set_level_high","","",228,[[["usize",15],["bool",15]]]],[11,"edge_high","","",228,[[["usize",15]],["bool",15]]],[11,"set_edge_high","","",228,[[["usize",15],["bool",15]]]],[11,"edge_low","","",228,[[["usize",15]],["bool",15]]],[11,"set_edge_low","","",228,[[["usize",15],["bool",15]]]],[3,"GpioCtrl","","GPIO control including function select and overrides.",null,null],[12,"0","","",229,null],[11,"irqover","","",229,[[],["irqover",3]]],[11,"set_irqover","","",229,[[["irqover",3]]]],[11,"inover","","",229,[[],["inover",3]]],[11,"set_inover","","",229,[[["inover",3]]]],[11,"oeover","","",229,[[],["oeover",3]]],[11,"set_oeover","","",229,[[["oeover",3]]]],[11,"outover","","",229,[[],["outover",3]]],[11,"set_outover","","",229,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",229,[[],["u8",15]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",229,[[["u8",15]]]],[0,"vals","rp2040_pac2::io","",null,null],[3,"Gpio23CtrlFuncsel","rp2040_pac2::io::vals","GPIO control including function select and overrides.",null,null],[12,"0","","",230,null],[18,"SPI0_TX","","",230,null],[18,"UART1_RTS","","",230,null],[18,"I2C1_SCL","","",230,null],[18,"PWM_B_3","","",230,null],[18,"SIO_23","","",230,null],[18,"PIO0_23","","",230,null],[18,"PIO1_23","","",230,null],[18,"CLOCKS_GPOUT_1","","",230,null],[18,"USB_MUXING_VBUS_EN","","",230,null],[18,"NULL","","",230,null],[3,"Gpio6CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",231,null],[18,"SPI0_SCLK","","",231,null],[18,"UART1_CTS","","",231,null],[18,"I2C1_SDA","","",231,null],[18,"PWM_A_3","","",231,null],[18,"SIO_6","","",231,null],[18,"PIO0_6","","",231,null],[18,"PIO1_6","","",231,null],[18,"USB_MUXING_EXTPHY_SOFTCON","","",231,null],[18,"USB_MUXING_OVERCURR_DETECT","","",231,null],[18,"NULL","","",231,null],[3,"Gpio24CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",232,null],[18,"SPI1_RX","","",232,null],[18,"UART1_TX","","",232,null],[18,"I2C0_SDA","","",232,null],[18,"PWM_A_4","","",232,null],[18,"SIO_24","","",232,null],[18,"PIO0_24","","",232,null],[18,"PIO1_24","","",232,null],[18,"CLOCKS_GPOUT_2","","",232,null],[18,"USB_MUXING_OVERCURR_DETECT","","",232,null],[18,"NULL","","",232,null],[3,"Gpio7CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",233,null],[18,"SPI0_TX","","",233,null],[18,"UART1_RTS","","",233,null],[18,"I2C1_SCL","","",233,null],[18,"PWM_B_3","","",233,null],[18,"SIO_7","","",233,null],[18,"PIO0_7","","",233,null],[18,"PIO1_7","","",233,null],[18,"USB_MUXING_EXTPHY_OE_N","","",233,null],[18,"USB_MUXING_VBUS_DETECT","","",233,null],[18,"NULL","","",233,null],[3,"Gpio29CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",234,null],[18,"SPI1_SS_N","","",234,null],[18,"UART0_RX","","",234,null],[18,"I2C0_SCL","","",234,null],[18,"PWM_B_6","","",234,null],[18,"SIO_29","","",234,null],[18,"PIO0_29","","",234,null],[18,"PIO1_29","","",234,null],[18,"USB_MUXING_VBUS_EN","","",234,null],[18,"NULL","","",234,null],[3,"Gpio0CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",235,null],[18,"JTAG_TCK","","",235,null],[18,"SPI0_RX","","",235,null],[18,"UART0_TX","","",235,null],[18,"I2C0_SDA","","",235,null],[18,"PWM_A_0","","",235,null],[18,"SIO_0","","",235,null],[18,"PIO0_0","","",235,null],[18,"PIO1_0","","",235,null],[18,"USB_MUXING_OVERCURR_DETECT","","",235,null],[18,"NULL","","",235,null],[3,"Gpio26CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",236,null],[18,"SPI1_SCLK","","",236,null],[18,"UART1_CTS","","",236,null],[18,"I2C1_SDA","","",236,null],[18,"PWM_A_5","","",236,null],[18,"SIO_26","","",236,null],[18,"PIO0_26","","",236,null],[18,"PIO1_26","","",236,null],[18,"USB_MUXING_VBUS_EN","","",236,null],[18,"NULL","","",236,null],[3,"Gpio4CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",237,null],[18,"SPI0_RX","","",237,null],[18,"UART1_TX","","",237,null],[18,"I2C0_SDA","","",237,null],[18,"PWM_A_2","","",237,null],[18,"SIO_4","","",237,null],[18,"PIO0_4","","",237,null],[18,"PIO1_4","","",237,null],[18,"USB_MUXING_VBUS_DETECT","","",237,null],[18,"NULL","","",237,null],[3,"Gpio28CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",238,null],[18,"SPI1_RX","","",238,null],[18,"UART0_TX","","",238,null],[18,"I2C0_SDA","","",238,null],[18,"PWM_A_6","","",238,null],[18,"SIO_28","","",238,null],[18,"PIO0_28","","",238,null],[18,"PIO1_28","","",238,null],[18,"USB_MUXING_VBUS_DETECT","","",238,null],[18,"NULL","","",238,null],[3,"Gpio15CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",239,null],[18,"SPI1_TX","","",239,null],[18,"UART0_RTS","","",239,null],[18,"I2C1_SCL","","",239,null],[18,"PWM_B_7","","",239,null],[18,"SIO_15","","",239,null],[18,"PIO0_15","","",239,null],[18,"PIO1_15","","",239,null],[18,"USB_MUXING_DIGITAL_DP","","",239,null],[18,"USB_MUXING_OVERCURR_DETECT","","",239,null],[18,"NULL","","",239,null],[3,"Oeover","","GPIO control including function select and overrides.",null,null],[12,"0","","",240,null],[18,"NORMAL","","drive output enable from peripheral signal selected by …",240,null],[18,"INVERT","","drive output enable from inverse of peripheral signal …",240,null],[18,"DISABLE","","disable output",240,null],[18,"ENABLE","","enable output",240,null],[3,"Gpio20CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",241,null],[18,"SPI0_RX","","",241,null],[18,"UART1_TX","","",241,null],[18,"I2C0_SDA","","",241,null],[18,"PWM_A_2","","",241,null],[18,"SIO_20","","",241,null],[18,"PIO0_20","","",241,null],[18,"PIO1_20","","",241,null],[18,"CLOCKS_GPIN_0","","",241,null],[18,"USB_MUXING_VBUS_EN","","",241,null],[18,"NULL","","",241,null],[3,"Gpio12CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",242,null],[18,"SPI1_RX","","",242,null],[18,"UART0_TX","","",242,null],[18,"I2C0_SDA","","",242,null],[18,"PWM_A_6","","",242,null],[18,"SIO_12","","",242,null],[18,"PIO0_12","","",242,null],[18,"PIO1_12","","",242,null],[18,"USB_MUXING_EXTPHY_SPEED","","",242,null],[18,"USB_MUXING_OVERCURR_DETECT","","",242,null],[18,"NULL","","",242,null],[3,"Gpio1CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",243,null],[18,"JTAG_TMS","","",243,null],[18,"SPI0_SS_N","","",243,null],[18,"UART0_RX","","",243,null],[18,"I2C0_SCL","","",243,null],[18,"PWM_B_0","","",243,null],[18,"SIO_1","","",243,null],[18,"PIO0_1","","",243,null],[18,"PIO1_1","","",243,null],[18,"USB_MUXING_VBUS_DETECT","","",243,null],[18,"NULL","","",243,null],[3,"Gpio8CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",244,null],[18,"SPI1_RX","","",244,null],[18,"UART1_TX","","",244,null],[18,"I2C0_SDA","","",244,null],[18,"PWM_A_4","","",244,null],[18,"SIO_8","","",244,null],[18,"PIO0_8","","",244,null],[18,"PIO1_8","","",244,null],[18,"USB_MUXING_EXTPHY_RCV","","",244,null],[18,"USB_MUXING_VBUS_EN","","",244,null],[18,"NULL","","",244,null],[3,"Inover","","GPIO control including function select and overrides.",null,null],[12,"0","","",245,null],[18,"NORMAL","","don’t invert the peri input",245,null],[18,"INVERT","","invert the peri input",245,null],[18,"LOW","","drive peri input low",245,null],[18,"HIGH","","drive peri input high",245,null],[3,"Gpio3CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",246,null],[18,"JTAG_TDO","","",246,null],[18,"SPI0_TX","","",246,null],[18,"UART0_RTS","","",246,null],[18,"I2C1_SCL","","",246,null],[18,"PWM_B_1","","",246,null],[18,"SIO_3","","",246,null],[18,"PIO0_3","","",246,null],[18,"PIO1_3","","",246,null],[18,"USB_MUXING_OVERCURR_DETECT","","",246,null],[18,"NULL","","",246,null],[3,"Gpio5CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",247,null],[18,"SPI0_SS_N","","",247,null],[18,"UART1_RX","","",247,null],[18,"I2C0_SCL","","",247,null],[18,"PWM_B_2","","",247,null],[18,"SIO_5","","",247,null],[18,"PIO0_5","","",247,null],[18,"PIO1_5","","",247,null],[18,"USB_MUXING_VBUS_EN","","",247,null],[18,"NULL","","",247,null],[3,"Gpio13CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",248,null],[18,"SPI1_SS_N","","",248,null],[18,"UART0_RX","","",248,null],[18,"I2C0_SCL","","",248,null],[18,"PWM_B_6","","",248,null],[18,"SIO_13","","",248,null],[18,"PIO0_13","","",248,null],[18,"PIO1_13","","",248,null],[18,"USB_MUXING_EXTPHY_VPO","","",248,null],[18,"USB_MUXING_VBUS_DETECT","","",248,null],[18,"NULL","","",248,null],[3,"Gpio22CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",249,null],[18,"SPI0_SCLK","","",249,null],[18,"UART1_CTS","","",249,null],[18,"I2C1_SDA","","",249,null],[18,"PWM_A_3","","",249,null],[18,"SIO_22","","",249,null],[18,"PIO0_22","","",249,null],[18,"PIO1_22","","",249,null],[18,"CLOCKS_GPIN_1","","",249,null],[18,"USB_MUXING_VBUS_DETECT","","",249,null],[18,"NULL","","",249,null],[3,"Gpio17CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",250,null],[18,"SPI0_SS_N","","",250,null],[18,"UART0_RX","","",250,null],[18,"I2C0_SCL","","",250,null],[18,"PWM_B_0","","",250,null],[18,"SIO_17","","",250,null],[18,"PIO0_17","","",250,null],[18,"PIO1_17","","",250,null],[18,"USB_MUXING_VBUS_EN","","",250,null],[18,"NULL","","",250,null],[3,"Outover","","GPIO control including function select and overrides.",null,null],[12,"0","","",251,null],[18,"NORMAL","","drive output from peripheral signal selected by funcsel",251,null],[18,"INVERT","","drive output from inverse of peripheral signal selected …",251,null],[18,"LOW","","drive output low",251,null],[18,"HIGH","","drive output high",251,null],[3,"Gpio27CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",252,null],[18,"SPI1_TX","","",252,null],[18,"UART1_RTS","","",252,null],[18,"I2C1_SCL","","",252,null],[18,"PWM_B_5","","",252,null],[18,"SIO_27","","",252,null],[18,"PIO0_27","","",252,null],[18,"PIO1_27","","",252,null],[18,"USB_MUXING_OVERCURR_DETECT","","",252,null],[18,"NULL","","",252,null],[3,"Gpio14CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",253,null],[18,"SPI1_SCLK","","",253,null],[18,"UART0_CTS","","",253,null],[18,"I2C1_SDA","","",253,null],[18,"PWM_A_7","","",253,null],[18,"SIO_14","","",253,null],[18,"PIO0_14","","",253,null],[18,"PIO1_14","","",253,null],[18,"USB_MUXING_EXTPHY_VMO","","",253,null],[18,"USB_MUXING_VBUS_EN","","",253,null],[18,"NULL","","",253,null],[3,"Gpio25CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",254,null],[18,"SPI1_SS_N","","",254,null],[18,"UART1_RX","","",254,null],[18,"I2C0_SCL","","",254,null],[18,"PWM_B_4","","",254,null],[18,"SIO_25","","",254,null],[18,"PIO0_25","","",254,null],[18,"PIO1_25","","",254,null],[18,"CLOCKS_GPOUT_3","","",254,null],[18,"USB_MUXING_VBUS_DETECT","","",254,null],[18,"NULL","","",254,null],[3,"Gpio19CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",255,null],[18,"SPI0_TX","","",255,null],[18,"UART0_RTS","","",255,null],[18,"I2C1_SCL","","",255,null],[18,"PWM_B_1","","",255,null],[18,"SIO_19","","",255,null],[18,"PIO0_19","","",255,null],[18,"PIO1_19","","",255,null],[18,"USB_MUXING_VBUS_DETECT","","",255,null],[18,"NULL","","",255,null],[3,"Irqover","","GPIO control including function select and overrides.",null,null],[12,"0","","",256,null],[18,"NORMAL","","don’t invert the interrupt",256,null],[18,"INVERT","","invert the interrupt",256,null],[18,"LOW","","drive interrupt low",256,null],[18,"HIGH","","drive interrupt high",256,null],[3,"Gpio9CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",257,null],[18,"SPI1_SS_N","","",257,null],[18,"UART1_RX","","",257,null],[18,"I2C0_SCL","","",257,null],[18,"PWM_B_4","","",257,null],[18,"SIO_9","","",257,null],[18,"PIO0_9","","",257,null],[18,"PIO1_9","","",257,null],[18,"USB_MUXING_EXTPHY_VP","","",257,null],[18,"USB_MUXING_OVERCURR_DETECT","","",257,null],[18,"NULL","","",257,null],[3,"Gpio16CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",258,null],[18,"SPI0_RX","","",258,null],[18,"UART0_TX","","",258,null],[18,"I2C0_SDA","","",258,null],[18,"PWM_A_0","","",258,null],[18,"SIO_16","","",258,null],[18,"PIO0_16","","",258,null],[18,"PIO1_16","","",258,null],[18,"USB_MUXING_DIGITAL_DM","","",258,null],[18,"USB_MUXING_VBUS_DETECT","","",258,null],[18,"NULL","","",258,null],[3,"Gpio21CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",259,null],[18,"SPI0_SS_N","","",259,null],[18,"UART1_RX","","",259,null],[18,"I2C0_SCL","","",259,null],[18,"PWM_B_2","","",259,null],[18,"SIO_21","","",259,null],[18,"PIO0_21","","",259,null],[18,"PIO1_21","","",259,null],[18,"CLOCKS_GPOUT_0","","",259,null],[18,"USB_MUXING_OVERCURR_DETECT","","",259,null],[18,"NULL","","",259,null],[3,"Gpio11CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",260,null],[18,"SPI1_TX","","",260,null],[18,"UART1_RTS","","",260,null],[18,"I2C1_SCL","","",260,null],[18,"PWM_B_5","","",260,null],[18,"SIO_11","","",260,null],[18,"PIO0_11","","",260,null],[18,"PIO1_11","","",260,null],[18,"USB_MUXING_EXTPHY_SUSPND","","",260,null],[18,"USB_MUXING_VBUS_EN","","",260,null],[18,"NULL","","",260,null],[3,"Gpio2CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",261,null],[18,"JTAG_TDI","","",261,null],[18,"SPI0_SCLK","","",261,null],[18,"UART0_CTS","","",261,null],[18,"I2C1_SDA","","",261,null],[18,"PWM_A_1","","",261,null],[18,"SIO_2","","",261,null],[18,"PIO0_2","","",261,null],[18,"PIO1_2","","",261,null],[18,"USB_MUXING_VBUS_EN","","",261,null],[18,"NULL","","",261,null],[3,"Gpio18CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",262,null],[18,"SPI0_SCLK","","",262,null],[18,"UART0_CTS","","",262,null],[18,"I2C1_SDA","","",262,null],[18,"PWM_A_1","","",262,null],[18,"SIO_18","","",262,null],[18,"PIO0_18","","",262,null],[18,"PIO1_18","","",262,null],[18,"USB_MUXING_OVERCURR_DETECT","","",262,null],[18,"NULL","","",262,null],[3,"Gpio10CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",263,null],[18,"SPI1_SCLK","","",263,null],[18,"UART1_CTS","","",263,null],[18,"I2C1_SDA","","",263,null],[18,"PWM_A_5","","",263,null],[18,"SIO_10","","",263,null],[18,"PIO0_10","","",263,null],[18,"PIO1_10","","",263,null],[18,"USB_MUXING_EXTPHY_VM","","",263,null],[18,"USB_MUXING_VBUS_DETECT","","",263,null],[18,"NULL","","",263,null],[3,"Int","rp2040_pac2::io","",null,null],[12,"0","","",264,null],[11,"inte","","Interrupt Enable for dormant_wake",264,[[["usize",15]],[["rw",3],["reg",3],["int",3]]]],[11,"intf","","Interrupt Force for dormant_wake",264,[[["usize",15]],[["rw",3],["reg",3],["int",3]]]],[11,"ints","","Interrupt status after masking & forcing for dormant_wake",264,[[["usize",15]],[["rw",3],["reg",3],["int",3]]]],[3,"Io","","",null,null],[12,"0","","",265,null],[11,"gpio","","",265,[[["usize",15]],["gpio",3]]],[11,"intr","","Raw Interrupts",265,[[["usize",15]],[["rw",3],["reg",3],["int",3]]]],[11,"int_dormant_wake","","",265,[[],["int",3]]],[11,"int_proc","","",265,[[["usize",15]],["int",3]]],[3,"Gpio","","",null,null],[12,"0","","",266,null],[11,"status","","GPIO status",266,[[],[["reg",3],["gpiostatus",3],["rw",3]]]],[11,"ctrl","","GPIO control including function select and overrides.",266,[[],[["reg",3],["gpioctrl",3],["rw",3]]]],[0,"io_qspi","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::io_qspi","",null,null],[3,"Intr","rp2040_pac2::io_qspi::regs","Raw Interrupts",null,null],[12,"0","","",267,null],[11,"gpio_qspi_sd3_edge_high","","",267,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_edge_high","","",267,[[["bool",15]]]],[11,"gpio_qspi_sd3_edge_low","","",267,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_edge_low","","",267,[[["bool",15]]]],[11,"gpio_qspi_sd3_level_high","","",267,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_level_high","","",267,[[["bool",15]]]],[11,"gpio_qspi_sd3_level_low","","",267,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_level_low","","",267,[[["bool",15]]]],[11,"gpio_qspi_sd2_edge_high","","",267,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_edge_high","","",267,[[["bool",15]]]],[11,"gpio_qspi_sd2_edge_low","","",267,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_edge_low","","",267,[[["bool",15]]]],[11,"gpio_qspi_sd2_level_high","","",267,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_level_high","","",267,[[["bool",15]]]],[11,"gpio_qspi_sd2_level_low","","",267,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_level_low","","",267,[[["bool",15]]]],[11,"gpio_qspi_sd1_edge_high","","",267,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_edge_high","","",267,[[["bool",15]]]],[11,"gpio_qspi_sd1_edge_low","","",267,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_edge_low","","",267,[[["bool",15]]]],[11,"gpio_qspi_sd1_level_high","","",267,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_level_high","","",267,[[["bool",15]]]],[11,"gpio_qspi_sd1_level_low","","",267,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_level_low","","",267,[[["bool",15]]]],[11,"gpio_qspi_sd0_edge_high","","",267,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_edge_high","","",267,[[["bool",15]]]],[11,"gpio_qspi_sd0_edge_low","","",267,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_edge_low","","",267,[[["bool",15]]]],[11,"gpio_qspi_sd0_level_high","","",267,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_level_high","","",267,[[["bool",15]]]],[11,"gpio_qspi_sd0_level_low","","",267,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_level_low","","",267,[[["bool",15]]]],[11,"gpio_qspi_ss_edge_high","","",267,[[],["bool",15]]],[11,"set_gpio_qspi_ss_edge_high","","",267,[[["bool",15]]]],[11,"gpio_qspi_ss_edge_low","","",267,[[],["bool",15]]],[11,"set_gpio_qspi_ss_edge_low","","",267,[[["bool",15]]]],[11,"gpio_qspi_ss_level_high","","",267,[[],["bool",15]]],[11,"set_gpio_qspi_ss_level_high","","",267,[[["bool",15]]]],[11,"gpio_qspi_ss_level_low","","",267,[[],["bool",15]]],[11,"set_gpio_qspi_ss_level_low","","",267,[[["bool",15]]]],[11,"gpio_qspi_sclk_edge_high","","",267,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_edge_high","","",267,[[["bool",15]]]],[11,"gpio_qspi_sclk_edge_low","","",267,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_edge_low","","",267,[[["bool",15]]]],[11,"gpio_qspi_sclk_level_high","","",267,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_level_high","","",267,[[["bool",15]]]],[11,"gpio_qspi_sclk_level_low","","",267,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_level_low","","",267,[[["bool",15]]]],[3,"GpioQspiSclkStatus","","GPIO status",null,null],[12,"0","","",268,null],[11,"irqtoproc","","interrupt to processors, after override is applied",268,[[],["bool",15]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",268,[[["bool",15]]]],[11,"irqfrompad","","interrupt from pad before override is applied",268,[[],["bool",15]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",268,[[["bool",15]]]],[11,"intoperi","","input signal to peripheral, after override is applied",268,[[],["bool",15]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",268,[[["bool",15]]]],[11,"infrompad","","input signal from pad, before override is applied",268,[[],["bool",15]]],[11,"set_infrompad","","input signal from pad, before override is applied",268,[[["bool",15]]]],[11,"oetopad","","output enable to pad after register override is applied",268,[[],["bool",15]]],[11,"set_oetopad","","output enable to pad after register override is applied",268,[[["bool",15]]]],[11,"oefromperi","","output enable from selected peripheral, before register …",268,[[],["bool",15]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",268,[[["bool",15]]]],[11,"outtopad","","output signal to pad after register override is applied",268,[[],["bool",15]]],[11,"set_outtopad","","output signal to pad after register override is applied",268,[[["bool",15]]]],[11,"outfromperi","","output signal from selected peripheral, before register …",268,[[],["bool",15]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",268,[[["bool",15]]]],[3,"GpioQspiSd3Status","","GPIO status",null,null],[12,"0","","",269,null],[11,"irqtoproc","","interrupt to processors, after override is applied",269,[[],["bool",15]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",269,[[["bool",15]]]],[11,"irqfrompad","","interrupt from pad before override is applied",269,[[],["bool",15]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",269,[[["bool",15]]]],[11,"intoperi","","input signal to peripheral, after override is applied",269,[[],["bool",15]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",269,[[["bool",15]]]],[11,"infrompad","","input signal from pad, before override is applied",269,[[],["bool",15]]],[11,"set_infrompad","","input signal from pad, before override is applied",269,[[["bool",15]]]],[11,"oetopad","","output enable to pad after register override is applied",269,[[],["bool",15]]],[11,"set_oetopad","","output enable to pad after register override is applied",269,[[["bool",15]]]],[11,"oefromperi","","output enable from selected peripheral, before register …",269,[[],["bool",15]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",269,[[["bool",15]]]],[11,"outtopad","","output signal to pad after register override is applied",269,[[],["bool",15]]],[11,"set_outtopad","","output signal to pad after register override is applied",269,[[["bool",15]]]],[11,"outfromperi","","output signal from selected peripheral, before register …",269,[[],["bool",15]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",269,[[["bool",15]]]],[3,"GpioQspiSsCtrl","","GPIO control including function select and overrides.",null,null],[12,"0","","",270,null],[11,"irqover","","",270,[[],["gpioqspissctrlirqover",3]]],[11,"set_irqover","","",270,[[["gpioqspissctrlirqover",3]]]],[11,"inover","","",270,[[],["gpioqspissctrlinover",3]]],[11,"set_inover","","",270,[[["gpioqspissctrlinover",3]]]],[11,"oeover","","",270,[[],["gpioqspissctrloeover",3]]],[11,"set_oeover","","",270,[[["gpioqspissctrloeover",3]]]],[11,"outover","","",270,[[],["gpioqspissctrloutover",3]]],[11,"set_outover","","",270,[[["gpioqspissctrloutover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",270,[[],["gpioqspissctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",270,[[["gpioqspissctrlfuncsel",3]]]],[3,"GpioQspiSclkCtrl","","GPIO control including function select and overrides.",null,null],[12,"0","","",271,null],[11,"irqover","","",271,[[],["gpioqspisclkctrlirqover",3]]],[11,"set_irqover","","",271,[[["gpioqspisclkctrlirqover",3]]]],[11,"inover","","",271,[[],["gpioqspisclkctrlinover",3]]],[11,"set_inover","","",271,[[["gpioqspisclkctrlinover",3]]]],[11,"oeover","","",271,[[],["gpioqspisclkctrloeover",3]]],[11,"set_oeover","","",271,[[["gpioqspisclkctrloeover",3]]]],[11,"outover","","",271,[[],["gpioqspisclkctrloutover",3]]],[11,"set_outover","","",271,[[["gpioqspisclkctrloutover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",271,[[],["gpioqspisclkctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",271,[[["gpioqspisclkctrlfuncsel",3]]]],[3,"Proc1Intf","","Interrupt Force for proc1",null,null],[12,"0","","",272,null],[11,"gpio_qspi_sd3_edge_high","","",272,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_edge_high","","",272,[[["bool",15]]]],[11,"gpio_qspi_sd3_edge_low","","",272,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_edge_low","","",272,[[["bool",15]]]],[11,"gpio_qspi_sd3_level_high","","",272,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_level_high","","",272,[[["bool",15]]]],[11,"gpio_qspi_sd3_level_low","","",272,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_level_low","","",272,[[["bool",15]]]],[11,"gpio_qspi_sd2_edge_high","","",272,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_edge_high","","",272,[[["bool",15]]]],[11,"gpio_qspi_sd2_edge_low","","",272,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_edge_low","","",272,[[["bool",15]]]],[11,"gpio_qspi_sd2_level_high","","",272,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_level_high","","",272,[[["bool",15]]]],[11,"gpio_qspi_sd2_level_low","","",272,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_level_low","","",272,[[["bool",15]]]],[11,"gpio_qspi_sd1_edge_high","","",272,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_edge_high","","",272,[[["bool",15]]]],[11,"gpio_qspi_sd1_edge_low","","",272,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_edge_low","","",272,[[["bool",15]]]],[11,"gpio_qspi_sd1_level_high","","",272,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_level_high","","",272,[[["bool",15]]]],[11,"gpio_qspi_sd1_level_low","","",272,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_level_low","","",272,[[["bool",15]]]],[11,"gpio_qspi_sd0_edge_high","","",272,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_edge_high","","",272,[[["bool",15]]]],[11,"gpio_qspi_sd0_edge_low","","",272,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_edge_low","","",272,[[["bool",15]]]],[11,"gpio_qspi_sd0_level_high","","",272,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_level_high","","",272,[[["bool",15]]]],[11,"gpio_qspi_sd0_level_low","","",272,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_level_low","","",272,[[["bool",15]]]],[11,"gpio_qspi_ss_edge_high","","",272,[[],["bool",15]]],[11,"set_gpio_qspi_ss_edge_high","","",272,[[["bool",15]]]],[11,"gpio_qspi_ss_edge_low","","",272,[[],["bool",15]]],[11,"set_gpio_qspi_ss_edge_low","","",272,[[["bool",15]]]],[11,"gpio_qspi_ss_level_high","","",272,[[],["bool",15]]],[11,"set_gpio_qspi_ss_level_high","","",272,[[["bool",15]]]],[11,"gpio_qspi_ss_level_low","","",272,[[],["bool",15]]],[11,"set_gpio_qspi_ss_level_low","","",272,[[["bool",15]]]],[11,"gpio_qspi_sclk_edge_high","","",272,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_edge_high","","",272,[[["bool",15]]]],[11,"gpio_qspi_sclk_edge_low","","",272,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_edge_low","","",272,[[["bool",15]]]],[11,"gpio_qspi_sclk_level_high","","",272,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_level_high","","",272,[[["bool",15]]]],[11,"gpio_qspi_sclk_level_low","","",272,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_level_low","","",272,[[["bool",15]]]],[3,"Proc1Inte","","Interrupt Enable for proc1",null,null],[12,"0","","",273,null],[11,"gpio_qspi_sd3_edge_high","","",273,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_edge_high","","",273,[[["bool",15]]]],[11,"gpio_qspi_sd3_edge_low","","",273,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_edge_low","","",273,[[["bool",15]]]],[11,"gpio_qspi_sd3_level_high","","",273,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_level_high","","",273,[[["bool",15]]]],[11,"gpio_qspi_sd3_level_low","","",273,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_level_low","","",273,[[["bool",15]]]],[11,"gpio_qspi_sd2_edge_high","","",273,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_edge_high","","",273,[[["bool",15]]]],[11,"gpio_qspi_sd2_edge_low","","",273,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_edge_low","","",273,[[["bool",15]]]],[11,"gpio_qspi_sd2_level_high","","",273,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_level_high","","",273,[[["bool",15]]]],[11,"gpio_qspi_sd2_level_low","","",273,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_level_low","","",273,[[["bool",15]]]],[11,"gpio_qspi_sd1_edge_high","","",273,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_edge_high","","",273,[[["bool",15]]]],[11,"gpio_qspi_sd1_edge_low","","",273,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_edge_low","","",273,[[["bool",15]]]],[11,"gpio_qspi_sd1_level_high","","",273,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_level_high","","",273,[[["bool",15]]]],[11,"gpio_qspi_sd1_level_low","","",273,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_level_low","","",273,[[["bool",15]]]],[11,"gpio_qspi_sd0_edge_high","","",273,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_edge_high","","",273,[[["bool",15]]]],[11,"gpio_qspi_sd0_edge_low","","",273,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_edge_low","","",273,[[["bool",15]]]],[11,"gpio_qspi_sd0_level_high","","",273,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_level_high","","",273,[[["bool",15]]]],[11,"gpio_qspi_sd0_level_low","","",273,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_level_low","","",273,[[["bool",15]]]],[11,"gpio_qspi_ss_edge_high","","",273,[[],["bool",15]]],[11,"set_gpio_qspi_ss_edge_high","","",273,[[["bool",15]]]],[11,"gpio_qspi_ss_edge_low","","",273,[[],["bool",15]]],[11,"set_gpio_qspi_ss_edge_low","","",273,[[["bool",15]]]],[11,"gpio_qspi_ss_level_high","","",273,[[],["bool",15]]],[11,"set_gpio_qspi_ss_level_high","","",273,[[["bool",15]]]],[11,"gpio_qspi_ss_level_low","","",273,[[],["bool",15]]],[11,"set_gpio_qspi_ss_level_low","","",273,[[["bool",15]]]],[11,"gpio_qspi_sclk_edge_high","","",273,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_edge_high","","",273,[[["bool",15]]]],[11,"gpio_qspi_sclk_edge_low","","",273,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_edge_low","","",273,[[["bool",15]]]],[11,"gpio_qspi_sclk_level_high","","",273,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_level_high","","",273,[[["bool",15]]]],[11,"gpio_qspi_sclk_level_low","","",273,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_level_low","","",273,[[["bool",15]]]],[3,"Proc0Ints","","Interrupt status after masking & forcing for proc0",null,null],[12,"0","","",274,null],[11,"gpio_qspi_sd3_edge_high","","",274,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_edge_high","","",274,[[["bool",15]]]],[11,"gpio_qspi_sd3_edge_low","","",274,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_edge_low","","",274,[[["bool",15]]]],[11,"gpio_qspi_sd3_level_high","","",274,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_level_high","","",274,[[["bool",15]]]],[11,"gpio_qspi_sd3_level_low","","",274,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_level_low","","",274,[[["bool",15]]]],[11,"gpio_qspi_sd2_edge_high","","",274,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_edge_high","","",274,[[["bool",15]]]],[11,"gpio_qspi_sd2_edge_low","","",274,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_edge_low","","",274,[[["bool",15]]]],[11,"gpio_qspi_sd2_level_high","","",274,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_level_high","","",274,[[["bool",15]]]],[11,"gpio_qspi_sd2_level_low","","",274,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_level_low","","",274,[[["bool",15]]]],[11,"gpio_qspi_sd1_edge_high","","",274,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_edge_high","","",274,[[["bool",15]]]],[11,"gpio_qspi_sd1_edge_low","","",274,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_edge_low","","",274,[[["bool",15]]]],[11,"gpio_qspi_sd1_level_high","","",274,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_level_high","","",274,[[["bool",15]]]],[11,"gpio_qspi_sd1_level_low","","",274,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_level_low","","",274,[[["bool",15]]]],[11,"gpio_qspi_sd0_edge_high","","",274,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_edge_high","","",274,[[["bool",15]]]],[11,"gpio_qspi_sd0_edge_low","","",274,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_edge_low","","",274,[[["bool",15]]]],[11,"gpio_qspi_sd0_level_high","","",274,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_level_high","","",274,[[["bool",15]]]],[11,"gpio_qspi_sd0_level_low","","",274,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_level_low","","",274,[[["bool",15]]]],[11,"gpio_qspi_ss_edge_high","","",274,[[],["bool",15]]],[11,"set_gpio_qspi_ss_edge_high","","",274,[[["bool",15]]]],[11,"gpio_qspi_ss_edge_low","","",274,[[],["bool",15]]],[11,"set_gpio_qspi_ss_edge_low","","",274,[[["bool",15]]]],[11,"gpio_qspi_ss_level_high","","",274,[[],["bool",15]]],[11,"set_gpio_qspi_ss_level_high","","",274,[[["bool",15]]]],[11,"gpio_qspi_ss_level_low","","",274,[[],["bool",15]]],[11,"set_gpio_qspi_ss_level_low","","",274,[[["bool",15]]]],[11,"gpio_qspi_sclk_edge_high","","",274,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_edge_high","","",274,[[["bool",15]]]],[11,"gpio_qspi_sclk_edge_low","","",274,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_edge_low","","",274,[[["bool",15]]]],[11,"gpio_qspi_sclk_level_high","","",274,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_level_high","","",274,[[["bool",15]]]],[11,"gpio_qspi_sclk_level_low","","",274,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_level_low","","",274,[[["bool",15]]]],[3,"GpioQspiSd0Status","","GPIO status",null,null],[12,"0","","",275,null],[11,"irqtoproc","","interrupt to processors, after override is applied",275,[[],["bool",15]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",275,[[["bool",15]]]],[11,"irqfrompad","","interrupt from pad before override is applied",275,[[],["bool",15]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",275,[[["bool",15]]]],[11,"intoperi","","input signal to peripheral, after override is applied",275,[[],["bool",15]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",275,[[["bool",15]]]],[11,"infrompad","","input signal from pad, before override is applied",275,[[],["bool",15]]],[11,"set_infrompad","","input signal from pad, before override is applied",275,[[["bool",15]]]],[11,"oetopad","","output enable to pad after register override is applied",275,[[],["bool",15]]],[11,"set_oetopad","","output enable to pad after register override is applied",275,[[["bool",15]]]],[11,"oefromperi","","output enable from selected peripheral, before register …",275,[[],["bool",15]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",275,[[["bool",15]]]],[11,"outtopad","","output signal to pad after register override is applied",275,[[],["bool",15]]],[11,"set_outtopad","","output signal to pad after register override is applied",275,[[["bool",15]]]],[11,"outfromperi","","output signal from selected peripheral, before register …",275,[[],["bool",15]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",275,[[["bool",15]]]],[3,"DormantWakeInte","","Interrupt Enable for dormant_wake",null,null],[12,"0","","",276,null],[11,"gpio_qspi_sd3_edge_high","","",276,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_edge_high","","",276,[[["bool",15]]]],[11,"gpio_qspi_sd3_edge_low","","",276,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_edge_low","","",276,[[["bool",15]]]],[11,"gpio_qspi_sd3_level_high","","",276,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_level_high","","",276,[[["bool",15]]]],[11,"gpio_qspi_sd3_level_low","","",276,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_level_low","","",276,[[["bool",15]]]],[11,"gpio_qspi_sd2_edge_high","","",276,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_edge_high","","",276,[[["bool",15]]]],[11,"gpio_qspi_sd2_edge_low","","",276,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_edge_low","","",276,[[["bool",15]]]],[11,"gpio_qspi_sd2_level_high","","",276,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_level_high","","",276,[[["bool",15]]]],[11,"gpio_qspi_sd2_level_low","","",276,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_level_low","","",276,[[["bool",15]]]],[11,"gpio_qspi_sd1_edge_high","","",276,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_edge_high","","",276,[[["bool",15]]]],[11,"gpio_qspi_sd1_edge_low","","",276,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_edge_low","","",276,[[["bool",15]]]],[11,"gpio_qspi_sd1_level_high","","",276,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_level_high","","",276,[[["bool",15]]]],[11,"gpio_qspi_sd1_level_low","","",276,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_level_low","","",276,[[["bool",15]]]],[11,"gpio_qspi_sd0_edge_high","","",276,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_edge_high","","",276,[[["bool",15]]]],[11,"gpio_qspi_sd0_edge_low","","",276,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_edge_low","","",276,[[["bool",15]]]],[11,"gpio_qspi_sd0_level_high","","",276,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_level_high","","",276,[[["bool",15]]]],[11,"gpio_qspi_sd0_level_low","","",276,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_level_low","","",276,[[["bool",15]]]],[11,"gpio_qspi_ss_edge_high","","",276,[[],["bool",15]]],[11,"set_gpio_qspi_ss_edge_high","","",276,[[["bool",15]]]],[11,"gpio_qspi_ss_edge_low","","",276,[[],["bool",15]]],[11,"set_gpio_qspi_ss_edge_low","","",276,[[["bool",15]]]],[11,"gpio_qspi_ss_level_high","","",276,[[],["bool",15]]],[11,"set_gpio_qspi_ss_level_high","","",276,[[["bool",15]]]],[11,"gpio_qspi_ss_level_low","","",276,[[],["bool",15]]],[11,"set_gpio_qspi_ss_level_low","","",276,[[["bool",15]]]],[11,"gpio_qspi_sclk_edge_high","","",276,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_edge_high","","",276,[[["bool",15]]]],[11,"gpio_qspi_sclk_edge_low","","",276,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_edge_low","","",276,[[["bool",15]]]],[11,"gpio_qspi_sclk_level_high","","",276,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_level_high","","",276,[[["bool",15]]]],[11,"gpio_qspi_sclk_level_low","","",276,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_level_low","","",276,[[["bool",15]]]],[3,"GpioQspiSd3Ctrl","","GPIO control including function select and overrides.",null,null],[12,"0","","",277,null],[11,"irqover","","",277,[[],["gpioqspisd3ctrlirqover",3]]],[11,"set_irqover","","",277,[[["gpioqspisd3ctrlirqover",3]]]],[11,"inover","","",277,[[],["gpioqspisd3ctrlinover",3]]],[11,"set_inover","","",277,[[["gpioqspisd3ctrlinover",3]]]],[11,"oeover","","",277,[[],["gpioqspisd3ctrloeover",3]]],[11,"set_oeover","","",277,[[["gpioqspisd3ctrloeover",3]]]],[11,"outover","","",277,[[],["gpioqspisd3ctrloutover",3]]],[11,"set_outover","","",277,[[["gpioqspisd3ctrloutover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",277,[[],["gpioqspisd3ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",277,[[["gpioqspisd3ctrlfuncsel",3]]]],[3,"Proc0Inte","","Interrupt Enable for proc0",null,null],[12,"0","","",278,null],[11,"gpio_qspi_sd3_edge_high","","",278,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_edge_high","","",278,[[["bool",15]]]],[11,"gpio_qspi_sd3_edge_low","","",278,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_edge_low","","",278,[[["bool",15]]]],[11,"gpio_qspi_sd3_level_high","","",278,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_level_high","","",278,[[["bool",15]]]],[11,"gpio_qspi_sd3_level_low","","",278,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_level_low","","",278,[[["bool",15]]]],[11,"gpio_qspi_sd2_edge_high","","",278,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_edge_high","","",278,[[["bool",15]]]],[11,"gpio_qspi_sd2_edge_low","","",278,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_edge_low","","",278,[[["bool",15]]]],[11,"gpio_qspi_sd2_level_high","","",278,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_level_high","","",278,[[["bool",15]]]],[11,"gpio_qspi_sd2_level_low","","",278,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_level_low","","",278,[[["bool",15]]]],[11,"gpio_qspi_sd1_edge_high","","",278,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_edge_high","","",278,[[["bool",15]]]],[11,"gpio_qspi_sd1_edge_low","","",278,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_edge_low","","",278,[[["bool",15]]]],[11,"gpio_qspi_sd1_level_high","","",278,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_level_high","","",278,[[["bool",15]]]],[11,"gpio_qspi_sd1_level_low","","",278,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_level_low","","",278,[[["bool",15]]]],[11,"gpio_qspi_sd0_edge_high","","",278,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_edge_high","","",278,[[["bool",15]]]],[11,"gpio_qspi_sd0_edge_low","","",278,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_edge_low","","",278,[[["bool",15]]]],[11,"gpio_qspi_sd0_level_high","","",278,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_level_high","","",278,[[["bool",15]]]],[11,"gpio_qspi_sd0_level_low","","",278,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_level_low","","",278,[[["bool",15]]]],[11,"gpio_qspi_ss_edge_high","","",278,[[],["bool",15]]],[11,"set_gpio_qspi_ss_edge_high","","",278,[[["bool",15]]]],[11,"gpio_qspi_ss_edge_low","","",278,[[],["bool",15]]],[11,"set_gpio_qspi_ss_edge_low","","",278,[[["bool",15]]]],[11,"gpio_qspi_ss_level_high","","",278,[[],["bool",15]]],[11,"set_gpio_qspi_ss_level_high","","",278,[[["bool",15]]]],[11,"gpio_qspi_ss_level_low","","",278,[[],["bool",15]]],[11,"set_gpio_qspi_ss_level_low","","",278,[[["bool",15]]]],[11,"gpio_qspi_sclk_edge_high","","",278,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_edge_high","","",278,[[["bool",15]]]],[11,"gpio_qspi_sclk_edge_low","","",278,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_edge_low","","",278,[[["bool",15]]]],[11,"gpio_qspi_sclk_level_high","","",278,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_level_high","","",278,[[["bool",15]]]],[11,"gpio_qspi_sclk_level_low","","",278,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_level_low","","",278,[[["bool",15]]]],[3,"GpioQspiSd1Ctrl","","GPIO control including function select and overrides.",null,null],[12,"0","","",279,null],[11,"irqover","","",279,[[],["gpioqspisd1ctrlirqover",3]]],[11,"set_irqover","","",279,[[["gpioqspisd1ctrlirqover",3]]]],[11,"inover","","",279,[[],["gpioqspisd1ctrlinover",3]]],[11,"set_inover","","",279,[[["gpioqspisd1ctrlinover",3]]]],[11,"oeover","","",279,[[],["gpioqspisd1ctrloeover",3]]],[11,"set_oeover","","",279,[[["gpioqspisd1ctrloeover",3]]]],[11,"outover","","",279,[[],["gpioqspisd1ctrloutover",3]]],[11,"set_outover","","",279,[[["gpioqspisd1ctrloutover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",279,[[],["gpioqspisd1ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",279,[[["gpioqspisd1ctrlfuncsel",3]]]],[3,"GpioQspiSd1Status","","GPIO status",null,null],[12,"0","","",280,null],[11,"irqtoproc","","interrupt to processors, after override is applied",280,[[],["bool",15]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",280,[[["bool",15]]]],[11,"irqfrompad","","interrupt from pad before override is applied",280,[[],["bool",15]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",280,[[["bool",15]]]],[11,"intoperi","","input signal to peripheral, after override is applied",280,[[],["bool",15]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",280,[[["bool",15]]]],[11,"infrompad","","input signal from pad, before override is applied",280,[[],["bool",15]]],[11,"set_infrompad","","input signal from pad, before override is applied",280,[[["bool",15]]]],[11,"oetopad","","output enable to pad after register override is applied",280,[[],["bool",15]]],[11,"set_oetopad","","output enable to pad after register override is applied",280,[[["bool",15]]]],[11,"oefromperi","","output enable from selected peripheral, before register …",280,[[],["bool",15]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",280,[[["bool",15]]]],[11,"outtopad","","output signal to pad after register override is applied",280,[[],["bool",15]]],[11,"set_outtopad","","output signal to pad after register override is applied",280,[[["bool",15]]]],[11,"outfromperi","","output signal from selected peripheral, before register …",280,[[],["bool",15]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",280,[[["bool",15]]]],[3,"Proc1Ints","","Interrupt status after masking & forcing for proc1",null,null],[12,"0","","",281,null],[11,"gpio_qspi_sd3_edge_high","","",281,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_edge_high","","",281,[[["bool",15]]]],[11,"gpio_qspi_sd3_edge_low","","",281,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_edge_low","","",281,[[["bool",15]]]],[11,"gpio_qspi_sd3_level_high","","",281,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_level_high","","",281,[[["bool",15]]]],[11,"gpio_qspi_sd3_level_low","","",281,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_level_low","","",281,[[["bool",15]]]],[11,"gpio_qspi_sd2_edge_high","","",281,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_edge_high","","",281,[[["bool",15]]]],[11,"gpio_qspi_sd2_edge_low","","",281,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_edge_low","","",281,[[["bool",15]]]],[11,"gpio_qspi_sd2_level_high","","",281,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_level_high","","",281,[[["bool",15]]]],[11,"gpio_qspi_sd2_level_low","","",281,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_level_low","","",281,[[["bool",15]]]],[11,"gpio_qspi_sd1_edge_high","","",281,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_edge_high","","",281,[[["bool",15]]]],[11,"gpio_qspi_sd1_edge_low","","",281,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_edge_low","","",281,[[["bool",15]]]],[11,"gpio_qspi_sd1_level_high","","",281,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_level_high","","",281,[[["bool",15]]]],[11,"gpio_qspi_sd1_level_low","","",281,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_level_low","","",281,[[["bool",15]]]],[11,"gpio_qspi_sd0_edge_high","","",281,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_edge_high","","",281,[[["bool",15]]]],[11,"gpio_qspi_sd0_edge_low","","",281,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_edge_low","","",281,[[["bool",15]]]],[11,"gpio_qspi_sd0_level_high","","",281,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_level_high","","",281,[[["bool",15]]]],[11,"gpio_qspi_sd0_level_low","","",281,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_level_low","","",281,[[["bool",15]]]],[11,"gpio_qspi_ss_edge_high","","",281,[[],["bool",15]]],[11,"set_gpio_qspi_ss_edge_high","","",281,[[["bool",15]]]],[11,"gpio_qspi_ss_edge_low","","",281,[[],["bool",15]]],[11,"set_gpio_qspi_ss_edge_low","","",281,[[["bool",15]]]],[11,"gpio_qspi_ss_level_high","","",281,[[],["bool",15]]],[11,"set_gpio_qspi_ss_level_high","","",281,[[["bool",15]]]],[11,"gpio_qspi_ss_level_low","","",281,[[],["bool",15]]],[11,"set_gpio_qspi_ss_level_low","","",281,[[["bool",15]]]],[11,"gpio_qspi_sclk_edge_high","","",281,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_edge_high","","",281,[[["bool",15]]]],[11,"gpio_qspi_sclk_edge_low","","",281,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_edge_low","","",281,[[["bool",15]]]],[11,"gpio_qspi_sclk_level_high","","",281,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_level_high","","",281,[[["bool",15]]]],[11,"gpio_qspi_sclk_level_low","","",281,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_level_low","","",281,[[["bool",15]]]],[3,"DormantWakeInts","","Interrupt status after masking & forcing for dormant_wake",null,null],[12,"0","","",282,null],[11,"gpio_qspi_sd3_edge_high","","",282,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_edge_high","","",282,[[["bool",15]]]],[11,"gpio_qspi_sd3_edge_low","","",282,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_edge_low","","",282,[[["bool",15]]]],[11,"gpio_qspi_sd3_level_high","","",282,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_level_high","","",282,[[["bool",15]]]],[11,"gpio_qspi_sd3_level_low","","",282,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_level_low","","",282,[[["bool",15]]]],[11,"gpio_qspi_sd2_edge_high","","",282,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_edge_high","","",282,[[["bool",15]]]],[11,"gpio_qspi_sd2_edge_low","","",282,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_edge_low","","",282,[[["bool",15]]]],[11,"gpio_qspi_sd2_level_high","","",282,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_level_high","","",282,[[["bool",15]]]],[11,"gpio_qspi_sd2_level_low","","",282,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_level_low","","",282,[[["bool",15]]]],[11,"gpio_qspi_sd1_edge_high","","",282,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_edge_high","","",282,[[["bool",15]]]],[11,"gpio_qspi_sd1_edge_low","","",282,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_edge_low","","",282,[[["bool",15]]]],[11,"gpio_qspi_sd1_level_high","","",282,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_level_high","","",282,[[["bool",15]]]],[11,"gpio_qspi_sd1_level_low","","",282,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_level_low","","",282,[[["bool",15]]]],[11,"gpio_qspi_sd0_edge_high","","",282,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_edge_high","","",282,[[["bool",15]]]],[11,"gpio_qspi_sd0_edge_low","","",282,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_edge_low","","",282,[[["bool",15]]]],[11,"gpio_qspi_sd0_level_high","","",282,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_level_high","","",282,[[["bool",15]]]],[11,"gpio_qspi_sd0_level_low","","",282,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_level_low","","",282,[[["bool",15]]]],[11,"gpio_qspi_ss_edge_high","","",282,[[],["bool",15]]],[11,"set_gpio_qspi_ss_edge_high","","",282,[[["bool",15]]]],[11,"gpio_qspi_ss_edge_low","","",282,[[],["bool",15]]],[11,"set_gpio_qspi_ss_edge_low","","",282,[[["bool",15]]]],[11,"gpio_qspi_ss_level_high","","",282,[[],["bool",15]]],[11,"set_gpio_qspi_ss_level_high","","",282,[[["bool",15]]]],[11,"gpio_qspi_ss_level_low","","",282,[[],["bool",15]]],[11,"set_gpio_qspi_ss_level_low","","",282,[[["bool",15]]]],[11,"gpio_qspi_sclk_edge_high","","",282,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_edge_high","","",282,[[["bool",15]]]],[11,"gpio_qspi_sclk_edge_low","","",282,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_edge_low","","",282,[[["bool",15]]]],[11,"gpio_qspi_sclk_level_high","","",282,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_level_high","","",282,[[["bool",15]]]],[11,"gpio_qspi_sclk_level_low","","",282,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_level_low","","",282,[[["bool",15]]]],[3,"Proc0Intf","","Interrupt Force for proc0",null,null],[12,"0","","",283,null],[11,"gpio_qspi_sd3_edge_high","","",283,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_edge_high","","",283,[[["bool",15]]]],[11,"gpio_qspi_sd3_edge_low","","",283,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_edge_low","","",283,[[["bool",15]]]],[11,"gpio_qspi_sd3_level_high","","",283,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_level_high","","",283,[[["bool",15]]]],[11,"gpio_qspi_sd3_level_low","","",283,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_level_low","","",283,[[["bool",15]]]],[11,"gpio_qspi_sd2_edge_high","","",283,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_edge_high","","",283,[[["bool",15]]]],[11,"gpio_qspi_sd2_edge_low","","",283,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_edge_low","","",283,[[["bool",15]]]],[11,"gpio_qspi_sd2_level_high","","",283,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_level_high","","",283,[[["bool",15]]]],[11,"gpio_qspi_sd2_level_low","","",283,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_level_low","","",283,[[["bool",15]]]],[11,"gpio_qspi_sd1_edge_high","","",283,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_edge_high","","",283,[[["bool",15]]]],[11,"gpio_qspi_sd1_edge_low","","",283,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_edge_low","","",283,[[["bool",15]]]],[11,"gpio_qspi_sd1_level_high","","",283,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_level_high","","",283,[[["bool",15]]]],[11,"gpio_qspi_sd1_level_low","","",283,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_level_low","","",283,[[["bool",15]]]],[11,"gpio_qspi_sd0_edge_high","","",283,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_edge_high","","",283,[[["bool",15]]]],[11,"gpio_qspi_sd0_edge_low","","",283,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_edge_low","","",283,[[["bool",15]]]],[11,"gpio_qspi_sd0_level_high","","",283,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_level_high","","",283,[[["bool",15]]]],[11,"gpio_qspi_sd0_level_low","","",283,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_level_low","","",283,[[["bool",15]]]],[11,"gpio_qspi_ss_edge_high","","",283,[[],["bool",15]]],[11,"set_gpio_qspi_ss_edge_high","","",283,[[["bool",15]]]],[11,"gpio_qspi_ss_edge_low","","",283,[[],["bool",15]]],[11,"set_gpio_qspi_ss_edge_low","","",283,[[["bool",15]]]],[11,"gpio_qspi_ss_level_high","","",283,[[],["bool",15]]],[11,"set_gpio_qspi_ss_level_high","","",283,[[["bool",15]]]],[11,"gpio_qspi_ss_level_low","","",283,[[],["bool",15]]],[11,"set_gpio_qspi_ss_level_low","","",283,[[["bool",15]]]],[11,"gpio_qspi_sclk_edge_high","","",283,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_edge_high","","",283,[[["bool",15]]]],[11,"gpio_qspi_sclk_edge_low","","",283,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_edge_low","","",283,[[["bool",15]]]],[11,"gpio_qspi_sclk_level_high","","",283,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_level_high","","",283,[[["bool",15]]]],[11,"gpio_qspi_sclk_level_low","","",283,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_level_low","","",283,[[["bool",15]]]],[3,"GpioQspiSd2Status","","GPIO status",null,null],[12,"0","","",284,null],[11,"irqtoproc","","interrupt to processors, after override is applied",284,[[],["bool",15]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",284,[[["bool",15]]]],[11,"irqfrompad","","interrupt from pad before override is applied",284,[[],["bool",15]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",284,[[["bool",15]]]],[11,"intoperi","","input signal to peripheral, after override is applied",284,[[],["bool",15]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",284,[[["bool",15]]]],[11,"infrompad","","input signal from pad, before override is applied",284,[[],["bool",15]]],[11,"set_infrompad","","input signal from pad, before override is applied",284,[[["bool",15]]]],[11,"oetopad","","output enable to pad after register override is applied",284,[[],["bool",15]]],[11,"set_oetopad","","output enable to pad after register override is applied",284,[[["bool",15]]]],[11,"oefromperi","","output enable from selected peripheral, before register …",284,[[],["bool",15]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",284,[[["bool",15]]]],[11,"outtopad","","output signal to pad after register override is applied",284,[[],["bool",15]]],[11,"set_outtopad","","output signal to pad after register override is applied",284,[[["bool",15]]]],[11,"outfromperi","","output signal from selected peripheral, before register …",284,[[],["bool",15]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",284,[[["bool",15]]]],[3,"GpioQspiSsStatus","","GPIO status",null,null],[12,"0","","",285,null],[11,"irqtoproc","","interrupt to processors, after override is applied",285,[[],["bool",15]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",285,[[["bool",15]]]],[11,"irqfrompad","","interrupt from pad before override is applied",285,[[],["bool",15]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",285,[[["bool",15]]]],[11,"intoperi","","input signal to peripheral, after override is applied",285,[[],["bool",15]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",285,[[["bool",15]]]],[11,"infrompad","","input signal from pad, before override is applied",285,[[],["bool",15]]],[11,"set_infrompad","","input signal from pad, before override is applied",285,[[["bool",15]]]],[11,"oetopad","","output enable to pad after register override is applied",285,[[],["bool",15]]],[11,"set_oetopad","","output enable to pad after register override is applied",285,[[["bool",15]]]],[11,"oefromperi","","output enable from selected peripheral, before register …",285,[[],["bool",15]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",285,[[["bool",15]]]],[11,"outtopad","","output signal to pad after register override is applied",285,[[],["bool",15]]],[11,"set_outtopad","","output signal to pad after register override is applied",285,[[["bool",15]]]],[11,"outfromperi","","output signal from selected peripheral, before register …",285,[[],["bool",15]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",285,[[["bool",15]]]],[3,"GpioQspiSd0Ctrl","","GPIO control including function select and overrides.",null,null],[12,"0","","",286,null],[11,"irqover","","",286,[[],["gpioqspisd0ctrlirqover",3]]],[11,"set_irqover","","",286,[[["gpioqspisd0ctrlirqover",3]]]],[11,"inover","","",286,[[],["gpioqspisd0ctrlinover",3]]],[11,"set_inover","","",286,[[["gpioqspisd0ctrlinover",3]]]],[11,"oeover","","",286,[[],["gpioqspisd0ctrloeover",3]]],[11,"set_oeover","","",286,[[["gpioqspisd0ctrloeover",3]]]],[11,"outover","","",286,[[],["gpioqspisd0ctrloutover",3]]],[11,"set_outover","","",286,[[["gpioqspisd0ctrloutover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",286,[[],["gpioqspisd0ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",286,[[["gpioqspisd0ctrlfuncsel",3]]]],[3,"DormantWakeIntf","","Interrupt Force for dormant_wake",null,null],[12,"0","","",287,null],[11,"gpio_qspi_sd3_edge_high","","",287,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_edge_high","","",287,[[["bool",15]]]],[11,"gpio_qspi_sd3_edge_low","","",287,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_edge_low","","",287,[[["bool",15]]]],[11,"gpio_qspi_sd3_level_high","","",287,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_level_high","","",287,[[["bool",15]]]],[11,"gpio_qspi_sd3_level_low","","",287,[[],["bool",15]]],[11,"set_gpio_qspi_sd3_level_low","","",287,[[["bool",15]]]],[11,"gpio_qspi_sd2_edge_high","","",287,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_edge_high","","",287,[[["bool",15]]]],[11,"gpio_qspi_sd2_edge_low","","",287,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_edge_low","","",287,[[["bool",15]]]],[11,"gpio_qspi_sd2_level_high","","",287,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_level_high","","",287,[[["bool",15]]]],[11,"gpio_qspi_sd2_level_low","","",287,[[],["bool",15]]],[11,"set_gpio_qspi_sd2_level_low","","",287,[[["bool",15]]]],[11,"gpio_qspi_sd1_edge_high","","",287,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_edge_high","","",287,[[["bool",15]]]],[11,"gpio_qspi_sd1_edge_low","","",287,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_edge_low","","",287,[[["bool",15]]]],[11,"gpio_qspi_sd1_level_high","","",287,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_level_high","","",287,[[["bool",15]]]],[11,"gpio_qspi_sd1_level_low","","",287,[[],["bool",15]]],[11,"set_gpio_qspi_sd1_level_low","","",287,[[["bool",15]]]],[11,"gpio_qspi_sd0_edge_high","","",287,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_edge_high","","",287,[[["bool",15]]]],[11,"gpio_qspi_sd0_edge_low","","",287,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_edge_low","","",287,[[["bool",15]]]],[11,"gpio_qspi_sd0_level_high","","",287,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_level_high","","",287,[[["bool",15]]]],[11,"gpio_qspi_sd0_level_low","","",287,[[],["bool",15]]],[11,"set_gpio_qspi_sd0_level_low","","",287,[[["bool",15]]]],[11,"gpio_qspi_ss_edge_high","","",287,[[],["bool",15]]],[11,"set_gpio_qspi_ss_edge_high","","",287,[[["bool",15]]]],[11,"gpio_qspi_ss_edge_low","","",287,[[],["bool",15]]],[11,"set_gpio_qspi_ss_edge_low","","",287,[[["bool",15]]]],[11,"gpio_qspi_ss_level_high","","",287,[[],["bool",15]]],[11,"set_gpio_qspi_ss_level_high","","",287,[[["bool",15]]]],[11,"gpio_qspi_ss_level_low","","",287,[[],["bool",15]]],[11,"set_gpio_qspi_ss_level_low","","",287,[[["bool",15]]]],[11,"gpio_qspi_sclk_edge_high","","",287,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_edge_high","","",287,[[["bool",15]]]],[11,"gpio_qspi_sclk_edge_low","","",287,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_edge_low","","",287,[[["bool",15]]]],[11,"gpio_qspi_sclk_level_high","","",287,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_level_high","","",287,[[["bool",15]]]],[11,"gpio_qspi_sclk_level_low","","",287,[[],["bool",15]]],[11,"set_gpio_qspi_sclk_level_low","","",287,[[["bool",15]]]],[3,"GpioQspiSd2Ctrl","","GPIO control including function select and overrides.",null,null],[12,"0","","",288,null],[11,"irqover","","",288,[[],["gpioqspisd2ctrlirqover",3]]],[11,"set_irqover","","",288,[[["gpioqspisd2ctrlirqover",3]]]],[11,"inover","","",288,[[],["gpioqspisd2ctrlinover",3]]],[11,"set_inover","","",288,[[["gpioqspisd2ctrlinover",3]]]],[11,"oeover","","",288,[[],["gpioqspisd2ctrloeover",3]]],[11,"set_oeover","","",288,[[["gpioqspisd2ctrloeover",3]]]],[11,"outover","","",288,[[],["gpioqspisd2ctrloutover",3]]],[11,"set_outover","","",288,[[["gpioqspisd2ctrloutover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",288,[[],["gpioqspisd2ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",288,[[["gpioqspisd2ctrlfuncsel",3]]]],[0,"vals","rp2040_pac2::io_qspi","",null,null],[3,"GpioQspiSsCtrlOutover","rp2040_pac2::io_qspi::vals","GPIO control including function select and overrides.",null,null],[12,"0","","",289,null],[18,"NORMAL","","drive output from peripheral signal selected by funcsel",289,null],[18,"INVERT","","drive output from inverse of peripheral signal selected …",289,null],[18,"LOW","","drive output low",289,null],[18,"HIGH","","drive output high",289,null],[3,"GpioQspiSd3CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",290,null],[18,"XIP_SD3","","",290,null],[18,"SIO_35","","",290,null],[18,"NULL","","",290,null],[3,"GpioQspiSd2CtrlIrqover","","GPIO control including function select and overrides.",null,null],[12,"0","","",291,null],[18,"NORMAL","","don’t invert the interrupt",291,null],[18,"INVERT","","invert the interrupt",291,null],[18,"LOW","","drive interrupt low",291,null],[18,"HIGH","","drive interrupt high",291,null],[3,"GpioQspiSd1CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",292,null],[18,"XIP_SD1","","",292,null],[18,"SIO_33","","",292,null],[18,"NULL","","",292,null],[3,"GpioQspiSd2CtrlOeover","","GPIO control including function select and overrides.",null,null],[12,"0","","",293,null],[18,"NORMAL","","drive output enable from peripheral signal selected by …",293,null],[18,"INVERT","","drive output enable from inverse of peripheral signal …",293,null],[18,"DISABLE","","disable output",293,null],[18,"ENABLE","","enable output",293,null],[3,"GpioQspiSd3CtrlIrqover","","GPIO control including function select and overrides.",null,null],[12,"0","","",294,null],[18,"NORMAL","","don’t invert the interrupt",294,null],[18,"INVERT","","invert the interrupt",294,null],[18,"LOW","","drive interrupt low",294,null],[18,"HIGH","","drive interrupt high",294,null],[3,"GpioQspiSclkCtrlOutover","","GPIO control including function select and overrides.",null,null],[12,"0","","",295,null],[18,"NORMAL","","drive output from peripheral signal selected by funcsel",295,null],[18,"INVERT","","drive output from inverse of peripheral signal selected …",295,null],[18,"LOW","","drive output low",295,null],[18,"HIGH","","drive output high",295,null],[3,"GpioQspiSd0CtrlOeover","","GPIO control including function select and overrides.",null,null],[12,"0","","",296,null],[18,"NORMAL","","drive output enable from peripheral signal selected by …",296,null],[18,"INVERT","","drive output enable from inverse of peripheral signal …",296,null],[18,"DISABLE","","disable output",296,null],[18,"ENABLE","","enable output",296,null],[3,"GpioQspiSsCtrlOeover","","GPIO control including function select and overrides.",null,null],[12,"0","","",297,null],[18,"NORMAL","","drive output enable from peripheral signal selected by …",297,null],[18,"INVERT","","drive output enable from inverse of peripheral signal …",297,null],[18,"DISABLE","","disable output",297,null],[18,"ENABLE","","enable output",297,null],[3,"GpioQspiSsCtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",298,null],[18,"XIP_SS_N","","",298,null],[18,"SIO_31","","",298,null],[18,"NULL","","",298,null],[3,"GpioQspiSd2CtrlOutover","","GPIO control including function select and overrides.",null,null],[12,"0","","",299,null],[18,"NORMAL","","drive output from peripheral signal selected by funcsel",299,null],[18,"INVERT","","drive output from inverse of peripheral signal selected …",299,null],[18,"LOW","","drive output low",299,null],[18,"HIGH","","drive output high",299,null],[3,"GpioQspiSsCtrlInover","","GPIO control including function select and overrides.",null,null],[12,"0","","",300,null],[18,"NORMAL","","don’t invert the peri input",300,null],[18,"INVERT","","invert the peri input",300,null],[18,"LOW","","drive peri input low",300,null],[18,"HIGH","","drive peri input high",300,null],[3,"GpioQspiSd1CtrlOutover","","GPIO control including function select and overrides.",null,null],[12,"0","","",301,null],[18,"NORMAL","","drive output from peripheral signal selected by funcsel",301,null],[18,"INVERT","","drive output from inverse of peripheral signal selected …",301,null],[18,"LOW","","drive output low",301,null],[18,"HIGH","","drive output high",301,null],[3,"GpioQspiSd3CtrlOutover","","GPIO control including function select and overrides.",null,null],[12,"0","","",302,null],[18,"NORMAL","","drive output from peripheral signal selected by funcsel",302,null],[18,"INVERT","","drive output from inverse of peripheral signal selected …",302,null],[18,"LOW","","drive output low",302,null],[18,"HIGH","","drive output high",302,null],[3,"GpioQspiSclkCtrlIrqover","","GPIO control including function select and overrides.",null,null],[12,"0","","",303,null],[18,"NORMAL","","don’t invert the interrupt",303,null],[18,"INVERT","","invert the interrupt",303,null],[18,"LOW","","drive interrupt low",303,null],[18,"HIGH","","drive interrupt high",303,null],[3,"GpioQspiSsCtrlIrqover","","GPIO control including function select and overrides.",null,null],[12,"0","","",304,null],[18,"NORMAL","","don’t invert the interrupt",304,null],[18,"INVERT","","invert the interrupt",304,null],[18,"LOW","","drive interrupt low",304,null],[18,"HIGH","","drive interrupt high",304,null],[3,"GpioQspiSclkCtrlInover","","GPIO control including function select and overrides.",null,null],[12,"0","","",305,null],[18,"NORMAL","","don’t invert the peri input",305,null],[18,"INVERT","","invert the peri input",305,null],[18,"LOW","","drive peri input low",305,null],[18,"HIGH","","drive peri input high",305,null],[3,"GpioQspiSclkCtrlOeover","","GPIO control including function select and overrides.",null,null],[12,"0","","",306,null],[18,"NORMAL","","drive output enable from peripheral signal selected by …",306,null],[18,"INVERT","","drive output enable from inverse of peripheral signal …",306,null],[18,"DISABLE","","disable output",306,null],[18,"ENABLE","","enable output",306,null],[3,"GpioQspiSd2CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",307,null],[18,"XIP_SD2","","",307,null],[18,"SIO_34","","",307,null],[18,"NULL","","",307,null],[3,"GpioQspiSd0CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",308,null],[18,"XIP_SD0","","",308,null],[18,"SIO_32","","",308,null],[18,"NULL","","",308,null],[3,"GpioQspiSd0CtrlOutover","","GPIO control including function select and overrides.",null,null],[12,"0","","",309,null],[18,"NORMAL","","drive output from peripheral signal selected by funcsel",309,null],[18,"INVERT","","drive output from inverse of peripheral signal selected …",309,null],[18,"LOW","","drive output low",309,null],[18,"HIGH","","drive output high",309,null],[3,"GpioQspiSclkCtrlFuncsel","","GPIO control including function select and overrides.",null,null],[12,"0","","",310,null],[18,"XIP_SCLK","","",310,null],[18,"SIO_30","","",310,null],[18,"NULL","","",310,null],[3,"GpioQspiSd2CtrlInover","","GPIO control including function select and overrides.",null,null],[12,"0","","",311,null],[18,"NORMAL","","don’t invert the peri input",311,null],[18,"INVERT","","invert the peri input",311,null],[18,"LOW","","drive peri input low",311,null],[18,"HIGH","","drive peri input high",311,null],[3,"GpioQspiSd1CtrlIrqover","","GPIO control including function select and overrides.",null,null],[12,"0","","",312,null],[18,"NORMAL","","don’t invert the interrupt",312,null],[18,"INVERT","","invert the interrupt",312,null],[18,"LOW","","drive interrupt low",312,null],[18,"HIGH","","drive interrupt high",312,null],[3,"GpioQspiSd0CtrlIrqover","","GPIO control including function select and overrides.",null,null],[12,"0","","",313,null],[18,"NORMAL","","don’t invert the interrupt",313,null],[18,"INVERT","","invert the interrupt",313,null],[18,"LOW","","drive interrupt low",313,null],[18,"HIGH","","drive interrupt high",313,null],[3,"GpioQspiSd3CtrlOeover","","GPIO control including function select and overrides.",null,null],[12,"0","","",314,null],[18,"NORMAL","","drive output enable from peripheral signal selected by …",314,null],[18,"INVERT","","drive output enable from inverse of peripheral signal …",314,null],[18,"DISABLE","","disable output",314,null],[18,"ENABLE","","enable output",314,null],[3,"GpioQspiSd1CtrlInover","","GPIO control including function select and overrides.",null,null],[12,"0","","",315,null],[18,"NORMAL","","don’t invert the peri input",315,null],[18,"INVERT","","invert the peri input",315,null],[18,"LOW","","drive peri input low",315,null],[18,"HIGH","","drive peri input high",315,null],[3,"GpioQspiSd1CtrlOeover","","GPIO control including function select and overrides.",null,null],[12,"0","","",316,null],[18,"NORMAL","","drive output enable from peripheral signal selected by …",316,null],[18,"INVERT","","drive output enable from inverse of peripheral signal …",316,null],[18,"DISABLE","","disable output",316,null],[18,"ENABLE","","enable output",316,null],[3,"GpioQspiSd3CtrlInover","","GPIO control including function select and overrides.",null,null],[12,"0","","",317,null],[18,"NORMAL","","don’t invert the peri input",317,null],[18,"INVERT","","invert the peri input",317,null],[18,"LOW","","drive peri input low",317,null],[18,"HIGH","","drive peri input high",317,null],[3,"GpioQspiSd0CtrlInover","","GPIO control including function select and overrides.",null,null],[12,"0","","",318,null],[18,"NORMAL","","don’t invert the peri input",318,null],[18,"INVERT","","invert the peri input",318,null],[18,"LOW","","drive peri input low",318,null],[18,"HIGH","","drive peri input high",318,null],[0,"pads","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::pads","",null,null],[3,"VoltageSelect","rp2040_pac2::pads::regs","Voltage select. Per bank control",null,null],[12,"0","","",319,null],[11,"voltage_select","","",319,[[],["voltageselect",3]]],[11,"set_voltage_select","","",319,[[["voltageselect",3]]]],[3,"GpioCtrl","","Pad control register",null,null],[12,"0","","",320,null],[11,"od","","Output disable. Has priority over output enable from …",320,[[],["bool",15]]],[11,"set_od","","Output disable. Has priority over output enable from …",320,[[["bool",15]]]],[11,"ie","","Input enable",320,[[],["bool",15]]],[11,"set_ie","","Input enable",320,[[["bool",15]]]],[11,"drive","","Drive strength.",320,[[],["drive",3]]],[11,"set_drive","","Drive strength.",320,[[["drive",3]]]],[11,"pue","","Pull up enable",320,[[],["bool",15]]],[11,"set_pue","","Pull up enable",320,[[["bool",15]]]],[11,"pde","","Pull down enable",320,[[],["bool",15]]],[11,"set_pde","","Pull down enable",320,[[["bool",15]]]],[11,"schmitt","","Enable schmitt trigger",320,[[],["bool",15]]],[11,"set_schmitt","","Enable schmitt trigger",320,[[["bool",15]]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",320,[[],["bool",15]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",320,[[["bool",15]]]],[0,"vals","rp2040_pac2::pads","",null,null],[3,"Drive","rp2040_pac2::pads::vals","Pad control register",null,null],[12,"0","","",321,null],[18,"_2MA","","",321,null],[18,"_4MA","","",321,null],[18,"_8MA","","",321,null],[18,"_12MA","","",321,null],[3,"VoltageSelect","","Voltage select. Per bank control",null,null],[12,"0","","",322,null],[18,"_3V3","","Set voltage to 3.3V (DVDD >= 2V5)",322,null],[18,"_1V8","","Set voltage to 1.8V (DVDD <= 1V8)",322,null],[3,"Pads","rp2040_pac2::pads","",null,null],[12,"0","","",323,null],[11,"voltage_select","","Voltage select. Per bank control",323,[[],[["reg",3],["voltageselect",3],["rw",3]]]],[11,"gpio","","Pad control register",323,[[["usize",15]],[["rw",3],["reg",3],["gpioctrl",3]]]],[0,"pads_qspi","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::pads_qspi","",null,null],[3,"GpioQspiSd1","rp2040_pac2::pads_qspi::regs","Pad control register",null,null],[12,"0","","",324,null],[11,"od","","Output disable. Has priority over output enable from …",324,[[],["bool",15]]],[11,"set_od","","Output disable. Has priority over output enable from …",324,[[["bool",15]]]],[11,"ie","","Input enable",324,[[],["bool",15]]],[11,"set_ie","","Input enable",324,[[["bool",15]]]],[11,"drive","","Drive strength.",324,[[],["gpioqspisd1drive",3]]],[11,"set_drive","","Drive strength.",324,[[["gpioqspisd1drive",3]]]],[11,"pue","","Pull up enable",324,[[],["bool",15]]],[11,"set_pue","","Pull up enable",324,[[["bool",15]]]],[11,"pde","","Pull down enable",324,[[],["bool",15]]],[11,"set_pde","","Pull down enable",324,[[["bool",15]]]],[11,"schmitt","","Enable schmitt trigger",324,[[],["bool",15]]],[11,"set_schmitt","","Enable schmitt trigger",324,[[["bool",15]]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",324,[[],["bool",15]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",324,[[["bool",15]]]],[3,"GpioQspiSd3","","Pad control register",null,null],[12,"0","","",325,null],[11,"od","","Output disable. Has priority over output enable from …",325,[[],["bool",15]]],[11,"set_od","","Output disable. Has priority over output enable from …",325,[[["bool",15]]]],[11,"ie","","Input enable",325,[[],["bool",15]]],[11,"set_ie","","Input enable",325,[[["bool",15]]]],[11,"drive","","Drive strength.",325,[[],["gpioqspisd3drive",3]]],[11,"set_drive","","Drive strength.",325,[[["gpioqspisd3drive",3]]]],[11,"pue","","Pull up enable",325,[[],["bool",15]]],[11,"set_pue","","Pull up enable",325,[[["bool",15]]]],[11,"pde","","Pull down enable",325,[[],["bool",15]]],[11,"set_pde","","Pull down enable",325,[[["bool",15]]]],[11,"schmitt","","Enable schmitt trigger",325,[[],["bool",15]]],[11,"set_schmitt","","Enable schmitt trigger",325,[[["bool",15]]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",325,[[],["bool",15]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",325,[[["bool",15]]]],[3,"GpioQspiSclk","","Pad control register",null,null],[12,"0","","",326,null],[11,"od","","Output disable. Has priority over output enable from …",326,[[],["bool",15]]],[11,"set_od","","Output disable. Has priority over output enable from …",326,[[["bool",15]]]],[11,"ie","","Input enable",326,[[],["bool",15]]],[11,"set_ie","","Input enable",326,[[["bool",15]]]],[11,"drive","","Drive strength.",326,[[],["gpioqspisclkdrive",3]]],[11,"set_drive","","Drive strength.",326,[[["gpioqspisclkdrive",3]]]],[11,"pue","","Pull up enable",326,[[],["bool",15]]],[11,"set_pue","","Pull up enable",326,[[["bool",15]]]],[11,"pde","","Pull down enable",326,[[],["bool",15]]],[11,"set_pde","","Pull down enable",326,[[["bool",15]]]],[11,"schmitt","","Enable schmitt trigger",326,[[],["bool",15]]],[11,"set_schmitt","","Enable schmitt trigger",326,[[["bool",15]]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",326,[[],["bool",15]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",326,[[["bool",15]]]],[3,"GpioQspiSd0","","Pad control register",null,null],[12,"0","","",327,null],[11,"od","","Output disable. Has priority over output enable from …",327,[[],["bool",15]]],[11,"set_od","","Output disable. Has priority over output enable from …",327,[[["bool",15]]]],[11,"ie","","Input enable",327,[[],["bool",15]]],[11,"set_ie","","Input enable",327,[[["bool",15]]]],[11,"drive","","Drive strength.",327,[[],["gpioqspisd0drive",3]]],[11,"set_drive","","Drive strength.",327,[[["gpioqspisd0drive",3]]]],[11,"pue","","Pull up enable",327,[[],["bool",15]]],[11,"set_pue","","Pull up enable",327,[[["bool",15]]]],[11,"pde","","Pull down enable",327,[[],["bool",15]]],[11,"set_pde","","Pull down enable",327,[[["bool",15]]]],[11,"schmitt","","Enable schmitt trigger",327,[[],["bool",15]]],[11,"set_schmitt","","Enable schmitt trigger",327,[[["bool",15]]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",327,[[],["bool",15]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",327,[[["bool",15]]]],[3,"GpioQspiSd2","","Pad control register",null,null],[12,"0","","",328,null],[11,"od","","Output disable. Has priority over output enable from …",328,[[],["bool",15]]],[11,"set_od","","Output disable. Has priority over output enable from …",328,[[["bool",15]]]],[11,"ie","","Input enable",328,[[],["bool",15]]],[11,"set_ie","","Input enable",328,[[["bool",15]]]],[11,"drive","","Drive strength.",328,[[],["gpioqspisd2drive",3]]],[11,"set_drive","","Drive strength.",328,[[["gpioqspisd2drive",3]]]],[11,"pue","","Pull up enable",328,[[],["bool",15]]],[11,"set_pue","","Pull up enable",328,[[["bool",15]]]],[11,"pde","","Pull down enable",328,[[],["bool",15]]],[11,"set_pde","","Pull down enable",328,[[["bool",15]]]],[11,"schmitt","","Enable schmitt trigger",328,[[],["bool",15]]],[11,"set_schmitt","","Enable schmitt trigger",328,[[["bool",15]]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",328,[[],["bool",15]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",328,[[["bool",15]]]],[3,"GpioQspiSs","","Pad control register",null,null],[12,"0","","",329,null],[11,"od","","Output disable. Has priority over output enable from …",329,[[],["bool",15]]],[11,"set_od","","Output disable. Has priority over output enable from …",329,[[["bool",15]]]],[11,"ie","","Input enable",329,[[],["bool",15]]],[11,"set_ie","","Input enable",329,[[["bool",15]]]],[11,"drive","","Drive strength.",329,[[],["gpioqspissdrive",3]]],[11,"set_drive","","Drive strength.",329,[[["gpioqspissdrive",3]]]],[11,"pue","","Pull up enable",329,[[],["bool",15]]],[11,"set_pue","","Pull up enable",329,[[["bool",15]]]],[11,"pde","","Pull down enable",329,[[],["bool",15]]],[11,"set_pde","","Pull down enable",329,[[["bool",15]]]],[11,"schmitt","","Enable schmitt trigger",329,[[],["bool",15]]],[11,"set_schmitt","","Enable schmitt trigger",329,[[["bool",15]]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",329,[[],["bool",15]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",329,[[["bool",15]]]],[3,"VoltageSelect","","Voltage select. Per bank control",null,null],[12,"0","","",330,null],[11,"voltage_select","","",330,[[],["voltageselect",3]]],[11,"set_voltage_select","","",330,[[["voltageselect",3]]]],[0,"vals","rp2040_pac2::pads_qspi","",null,null],[3,"VoltageSelect","rp2040_pac2::pads_qspi::vals","Voltage select. Per bank control",null,null],[12,"0","","",331,null],[18,"_3V3","","Set voltage to 3.3V (DVDD >= 2V5)",331,null],[18,"_1V8","","Set voltage to 1.8V (DVDD <= 1V8)",331,null],[3,"GpioQspiSd2Drive","","Pad control register",null,null],[12,"0","","",332,null],[18,"_2MA","","",332,null],[18,"_4MA","","",332,null],[18,"_8MA","","",332,null],[18,"_12MA","","",332,null],[3,"GpioQspiSd0Drive","","Pad control register",null,null],[12,"0","","",333,null],[18,"_2MA","","",333,null],[18,"_4MA","","",333,null],[18,"_8MA","","",333,null],[18,"_12MA","","",333,null],[3,"GpioQspiSsDrive","","Pad control register",null,null],[12,"0","","",334,null],[18,"_2MA","","",334,null],[18,"_4MA","","",334,null],[18,"_8MA","","",334,null],[18,"_12MA","","",334,null],[3,"GpioQspiSclkDrive","","Pad control register",null,null],[12,"0","","",335,null],[18,"_2MA","","",335,null],[18,"_4MA","","",335,null],[18,"_8MA","","",335,null],[18,"_12MA","","",335,null],[3,"GpioQspiSd1Drive","","Pad control register",null,null],[12,"0","","",336,null],[18,"_2MA","","",336,null],[18,"_4MA","","",336,null],[18,"_8MA","","",336,null],[18,"_12MA","","",336,null],[3,"GpioQspiSd3Drive","","Pad control register",null,null],[12,"0","","",337,null],[18,"_2MA","","",337,null],[18,"_4MA","","",337,null],[18,"_8MA","","",337,null],[18,"_12MA","","",337,null],[0,"pio","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::pio","",null,null],[3,"SmExecctrl","rp2040_pac2::pio::regs","Execution/behavioural settings for state machine 2",null,null],[12,"0","","",338,null],[11,"exec_stalled","","An instruction written to SMx_INSTR is stalled, and …",338,[[],["bool",15]]],[11,"set_exec_stalled","","An instruction written to SMx_INSTR is stalled, and …",338,[[["bool",15]]]],[11,"side_en","","If 1, the delay MSB is used as side-set enable, rather …",338,[[],["bool",15]]],[11,"set_side_en","","If 1, the delay MSB is used as side-set enable, rather …",338,[[["bool",15]]]],[11,"side_pindir","","Side-set data is asserted to pin OEs instead of pin values",338,[[],["bool",15]]],[11,"set_side_pindir","","Side-set data is asserted to pin OEs instead of pin values",338,[[["bool",15]]]],[11,"jmp_pin","","The GPIO number to use as condition for JMP PIN. …",338,[[],["u8",15]]],[11,"set_jmp_pin","","The GPIO number to use as condition for JMP PIN. …",338,[[["u8",15]]]],[11,"out_en_sel","","Which data bit to use for inline OUT enable",338,[[],["u8",15]]],[11,"set_out_en_sel","","Which data bit to use for inline OUT enable",338,[[["u8",15]]]],[11,"inline_out_en","","If 1, use a bit of OUT data as an auxiliary write enable …",338,[[],["bool",15]]],[11,"set_inline_out_en","","If 1, use a bit of OUT data as an auxiliary write enable …",338,[[["bool",15]]]],[11,"out_sticky","","Continuously assert the most recent OUT/SET to the pins",338,[[],["bool",15]]],[11,"set_out_sticky","","Continuously assert the most recent OUT/SET to the pins",338,[[["bool",15]]]],[11,"wrap_top","","After reaching this address, execution is wrapped to …",338,[[],["u8",15]]],[11,"set_wrap_top","","After reaching this address, execution is wrapped to …",338,[[["u8",15]]]],[11,"wrap_bottom","","After reaching wrap_top, execution is wrapped to this …",338,[[],["u8",15]]],[11,"set_wrap_bottom","","After reaching wrap_top, execution is wrapped to this …",338,[[["u8",15]]]],[11,"status_sel","","Comparison used for the MOV x, STATUS instruction.",338,[[],["smexecctrlstatussel",3]]],[11,"set_status_sel","","Comparison used for the MOV x, STATUS instruction.",338,[[["smexecctrlstatussel",3]]]],[11,"status_n","","Comparison level for the MOV x, STATUS instruction",338,[[],["u8",15]]],[11,"set_status_n","","Comparison level for the MOV x, STATUS instruction",338,[[["u8",15]]]],[3,"Fdebug","","FIFO debug register",null,null],[12,"0","","",339,null],[11,"txstall","","State machine has stalled on empty TX FIFO. Write 1 to …",339,[[],["u8",15]]],[11,"set_txstall","","State machine has stalled on empty TX FIFO. Write 1 to …",339,[[["u8",15]]]],[11,"txover","","TX FIFO overflow has occurred. Write 1 to clear.",339,[[],["u8",15]]],[11,"set_txover","","TX FIFO overflow has occurred. Write 1 to clear.",339,[[["u8",15]]]],[11,"rxunder","","RX FIFO underflow has occurred. Write 1 to clear.",339,[[],["u8",15]]],[11,"set_rxunder","","RX FIFO underflow has occurred. Write 1 to clear.",339,[[["u8",15]]]],[11,"rxstall","","State machine has stalled on full RX FIFO. Write 1 to …",339,[[],["u8",15]]],[11,"set_rxstall","","State machine has stalled on full RX FIFO. Write 1 to …",339,[[["u8",15]]]],[3,"IrqForce","","Writing a 1 to each of these bits will forcibly assert …",null,null],[12,"0","","",340,null],[11,"irq_force","","",340,[[],["u8",15]]],[11,"set_irq_force","","",340,[[["u8",15]]]],[3,"Irq","","Interrupt request register. Write 1 to clear",null,null],[12,"0","","",341,null],[11,"irq","","",341,[[],["u8",15]]],[11,"set_irq","","",341,[[["u8",15]]]],[3,"Intr","","Interrupt Force for irq1",null,null],[12,"0","","",342,null],[11,"sm3","","",342,[[],["bool",15]]],[11,"set_sm3","","",342,[[["bool",15]]]],[11,"sm2","","",342,[[],["bool",15]]],[11,"set_sm2","","",342,[[["bool",15]]]],[11,"sm1","","",342,[[],["bool",15]]],[11,"set_sm1","","",342,[[["bool",15]]]],[11,"sm0","","",342,[[],["bool",15]]],[11,"set_sm0","","",342,[[["bool",15]]]],[11,"sm3_txnfull","","",342,[[],["bool",15]]],[11,"set_sm3_txnfull","","",342,[[["bool",15]]]],[11,"sm2_txnfull","","",342,[[],["bool",15]]],[11,"set_sm2_txnfull","","",342,[[["bool",15]]]],[11,"sm1_txnfull","","",342,[[],["bool",15]]],[11,"set_sm1_txnfull","","",342,[[["bool",15]]]],[11,"sm0_txnfull","","",342,[[],["bool",15]]],[11,"set_sm0_txnfull","","",342,[[["bool",15]]]],[11,"sm3_rxnempty","","",342,[[],["bool",15]]],[11,"set_sm3_rxnempty","","",342,[[["bool",15]]]],[11,"sm2_rxnempty","","",342,[[],["bool",15]]],[11,"set_sm2_rxnempty","","",342,[[["bool",15]]]],[11,"sm1_rxnempty","","",342,[[],["bool",15]]],[11,"set_sm1_rxnempty","","",342,[[["bool",15]]]],[11,"sm0_rxnempty","","",342,[[],["bool",15]]],[11,"set_sm0_rxnempty","","",342,[[["bool",15]]]],[3,"Flevel","","FIFO levels",null,null],[12,"0","","",343,null],[11,"rx3","","",343,[[],["u8",15]]],[11,"set_rx3","","",343,[[["u8",15]]]],[11,"tx3","","",343,[[],["u8",15]]],[11,"set_tx3","","",343,[[["u8",15]]]],[11,"rx2","","",343,[[],["u8",15]]],[11,"set_rx2","","",343,[[["u8",15]]]],[11,"tx2","","",343,[[],["u8",15]]],[11,"set_tx2","","",343,[[["u8",15]]]],[11,"rx1","","",343,[[],["u8",15]]],[11,"set_rx1","","",343,[[["u8",15]]]],[11,"tx1","","",343,[[],["u8",15]]],[11,"set_tx1","","",343,[[["u8",15]]]],[11,"rx0","","",343,[[],["u8",15]]],[11,"set_rx0","","",343,[[["u8",15]]]],[11,"tx0","","",343,[[],["u8",15]]],[11,"set_tx0","","",343,[[["u8",15]]]],[3,"SmClkdiv","","Clock divider register for state machine 1 Frequency = …",null,null],[12,"0","","",344,null],[11,"int","","Effective frequency is sysclk/int. Value of 0 is …",344,[[],["u16",15]]],[11,"set_int","","Effective frequency is sysclk/int. Value of 0 is …",344,[[["u16",15]]]],[11,"frac","","Fractional part of clock divider",344,[[],["u8",15]]],[11,"set_frac","","Fractional part of clock divider",344,[[["u8",15]]]],[3,"DbgCfginfo","","The PIO hardware has some free parameters that may vary …",null,null],[12,"0","","",345,null],[11,"imem_size","","The size of the instruction memory, measured in units of …",345,[[],["u8",15]]],[11,"set_imem_size","","The size of the instruction memory, measured in units of …",345,[[["u8",15]]]],[11,"sm_count","","The number of state machines this PIO instance is …",345,[[],["u8",15]]],[11,"set_sm_count","","The number of state machines this PIO instance is …",345,[[["u8",15]]]],[11,"fifo_depth","","The depth of the state machine TX/RX FIFOs, measured in …",345,[[],["u8",15]]],[11,"set_fifo_depth","","The depth of the state machine TX/RX FIFOs, measured in …",345,[[["u8",15]]]],[3,"SmAddr","","Current instruction address of state machine 0",null,null],[12,"0","","",346,null],[11,"addr","","",346,[[],["u8",15]]],[11,"set_addr","","",346,[[["u8",15]]]],[3,"SmShiftctrl","","Control behaviour of the input/output shift registers for …",null,null],[12,"0","","",347,null],[11,"fjoin_rx","","When 1, RX FIFO steals the TX FIFO’s storage, and …",347,[[],["bool",15]]],[11,"set_fjoin_rx","","When 1, RX FIFO steals the TX FIFO’s storage, and …",347,[[["bool",15]]]],[11,"fjoin_tx","","When 1, TX FIFO steals the RX FIFO’s storage, and …",347,[[],["bool",15]]],[11,"set_fjoin_tx","","When 1, TX FIFO steals the RX FIFO’s storage, and …",347,[[["bool",15]]]],[11,"pull_thresh","","Number of bits shifted out of TXSR before autopull or …",347,[[],["u8",15]]],[11,"set_pull_thresh","","Number of bits shifted out of TXSR before autopull or …",347,[[["u8",15]]]],[11,"push_thresh","","Number of bits shifted into RXSR before autopush or …",347,[[],["u8",15]]],[11,"set_push_thresh","","Number of bits shifted into RXSR before autopush or …",347,[[["u8",15]]]],[11,"out_shiftdir","","1 = shift out of output shift register to right. 0 = to …",347,[[],["bool",15]]],[11,"set_out_shiftdir","","1 = shift out of output shift register to right. 0 = to …",347,[[["bool",15]]]],[11,"in_shiftdir","","1 = shift input shift register to right (data enters from …",347,[[],["bool",15]]],[11,"set_in_shiftdir","","1 = shift input shift register to right (data enters from …",347,[[["bool",15]]]],[11,"autopull","","Pull automatically when the output shift register is …",347,[[],["bool",15]]],[11,"set_autopull","","Pull automatically when the output shift register is …",347,[[["bool",15]]]],[11,"autopush","","Push automatically when the input shift register is filled",347,[[],["bool",15]]],[11,"set_autopush","","Push automatically when the input shift register is filled",347,[[["bool",15]]]],[3,"Ctrl","","PIO control register",null,null],[12,"0","","",348,null],[11,"clkdiv_restart","","Force clock dividers to restart their count and clear …",348,[[],["u8",15]]],[11,"set_clkdiv_restart","","Force clock dividers to restart their count and clear …",348,[[["u8",15]]]],[11,"sm_restart","","Clear internal SM state which is otherwise difficult to …",348,[[],["u8",15]]],[11,"set_sm_restart","","Clear internal SM state which is otherwise difficult to …",348,[[["u8",15]]]],[11,"sm_enable","","Enable state machine",348,[[],["u8",15]]],[11,"set_sm_enable","","Enable state machine",348,[[["u8",15]]]],[3,"SmPinctrl","","State machine pin control",null,null],[12,"0","","",349,null],[11,"sideset_count","","The number of delay bits co-opted for side-set. Inclusive …",349,[[],["u8",15]]],[11,"set_sideset_count","","The number of delay bits co-opted for side-set. Inclusive …",349,[[["u8",15]]]],[11,"set_count","","The number of pins asserted by a SET. Max of 5",349,[[],["u8",15]]],[11,"set_set_count","","The number of pins asserted by a SET. Max of 5",349,[[["u8",15]]]],[11,"out_count","","The number of pins asserted by an OUT. Value of 0 -> 32 …",349,[[],["u8",15]]],[11,"set_out_count","","The number of pins asserted by an OUT. Value of 0 -> 32 …",349,[[["u8",15]]]],[11,"in_base","","The virtual pin corresponding to IN bit 0",349,[[],["u8",15]]],[11,"set_in_base","","The virtual pin corresponding to IN bit 0",349,[[["u8",15]]]],[11,"sideset_base","","The virtual pin corresponding to delay field bit 0",349,[[],["u8",15]]],[11,"set_sideset_base","","The virtual pin corresponding to delay field bit 0",349,[[["u8",15]]]],[11,"set_base","","The virtual pin corresponding to SET bit 0",349,[[],["u8",15]]],[11,"set_set_base","","The virtual pin corresponding to SET bit 0",349,[[["u8",15]]]],[11,"out_base","","The virtual pin corresponding to OUT bit 0",349,[[],["u8",15]]],[11,"set_out_base","","The virtual pin corresponding to OUT bit 0",349,[[["u8",15]]]],[3,"InstrMem","","Write-only access to instruction memory location 22",null,null],[12,"0","","",350,null],[11,"instr_mem","","",350,[[],["u16",15]]],[11,"set_instr_mem","","",350,[[["u16",15]]]],[3,"Fstat","","FIFO status register",null,null],[12,"0","","",351,null],[11,"txempty","","State machine TX FIFO is empty",351,[[],["u8",15]]],[11,"set_txempty","","State machine TX FIFO is empty",351,[[["u8",15]]]],[11,"txfull","","State machine TX FIFO is full",351,[[],["u8",15]]],[11,"set_txfull","","State machine TX FIFO is full",351,[[["u8",15]]]],[11,"rxempty","","State machine RX FIFO is empty",351,[[],["u8",15]]],[11,"set_rxempty","","State machine RX FIFO is empty",351,[[["u8",15]]]],[11,"rxfull","","State machine RX FIFO is full",351,[[],["u8",15]]],[11,"set_rxfull","","State machine RX FIFO is full",351,[[["u8",15]]]],[3,"SmInstr","","Instruction currently being executed by state machine 3 …",null,null],[12,"0","","",352,null],[11,"instr","","",352,[[],["u16",15]]],[11,"set_instr","","",352,[[["u16",15]]]],[0,"vals","rp2040_pac2::pio","",null,null],[3,"SmExecctrlStatusSel","rp2040_pac2::pio::vals","Execution/behavioural settings for state machine 1",null,null],[12,"0","","",353,null],[18,"TXLEVEL","","All-ones if TX FIFO level < N, otherwise all-zeroes",353,null],[18,"RXLEVEL","","All-ones if RX FIFO level < N, otherwise all-zeroes",353,null],[3,"Irq","rp2040_pac2::pio","",null,null],[12,"0","","",354,null],[11,"inte","","Interrupt Enable for irq1",354,[[],[["reg",3],["rw",3],["intr",3]]]],[11,"intf","","Interrupt Force for irq1",354,[[],[["reg",3],["rw",3],["intr",3]]]],[11,"ints","","Interrupt status after masking & forcing for irq1",354,[[],[["reg",3],["rw",3],["intr",3]]]],[3,"StateMachine","","",null,null],[12,"0","","",355,null],[11,"clkdiv","","Clock divider register for state machine 1 Frequency = …",355,[[],[["reg",3],["smclkdiv",3],["rw",3]]]],[11,"execctrl","","Execution/behavioural settings for state machine 1",355,[[],[["smexecctrl",3],["rw",3],["reg",3]]]],[11,"shiftctrl","","Control behaviour of the input/output shift registers for …",355,[[],[["smshiftctrl",3],["reg",3],["rw",3]]]],[11,"addr","","Current instruction address of state machine 1",355,[[],[["rw",3],["smaddr",3],["reg",3]]]],[11,"instr","","Instruction currently being executed by state machine 1 …",355,[[],[["sminstr",3],["reg",3],["rw",3]]]],[11,"pinctrl","","State machine pin control",355,[[],[["reg",3],["rw",3],["smpinctrl",3]]]],[3,"Pio","","Programmable IO block",null,null],[12,"0","","",356,null],[11,"ctrl","","PIO control register",356,[[],[["ctrl",3],["reg",3],["rw",3]]]],[11,"fstat","","FIFO status register",356,[[],[["rw",3],["reg",3],["fstat",3]]]],[11,"fdebug","","FIFO debug register",356,[[],[["rw",3],["reg",3],["fdebug",3]]]],[11,"flevel","","FIFO levels",356,[[],[["rw",3],["flevel",3],["reg",3]]]],[11,"irq","","Interrupt request register. Write 1 to clear",356,[[],[["irq",3],["reg",3],["rw",3]]]],[11,"irq_force","","Writing a 1 to each of these bits will forcibly assert …",356,[[],[["reg",3],["irqforce",3],["rw",3]]]],[11,"input_sync_bypass","","There is a 2-flipflop synchronizer on each GPIO input, …",356,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"dbg_padout","","Read to sample the pad output values PIO is currently …",356,[[],[["u32",15],["reg",3],["r",3]]]],[11,"dbg_padoe","","Read to sample the pad output enables (direction) PIO is …",356,[[],[["u32",15],["reg",3],["r",3]]]],[11,"dbg_cfginfo","","The PIO hardware has some free parameters that may vary …",356,[[],[["rw",3],["reg",3],["dbgcfginfo",3]]]],[11,"intr","","Raw Interrupts",356,[[],[["reg",3],["rw",3],["intr",3]]]],[11,"txf","","Direct write access to the TX FIFO for this state …",356,[[["usize",15]],[["u32",15],["w",3],["reg",3]]]],[11,"rxf","","Direct read access to the RX FIFO for this state machine. …",356,[[["usize",15]],[["u32",15],["reg",3],["r",3]]]],[11,"instr_mem","","Write-only access to instruction memory location 0",356,[[["usize",15]],[["reg",3],["instrmem",3],["rw",3]]]],[11,"sm","","",356,[[["usize",15]],["statemachine",3]]],[11,"irqs","","",356,[[["usize",15]],["irq",3]]],[0,"pll","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::pll","",null,null],[3,"Cs","rp2040_pac2::pll::regs","Control and Status GENERAL CONSTRAINTS: Reference clock …",null,null],[12,"0","","",357,null],[11,"lock","","PLL is locked",357,[[],["bool",15]]],[11,"set_lock","","PLL is locked",357,[[["bool",15]]]],[11,"bypass","","Passes the reference clock to the output instead of the …",357,[[],["bool",15]]],[11,"set_bypass","","Passes the reference clock to the output instead of the …",357,[[["bool",15]]]],[11,"refdiv","","Divides the PLL input reference clock. Behaviour is …",357,[[],["u8",15]]],[11,"set_refdiv","","Divides the PLL input reference clock. Behaviour is …",357,[[["u8",15]]]],[3,"FbdivInt","","Feedback divisor (note: this PLL does not support …",null,null],[12,"0","","",358,null],[11,"fbdiv_int","","see ctrl reg description for constraints",358,[[],["u16",15]]],[11,"set_fbdiv_int","","see ctrl reg description for constraints",358,[[["u16",15]]]],[3,"Pwr","","Controls the PLL power modes.",null,null],[12,"0","","",359,null],[11,"vcopd","","PLL VCO powerdown To save power set high when PLL output …",359,[[],["bool",15]]],[11,"set_vcopd","","PLL VCO powerdown To save power set high when PLL output …",359,[[["bool",15]]]],[11,"postdivpd","","PLL post divider powerdown To save power set high when …",359,[[],["bool",15]]],[11,"set_postdivpd","","PLL post divider powerdown To save power set high when …",359,[[["bool",15]]]],[11,"dsmpd","","PLL DSM powerdown Nothing is achieved by setting this low.",359,[[],["bool",15]]],[11,"set_dsmpd","","PLL DSM powerdown Nothing is achieved by setting this low.",359,[[["bool",15]]]],[11,"pd","","PLL powerdown To save power set high when PLL output not …",359,[[],["bool",15]]],[11,"set_pd","","PLL powerdown To save power set high when PLL output not …",359,[[["bool",15]]]],[3,"Prim","","Controls the PLL post dividers for the primary output …",null,null],[12,"0","","",360,null],[11,"postdiv1","","divide by 1-7",360,[[],["u8",15]]],[11,"set_postdiv1","","divide by 1-7",360,[[["u8",15]]]],[11,"postdiv2","","divide by 1-7",360,[[],["u8",15]]],[11,"set_postdiv2","","divide by 1-7",360,[[["u8",15]]]],[3,"Pll","rp2040_pac2::pll","",null,null],[12,"0","","",361,null],[11,"cs","","Control and Status GENERAL CONSTRAINTS: Reference clock …",361,[[],[["rw",3],["reg",3],["cs",3]]]],[11,"pwr","","Controls the PLL power modes.",361,[[],[["rw",3],["reg",3],["pwr",3]]]],[11,"fbdiv_int","","Feedback divisor (note: this PLL does not support …",361,[[],[["rw",3],["fbdivint",3],["reg",3]]]],[11,"prim","","Controls the PLL post dividers for the primary output …",361,[[],[["reg",3],["prim",3],["rw",3]]]],[0,"ppb","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::ppb","",null,null],[3,"NvicIpr5","rp2040_pac2::ppb::regs","Use the Interrupt Priority Registers to assign a priority …",null,null],[12,"0","","",362,null],[11,"ip_23","","Priority of interrupt 23",362,[[],["u8",15]]],[11,"set_ip_23","","Priority of interrupt 23",362,[[["u8",15]]]],[11,"ip_22","","Priority of interrupt 22",362,[[],["u8",15]]],[11,"set_ip_22","","Priority of interrupt 22",362,[[["u8",15]]]],[11,"ip_21","","Priority of interrupt 21",362,[[],["u8",15]]],[11,"set_ip_21","","Priority of interrupt 21",362,[[["u8",15]]]],[11,"ip_20","","Priority of interrupt 20",362,[[],["u8",15]]],[11,"set_ip_20","","Priority of interrupt 20",362,[[["u8",15]]]],[3,"Icsr","","Use the Interrupt Control State Register to set a pending …",null,null],[12,"0","","",363,null],[11,"nmipendset","","Setting this bit will activate an NMI. Since NMI is the …",363,[[],["bool",15]]],[11,"set_nmipendset","","Setting this bit will activate an NMI. Since NMI is the …",363,[[["bool",15]]]],[11,"pendsvset","","PendSV set-pending bit. Write: 0 = No effect. 1 = Changes …",363,[[],["bool",15]]],[11,"set_pendsvset","","PendSV set-pending bit. Write: 0 = No effect. 1 = Changes …",363,[[["bool",15]]]],[11,"pendsvclr","","PendSV clear-pending bit. Write: 0 = No effect. 1 = …",363,[[],["bool",15]]],[11,"set_pendsvclr","","PendSV clear-pending bit. Write: 0 = No effect. 1 = …",363,[[["bool",15]]]],[11,"pendstset","","SysTick exception set-pending bit. Write: 0 = No effect. …",363,[[],["bool",15]]],[11,"set_pendstset","","SysTick exception set-pending bit. Write: 0 = No effect. …",363,[[["bool",15]]]],[11,"pendstclr","","SysTick exception clear-pending bit. Write: 0 = No …",363,[[],["bool",15]]],[11,"set_pendstclr","","SysTick exception clear-pending bit. Write: 0 = No …",363,[[["bool",15]]]],[11,"isrpreempt","","The system can only access this bit when the core is …",363,[[],["bool",15]]],[11,"set_isrpreempt","","The system can only access this bit when the core is …",363,[[["bool",15]]]],[11,"isrpending","","External interrupt pending flag",363,[[],["bool",15]]],[11,"set_isrpending","","External interrupt pending flag",363,[[["bool",15]]]],[11,"vectpending","","Indicates the exception number for the highest priority …",363,[[],["u16",15]]],[11,"set_vectpending","","Indicates the exception number for the highest priority …",363,[[["u16",15]]]],[11,"vectactive","","Active exception number field. Reset clears the …",363,[[],["u16",15]]],[11,"set_vectactive","","Active exception number field. Reset clears the …",363,[[["u16",15]]]],[3,"MpuRbar","","Read the MPU Region Base Address Register to determine …",null,null],[12,"0","","",364,null],[11,"addr","","Base address of the region.",364,[[],["u32",15]]],[11,"set_addr","","Base address of the region.",364,[[["u32",15]]]],[11,"valid","","On writes, indicates whether the write must update the …",364,[[],["bool",15]]],[11,"set_valid","","On writes, indicates whether the write must update the …",364,[[["bool",15]]]],[11,"region","","On writes, specifies the number of the region whose base …",364,[[],["u8",15]]],[11,"set_region","","On writes, specifies the number of the region whose base …",364,[[["u8",15]]]],[3,"Scr","","System Control Register. Use the System Control Register …",null,null],[12,"0","","",365,null],[11,"sevonpend","","Send Event on Pending bit: 0 = Only enabled interrupts or …",365,[[],["bool",15]]],[11,"set_sevonpend","","Send Event on Pending bit: 0 = Only enabled interrupts or …",365,[[["bool",15]]]],[11,"sleepdeep","","Controls whether the processor uses sleep or deep sleep …",365,[[],["bool",15]]],[11,"set_sleepdeep","","Controls whether the processor uses sleep or deep sleep …",365,[[["bool",15]]]],[11,"sleeponexit","","Indicates sleep-on-exit when returning from Handler mode …",365,[[],["bool",15]]],[11,"set_sleeponexit","","Indicates sleep-on-exit when returning from Handler mode …",365,[[["bool",15]]]],[3,"NvicIpr1","","Use the Interrupt Priority Registers to assign a priority …",null,null],[12,"0","","",366,null],[11,"ip_7","","Priority of interrupt 7",366,[[],["u8",15]]],[11,"set_ip_7","","Priority of interrupt 7",366,[[["u8",15]]]],[11,"ip_6","","Priority of interrupt 6",366,[[],["u8",15]]],[11,"set_ip_6","","Priority of interrupt 6",366,[[["u8",15]]]],[11,"ip_5","","Priority of interrupt 5",366,[[],["u8",15]]],[11,"set_ip_5","","Priority of interrupt 5",366,[[["u8",15]]]],[11,"ip_4","","Priority of interrupt 4",366,[[],["u8",15]]],[11,"set_ip_4","","Priority of interrupt 4",366,[[["u8",15]]]],[3,"SystRvr","","Use the SysTick Reload Value Register to specify the …",null,null],[12,"0","","",367,null],[11,"reload","","Value to load into the SysTick Current Value Register …",367,[[],["u32",15]]],[11,"set_reload","","Value to load into the SysTick Current Value Register …",367,[[["u32",15]]]],[3,"Shcsr","","Use the System Handler Control and State Register to …",null,null],[12,"0","","",368,null],[11,"svcallpended","","Reads as 1 if SVCall is Pending. Write 1 to set pending …",368,[[],["bool",15]]],[11,"set_svcallpended","","Reads as 1 if SVCall is Pending. Write 1 to set pending …",368,[[["bool",15]]]],[3,"Shpr2","","System handlers are a special class of exception handler …",null,null],[12,"0","","",369,null],[11,"pri_11","","Priority of system handler 11, SVCall",369,[[],["u8",15]]],[11,"set_pri_11","","Priority of system handler 11, SVCall",369,[[["u8",15]]]],[3,"NvicIpr4","","Use the Interrupt Priority Registers to assign a priority …",null,null],[12,"0","","",370,null],[11,"ip_19","","Priority of interrupt 19",370,[[],["u8",15]]],[11,"set_ip_19","","Priority of interrupt 19",370,[[["u8",15]]]],[11,"ip_18","","Priority of interrupt 18",370,[[],["u8",15]]],[11,"set_ip_18","","Priority of interrupt 18",370,[[["u8",15]]]],[11,"ip_17","","Priority of interrupt 17",370,[[],["u8",15]]],[11,"set_ip_17","","Priority of interrupt 17",370,[[["u8",15]]]],[11,"ip_16","","Priority of interrupt 16",370,[[],["u8",15]]],[11,"set_ip_16","","Priority of interrupt 16",370,[[["u8",15]]]],[3,"NvicIpr6","","Use the Interrupt Priority Registers to assign a priority …",null,null],[12,"0","","",371,null],[11,"ip_27","","Priority of interrupt 27",371,[[],["u8",15]]],[11,"set_ip_27","","Priority of interrupt 27",371,[[["u8",15]]]],[11,"ip_26","","Priority of interrupt 26",371,[[],["u8",15]]],[11,"set_ip_26","","Priority of interrupt 26",371,[[["u8",15]]]],[11,"ip_25","","Priority of interrupt 25",371,[[],["u8",15]]],[11,"set_ip_25","","Priority of interrupt 25",371,[[["u8",15]]]],[11,"ip_24","","Priority of interrupt 24",371,[[],["u8",15]]],[11,"set_ip_24","","Priority of interrupt 24",371,[[["u8",15]]]],[3,"NvicIpr2","","Use the Interrupt Priority Registers to assign a priority …",null,null],[12,"0","","",372,null],[11,"ip_11","","Priority of interrupt 11",372,[[],["u8",15]]],[11,"set_ip_11","","Priority of interrupt 11",372,[[["u8",15]]]],[11,"ip_10","","Priority of interrupt 10",372,[[],["u8",15]]],[11,"set_ip_10","","Priority of interrupt 10",372,[[["u8",15]]]],[11,"ip_9","","Priority of interrupt 9",372,[[],["u8",15]]],[11,"set_ip_9","","Priority of interrupt 9",372,[[["u8",15]]]],[11,"ip_8","","Priority of interrupt 8",372,[[],["u8",15]]],[11,"set_ip_8","","Priority of interrupt 8",372,[[["u8",15]]]],[3,"Aircr","","Use the Application Interrupt and Reset Control Register …",null,null],[12,"0","","",373,null],[11,"vectkey","","Register key: Reads as Unknown On writes, write 0x05FA to …",373,[[],["u16",15]]],[11,"set_vectkey","","Register key: Reads as Unknown On writes, write 0x05FA to …",373,[[["u16",15]]]],[11,"endianess","","Data endianness implemented: 0 = Little-endian.",373,[[],["bool",15]]],[11,"set_endianess","","Data endianness implemented: 0 = Little-endian.",373,[[["bool",15]]]],[11,"sysresetreq","","Writing 1 to this bit causes the SYSRESETREQ signal to …",373,[[],["bool",15]]],[11,"set_sysresetreq","","Writing 1 to this bit causes the SYSRESETREQ signal to …",373,[[["bool",15]]]],[11,"vectclractive","","Clears all active state information for fixed and …",373,[[],["bool",15]]],[11,"set_vectclractive","","Clears all active state information for fixed and …",373,[[["bool",15]]]],[3,"SystCsr","","Use the SysTick Control and Status Register to enable the …",null,null],[12,"0","","",374,null],[11,"countflag","","Returns 1 if timer counted to 0 since last time this was …",374,[[],["bool",15]]],[11,"set_countflag","","Returns 1 if timer counted to 0 since last time this was …",374,[[["bool",15]]]],[11,"clksource","","SysTick clock source. Always reads as one if SYST_CALIB …",374,[[],["bool",15]]],[11,"set_clksource","","SysTick clock source. Always reads as one if SYST_CALIB …",374,[[["bool",15]]]],[11,"tickint","","Enables SysTick exception request: 0 = Counting down to …",374,[[],["bool",15]]],[11,"set_tickint","","Enables SysTick exception request: 0 = Counting down to …",374,[[["bool",15]]]],[11,"enable","","Enable SysTick counter: 0 = Counter disabled. 1 = Counter …",374,[[],["bool",15]]],[11,"set_enable","","Enable SysTick counter: 0 = Counter disabled. 1 = Counter …",374,[[["bool",15]]]],[3,"SystCalib","","Use the SysTick Calibration Value Register to enable …",null,null],[12,"0","","",375,null],[11,"noref","","If reads as 1, the Reference clock is not provided - the …",375,[[],["bool",15]]],[11,"set_noref","","If reads as 1, the Reference clock is not provided - the …",375,[[["bool",15]]]],[11,"skew","","If reads as 1, the calibration value for 10ms is inexact …",375,[[],["bool",15]]],[11,"set_skew","","If reads as 1, the calibration value for 10ms is inexact …",375,[[["bool",15]]]],[11,"tenms","","An optional Reload value to be used for 10ms (100Hz) …",375,[[],["u32",15]]],[11,"set_tenms","","An optional Reload value to be used for 10ms (100Hz) …",375,[[["u32",15]]]],[3,"MpuType","","Read the MPU Type Register to determine if the processor …",null,null],[12,"0","","",376,null],[11,"iregion","","Instruction region. Reads as zero as ARMv6-M only …",376,[[],["u8",15]]],[11,"set_iregion","","Instruction region. Reads as zero as ARMv6-M only …",376,[[["u8",15]]]],[11,"dregion","","Number of regions supported by the MPU.",376,[[],["u8",15]]],[11,"set_dregion","","Number of regions supported by the MPU.",376,[[["u8",15]]]],[11,"separate","","Indicates support for separate instruction and data …",376,[[],["bool",15]]],[11,"set_separate","","Indicates support for separate instruction and data …",376,[[["bool",15]]]],[3,"NvicIpr7","","Use the Interrupt Priority Registers to assign a priority …",null,null],[12,"0","","",377,null],[11,"ip_31","","Priority of interrupt 31",377,[[],["u8",15]]],[11,"set_ip_31","","Priority of interrupt 31",377,[[["u8",15]]]],[11,"ip_30","","Priority of interrupt 30",377,[[],["u8",15]]],[11,"set_ip_30","","Priority of interrupt 30",377,[[["u8",15]]]],[11,"ip_29","","Priority of interrupt 29",377,[[],["u8",15]]],[11,"set_ip_29","","Priority of interrupt 29",377,[[["u8",15]]]],[11,"ip_28","","Priority of interrupt 28",377,[[],["u8",15]]],[11,"set_ip_28","","Priority of interrupt 28",377,[[["u8",15]]]],[3,"NvicIpr3","","Use the Interrupt Priority Registers to assign a priority …",null,null],[12,"0","","",378,null],[11,"ip_15","","Priority of interrupt 15",378,[[],["u8",15]]],[11,"set_ip_15","","Priority of interrupt 15",378,[[["u8",15]]]],[11,"ip_14","","Priority of interrupt 14",378,[[],["u8",15]]],[11,"set_ip_14","","Priority of interrupt 14",378,[[["u8",15]]]],[11,"ip_13","","Priority of interrupt 13",378,[[],["u8",15]]],[11,"set_ip_13","","Priority of interrupt 13",378,[[["u8",15]]]],[11,"ip_12","","Priority of interrupt 12",378,[[],["u8",15]]],[11,"set_ip_12","","Priority of interrupt 12",378,[[["u8",15]]]],[3,"MpuRasr","","Use the MPU Region Attribute and Size Register to define …",null,null],[12,"0","","",379,null],[11,"attrs","","The MPU Region Attribute field. Use to define the region …",379,[[],["u16",15]]],[11,"set_attrs","","The MPU Region Attribute field. Use to define the region …",379,[[["u16",15]]]],[11,"srd","","Subregion Disable. For regions of 256 bytes or larger, …",379,[[],["u8",15]]],[11,"set_srd","","Subregion Disable. For regions of 256 bytes or larger, …",379,[[["u8",15]]]],[11,"size","","Indicates the region size. Region size in bytes = …",379,[[],["u8",15]]],[11,"set_size","","Indicates the region size. Region size in bytes = …",379,[[["u8",15]]]],[11,"enable","","Enables the region.",379,[[],["bool",15]]],[11,"set_enable","","Enables the region.",379,[[["bool",15]]]],[3,"MpuCtrl","","Use the MPU Control Register to enable and disable the …",null,null],[12,"0","","",380,null],[11,"privdefena","","Controls whether the default memory map is enabled as a …",380,[[],["bool",15]]],[11,"set_privdefena","","Controls whether the default memory map is enabled as a …",380,[[["bool",15]]]],[11,"hfnmiena","","Controls the use of the MPU for HardFaults and NMIs. …",380,[[],["bool",15]]],[11,"set_hfnmiena","","Controls the use of the MPU for HardFaults and NMIs. …",380,[[["bool",15]]]],[11,"enable","","Enables the MPU. If the MPU is disabled, privileged and …",380,[[],["bool",15]]],[11,"set_enable","","Enables the MPU. If the MPU is disabled, privileged and …",380,[[["bool",15]]]],[3,"Cpuid","","Read the CPU ID Base Register to determine: the ID number …",null,null],[12,"0","","",381,null],[11,"implementer","","Implementor code: 0x41 = ARM",381,[[],["u8",15]]],[11,"set_implementer","","Implementor code: 0x41 = ARM",381,[[["u8",15]]]],[11,"variant","","Major revision number n in the rnpm revision status: 0x0 …",381,[[],["u8",15]]],[11,"set_variant","","Major revision number n in the rnpm revision status: 0x0 …",381,[[["u8",15]]]],[11,"architecture","","Constant that defines the architecture of the processor: …",381,[[],["u8",15]]],[11,"set_architecture","","Constant that defines the architecture of the processor: …",381,[[["u8",15]]]],[11,"partno","","Number of processor within family: 0xC60 = Cortex-M0+",381,[[],["u16",15]]],[11,"set_partno","","Number of processor within family: 0xC60 = Cortex-M0+",381,[[["u16",15]]]],[11,"revision","","Minor revision number m in the rnpm revision status: 0x1 …",381,[[],["u8",15]]],[11,"set_revision","","Minor revision number m in the rnpm revision status: 0x1 …",381,[[["u8",15]]]],[3,"Vtor","","The VTOR holds the vector table offset address.",null,null],[12,"0","","",382,null],[11,"tbloff","","Bits [31:8] of the indicate the vector table offset …",382,[[],["u32",15]]],[11,"set_tbloff","","Bits [31:8] of the indicate the vector table offset …",382,[[["u32",15]]]],[3,"NvicIpr0","","Use the Interrupt Priority Registers to assign a priority …",null,null],[12,"0","","",383,null],[11,"ip_3","","Priority of interrupt 3",383,[[],["u8",15]]],[11,"set_ip_3","","Priority of interrupt 3",383,[[["u8",15]]]],[11,"ip_2","","Priority of interrupt 2",383,[[],["u8",15]]],[11,"set_ip_2","","Priority of interrupt 2",383,[[["u8",15]]]],[11,"ip_1","","Priority of interrupt 1",383,[[],["u8",15]]],[11,"set_ip_1","","Priority of interrupt 1",383,[[["u8",15]]]],[11,"ip_0","","Priority of interrupt 0",383,[[],["u8",15]]],[11,"set_ip_0","","Priority of interrupt 0",383,[[["u8",15]]]],[3,"Shpr3","","System handlers are a special class of exception handler …",null,null],[12,"0","","",384,null],[11,"pri_15","","Priority of system handler 15, SysTick",384,[[],["u8",15]]],[11,"set_pri_15","","Priority of system handler 15, SysTick",384,[[["u8",15]]]],[11,"pri_14","","Priority of system handler 14, PendSV",384,[[],["u8",15]]],[11,"set_pri_14","","Priority of system handler 14, PendSV",384,[[["u8",15]]]],[3,"MpuRnr","","Use the MPU Region Number Register to select the region …",null,null],[12,"0","","",385,null],[11,"region","","Indicates the MPU region referenced by the MPU_RBAR and …",385,[[],["u8",15]]],[11,"set_region","","Indicates the MPU region referenced by the MPU_RBAR and …",385,[[["u8",15]]]],[3,"Ccr","","The Configuration and Control Register permanently …",null,null],[12,"0","","",386,null],[11,"stkalign","","Always reads as one, indicates 8-byte stack alignment on …",386,[[],["bool",15]]],[11,"set_stkalign","","Always reads as one, indicates 8-byte stack alignment on …",386,[[["bool",15]]]],[11,"unalign_trp","","Always reads as one, indicates that all unaligned …",386,[[],["bool",15]]],[11,"set_unalign_trp","","Always reads as one, indicates that all unaligned …",386,[[["bool",15]]]],[3,"SystCvr","","Use the SysTick Current Value Register to find the …",null,null],[12,"0","","",387,null],[11,"current","","Reads return the current value of the SysTick counter. …",387,[[],["u32",15]]],[11,"set_current","","Reads return the current value of the SysTick counter. …",387,[[["u32",15]]]],[3,"Ppb","rp2040_pac2::ppb","",null,null],[12,"0","","",388,null],[11,"syst_csr","","Use the SysTick Control and Status Register to enable the …",388,[[],[["systcsr",3],["reg",3],["rw",3]]]],[11,"syst_rvr","","Use the SysTick Reload Value Register to specify the …",388,[[],[["systrvr",3],["rw",3],["reg",3]]]],[11,"syst_cvr","","Use the SysTick Current Value Register to find the …",388,[[],[["reg",3],["systcvr",3],["rw",3]]]],[11,"syst_calib","","Use the SysTick Calibration Value Register to enable …",388,[[],[["reg",3],["systcalib",3],["rw",3]]]],[11,"nvic_iser","","Use the Interrupt Set-Enable Register to enable …",388,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"nvic_icer","","Use the Interrupt Clear-Enable Registers to disable …",388,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"nvic_ispr","","The NVIC_ISPR forces interrupts into the pending state, …",388,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"nvic_icpr","","Use the Interrupt Clear-Pending Register to clear pending …",388,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"nvic_ipr0","","Use the Interrupt Priority Registers to assign a priority …",388,[[],[["reg",3],["rw",3],["nvicipr0",3]]]],[11,"nvic_ipr1","","Use the Interrupt Priority Registers to assign a priority …",388,[[],[["nvicipr1",3],["reg",3],["rw",3]]]],[11,"nvic_ipr2","","Use the Interrupt Priority Registers to assign a priority …",388,[[],[["nvicipr2",3],["rw",3],["reg",3]]]],[11,"nvic_ipr3","","Use the Interrupt Priority Registers to assign a priority …",388,[[],[["nvicipr3",3],["rw",3],["reg",3]]]],[11,"nvic_ipr4","","Use the Interrupt Priority Registers to assign a priority …",388,[[],[["rw",3],["reg",3],["nvicipr4",3]]]],[11,"nvic_ipr5","","Use the Interrupt Priority Registers to assign a priority …",388,[[],[["nvicipr5",3],["reg",3],["rw",3]]]],[11,"nvic_ipr6","","Use the Interrupt Priority Registers to assign a priority …",388,[[],[["rw",3],["reg",3],["nvicipr6",3]]]],[11,"nvic_ipr7","","Use the Interrupt Priority Registers to assign a priority …",388,[[],[["reg",3],["nvicipr7",3],["rw",3]]]],[11,"cpuid","","Read the CPU ID Base Register to determine: the ID number …",388,[[],[["reg",3],["cpuid",3],["rw",3]]]],[11,"icsr","","Use the Interrupt Control State Register to set a pending …",388,[[],[["reg",3],["rw",3],["icsr",3]]]],[11,"vtor","","The VTOR holds the vector table offset address.",388,[[],[["vtor",3],["rw",3],["reg",3]]]],[11,"aircr","","Use the Application Interrupt and Reset Control Register …",388,[[],[["reg",3],["aircr",3],["rw",3]]]],[11,"scr","","System Control Register. Use the System Control Register …",388,[[],[["scr",3],["reg",3],["rw",3]]]],[11,"ccr","","The Configuration and Control Register permanently …",388,[[],[["reg",3],["ccr",3],["rw",3]]]],[11,"shpr2","","System handlers are a special class of exception handler …",388,[[],[["reg",3],["shpr2",3],["rw",3]]]],[11,"shpr3","","System handlers are a special class of exception handler …",388,[[],[["reg",3],["shpr3",3],["rw",3]]]],[11,"shcsr","","Use the System Handler Control and State Register to …",388,[[],[["reg",3],["rw",3],["shcsr",3]]]],[11,"mpu_type","","Read the MPU Type Register to determine if the processor …",388,[[],[["reg",3],["mputype",3],["rw",3]]]],[11,"mpu_ctrl","","Use the MPU Control Register to enable and disable the …",388,[[],[["mpuctrl",3],["rw",3],["reg",3]]]],[11,"mpu_rnr","","Use the MPU Region Number Register to select the region …",388,[[],[["reg",3],["mpurnr",3],["rw",3]]]],[11,"mpu_rbar","","Read the MPU Region Base Address Register to determine …",388,[[],[["rw",3],["reg",3],["mpurbar",3]]]],[11,"mpu_rasr","","Use the MPU Region Attribute and Size Register to define …",388,[[],[["rw",3],["reg",3],["mpurasr",3]]]],[0,"psm","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::psm","",null,null],[3,"FrceOn","rp2040_pac2::psm::regs","Force block out of reset (i.e. power it on)",null,null],[12,"0","","",389,null],[11,"proc1","","",389,[[],["bool",15]]],[11,"set_proc1","","",389,[[["bool",15]]]],[11,"proc0","","",389,[[],["bool",15]]],[11,"set_proc0","","",389,[[["bool",15]]]],[11,"sio","","",389,[[],["bool",15]]],[11,"set_sio","","",389,[[["bool",15]]]],[11,"vreg_and_chip_reset","","",389,[[],["bool",15]]],[11,"set_vreg_and_chip_reset","","",389,[[["bool",15]]]],[11,"xip","","",389,[[],["bool",15]]],[11,"set_xip","","",389,[[["bool",15]]]],[11,"sram5","","",389,[[],["bool",15]]],[11,"set_sram5","","",389,[[["bool",15]]]],[11,"sram4","","",389,[[],["bool",15]]],[11,"set_sram4","","",389,[[["bool",15]]]],[11,"sram3","","",389,[[],["bool",15]]],[11,"set_sram3","","",389,[[["bool",15]]]],[11,"sram2","","",389,[[],["bool",15]]],[11,"set_sram2","","",389,[[["bool",15]]]],[11,"sram1","","",389,[[],["bool",15]]],[11,"set_sram1","","",389,[[["bool",15]]]],[11,"sram0","","",389,[[],["bool",15]]],[11,"set_sram0","","",389,[[["bool",15]]]],[11,"rom","","",389,[[],["bool",15]]],[11,"set_rom","","",389,[[["bool",15]]]],[11,"busfabric","","",389,[[],["bool",15]]],[11,"set_busfabric","","",389,[[["bool",15]]]],[11,"resets","","",389,[[],["bool",15]]],[11,"set_resets","","",389,[[["bool",15]]]],[11,"clocks","","",389,[[],["bool",15]]],[11,"set_clocks","","",389,[[["bool",15]]]],[11,"xosc","","",389,[[],["bool",15]]],[11,"set_xosc","","",389,[[["bool",15]]]],[11,"rosc","","",389,[[],["bool",15]]],[11,"set_rosc","","",389,[[["bool",15]]]],[3,"Wdsel","","Set to 1 if this peripheral should be reset when the …",null,null],[12,"0","","",390,null],[11,"proc1","","",390,[[],["bool",15]]],[11,"set_proc1","","",390,[[["bool",15]]]],[11,"proc0","","",390,[[],["bool",15]]],[11,"set_proc0","","",390,[[["bool",15]]]],[11,"sio","","",390,[[],["bool",15]]],[11,"set_sio","","",390,[[["bool",15]]]],[11,"vreg_and_chip_reset","","",390,[[],["bool",15]]],[11,"set_vreg_and_chip_reset","","",390,[[["bool",15]]]],[11,"xip","","",390,[[],["bool",15]]],[11,"set_xip","","",390,[[["bool",15]]]],[11,"sram5","","",390,[[],["bool",15]]],[11,"set_sram5","","",390,[[["bool",15]]]],[11,"sram4","","",390,[[],["bool",15]]],[11,"set_sram4","","",390,[[["bool",15]]]],[11,"sram3","","",390,[[],["bool",15]]],[11,"set_sram3","","",390,[[["bool",15]]]],[11,"sram2","","",390,[[],["bool",15]]],[11,"set_sram2","","",390,[[["bool",15]]]],[11,"sram1","","",390,[[],["bool",15]]],[11,"set_sram1","","",390,[[["bool",15]]]],[11,"sram0","","",390,[[],["bool",15]]],[11,"set_sram0","","",390,[[["bool",15]]]],[11,"rom","","",390,[[],["bool",15]]],[11,"set_rom","","",390,[[["bool",15]]]],[11,"busfabric","","",390,[[],["bool",15]]],[11,"set_busfabric","","",390,[[["bool",15]]]],[11,"resets","","",390,[[],["bool",15]]],[11,"set_resets","","",390,[[["bool",15]]]],[11,"clocks","","",390,[[],["bool",15]]],[11,"set_clocks","","",390,[[["bool",15]]]],[11,"xosc","","",390,[[],["bool",15]]],[11,"set_xosc","","",390,[[["bool",15]]]],[11,"rosc","","",390,[[],["bool",15]]],[11,"set_rosc","","",390,[[["bool",15]]]],[3,"FrceOff","","Force into reset (i.e. power it off)",null,null],[12,"0","","",391,null],[11,"proc1","","",391,[[],["bool",15]]],[11,"set_proc1","","",391,[[["bool",15]]]],[11,"proc0","","",391,[[],["bool",15]]],[11,"set_proc0","","",391,[[["bool",15]]]],[11,"sio","","",391,[[],["bool",15]]],[11,"set_sio","","",391,[[["bool",15]]]],[11,"vreg_and_chip_reset","","",391,[[],["bool",15]]],[11,"set_vreg_and_chip_reset","","",391,[[["bool",15]]]],[11,"xip","","",391,[[],["bool",15]]],[11,"set_xip","","",391,[[["bool",15]]]],[11,"sram5","","",391,[[],["bool",15]]],[11,"set_sram5","","",391,[[["bool",15]]]],[11,"sram4","","",391,[[],["bool",15]]],[11,"set_sram4","","",391,[[["bool",15]]]],[11,"sram3","","",391,[[],["bool",15]]],[11,"set_sram3","","",391,[[["bool",15]]]],[11,"sram2","","",391,[[],["bool",15]]],[11,"set_sram2","","",391,[[["bool",15]]]],[11,"sram1","","",391,[[],["bool",15]]],[11,"set_sram1","","",391,[[["bool",15]]]],[11,"sram0","","",391,[[],["bool",15]]],[11,"set_sram0","","",391,[[["bool",15]]]],[11,"rom","","",391,[[],["bool",15]]],[11,"set_rom","","",391,[[["bool",15]]]],[11,"busfabric","","",391,[[],["bool",15]]],[11,"set_busfabric","","",391,[[["bool",15]]]],[11,"resets","","",391,[[],["bool",15]]],[11,"set_resets","","",391,[[["bool",15]]]],[11,"clocks","","",391,[[],["bool",15]]],[11,"set_clocks","","",391,[[["bool",15]]]],[11,"xosc","","",391,[[],["bool",15]]],[11,"set_xosc","","",391,[[["bool",15]]]],[11,"rosc","","",391,[[],["bool",15]]],[11,"set_rosc","","",391,[[["bool",15]]]],[3,"Done","","Indicates the peripheral’s registers are ready to …",null,null],[12,"0","","",392,null],[11,"proc1","","",392,[[],["bool",15]]],[11,"set_proc1","","",392,[[["bool",15]]]],[11,"proc0","","",392,[[],["bool",15]]],[11,"set_proc0","","",392,[[["bool",15]]]],[11,"sio","","",392,[[],["bool",15]]],[11,"set_sio","","",392,[[["bool",15]]]],[11,"vreg_and_chip_reset","","",392,[[],["bool",15]]],[11,"set_vreg_and_chip_reset","","",392,[[["bool",15]]]],[11,"xip","","",392,[[],["bool",15]]],[11,"set_xip","","",392,[[["bool",15]]]],[11,"sram5","","",392,[[],["bool",15]]],[11,"set_sram5","","",392,[[["bool",15]]]],[11,"sram4","","",392,[[],["bool",15]]],[11,"set_sram4","","",392,[[["bool",15]]]],[11,"sram3","","",392,[[],["bool",15]]],[11,"set_sram3","","",392,[[["bool",15]]]],[11,"sram2","","",392,[[],["bool",15]]],[11,"set_sram2","","",392,[[["bool",15]]]],[11,"sram1","","",392,[[],["bool",15]]],[11,"set_sram1","","",392,[[["bool",15]]]],[11,"sram0","","",392,[[],["bool",15]]],[11,"set_sram0","","",392,[[["bool",15]]]],[11,"rom","","",392,[[],["bool",15]]],[11,"set_rom","","",392,[[["bool",15]]]],[11,"busfabric","","",392,[[],["bool",15]]],[11,"set_busfabric","","",392,[[["bool",15]]]],[11,"resets","","",392,[[],["bool",15]]],[11,"set_resets","","",392,[[["bool",15]]]],[11,"clocks","","",392,[[],["bool",15]]],[11,"set_clocks","","",392,[[["bool",15]]]],[11,"xosc","","",392,[[],["bool",15]]],[11,"set_xosc","","",392,[[["bool",15]]]],[11,"rosc","","",392,[[],["bool",15]]],[11,"set_rosc","","",392,[[["bool",15]]]],[3,"Psm","rp2040_pac2::psm","",null,null],[12,"0","","",393,null],[11,"frce_on","","Force block out of reset (i.e. power it on)",393,[[],[["rw",3],["reg",3],["frceon",3]]]],[11,"frce_off","","Force into reset (i.e. power it off)",393,[[],[["frceoff",3],["reg",3],["rw",3]]]],[11,"wdsel","","Set to 1 if this peripheral should be reset when the …",393,[[],[["wdsel",3],["rw",3],["reg",3]]]],[11,"done","","Indicates the peripheral’s registers are ready to …",393,[[],[["rw",3],["done",3],["reg",3]]]],[0,"pwm","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::pwm","",null,null],[3,"Ch2Csr","rp2040_pac2::pwm::regs","Control and status register",null,null],[12,"0","","",394,null],[11,"ph_adv","","Advance the phase of the counter by 1 count, while it is …",394,[[],["bool",15]]],[11,"set_ph_adv","","Advance the phase of the counter by 1 count, while it is …",394,[[["bool",15]]]],[11,"ph_ret","","Retard the phase of the counter by 1 count, while it is …",394,[[],["bool",15]]],[11,"set_ph_ret","","Retard the phase of the counter by 1 count, while it is …",394,[[["bool",15]]]],[11,"divmode","","",394,[[],["divmode",3]]],[11,"set_divmode","","",394,[[["divmode",3]]]],[11,"b_inv","","Invert output B",394,[[],["bool",15]]],[11,"set_b_inv","","Invert output B",394,[[["bool",15]]]],[11,"a_inv","","Invert output A",394,[[],["bool",15]]],[11,"set_a_inv","","Invert output A",394,[[["bool",15]]]],[11,"ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",394,[[],["bool",15]]],[11,"set_ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",394,[[["bool",15]]]],[11,"en","","Enable the PWM channel.",394,[[],["bool",15]]],[11,"set_en","","Enable the PWM channel.",394,[[["bool",15]]]],[3,"En","","This register aliases the CSR_EN bits for all channels. …",null,null],[12,"0","","",395,null],[11,"ch7","","",395,[[],["bool",15]]],[11,"set_ch7","","",395,[[["bool",15]]]],[11,"ch6","","",395,[[],["bool",15]]],[11,"set_ch6","","",395,[[["bool",15]]]],[11,"ch5","","",395,[[],["bool",15]]],[11,"set_ch5","","",395,[[["bool",15]]]],[11,"ch4","","",395,[[],["bool",15]]],[11,"set_ch4","","",395,[[["bool",15]]]],[11,"ch3","","",395,[[],["bool",15]]],[11,"set_ch3","","",395,[[["bool",15]]]],[11,"ch2","","",395,[[],["bool",15]]],[11,"set_ch2","","",395,[[["bool",15]]]],[11,"ch1","","",395,[[],["bool",15]]],[11,"set_ch1","","",395,[[["bool",15]]]],[11,"ch0","","",395,[[],["bool",15]]],[11,"set_ch0","","",395,[[["bool",15]]]],[3,"Ch7Csr","","Control and status register",null,null],[12,"0","","",396,null],[11,"ph_adv","","Advance the phase of the counter by 1 count, while it is …",396,[[],["bool",15]]],[11,"set_ph_adv","","Advance the phase of the counter by 1 count, while it is …",396,[[["bool",15]]]],[11,"ph_ret","","Retard the phase of the counter by 1 count, while it is …",396,[[],["bool",15]]],[11,"set_ph_ret","","Retard the phase of the counter by 1 count, while it is …",396,[[["bool",15]]]],[11,"divmode","","",396,[[],["divmode",3]]],[11,"set_divmode","","",396,[[["divmode",3]]]],[11,"b_inv","","Invert output B",396,[[],["bool",15]]],[11,"set_b_inv","","Invert output B",396,[[["bool",15]]]],[11,"a_inv","","Invert output A",396,[[],["bool",15]]],[11,"set_a_inv","","Invert output A",396,[[["bool",15]]]],[11,"ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",396,[[],["bool",15]]],[11,"set_ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",396,[[["bool",15]]]],[11,"en","","Enable the PWM channel.",396,[[],["bool",15]]],[11,"set_en","","Enable the PWM channel.",396,[[["bool",15]]]],[3,"Ch7Ctr","","Direct access to the PWM counter",null,null],[12,"0","","",397,null],[11,"ch7_ctr","","",397,[[],["u16",15]]],[11,"set_ch7_ctr","","",397,[[["u16",15]]]],[3,"Intr","","Raw Interrupts",null,null],[12,"0","","",398,null],[11,"ch7","","",398,[[],["bool",15]]],[11,"set_ch7","","",398,[[["bool",15]]]],[11,"ch6","","",398,[[],["bool",15]]],[11,"set_ch6","","",398,[[["bool",15]]]],[11,"ch5","","",398,[[],["bool",15]]],[11,"set_ch5","","",398,[[["bool",15]]]],[11,"ch4","","",398,[[],["bool",15]]],[11,"set_ch4","","",398,[[["bool",15]]]],[11,"ch3","","",398,[[],["bool",15]]],[11,"set_ch3","","",398,[[["bool",15]]]],[11,"ch2","","",398,[[],["bool",15]]],[11,"set_ch2","","",398,[[["bool",15]]]],[11,"ch1","","",398,[[],["bool",15]]],[11,"set_ch1","","",398,[[["bool",15]]]],[11,"ch0","","",398,[[],["bool",15]]],[11,"set_ch0","","",398,[[["bool",15]]]],[3,"Ch1Ctr","","Direct access to the PWM counter",null,null],[12,"0","","",399,null],[11,"ch1_ctr","","",399,[[],["u16",15]]],[11,"set_ch1_ctr","","",399,[[["u16",15]]]],[3,"Ch4Cc","","Counter compare values",null,null],[12,"0","","",400,null],[11,"b","","",400,[[],["u16",15]]],[11,"set_b","","",400,[[["u16",15]]]],[11,"a","","",400,[[],["u16",15]]],[11,"set_a","","",400,[[["u16",15]]]],[3,"Ch7Top","","Counter wrap value",null,null],[12,"0","","",401,null],[11,"ch7_top","","",401,[[],["u16",15]]],[11,"set_ch7_top","","",401,[[["u16",15]]]],[3,"Ch6Csr","","Control and status register",null,null],[12,"0","","",402,null],[11,"ph_adv","","Advance the phase of the counter by 1 count, while it is …",402,[[],["bool",15]]],[11,"set_ph_adv","","Advance the phase of the counter by 1 count, while it is …",402,[[["bool",15]]]],[11,"ph_ret","","Retard the phase of the counter by 1 count, while it is …",402,[[],["bool",15]]],[11,"set_ph_ret","","Retard the phase of the counter by 1 count, while it is …",402,[[["bool",15]]]],[11,"divmode","","",402,[[],["divmode",3]]],[11,"set_divmode","","",402,[[["divmode",3]]]],[11,"b_inv","","Invert output B",402,[[],["bool",15]]],[11,"set_b_inv","","Invert output B",402,[[["bool",15]]]],[11,"a_inv","","Invert output A",402,[[],["bool",15]]],[11,"set_a_inv","","Invert output A",402,[[["bool",15]]]],[11,"ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",402,[[],["bool",15]]],[11,"set_ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",402,[[["bool",15]]]],[11,"en","","Enable the PWM channel.",402,[[],["bool",15]]],[11,"set_en","","Enable the PWM channel.",402,[[["bool",15]]]],[3,"Ch4Div","","INT and FRAC form a fixed-point fractional number. …",null,null],[12,"0","","",403,null],[11,"int","","",403,[[],["u8",15]]],[11,"set_int","","",403,[[["u8",15]]]],[11,"frac","","",403,[[],["u8",15]]],[11,"set_frac","","",403,[[["u8",15]]]],[3,"Ch1Div","","INT and FRAC form a fixed-point fractional number. …",null,null],[12,"0","","",404,null],[11,"int","","",404,[[],["u8",15]]],[11,"set_int","","",404,[[["u8",15]]]],[11,"frac","","",404,[[],["u8",15]]],[11,"set_frac","","",404,[[["u8",15]]]],[3,"Inte","","Interrupt Enable",null,null],[12,"0","","",405,null],[11,"ch7","","",405,[[],["bool",15]]],[11,"set_ch7","","",405,[[["bool",15]]]],[11,"ch6","","",405,[[],["bool",15]]],[11,"set_ch6","","",405,[[["bool",15]]]],[11,"ch5","","",405,[[],["bool",15]]],[11,"set_ch5","","",405,[[["bool",15]]]],[11,"ch4","","",405,[[],["bool",15]]],[11,"set_ch4","","",405,[[["bool",15]]]],[11,"ch3","","",405,[[],["bool",15]]],[11,"set_ch3","","",405,[[["bool",15]]]],[11,"ch2","","",405,[[],["bool",15]]],[11,"set_ch2","","",405,[[["bool",15]]]],[11,"ch1","","",405,[[],["bool",15]]],[11,"set_ch1","","",405,[[["bool",15]]]],[11,"ch0","","",405,[[],["bool",15]]],[11,"set_ch0","","",405,[[["bool",15]]]],[3,"Ch2Top","","Counter wrap value",null,null],[12,"0","","",406,null],[11,"ch2_top","","",406,[[],["u16",15]]],[11,"set_ch2_top","","",406,[[["u16",15]]]],[3,"Ch4Ctr","","Direct access to the PWM counter",null,null],[12,"0","","",407,null],[11,"ch4_ctr","","",407,[[],["u16",15]]],[11,"set_ch4_ctr","","",407,[[["u16",15]]]],[3,"Ch5Ctr","","Direct access to the PWM counter",null,null],[12,"0","","",408,null],[11,"ch5_ctr","","",408,[[],["u16",15]]],[11,"set_ch5_ctr","","",408,[[["u16",15]]]],[3,"Ch2Div","","INT and FRAC form a fixed-point fractional number. …",null,null],[12,"0","","",409,null],[11,"int","","",409,[[],["u8",15]]],[11,"set_int","","",409,[[["u8",15]]]],[11,"frac","","",409,[[],["u8",15]]],[11,"set_frac","","",409,[[["u8",15]]]],[3,"Ch4Csr","","Control and status register",null,null],[12,"0","","",410,null],[11,"ph_adv","","Advance the phase of the counter by 1 count, while it is …",410,[[],["bool",15]]],[11,"set_ph_adv","","Advance the phase of the counter by 1 count, while it is …",410,[[["bool",15]]]],[11,"ph_ret","","Retard the phase of the counter by 1 count, while it is …",410,[[],["bool",15]]],[11,"set_ph_ret","","Retard the phase of the counter by 1 count, while it is …",410,[[["bool",15]]]],[11,"divmode","","",410,[[],["divmode",3]]],[11,"set_divmode","","",410,[[["divmode",3]]]],[11,"b_inv","","Invert output B",410,[[],["bool",15]]],[11,"set_b_inv","","Invert output B",410,[[["bool",15]]]],[11,"a_inv","","Invert output A",410,[[],["bool",15]]],[11,"set_a_inv","","Invert output A",410,[[["bool",15]]]],[11,"ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",410,[[],["bool",15]]],[11,"set_ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",410,[[["bool",15]]]],[11,"en","","Enable the PWM channel.",410,[[],["bool",15]]],[11,"set_en","","Enable the PWM channel.",410,[[["bool",15]]]],[3,"Ch1Csr","","Control and status register",null,null],[12,"0","","",411,null],[11,"ph_adv","","Advance the phase of the counter by 1 count, while it is …",411,[[],["bool",15]]],[11,"set_ph_adv","","Advance the phase of the counter by 1 count, while it is …",411,[[["bool",15]]]],[11,"ph_ret","","Retard the phase of the counter by 1 count, while it is …",411,[[],["bool",15]]],[11,"set_ph_ret","","Retard the phase of the counter by 1 count, while it is …",411,[[["bool",15]]]],[11,"divmode","","",411,[[],["divmode",3]]],[11,"set_divmode","","",411,[[["divmode",3]]]],[11,"b_inv","","Invert output B",411,[[],["bool",15]]],[11,"set_b_inv","","Invert output B",411,[[["bool",15]]]],[11,"a_inv","","Invert output A",411,[[],["bool",15]]],[11,"set_a_inv","","Invert output A",411,[[["bool",15]]]],[11,"ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",411,[[],["bool",15]]],[11,"set_ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",411,[[["bool",15]]]],[11,"en","","Enable the PWM channel.",411,[[],["bool",15]]],[11,"set_en","","Enable the PWM channel.",411,[[["bool",15]]]],[3,"Ints","","Interrupt status after masking & forcing",null,null],[12,"0","","",412,null],[11,"ch7","","",412,[[],["bool",15]]],[11,"set_ch7","","",412,[[["bool",15]]]],[11,"ch6","","",412,[[],["bool",15]]],[11,"set_ch6","","",412,[[["bool",15]]]],[11,"ch5","","",412,[[],["bool",15]]],[11,"set_ch5","","",412,[[["bool",15]]]],[11,"ch4","","",412,[[],["bool",15]]],[11,"set_ch4","","",412,[[["bool",15]]]],[11,"ch3","","",412,[[],["bool",15]]],[11,"set_ch3","","",412,[[["bool",15]]]],[11,"ch2","","",412,[[],["bool",15]]],[11,"set_ch2","","",412,[[["bool",15]]]],[11,"ch1","","",412,[[],["bool",15]]],[11,"set_ch1","","",412,[[["bool",15]]]],[11,"ch0","","",412,[[],["bool",15]]],[11,"set_ch0","","",412,[[["bool",15]]]],[3,"Ch7Div","","INT and FRAC form a fixed-point fractional number. …",null,null],[12,"0","","",413,null],[11,"int","","",413,[[],["u8",15]]],[11,"set_int","","",413,[[["u8",15]]]],[11,"frac","","",413,[[],["u8",15]]],[11,"set_frac","","",413,[[["u8",15]]]],[3,"Ch5Cc","","Counter compare values",null,null],[12,"0","","",414,null],[11,"b","","",414,[[],["u16",15]]],[11,"set_b","","",414,[[["u16",15]]]],[11,"a","","",414,[[],["u16",15]]],[11,"set_a","","",414,[[["u16",15]]]],[3,"Ch5Div","","INT and FRAC form a fixed-point fractional number. …",null,null],[12,"0","","",415,null],[11,"int","","",415,[[],["u8",15]]],[11,"set_int","","",415,[[["u8",15]]]],[11,"frac","","",415,[[],["u8",15]]],[11,"set_frac","","",415,[[["u8",15]]]],[3,"Ch0Div","","INT and FRAC form a fixed-point fractional number. …",null,null],[12,"0","","",416,null],[11,"int","","",416,[[],["u8",15]]],[11,"set_int","","",416,[[["u8",15]]]],[11,"frac","","",416,[[],["u8",15]]],[11,"set_frac","","",416,[[["u8",15]]]],[3,"Ch2Ctr","","Direct access to the PWM counter",null,null],[12,"0","","",417,null],[11,"ch2_ctr","","",417,[[],["u16",15]]],[11,"set_ch2_ctr","","",417,[[["u16",15]]]],[3,"Ch0Cc","","Counter compare values",null,null],[12,"0","","",418,null],[11,"b","","",418,[[],["u16",15]]],[11,"set_b","","",418,[[["u16",15]]]],[11,"a","","",418,[[],["u16",15]]],[11,"set_a","","",418,[[["u16",15]]]],[3,"Ch0Csr","","Control and status register",null,null],[12,"0","","",419,null],[11,"ph_adv","","Advance the phase of the counter by 1 count, while it is …",419,[[],["bool",15]]],[11,"set_ph_adv","","Advance the phase of the counter by 1 count, while it is …",419,[[["bool",15]]]],[11,"ph_ret","","Retard the phase of the counter by 1 count, while it is …",419,[[],["bool",15]]],[11,"set_ph_ret","","Retard the phase of the counter by 1 count, while it is …",419,[[["bool",15]]]],[11,"divmode","","",419,[[],["divmode",3]]],[11,"set_divmode","","",419,[[["divmode",3]]]],[11,"b_inv","","Invert output B",419,[[],["bool",15]]],[11,"set_b_inv","","Invert output B",419,[[["bool",15]]]],[11,"a_inv","","Invert output A",419,[[],["bool",15]]],[11,"set_a_inv","","Invert output A",419,[[["bool",15]]]],[11,"ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",419,[[],["bool",15]]],[11,"set_ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",419,[[["bool",15]]]],[11,"en","","Enable the PWM channel.",419,[[],["bool",15]]],[11,"set_en","","Enable the PWM channel.",419,[[["bool",15]]]],[3,"Ch6Div","","INT and FRAC form a fixed-point fractional number. …",null,null],[12,"0","","",420,null],[11,"int","","",420,[[],["u8",15]]],[11,"set_int","","",420,[[["u8",15]]]],[11,"frac","","",420,[[],["u8",15]]],[11,"set_frac","","",420,[[["u8",15]]]],[3,"Intf","","Interrupt Force",null,null],[12,"0","","",421,null],[11,"ch7","","",421,[[],["bool",15]]],[11,"set_ch7","","",421,[[["bool",15]]]],[11,"ch6","","",421,[[],["bool",15]]],[11,"set_ch6","","",421,[[["bool",15]]]],[11,"ch5","","",421,[[],["bool",15]]],[11,"set_ch5","","",421,[[["bool",15]]]],[11,"ch4","","",421,[[],["bool",15]]],[11,"set_ch4","","",421,[[["bool",15]]]],[11,"ch3","","",421,[[],["bool",15]]],[11,"set_ch3","","",421,[[["bool",15]]]],[11,"ch2","","",421,[[],["bool",15]]],[11,"set_ch2","","",421,[[["bool",15]]]],[11,"ch1","","",421,[[],["bool",15]]],[11,"set_ch1","","",421,[[["bool",15]]]],[11,"ch0","","",421,[[],["bool",15]]],[11,"set_ch0","","",421,[[["bool",15]]]],[3,"Ch0Top","","Counter wrap value",null,null],[12,"0","","",422,null],[11,"ch0_top","","",422,[[],["u16",15]]],[11,"set_ch0_top","","",422,[[["u16",15]]]],[3,"Ch6Cc","","Counter compare values",null,null],[12,"0","","",423,null],[11,"b","","",423,[[],["u16",15]]],[11,"set_b","","",423,[[["u16",15]]]],[11,"a","","",423,[[],["u16",15]]],[11,"set_a","","",423,[[["u16",15]]]],[3,"Ch6Top","","Counter wrap value",null,null],[12,"0","","",424,null],[11,"ch6_top","","",424,[[],["u16",15]]],[11,"set_ch6_top","","",424,[[["u16",15]]]],[3,"Ch4Top","","Counter wrap value",null,null],[12,"0","","",425,null],[11,"ch4_top","","",425,[[],["u16",15]]],[11,"set_ch4_top","","",425,[[["u16",15]]]],[3,"Ch0Ctr","","Direct access to the PWM counter",null,null],[12,"0","","",426,null],[11,"ch0_ctr","","",426,[[],["u16",15]]],[11,"set_ch0_ctr","","",426,[[["u16",15]]]],[3,"Ch3Csr","","Control and status register",null,null],[12,"0","","",427,null],[11,"ph_adv","","Advance the phase of the counter by 1 count, while it is …",427,[[],["bool",15]]],[11,"set_ph_adv","","Advance the phase of the counter by 1 count, while it is …",427,[[["bool",15]]]],[11,"ph_ret","","Retard the phase of the counter by 1 count, while it is …",427,[[],["bool",15]]],[11,"set_ph_ret","","Retard the phase of the counter by 1 count, while it is …",427,[[["bool",15]]]],[11,"divmode","","",427,[[],["divmode",3]]],[11,"set_divmode","","",427,[[["divmode",3]]]],[11,"b_inv","","Invert output B",427,[[],["bool",15]]],[11,"set_b_inv","","Invert output B",427,[[["bool",15]]]],[11,"a_inv","","Invert output A",427,[[],["bool",15]]],[11,"set_a_inv","","Invert output A",427,[[["bool",15]]]],[11,"ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",427,[[],["bool",15]]],[11,"set_ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",427,[[["bool",15]]]],[11,"en","","Enable the PWM channel.",427,[[],["bool",15]]],[11,"set_en","","Enable the PWM channel.",427,[[["bool",15]]]],[3,"Ch3Cc","","Counter compare values",null,null],[12,"0","","",428,null],[11,"b","","",428,[[],["u16",15]]],[11,"set_b","","",428,[[["u16",15]]]],[11,"a","","",428,[[],["u16",15]]],[11,"set_a","","",428,[[["u16",15]]]],[3,"Ch3Ctr","","Direct access to the PWM counter",null,null],[12,"0","","",429,null],[11,"ch3_ctr","","",429,[[],["u16",15]]],[11,"set_ch3_ctr","","",429,[[["u16",15]]]],[3,"Ch5Top","","Counter wrap value",null,null],[12,"0","","",430,null],[11,"ch5_top","","",430,[[],["u16",15]]],[11,"set_ch5_top","","",430,[[["u16",15]]]],[3,"Ch6Ctr","","Direct access to the PWM counter",null,null],[12,"0","","",431,null],[11,"ch6_ctr","","",431,[[],["u16",15]]],[11,"set_ch6_ctr","","",431,[[["u16",15]]]],[3,"Ch1Cc","","Counter compare values",null,null],[12,"0","","",432,null],[11,"b","","",432,[[],["u16",15]]],[11,"set_b","","",432,[[["u16",15]]]],[11,"a","","",432,[[],["u16",15]]],[11,"set_a","","",432,[[["u16",15]]]],[3,"Ch3Top","","Counter wrap value",null,null],[12,"0","","",433,null],[11,"ch3_top","","",433,[[],["u16",15]]],[11,"set_ch3_top","","",433,[[["u16",15]]]],[3,"Ch2Cc","","Counter compare values",null,null],[12,"0","","",434,null],[11,"b","","",434,[[],["u16",15]]],[11,"set_b","","",434,[[["u16",15]]]],[11,"a","","",434,[[],["u16",15]]],[11,"set_a","","",434,[[["u16",15]]]],[3,"Ch3Div","","INT and FRAC form a fixed-point fractional number. …",null,null],[12,"0","","",435,null],[11,"int","","",435,[[],["u8",15]]],[11,"set_int","","",435,[[["u8",15]]]],[11,"frac","","",435,[[],["u8",15]]],[11,"set_frac","","",435,[[["u8",15]]]],[3,"Ch5Csr","","Control and status register",null,null],[12,"0","","",436,null],[11,"ph_adv","","Advance the phase of the counter by 1 count, while it is …",436,[[],["bool",15]]],[11,"set_ph_adv","","Advance the phase of the counter by 1 count, while it is …",436,[[["bool",15]]]],[11,"ph_ret","","Retard the phase of the counter by 1 count, while it is …",436,[[],["bool",15]]],[11,"set_ph_ret","","Retard the phase of the counter by 1 count, while it is …",436,[[["bool",15]]]],[11,"divmode","","",436,[[],["divmode",3]]],[11,"set_divmode","","",436,[[["divmode",3]]]],[11,"b_inv","","Invert output B",436,[[],["bool",15]]],[11,"set_b_inv","","Invert output B",436,[[["bool",15]]]],[11,"a_inv","","Invert output A",436,[[],["bool",15]]],[11,"set_a_inv","","Invert output A",436,[[["bool",15]]]],[11,"ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",436,[[],["bool",15]]],[11,"set_ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",436,[[["bool",15]]]],[11,"en","","Enable the PWM channel.",436,[[],["bool",15]]],[11,"set_en","","Enable the PWM channel.",436,[[["bool",15]]]],[3,"Ch1Top","","Counter wrap value",null,null],[12,"0","","",437,null],[11,"ch1_top","","",437,[[],["u16",15]]],[11,"set_ch1_top","","",437,[[["u16",15]]]],[3,"Ch7Cc","","Counter compare values",null,null],[12,"0","","",438,null],[11,"b","","",438,[[],["u16",15]]],[11,"set_b","","",438,[[["u16",15]]]],[11,"a","","",438,[[],["u16",15]]],[11,"set_a","","",438,[[["u16",15]]]],[0,"vals","rp2040_pac2::pwm","",null,null],[3,"Divmode","rp2040_pac2::pwm::vals","Control and status register",null,null],[12,"0","","",439,null],[18,"DIV","","Free-running counting at rate dictated by fractional …",439,null],[18,"LEVEL","","Fractional divider operation is gated by the PWM B pin.",439,null],[18,"RISE","","Counter advances with each rising edge of the PWM B pin.",439,null],[18,"FALL","","Counter advances with each falling edge of the PWM B pin.",439,null],[3,"Pwm","rp2040_pac2::pwm","Simple PWM",null,null],[12,"0","","",440,null],[11,"ch0_csr","","Control and status register",440,[[],[["reg",3],["rw",3],["ch0csr",3]]]],[11,"ch0_div","","INT and FRAC form a fixed-point fractional number. …",440,[[],[["rw",3],["ch0div",3],["reg",3]]]],[11,"ch0_ctr","","Direct access to the PWM counter",440,[[],[["ch0ctr",3],["reg",3],["rw",3]]]],[11,"ch0_cc","","Counter compare values",440,[[],[["reg",3],["ch0cc",3],["rw",3]]]],[11,"ch0_top","","Counter wrap value",440,[[],[["reg",3],["rw",3],["ch0top",3]]]],[11,"ch1_csr","","Control and status register",440,[[],[["reg",3],["rw",3],["ch1csr",3]]]],[11,"ch1_div","","INT and FRAC form a fixed-point fractional number. …",440,[[],[["ch1div",3],["rw",3],["reg",3]]]],[11,"ch1_ctr","","Direct access to the PWM counter",440,[[],[["reg",3],["ch1ctr",3],["rw",3]]]],[11,"ch1_cc","","Counter compare values",440,[[],[["reg",3],["ch1cc",3],["rw",3]]]],[11,"ch1_top","","Counter wrap value",440,[[],[["ch1top",3],["rw",3],["reg",3]]]],[11,"ch2_csr","","Control and status register",440,[[],[["reg",3],["ch2csr",3],["rw",3]]]],[11,"ch2_div","","INT and FRAC form a fixed-point fractional number. …",440,[[],[["ch2div",3],["rw",3],["reg",3]]]],[11,"ch2_ctr","","Direct access to the PWM counter",440,[[],[["rw",3],["ch2ctr",3],["reg",3]]]],[11,"ch2_cc","","Counter compare values",440,[[],[["ch2cc",3],["reg",3],["rw",3]]]],[11,"ch2_top","","Counter wrap value",440,[[],[["ch2top",3],["rw",3],["reg",3]]]],[11,"ch3_csr","","Control and status register",440,[[],[["reg",3],["rw",3],["ch3csr",3]]]],[11,"ch3_div","","INT and FRAC form a fixed-point fractional number. …",440,[[],[["reg",3],["ch3div",3],["rw",3]]]],[11,"ch3_ctr","","Direct access to the PWM counter",440,[[],[["ch3ctr",3],["rw",3],["reg",3]]]],[11,"ch3_cc","","Counter compare values",440,[[],[["rw",3],["reg",3],["ch3cc",3]]]],[11,"ch3_top","","Counter wrap value",440,[[],[["rw",3],["ch3top",3],["reg",3]]]],[11,"ch4_csr","","Control and status register",440,[[],[["rw",3],["ch4csr",3],["reg",3]]]],[11,"ch4_div","","INT and FRAC form a fixed-point fractional number. …",440,[[],[["reg",3],["rw",3],["ch4div",3]]]],[11,"ch4_ctr","","Direct access to the PWM counter",440,[[],[["reg",3],["ch4ctr",3],["rw",3]]]],[11,"ch4_cc","","Counter compare values",440,[[],[["rw",3],["reg",3],["ch4cc",3]]]],[11,"ch4_top","","Counter wrap value",440,[[],[["ch4top",3],["rw",3],["reg",3]]]],[11,"ch5_csr","","Control and status register",440,[[],[["ch5csr",3],["rw",3],["reg",3]]]],[11,"ch5_div","","INT and FRAC form a fixed-point fractional number. …",440,[[],[["rw",3],["reg",3],["ch5div",3]]]],[11,"ch5_ctr","","Direct access to the PWM counter",440,[[],[["reg",3],["ch5ctr",3],["rw",3]]]],[11,"ch5_cc","","Counter compare values",440,[[],[["reg",3],["ch5cc",3],["rw",3]]]],[11,"ch5_top","","Counter wrap value",440,[[],[["ch5top",3],["reg",3],["rw",3]]]],[11,"ch6_csr","","Control and status register",440,[[],[["ch6csr",3],["reg",3],["rw",3]]]],[11,"ch6_div","","INT and FRAC form a fixed-point fractional number. …",440,[[],[["reg",3],["rw",3],["ch6div",3]]]],[11,"ch6_ctr","","Direct access to the PWM counter",440,[[],[["ch6ctr",3],["rw",3],["reg",3]]]],[11,"ch6_cc","","Counter compare values",440,[[],[["ch6cc",3],["reg",3],["rw",3]]]],[11,"ch6_top","","Counter wrap value",440,[[],[["ch6top",3],["rw",3],["reg",3]]]],[11,"ch7_csr","","Control and status register",440,[[],[["reg",3],["ch7csr",3],["rw",3]]]],[11,"ch7_div","","INT and FRAC form a fixed-point fractional number. …",440,[[],[["reg",3],["ch7div",3],["rw",3]]]],[11,"ch7_ctr","","Direct access to the PWM counter",440,[[],[["reg",3],["rw",3],["ch7ctr",3]]]],[11,"ch7_cc","","Counter compare values",440,[[],[["ch7cc",3],["rw",3],["reg",3]]]],[11,"ch7_top","","Counter wrap value",440,[[],[["reg",3],["ch7top",3],["rw",3]]]],[11,"en","","This register aliases the CSR_EN bits for all channels. …",440,[[],[["reg",3],["en",3],["rw",3]]]],[11,"intr","","Raw Interrupts",440,[[],[["reg",3],["intr",3],["rw",3]]]],[11,"inte","","Interrupt Enable",440,[[],[["rw",3],["inte",3],["reg",3]]]],[11,"intf","","Interrupt Force",440,[[],[["intf",3],["reg",3],["rw",3]]]],[11,"ints","","Interrupt status after masking & forcing",440,[[],[["ints",3],["reg",3],["rw",3]]]],[0,"resets","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::resets","",null,null],[3,"Peripherals","rp2040_pac2::resets::regs","Reset control. If a bit is set it means the peripheral is …",null,null],[12,"0","","",441,null],[11,"usbctrl","","",441,[[],["bool",15]]],[11,"set_usbctrl","","",441,[[["bool",15]]]],[11,"uart1","","",441,[[],["bool",15]]],[11,"set_uart1","","",441,[[["bool",15]]]],[11,"uart0","","",441,[[],["bool",15]]],[11,"set_uart0","","",441,[[["bool",15]]]],[11,"timer","","",441,[[],["bool",15]]],[11,"set_timer","","",441,[[["bool",15]]]],[11,"tbman","","",441,[[],["bool",15]]],[11,"set_tbman","","",441,[[["bool",15]]]],[11,"sysinfo","","",441,[[],["bool",15]]],[11,"set_sysinfo","","",441,[[["bool",15]]]],[11,"syscfg","","",441,[[],["bool",15]]],[11,"set_syscfg","","",441,[[["bool",15]]]],[11,"spi1","","",441,[[],["bool",15]]],[11,"set_spi1","","",441,[[["bool",15]]]],[11,"spi0","","",441,[[],["bool",15]]],[11,"set_spi0","","",441,[[["bool",15]]]],[11,"rtc","","",441,[[],["bool",15]]],[11,"set_rtc","","",441,[[["bool",15]]]],[11,"pwm","","",441,[[],["bool",15]]],[11,"set_pwm","","",441,[[["bool",15]]]],[11,"pll_usb","","",441,[[],["bool",15]]],[11,"set_pll_usb","","",441,[[["bool",15]]]],[11,"pll_sys","","",441,[[],["bool",15]]],[11,"set_pll_sys","","",441,[[["bool",15]]]],[11,"pio1","","",441,[[],["bool",15]]],[11,"set_pio1","","",441,[[["bool",15]]]],[11,"pio0","","",441,[[],["bool",15]]],[11,"set_pio0","","",441,[[["bool",15]]]],[11,"pads_qspi","","",441,[[],["bool",15]]],[11,"set_pads_qspi","","",441,[[["bool",15]]]],[11,"pads_bank0","","",441,[[],["bool",15]]],[11,"set_pads_bank0","","",441,[[["bool",15]]]],[11,"jtag","","",441,[[],["bool",15]]],[11,"set_jtag","","",441,[[["bool",15]]]],[11,"io_qspi","","",441,[[],["bool",15]]],[11,"set_io_qspi","","",441,[[["bool",15]]]],[11,"io_bank0","","",441,[[],["bool",15]]],[11,"set_io_bank0","","",441,[[["bool",15]]]],[11,"i2c1","","",441,[[],["bool",15]]],[11,"set_i2c1","","",441,[[["bool",15]]]],[11,"i2c0","","",441,[[],["bool",15]]],[11,"set_i2c0","","",441,[[["bool",15]]]],[11,"dma","","",441,[[],["bool",15]]],[11,"set_dma","","",441,[[["bool",15]]]],[11,"busctrl","","",441,[[],["bool",15]]],[11,"set_busctrl","","",441,[[["bool",15]]]],[11,"adc","","",441,[[],["bool",15]]],[11,"set_adc","","",441,[[["bool",15]]]],[3,"Wdsel","","Watchdog select. If a bit is set then the watchdog will …",null,null],[12,"0","","",442,null],[11,"usbctrl","","",442,[[],["bool",15]]],[11,"set_usbctrl","","",442,[[["bool",15]]]],[11,"uart1","","",442,[[],["bool",15]]],[11,"set_uart1","","",442,[[["bool",15]]]],[11,"uart0","","",442,[[],["bool",15]]],[11,"set_uart0","","",442,[[["bool",15]]]],[11,"timer","","",442,[[],["bool",15]]],[11,"set_timer","","",442,[[["bool",15]]]],[11,"tbman","","",442,[[],["bool",15]]],[11,"set_tbman","","",442,[[["bool",15]]]],[11,"sysinfo","","",442,[[],["bool",15]]],[11,"set_sysinfo","","",442,[[["bool",15]]]],[11,"syscfg","","",442,[[],["bool",15]]],[11,"set_syscfg","","",442,[[["bool",15]]]],[11,"spi1","","",442,[[],["bool",15]]],[11,"set_spi1","","",442,[[["bool",15]]]],[11,"spi0","","",442,[[],["bool",15]]],[11,"set_spi0","","",442,[[["bool",15]]]],[11,"rtc","","",442,[[],["bool",15]]],[11,"set_rtc","","",442,[[["bool",15]]]],[11,"pwm","","",442,[[],["bool",15]]],[11,"set_pwm","","",442,[[["bool",15]]]],[11,"pll_usb","","",442,[[],["bool",15]]],[11,"set_pll_usb","","",442,[[["bool",15]]]],[11,"pll_sys","","",442,[[],["bool",15]]],[11,"set_pll_sys","","",442,[[["bool",15]]]],[11,"pio1","","",442,[[],["bool",15]]],[11,"set_pio1","","",442,[[["bool",15]]]],[11,"pio0","","",442,[[],["bool",15]]],[11,"set_pio0","","",442,[[["bool",15]]]],[11,"pads_qspi","","",442,[[],["bool",15]]],[11,"set_pads_qspi","","",442,[[["bool",15]]]],[11,"pads_bank0","","",442,[[],["bool",15]]],[11,"set_pads_bank0","","",442,[[["bool",15]]]],[11,"jtag","","",442,[[],["bool",15]]],[11,"set_jtag","","",442,[[["bool",15]]]],[11,"io_qspi","","",442,[[],["bool",15]]],[11,"set_io_qspi","","",442,[[["bool",15]]]],[11,"io_bank0","","",442,[[],["bool",15]]],[11,"set_io_bank0","","",442,[[["bool",15]]]],[11,"i2c1","","",442,[[],["bool",15]]],[11,"set_i2c1","","",442,[[["bool",15]]]],[11,"i2c0","","",442,[[],["bool",15]]],[11,"set_i2c0","","",442,[[["bool",15]]]],[11,"dma","","",442,[[],["bool",15]]],[11,"set_dma","","",442,[[["bool",15]]]],[11,"busctrl","","",442,[[],["bool",15]]],[11,"set_busctrl","","",442,[[["bool",15]]]],[11,"adc","","",442,[[],["bool",15]]],[11,"set_adc","","",442,[[["bool",15]]]],[3,"Resets","rp2040_pac2::resets","",null,null],[12,"0","","",443,null],[11,"reset","","Reset control. If a bit is set it means the peripheral is …",443,[[],[["peripherals",3],["rw",3],["reg",3]]]],[11,"wdsel","","Watchdog select. If a bit is set then the watchdog will …",443,[[],[["wdsel",3],["reg",3],["rw",3]]]],[11,"reset_done","","Reset done. If a bit is set then a reset done signal has …",443,[[],[["peripherals",3],["rw",3],["reg",3]]]],[0,"rosc","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::rosc","",null,null],[3,"Div","rp2040_pac2::rosc::regs","Controls the output divider",null,null],[12,"0","","",444,null],[11,"div","","set to 0xaa0 + div where div = 0 divides by 32 div = 1-31 …",444,[[],["div",3]]],[11,"set_div","","set to 0xaa0 + div where div = 0 divides by 32 div = 1-31 …",444,[[["div",3]]]],[3,"Freqa","","The FREQA & FREQB registers control the frequency by …",null,null],[12,"0","","",445,null],[11,"passwd","","Set to 0x9696 to apply the settings Any other value in …",445,[[],["passwd",3]]],[11,"set_passwd","","Set to 0x9696 to apply the settings Any other value in …",445,[[["passwd",3]]]],[11,"ds3","","Stage 3 drive strength",445,[[],["u8",15]]],[11,"set_ds3","","Stage 3 drive strength",445,[[["u8",15]]]],[11,"ds2","","Stage 2 drive strength",445,[[],["u8",15]]],[11,"set_ds2","","Stage 2 drive strength",445,[[["u8",15]]]],[11,"ds1","","Stage 1 drive strength",445,[[],["u8",15]]],[11,"set_ds1","","Stage 1 drive strength",445,[[["u8",15]]]],[11,"ds0","","Stage 0 drive strength",445,[[],["u8",15]]],[11,"set_ds0","","Stage 0 drive strength",445,[[["u8",15]]]],[3,"Freqb","","For a detailed description see freqa register",null,null],[12,"0","","",446,null],[11,"passwd","","Set to 0x9696 to apply the settings Any other value in …",446,[[],["passwd",3]]],[11,"set_passwd","","Set to 0x9696 to apply the settings Any other value in …",446,[[["passwd",3]]]],[11,"ds7","","Stage 7 drive strength",446,[[],["u8",15]]],[11,"set_ds7","","Stage 7 drive strength",446,[[["u8",15]]]],[11,"ds6","","Stage 6 drive strength",446,[[],["u8",15]]],[11,"set_ds6","","Stage 6 drive strength",446,[[["u8",15]]]],[11,"ds5","","Stage 5 drive strength",446,[[],["u8",15]]],[11,"set_ds5","","Stage 5 drive strength",446,[[["u8",15]]]],[11,"ds4","","Stage 4 drive strength",446,[[],["u8",15]]],[11,"set_ds4","","Stage 4 drive strength",446,[[["u8",15]]]],[3,"Ctrl","","Ring Oscillator control",null,null],[12,"0","","",447,null],[11,"enable","","On power-up this field is initialised to ENABLE The …",447,[[],["ctrlenable",3]]],[11,"set_enable","","On power-up this field is initialised to ENABLE The …",447,[[["ctrlenable",3]]]],[11,"freq_range","","Controls the number of delay stages in the ROSC ring LOW …",447,[[],["ctrlfreqrange",3]]],[11,"set_freq_range","","Controls the number of delay stages in the ROSC ring LOW …",447,[[["ctrlfreqrange",3]]]],[3,"Count","","A down counter running at the ROSC frequency which counts …",null,null],[12,"0","","",448,null],[11,"count","","",448,[[],["u8",15]]],[11,"set_count","","",448,[[["u8",15]]]],[3,"Status","","Ring Oscillator Status",null,null],[12,"0","","",449,null],[11,"stable","","Oscillator is running and stable",449,[[],["bool",15]]],[11,"set_stable","","Oscillator is running and stable",449,[[["bool",15]]]],[11,"badwrite","","An invalid value has been written to CTRL_ENABLE or …",449,[[],["bool",15]]],[11,"set_badwrite","","An invalid value has been written to CTRL_ENABLE or …",449,[[["bool",15]]]],[11,"div_running","","post-divider is running this resets to 0 but transitions …",449,[[],["bool",15]]],[11,"set_div_running","","post-divider is running this resets to 0 but transitions …",449,[[["bool",15]]]],[11,"enabled","","Oscillator is enabled but not necessarily running and …",449,[[],["bool",15]]],[11,"set_enabled","","Oscillator is enabled but not necessarily running and …",449,[[["bool",15]]]],[3,"Phase","","Controls the phase shifted output",null,null],[12,"0","","",450,null],[11,"passwd","","set to 0xaa0 any other value enables the output with …",450,[[],["u8",15]]],[11,"set_passwd","","set to 0xaa0 any other value enables the output with …",450,[[["u8",15]]]],[11,"enable","","enable the phase-shifted output this can be changed …",450,[[],["bool",15]]],[11,"set_enable","","enable the phase-shifted output this can be changed …",450,[[["bool",15]]]],[11,"flip","","invert the phase-shifted output this is ignored when div=1",450,[[],["bool",15]]],[11,"set_flip","","invert the phase-shifted output this is ignored when div=1",450,[[["bool",15]]]],[11,"shift","","phase shift the phase-shifted output by SHIFT input …",450,[[],["u8",15]]],[11,"set_shift","","phase shift the phase-shifted output by SHIFT input …",450,[[["u8",15]]]],[3,"Randombit","","This just reads the state of the oscillator output so …",null,null],[12,"0","","",451,null],[11,"randombit","","",451,[[],["bool",15]]],[11,"set_randombit","","",451,[[["bool",15]]]],[0,"vals","rp2040_pac2::rosc","",null,null],[3,"CtrlEnable","rp2040_pac2::rosc::vals","Ring Oscillator control",null,null],[12,"0","","",452,null],[18,"DISABLE","","",452,null],[18,"ENABLE","","",452,null],[3,"Passwd","","For a detailed description see freqa register",null,null],[12,"0","","",453,null],[18,"PASS","","",453,null],[3,"CtrlFreqRange","","Ring Oscillator control",null,null],[12,"0","","",454,null],[18,"LOW","","",454,null],[18,"MEDIUM","","",454,null],[18,"HIGH","","",454,null],[18,"TOOHIGH","","",454,null],[3,"Div","","Controls the output divider",null,null],[12,"0","","",455,null],[18,"PASS","","",455,null],[3,"Rosc","rp2040_pac2::rosc","",null,null],[12,"0","","",456,null],[11,"ctrl","","Ring Oscillator control",456,[[],[["ctrl",3],["rw",3],["reg",3]]]],[11,"freqa","","The FREQA & FREQB registers control the frequency by …",456,[[],[["freqa",3],["reg",3],["rw",3]]]],[11,"freqb","","For a detailed description see freqa register",456,[[],[["freqb",3],["reg",3],["rw",3]]]],[11,"dormant","","Ring Oscillator pause control This is used to save power …",456,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"div","","Controls the output divider",456,[[],[["reg",3],["div",3],["rw",3]]]],[11,"phase","","Controls the phase shifted output",456,[[],[["reg",3],["phase",3],["rw",3]]]],[11,"status","","Ring Oscillator Status",456,[[],[["rw",3],["reg",3],["status",3]]]],[11,"randombit","","This just reads the state of the oscillator output so …",456,[[],[["reg",3],["randombit",3],["rw",3]]]],[11,"count","","A down counter running at the ROSC frequency which counts …",456,[[],[["count",3],["reg",3],["rw",3]]]],[0,"rtc","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::rtc","",null,null],[3,"Ctrl","rp2040_pac2::rtc::regs","RTC Control and status",null,null],[12,"0","","",457,null],[11,"force_notleapyear","","If set, leapyear is forced off. Useful for years …",457,[[],["bool",15]]],[11,"set_force_notleapyear","","If set, leapyear is forced off. Useful for years …",457,[[["bool",15]]]],[11,"load","","Load RTC",457,[[],["bool",15]]],[11,"set_load","","Load RTC",457,[[["bool",15]]]],[11,"rtc_active","","RTC enabled (running)",457,[[],["bool",15]]],[11,"set_rtc_active","","RTC enabled (running)",457,[[["bool",15]]]],[11,"rtc_enable","","Enable RTC",457,[[],["bool",15]]],[11,"set_rtc_enable","","Enable RTC",457,[[["bool",15]]]],[3,"ClkdivM1","","Divider minus 1 for the 1 second counter. Safe to change …",null,null],[12,"0","","",458,null],[11,"clkdiv_m1","","",458,[[],["u16",15]]],[11,"set_clkdiv_m1","","",458,[[["u16",15]]]],[3,"Rtc0","","RTC register 0 Read this before RTC 1!",null,null],[12,"0","","",459,null],[11,"dotw","","Day of the week",459,[[],["u8",15]]],[11,"set_dotw","","Day of the week",459,[[["u8",15]]]],[11,"hour","","Hours",459,[[],["u8",15]]],[11,"set_hour","","Hours",459,[[["u8",15]]]],[11,"min","","Minutes",459,[[],["u8",15]]],[11,"set_min","","Minutes",459,[[["u8",15]]]],[11,"sec","","Seconds",459,[[],["u8",15]]],[11,"set_sec","","Seconds",459,[[["u8",15]]]],[3,"IrqSetup1","","Interrupt setup register 1",null,null],[12,"0","","",460,null],[11,"dotw_ena","","Enable day of the week matching",460,[[],["bool",15]]],[11,"set_dotw_ena","","Enable day of the week matching",460,[[["bool",15]]]],[11,"hour_ena","","Enable hour matching",460,[[],["bool",15]]],[11,"set_hour_ena","","Enable hour matching",460,[[["bool",15]]]],[11,"min_ena","","Enable minute matching",460,[[],["bool",15]]],[11,"set_min_ena","","Enable minute matching",460,[[["bool",15]]]],[11,"sec_ena","","Enable second matching",460,[[],["bool",15]]],[11,"set_sec_ena","","Enable second matching",460,[[["bool",15]]]],[11,"dotw","","Day of the week",460,[[],["u8",15]]],[11,"set_dotw","","Day of the week",460,[[["u8",15]]]],[11,"hour","","Hours",460,[[],["u8",15]]],[11,"set_hour","","Hours",460,[[["u8",15]]]],[11,"min","","Minutes",460,[[],["u8",15]]],[11,"set_min","","Minutes",460,[[["u8",15]]]],[11,"sec","","Seconds",460,[[],["u8",15]]],[11,"set_sec","","Seconds",460,[[["u8",15]]]],[3,"Rtc1","","RTC register 1.",null,null],[12,"0","","",461,null],[11,"year","","Year",461,[[],["u16",15]]],[11,"set_year","","Year",461,[[["u16",15]]]],[11,"month","","Month (1..12)",461,[[],["u8",15]]],[11,"set_month","","Month (1..12)",461,[[["u8",15]]]],[11,"day","","Day of the month (1..31)",461,[[],["u8",15]]],[11,"set_day","","Day of the month (1..31)",461,[[["u8",15]]]],[3,"Inte","","Interrupt Enable",null,null],[12,"0","","",462,null],[11,"rtc","","",462,[[],["bool",15]]],[11,"set_rtc","","",462,[[["bool",15]]]],[3,"Ints","","Interrupt status after masking & forcing",null,null],[12,"0","","",463,null],[11,"rtc","","",463,[[],["bool",15]]],[11,"set_rtc","","",463,[[["bool",15]]]],[3,"Intf","","Interrupt Force",null,null],[12,"0","","",464,null],[11,"rtc","","",464,[[],["bool",15]]],[11,"set_rtc","","",464,[[["bool",15]]]],[3,"Setup1","","RTC setup register 1",null,null],[12,"0","","",465,null],[11,"dotw","","Day of the week: 1-Monday…0-Sunday ISO 8601 mod 7",465,[[],["u8",15]]],[11,"set_dotw","","Day of the week: 1-Monday…0-Sunday ISO 8601 mod 7",465,[[["u8",15]]]],[11,"hour","","Hours",465,[[],["u8",15]]],[11,"set_hour","","Hours",465,[[["u8",15]]]],[11,"min","","Minutes",465,[[],["u8",15]]],[11,"set_min","","Minutes",465,[[["u8",15]]]],[11,"sec","","Seconds",465,[[],["u8",15]]],[11,"set_sec","","Seconds",465,[[["u8",15]]]],[3,"IrqSetup0","","Interrupt setup register 0",null,null],[12,"0","","",466,null],[11,"match_active","","",466,[[],["bool",15]]],[11,"set_match_active","","",466,[[["bool",15]]]],[11,"match_ena","","Global match enable. Don’t change any other value while …",466,[[],["bool",15]]],[11,"set_match_ena","","Global match enable. Don’t change any other value while …",466,[[["bool",15]]]],[11,"year_ena","","Enable year matching",466,[[],["bool",15]]],[11,"set_year_ena","","Enable year matching",466,[[["bool",15]]]],[11,"month_ena","","Enable month matching",466,[[],["bool",15]]],[11,"set_month_ena","","Enable month matching",466,[[["bool",15]]]],[11,"day_ena","","Enable day matching",466,[[],["bool",15]]],[11,"set_day_ena","","Enable day matching",466,[[["bool",15]]]],[11,"year","","Year",466,[[],["u16",15]]],[11,"set_year","","Year",466,[[["u16",15]]]],[11,"month","","Month (1..12)",466,[[],["u8",15]]],[11,"set_month","","Month (1..12)",466,[[["u8",15]]]],[11,"day","","Day of the month (1..31)",466,[[],["u8",15]]],[11,"set_day","","Day of the month (1..31)",466,[[["u8",15]]]],[3,"Setup0","","RTC setup register 0",null,null],[12,"0","","",467,null],[11,"year","","Year",467,[[],["u16",15]]],[11,"set_year","","Year",467,[[["u16",15]]]],[11,"month","","Month (1..12)",467,[[],["u8",15]]],[11,"set_month","","Month (1..12)",467,[[["u8",15]]]],[11,"day","","Day of the month (1..31)",467,[[],["u8",15]]],[11,"set_day","","Day of the month (1..31)",467,[[["u8",15]]]],[3,"Intr","","Raw Interrupts",null,null],[12,"0","","",468,null],[11,"rtc","","",468,[[],["bool",15]]],[11,"set_rtc","","",468,[[["bool",15]]]],[3,"Rtc","rp2040_pac2::rtc","Register block to control RTC",null,null],[12,"0","","",469,null],[11,"clkdiv_m1","","Divider minus 1 for the 1 second counter. Safe to change …",469,[[],[["reg",3],["clkdivm1",3],["rw",3]]]],[11,"setup_0","","RTC setup register 0",469,[[],[["reg",3],["rw",3],["setup0",3]]]],[11,"setup_1","","RTC setup register 1",469,[[],[["reg",3],["setup1",3],["rw",3]]]],[11,"ctrl","","RTC Control and status",469,[[],[["reg",3],["ctrl",3],["rw",3]]]],[11,"irq_setup_0","","Interrupt setup register 0",469,[[],[["irqsetup0",3],["rw",3],["reg",3]]]],[11,"irq_setup_1","","Interrupt setup register 1",469,[[],[["irqsetup1",3],["rw",3],["reg",3]]]],[11,"rtc_1","","RTC register 1.",469,[[],[["rtc1",3],["reg",3],["rw",3]]]],[11,"rtc_0","","RTC register 0 Read this before RTC 1!",469,[[],[["rw",3],["reg",3],["rtc0",3]]]],[11,"intr","","Raw Interrupts",469,[[],[["intr",3],["reg",3],["rw",3]]]],[11,"inte","","Interrupt Enable",469,[[],[["reg",3],["inte",3],["rw",3]]]],[11,"intf","","Interrupt Force",469,[[],[["reg",3],["rw",3],["intf",3]]]],[11,"ints","","Interrupt status after masking & forcing",469,[[],[["reg",3],["rw",3],["ints",3]]]],[0,"sio","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::sio","",null,null],[3,"Interp0CtrlLane0","rp2040_pac2::sio::regs","Control register for lane 0",null,null],[12,"0","","",470,null],[11,"overf","","Set if either OVERF0 or OVERF1 is set.",470,[[],["bool",15]]],[11,"set_overf","","Set if either OVERF0 or OVERF1 is set.",470,[[["bool",15]]]],[11,"overf1","","Indicates if any masked-off MSBs in ACCUM1 are set.",470,[[],["bool",15]]],[11,"set_overf1","","Indicates if any masked-off MSBs in ACCUM1 are set.",470,[[["bool",15]]]],[11,"overf0","","Indicates if any masked-off MSBs in ACCUM0 are set.",470,[[],["bool",15]]],[11,"set_overf0","","Indicates if any masked-off MSBs in ACCUM0 are set.",470,[[["bool",15]]]],[11,"blend","","Only present on INTERP0 on each core. If BLEND mode is …",470,[[],["bool",15]]],[11,"set_blend","","Only present on INTERP0 on each core. If BLEND mode is …",470,[[["bool",15]]]],[11,"force_msb","","ORed into bits 29:28 of the lane result presented to the …",470,[[],["u8",15]]],[11,"set_force_msb","","ORed into bits 29:28 of the lane result presented to the …",470,[[["u8",15]]]],[11,"add_raw","","If 1, mask + shift is bypassed for LANE0 result. This …",470,[[],["bool",15]]],[11,"set_add_raw","","If 1, mask + shift is bypassed for LANE0 result. This …",470,[[["bool",15]]]],[11,"cross_result","","If 1, feed the opposite lane’s result into this lane’…",470,[[],["bool",15]]],[11,"set_cross_result","","If 1, feed the opposite lane’s result into this lane’…",470,[[["bool",15]]]],[11,"cross_input","","If 1, feed the opposite lane’s accumulator into this …",470,[[],["bool",15]]],[11,"set_cross_input","","If 1, feed the opposite lane’s accumulator into this …",470,[[["bool",15]]]],[11,"signed","","If SIGNED is set, the shifted and masked accumulator …",470,[[],["bool",15]]],[11,"set_signed","","If SIGNED is set, the shifted and masked accumulator …",470,[[["bool",15]]]],[11,"mask_msb","","The most-significant bit allowed to pass by the mask …",470,[[],["u8",15]]],[11,"set_mask_msb","","The most-significant bit allowed to pass by the mask …",470,[[["u8",15]]]],[11,"mask_lsb","","The least-significant bit allowed to pass by the mask …",470,[[],["u8",15]]],[11,"set_mask_lsb","","The least-significant bit allowed to pass by the mask …",470,[[["u8",15]]]],[11,"shift","","Logical right-shift applied to accumulator before masking",470,[[],["u8",15]]],[11,"set_shift","","Logical right-shift applied to accumulator before masking",470,[[["u8",15]]]],[3,"Interp1CtrlLane1","","Control register for lane 1",null,null],[12,"0","","",471,null],[11,"force_msb","","ORed into bits 29:28 of the lane result presented to the …",471,[[],["u8",15]]],[11,"set_force_msb","","ORed into bits 29:28 of the lane result presented to the …",471,[[["u8",15]]]],[11,"add_raw","","If 1, mask + shift is bypassed for LANE1 result. This …",471,[[],["bool",15]]],[11,"set_add_raw","","If 1, mask + shift is bypassed for LANE1 result. This …",471,[[["bool",15]]]],[11,"cross_result","","If 1, feed the opposite lane’s result into this lane’…",471,[[],["bool",15]]],[11,"set_cross_result","","If 1, feed the opposite lane’s result into this lane’…",471,[[["bool",15]]]],[11,"cross_input","","If 1, feed the opposite lane’s accumulator into this …",471,[[],["bool",15]]],[11,"set_cross_input","","If 1, feed the opposite lane’s accumulator into this …",471,[[["bool",15]]]],[11,"signed","","If SIGNED is set, the shifted and masked accumulator …",471,[[],["bool",15]]],[11,"set_signed","","If SIGNED is set, the shifted and masked accumulator …",471,[[["bool",15]]]],[11,"mask_msb","","The most-significant bit allowed to pass by the mask …",471,[[],["u8",15]]],[11,"set_mask_msb","","The most-significant bit allowed to pass by the mask …",471,[[["u8",15]]]],[11,"mask_lsb","","The least-significant bit allowed to pass by the mask …",471,[[],["u8",15]]],[11,"set_mask_lsb","","The least-significant bit allowed to pass by the mask …",471,[[["u8",15]]]],[11,"shift","","Logical right-shift applied to accumulator before masking",471,[[],["u8",15]]],[11,"set_shift","","Logical right-shift applied to accumulator before masking",471,[[["u8",15]]]],[3,"Interp0Accum0Add","","Values written here are atomically added to ACCUM0 …",null,null],[12,"0","","",472,null],[11,"interp0_accum0_add","","",472,[[],["u32",15]]],[11,"set_interp0_accum0_add","","",472,[[["u32",15]]]],[3,"Interp0Accum1Add","","Values written here are atomically added to ACCUM1 …",null,null],[12,"0","","",473,null],[11,"interp0_accum1_add","","",473,[[],["u32",15]]],[11,"set_interp0_accum1_add","","",473,[[["u32",15]]]],[3,"DivCsr","","Control and status register for divider.",null,null],[12,"0","","",474,null],[11,"dirty","","Changes to 1 when any register is written, and back to 0 …",474,[[],["bool",15]]],[11,"set_dirty","","Changes to 1 when any register is written, and back to 0 …",474,[[["bool",15]]]],[11,"ready","","Reads as 0 when a calculation is in progress, 1 …",474,[[],["bool",15]]],[11,"set_ready","","Reads as 0 when a calculation is in progress, 1 …",474,[[["bool",15]]]],[3,"Interp1Accum1Add","","Values written here are atomically added to ACCUM1 …",null,null],[12,"0","","",475,null],[11,"interp1_accum1_add","","",475,[[],["u32",15]]],[11,"set_interp1_accum1_add","","",475,[[["u32",15]]]],[3,"Interp1Accum0Add","","Values written here are atomically added to ACCUM0 …",null,null],[12,"0","","",476,null],[11,"interp1_accum0_add","","",476,[[],["u32",15]]],[11,"set_interp1_accum0_add","","",476,[[["u32",15]]]],[3,"FifoSt","","Status register for inter-core FIFOs (mailboxes). There …",null,null],[12,"0","","",477,null],[11,"roe","","Sticky flag indicating the RX FIFO was read when empty. …",477,[[],["bool",15]]],[11,"set_roe","","Sticky flag indicating the RX FIFO was read when empty. …",477,[[["bool",15]]]],[11,"wof","","Sticky flag indicating the TX FIFO was written when full. …",477,[[],["bool",15]]],[11,"set_wof","","Sticky flag indicating the TX FIFO was written when full. …",477,[[["bool",15]]]],[11,"rdy","","Value is 1 if this core’s TX FIFO is not full (i.e. if …",477,[[],["bool",15]]],[11,"set_rdy","","Value is 1 if this core’s TX FIFO is not full (i.e. if …",477,[[["bool",15]]]],[11,"vld","","Value is 1 if this core’s RX FIFO is not empty (i.e. if …",477,[[],["bool",15]]],[11,"set_vld","","Value is 1 if this core’s RX FIFO is not empty (i.e. if …",477,[[["bool",15]]]],[3,"Interp1CtrlLane0","","Control register for lane 0",null,null],[12,"0","","",478,null],[11,"overf","","Set if either OVERF0 or OVERF1 is set.",478,[[],["bool",15]]],[11,"set_overf","","Set if either OVERF0 or OVERF1 is set.",478,[[["bool",15]]]],[11,"overf1","","Indicates if any masked-off MSBs in ACCUM1 are set.",478,[[],["bool",15]]],[11,"set_overf1","","Indicates if any masked-off MSBs in ACCUM1 are set.",478,[[["bool",15]]]],[11,"overf0","","Indicates if any masked-off MSBs in ACCUM0 are set.",478,[[],["bool",15]]],[11,"set_overf0","","Indicates if any masked-off MSBs in ACCUM0 are set.",478,[[["bool",15]]]],[11,"clamp","","Only present on INTERP1 on each core. If CLAMP mode is …",478,[[],["bool",15]]],[11,"set_clamp","","Only present on INTERP1 on each core. If CLAMP mode is …",478,[[["bool",15]]]],[11,"force_msb","","ORed into bits 29:28 of the lane result presented to the …",478,[[],["u8",15]]],[11,"set_force_msb","","ORed into bits 29:28 of the lane result presented to the …",478,[[["u8",15]]]],[11,"add_raw","","If 1, mask + shift is bypassed for LANE0 result. This …",478,[[],["bool",15]]],[11,"set_add_raw","","If 1, mask + shift is bypassed for LANE0 result. This …",478,[[["bool",15]]]],[11,"cross_result","","If 1, feed the opposite lane’s result into this lane’…",478,[[],["bool",15]]],[11,"set_cross_result","","If 1, feed the opposite lane’s result into this lane’…",478,[[["bool",15]]]],[11,"cross_input","","If 1, feed the opposite lane’s accumulator into this …",478,[[],["bool",15]]],[11,"set_cross_input","","If 1, feed the opposite lane’s accumulator into this …",478,[[["bool",15]]]],[11,"signed","","If SIGNED is set, the shifted and masked accumulator …",478,[[],["bool",15]]],[11,"set_signed","","If SIGNED is set, the shifted and masked accumulator …",478,[[["bool",15]]]],[11,"mask_msb","","The most-significant bit allowed to pass by the mask …",478,[[],["u8",15]]],[11,"set_mask_msb","","The most-significant bit allowed to pass by the mask …",478,[[["u8",15]]]],[11,"mask_lsb","","The least-significant bit allowed to pass by the mask …",478,[[],["u8",15]]],[11,"set_mask_lsb","","The least-significant bit allowed to pass by the mask …",478,[[["u8",15]]]],[11,"shift","","Logical right-shift applied to accumulator before masking",478,[[],["u8",15]]],[11,"set_shift","","Logical right-shift applied to accumulator before masking",478,[[["u8",15]]]],[3,"Interp0CtrlLane1","","Control register for lane 1",null,null],[12,"0","","",479,null],[11,"force_msb","","ORed into bits 29:28 of the lane result presented to the …",479,[[],["u8",15]]],[11,"set_force_msb","","ORed into bits 29:28 of the lane result presented to the …",479,[[["u8",15]]]],[11,"add_raw","","If 1, mask + shift is bypassed for LANE1 result. This …",479,[[],["bool",15]]],[11,"set_add_raw","","If 1, mask + shift is bypassed for LANE1 result. This …",479,[[["bool",15]]]],[11,"cross_result","","If 1, feed the opposite lane’s result into this lane’…",479,[[],["bool",15]]],[11,"set_cross_result","","If 1, feed the opposite lane’s result into this lane’…",479,[[["bool",15]]]],[11,"cross_input","","If 1, feed the opposite lane’s accumulator into this …",479,[[],["bool",15]]],[11,"set_cross_input","","If 1, feed the opposite lane’s accumulator into this …",479,[[["bool",15]]]],[11,"signed","","If SIGNED is set, the shifted and masked accumulator …",479,[[],["bool",15]]],[11,"set_signed","","If SIGNED is set, the shifted and masked accumulator …",479,[[["bool",15]]]],[11,"mask_msb","","The most-significant bit allowed to pass by the mask …",479,[[],["u8",15]]],[11,"set_mask_msb","","The most-significant bit allowed to pass by the mask …",479,[[["u8",15]]]],[11,"mask_lsb","","The least-significant bit allowed to pass by the mask …",479,[[],["u8",15]]],[11,"set_mask_lsb","","The least-significant bit allowed to pass by the mask …",479,[[["u8",15]]]],[11,"shift","","Logical right-shift applied to accumulator before masking",479,[[],["u8",15]]],[11,"set_shift","","Logical right-shift applied to accumulator before masking",479,[[["u8",15]]]],[3,"Fifo","rp2040_pac2::sio","",null,null],[12,"0","","",480,null],[11,"st","","Status register for inter-core FIFOs (mailboxes). There …",480,[[],[["fifost",3],["reg",3],["rw",3]]]],[11,"wr","","Write access to this core’s TX FIFO",480,[[],[["u32",15],["w",3],["reg",3]]]],[11,"rd","","Read access to this core’s RX FIFO",480,[[],[["u32",15],["reg",3],["r",3]]]],[3,"Gpio","","",null,null],[12,"0","","",481,null],[11,"value","","QSPI output value",481,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"value_set","","QSPI output value set",481,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"value_clr","","QSPI output value clear",481,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"value_xor","","QSPI output value XOR",481,[[],[["u32",15],["reg",3],["rw",3]]]],[3,"Interp","","",null,null],[12,"0","","",482,null],[11,"accum0","","Read/write access to accumulator 0",482,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"accum1","","Read/write access to accumulator 1",482,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"base0","","Read/write access to BASE0 register.",482,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"base1","","Read/write access to BASE1 register.",482,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"base2","","Read/write access to BASE2 register.",482,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"pop_lane0","","Read LANE0 result, and simultaneously write lane results …",482,[[],[["u32",15],["reg",3],["r",3]]]],[11,"pop_lane1","","Read LANE1 result, and simultaneously write lane results …",482,[[],[["u32",15],["reg",3],["r",3]]]],[11,"pop_full","","Read FULL result, and simultaneously write lane results …",482,[[],[["u32",15],["reg",3],["r",3]]]],[11,"peek_lane0","","Read LANE0 result, without altering any internal state …",482,[[],[["u32",15],["reg",3],["r",3]]]],[11,"peek_lane1","","Read LANE1 result, without altering any internal state …",482,[[],[["u32",15],["reg",3],["r",3]]]],[11,"peek_full","","Read FULL result, without altering any internal state …",482,[[],[["u32",15],["reg",3],["r",3]]]],[11,"ctrl_lane0","","Control register for lane 0",482,[[],[["reg",3],["rw",3],["interp0ctrllane0",3]]]],[11,"ctrl_lane1","","Control register for lane 1",482,[[],[["interp0ctrllane1",3],["reg",3],["rw",3]]]],[11,"accum0_add","","Values written here are atomically added to ACCUM0 …",482,[[],[["interp0accum0add",3],["reg",3],["rw",3]]]],[11,"accum1_add","","Values written here are atomically added to ACCUM1 …",482,[[],[["reg",3],["rw",3],["interp0accum1add",3]]]],[11,"base_1and0","","On write, the lower 16 bits go to BASE0, upper bits to …",482,[[],[["u32",15],["reg",3],["rw",3]]]],[3,"Div","","",null,null],[12,"0","","",483,null],[11,"udividend","","Divider unsigned dividend Write to the DIVIDEND operand …",483,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"udivisor","","Divider unsigned divisor Write to the DIVISOR operand of …",483,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"sdividend","","Divider signed dividend The same as UDIVIDEND, but starts …",483,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"sdivisor","","Divider signed divisor The same as UDIVISOR, but starts a …",483,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"quotient","","Divider result quotient The result of <code>DIVIDEND / DIVISOR</code> …",483,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"remainder","","Divider result remainder The result of <code>DIVIDEND % DIVISOR</code> …",483,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"csr","","Control and status register for divider.",483,[[],[["divcsr",3],["rw",3],["reg",3]]]],[3,"Sio","","Single-cycle IO block Provides core-local and inter-core …",null,null],[12,"0","","",484,null],[11,"cpuid","","Processor core identifier Value is 0 when read from …",484,[[],[["u32",15],["reg",3],["r",3]]]],[11,"spinlock_st","","Spinlock state A bitmap containing the state of all 32 …",484,[[],[["u32",15],["reg",3],["r",3]]]],[11,"div","","",484,[[],["div",3]]],[11,"fifo","","",484,[[],["fifo",3]]],[11,"interp","","",484,[[["usize",15]],["interp",3]]],[11,"spinlock","","Reading from a spinlock address will: - Return 0 if lock …",484,[[["usize",15]],[["u32",15],["reg",3],["r",3]]]],[11,"gpio_oe","","",484,[[["usize",15]],["gpio",3]]],[11,"gpio_in","","Input value for GPIO pins",484,[[["usize",15]],[["u32",15],["reg",3],["rw",3]]]],[11,"gpio_out","","",484,[[["usize",15]],["gpio",3]]],[0,"spi","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::spi","",null,null],[3,"Sspris","rp2040_pac2::spi::regs","Raw interrupt status register, SSPRIS on page 3-10",null,null],[12,"0","","",485,null],[11,"txris","","Gives the raw interrupt state, prior to masking, of the …",485,[[],["bool",15]]],[11,"set_txris","","Gives the raw interrupt state, prior to masking, of the …",485,[[["bool",15]]]],[11,"rxris","","Gives the raw interrupt state, prior to masking, of the …",485,[[],["bool",15]]],[11,"set_rxris","","Gives the raw interrupt state, prior to masking, of the …",485,[[["bool",15]]]],[11,"rtris","","Gives the raw interrupt state, prior to masking, of the …",485,[[],["bool",15]]],[11,"set_rtris","","Gives the raw interrupt state, prior to masking, of the …",485,[[["bool",15]]]],[11,"rorris","","Gives the raw interrupt state, prior to masking, of the …",485,[[],["bool",15]]],[11,"set_rorris","","Gives the raw interrupt state, prior to masking, of the …",485,[[["bool",15]]]],[3,"Sspperiphid0","","Peripheral identification registers, SSPPeriphID0-3 on …",null,null],[12,"0","","",486,null],[11,"partnumber0","","These bits read back as 0x22",486,[[],["u8",15]]],[11,"set_partnumber0","","These bits read back as 0x22",486,[[["u8",15]]]],[3,"Sspicr","","Interrupt clear register, SSPICR on page 3-11",null,null],[12,"0","","",487,null],[11,"rtic","","Clears the SSPRTINTR interrupt",487,[[],["bool",15]]],[11,"set_rtic","","Clears the SSPRTINTR interrupt",487,[[["bool",15]]]],[11,"roric","","Clears the SSPRORINTR interrupt",487,[[],["bool",15]]],[11,"set_roric","","Clears the SSPRORINTR interrupt",487,[[["bool",15]]]],[3,"Sspcr0","","Control register 0, SSPCR0 on page 3-4",null,null],[12,"0","","",488,null],[11,"scr","","Serial clock rate. The value SCR is used to generate the …",488,[[],["u8",15]]],[11,"set_scr","","Serial clock rate. The value SCR is used to generate the …",488,[[["u8",15]]]],[11,"sph","","SSPCLKOUT phase, applicable to Motorola SPI frame format …",488,[[],["bool",15]]],[11,"set_sph","","SSPCLKOUT phase, applicable to Motorola SPI frame format …",488,[[["bool",15]]]],[11,"spo","","SSPCLKOUT polarity, applicable to Motorola SPI frame …",488,[[],["bool",15]]],[11,"set_spo","","SSPCLKOUT polarity, applicable to Motorola SPI frame …",488,[[["bool",15]]]],[11,"frf","","Frame format: 00 Motorola SPI frame format. 01 TI …",488,[[],["u8",15]]],[11,"set_frf","","Frame format: 00 Motorola SPI frame format. 01 TI …",488,[[["u8",15]]]],[11,"dss","","Data Size Select: 0000 Reserved, undefined operation. …",488,[[],["u8",15]]],[11,"set_dss","","Data Size Select: 0000 Reserved, undefined operation. …",488,[[["u8",15]]]],[3,"Sspcr1","","Control register 1, SSPCR1 on page 3-5",null,null],[12,"0","","",489,null],[11,"sod","","Slave-mode output disable. This bit is relevant only in …",489,[[],["bool",15]]],[11,"set_sod","","Slave-mode output disable. This bit is relevant only in …",489,[[["bool",15]]]],[11,"ms","","Master or slave mode select. This bit can be modified …",489,[[],["bool",15]]],[11,"set_ms","","Master or slave mode select. This bit can be modified …",489,[[["bool",15]]]],[11,"sse","","Synchronous serial port enable: 0 SSP operation disabled. …",489,[[],["bool",15]]],[11,"set_sse","","Synchronous serial port enable: 0 SSP operation disabled. …",489,[[["bool",15]]]],[11,"lbm","","Loop back mode: 0 Normal serial port operation enabled. 1 …",489,[[],["bool",15]]],[11,"set_lbm","","Loop back mode: 0 Normal serial port operation enabled. 1 …",489,[[["bool",15]]]],[3,"Sspdmacr","","DMA control register, SSPDMACR on page 3-12",null,null],[12,"0","","",490,null],[11,"txdmae","","Transmit DMA Enable. If this bit is set to 1, DMA for the …",490,[[],["bool",15]]],[11,"set_txdmae","","Transmit DMA Enable. If this bit is set to 1, DMA for the …",490,[[["bool",15]]]],[11,"rxdmae","","Receive DMA Enable. If this bit is set to 1, DMA for the …",490,[[],["bool",15]]],[11,"set_rxdmae","","Receive DMA Enable. If this bit is set to 1, DMA for the …",490,[[["bool",15]]]],[3,"Sspperiphid2","","Peripheral identification registers, SSPPeriphID0-3 on …",null,null],[12,"0","","",491,null],[11,"revision","","These bits return the peripheral revision",491,[[],["u8",15]]],[11,"set_revision","","These bits return the peripheral revision",491,[[["u8",15]]]],[11,"designer1","","These bits read back as 0x4",491,[[],["u8",15]]],[11,"set_designer1","","These bits read back as 0x4",491,[[["u8",15]]]],[3,"Ssppcellid2","","PrimeCell identification registers, SSPPCellID0-3 on page …",null,null],[12,"0","","",492,null],[11,"ssppcellid2","","These bits read back as 0x05",492,[[],["u8",15]]],[11,"set_ssppcellid2","","These bits read back as 0x05",492,[[["u8",15]]]],[3,"Ssppcellid0","","PrimeCell identification registers, SSPPCellID0-3 on page …",null,null],[12,"0","","",493,null],[11,"ssppcellid0","","These bits read back as 0x0D",493,[[],["u8",15]]],[11,"set_ssppcellid0","","These bits read back as 0x0D",493,[[["u8",15]]]],[3,"Ssppcellid3","","PrimeCell identification registers, SSPPCellID0-3 on page …",null,null],[12,"0","","",494,null],[11,"ssppcellid3","","These bits read back as 0xB1",494,[[],["u8",15]]],[11,"set_ssppcellid3","","These bits read back as 0xB1",494,[[["u8",15]]]],[3,"Sspperiphid1","","Peripheral identification registers, SSPPeriphID0-3 on …",null,null],[12,"0","","",495,null],[11,"designer0","","These bits read back as 0x1",495,[[],["u8",15]]],[11,"set_designer0","","These bits read back as 0x1",495,[[["u8",15]]]],[11,"partnumber1","","These bits read back as 0x0",495,[[],["u8",15]]],[11,"set_partnumber1","","These bits read back as 0x0",495,[[["u8",15]]]],[3,"Ssppcellid1","","PrimeCell identification registers, SSPPCellID0-3 on page …",null,null],[12,"0","","",496,null],[11,"ssppcellid1","","These bits read back as 0xF0",496,[[],["u8",15]]],[11,"set_ssppcellid1","","These bits read back as 0xF0",496,[[["u8",15]]]],[3,"Sspperiphid3","","Peripheral identification registers, SSPPeriphID0-3 on …",null,null],[12,"0","","",497,null],[11,"configuration","","These bits read back as 0x00",497,[[],["u8",15]]],[11,"set_configuration","","These bits read back as 0x00",497,[[["u8",15]]]],[3,"Sspcpsr","","Clock prescale register, SSPCPSR on page 3-8",null,null],[12,"0","","",498,null],[11,"cpsdvsr","","Clock prescale divisor. Must be an even number from …",498,[[],["u8",15]]],[11,"set_cpsdvsr","","Clock prescale divisor. Must be an even number from …",498,[[["u8",15]]]],[3,"Sspdr","","Data register, SSPDR on page 3-6",null,null],[12,"0","","",499,null],[11,"data","","Transmit/Receive FIFO: Read Receive FIFO. Write Transmit …",499,[[],["u16",15]]],[11,"set_data","","Transmit/Receive FIFO: Read Receive FIFO. Write Transmit …",499,[[["u16",15]]]],[3,"Sspsr","","Status register, SSPSR on page 3-7",null,null],[12,"0","","",500,null],[11,"bsy","","PrimeCell SSP busy flag, RO: 0 SSP is idle. 1 SSP is …",500,[[],["bool",15]]],[11,"set_bsy","","PrimeCell SSP busy flag, RO: 0 SSP is idle. 1 SSP is …",500,[[["bool",15]]]],[11,"rff","","Receive FIFO full, RO: 0 Receive FIFO is not full. 1 …",500,[[],["bool",15]]],[11,"set_rff","","Receive FIFO full, RO: 0 Receive FIFO is not full. 1 …",500,[[["bool",15]]]],[11,"rne","","Receive FIFO not empty, RO: 0 Receive FIFO is empty. 1 …",500,[[],["bool",15]]],[11,"set_rne","","Receive FIFO not empty, RO: 0 Receive FIFO is empty. 1 …",500,[[["bool",15]]]],[11,"tnf","","Transmit FIFO not full, RO: 0 Transmit FIFO is full. 1 …",500,[[],["bool",15]]],[11,"set_tnf","","Transmit FIFO not full, RO: 0 Transmit FIFO is full. 1 …",500,[[["bool",15]]]],[11,"tfe","","Transmit FIFO empty, RO: 0 Transmit FIFO is not empty. 1 …",500,[[],["bool",15]]],[11,"set_tfe","","Transmit FIFO empty, RO: 0 Transmit FIFO is not empty. 1 …",500,[[["bool",15]]]],[3,"Sspimsc","","Interrupt mask set or clear register, SSPIMSC on page 3-9",null,null],[12,"0","","",501,null],[11,"txim","","Transmit FIFO interrupt mask: 0 Transmit FIFO half empty …",501,[[],["bool",15]]],[11,"set_txim","","Transmit FIFO interrupt mask: 0 Transmit FIFO half empty …",501,[[["bool",15]]]],[11,"rxim","","Receive FIFO interrupt mask: 0 Receive FIFO half full or …",501,[[],["bool",15]]],[11,"set_rxim","","Receive FIFO interrupt mask: 0 Receive FIFO half full or …",501,[[["bool",15]]]],[11,"rtim","","Receive timeout interrupt mask: 0 Receive FIFO not empty …",501,[[],["bool",15]]],[11,"set_rtim","","Receive timeout interrupt mask: 0 Receive FIFO not empty …",501,[[["bool",15]]]],[11,"rorim","","Receive overrun interrupt mask: 0 Receive FIFO written to …",501,[[],["bool",15]]],[11,"set_rorim","","Receive overrun interrupt mask: 0 Receive FIFO written to …",501,[[["bool",15]]]],[3,"Sspmis","","Masked interrupt status register, SSPMIS on page 3-11",null,null],[12,"0","","",502,null],[11,"txmis","","Gives the transmit FIFO masked interrupt state, after …",502,[[],["bool",15]]],[11,"set_txmis","","Gives the transmit FIFO masked interrupt state, after …",502,[[["bool",15]]]],[11,"rxmis","","Gives the receive FIFO masked interrupt state, after …",502,[[],["bool",15]]],[11,"set_rxmis","","Gives the receive FIFO masked interrupt state, after …",502,[[["bool",15]]]],[11,"rtmis","","Gives the receive timeout masked interrupt state, after …",502,[[],["bool",15]]],[11,"set_rtmis","","Gives the receive timeout masked interrupt state, after …",502,[[["bool",15]]]],[11,"rormis","","Gives the receive over run masked interrupt status, after …",502,[[],["bool",15]]],[11,"set_rormis","","Gives the receive over run masked interrupt status, after …",502,[[["bool",15]]]],[3,"Spi","rp2040_pac2::spi","",null,null],[12,"0","","",503,null],[11,"sspcr0","","Control register 0, SSPCR0 on page 3-4",503,[[],[["rw",3],["reg",3],["sspcr0",3]]]],[11,"sspcr1","","Control register 1, SSPCR1 on page 3-5",503,[[],[["reg",3],["rw",3],["sspcr1",3]]]],[11,"sspdr","","Data register, SSPDR on page 3-6",503,[[],[["sspdr",3],["rw",3],["reg",3]]]],[11,"sspsr","","Status register, SSPSR on page 3-7",503,[[],[["sspsr",3],["reg",3],["rw",3]]]],[11,"sspcpsr","","Clock prescale register, SSPCPSR on page 3-8",503,[[],[["reg",3],["sspcpsr",3],["rw",3]]]],[11,"sspimsc","","Interrupt mask set or clear register, SSPIMSC on page 3-9",503,[[],[["sspimsc",3],["rw",3],["reg",3]]]],[11,"sspris","","Raw interrupt status register, SSPRIS on page 3-10",503,[[],[["reg",3],["rw",3],["sspris",3]]]],[11,"sspmis","","Masked interrupt status register, SSPMIS on page 3-11",503,[[],[["sspmis",3],["rw",3],["reg",3]]]],[11,"sspicr","","Interrupt clear register, SSPICR on page 3-11",503,[[],[["sspicr",3],["reg",3],["rw",3]]]],[11,"sspdmacr","","DMA control register, SSPDMACR on page 3-12",503,[[],[["reg",3],["sspdmacr",3],["rw",3]]]],[11,"sspperiphid0","","Peripheral identification registers, SSPPeriphID0-3 on …",503,[[],[["rw",3],["reg",3],["sspperiphid0",3]]]],[11,"sspperiphid1","","Peripheral identification registers, SSPPeriphID0-3 on …",503,[[],[["rw",3],["sspperiphid1",3],["reg",3]]]],[11,"sspperiphid2","","Peripheral identification registers, SSPPeriphID0-3 on …",503,[[],[["sspperiphid2",3],["reg",3],["rw",3]]]],[11,"sspperiphid3","","Peripheral identification registers, SSPPeriphID0-3 on …",503,[[],[["rw",3],["reg",3],["sspperiphid3",3]]]],[11,"ssppcellid0","","PrimeCell identification registers, SSPPCellID0-3 on page …",503,[[],[["ssppcellid0",3],["rw",3],["reg",3]]]],[11,"ssppcellid1","","PrimeCell identification registers, SSPPCellID0-3 on page …",503,[[],[["reg",3],["ssppcellid1",3],["rw",3]]]],[11,"ssppcellid2","","PrimeCell identification registers, SSPPCellID0-3 on page …",503,[[],[["ssppcellid2",3],["rw",3],["reg",3]]]],[11,"ssppcellid3","","PrimeCell identification registers, SSPPCellID0-3 on page …",503,[[],[["reg",3],["ssppcellid3",3],["rw",3]]]],[0,"syscfg","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::syscfg","",null,null],[3,"Mempowerdown","rp2040_pac2::syscfg::regs","Control power downs to memories. Set high to power down …",null,null],[12,"0","","",504,null],[11,"rom","","",504,[[],["bool",15]]],[11,"set_rom","","",504,[[["bool",15]]]],[11,"usb","","",504,[[],["bool",15]]],[11,"set_usb","","",504,[[["bool",15]]]],[11,"sram5","","",504,[[],["bool",15]]],[11,"set_sram5","","",504,[[["bool",15]]]],[11,"sram4","","",504,[[],["bool",15]]],[11,"set_sram4","","",504,[[["bool",15]]]],[11,"sram3","","",504,[[],["bool",15]]],[11,"set_sram3","","",504,[[["bool",15]]]],[11,"sram2","","",504,[[],["bool",15]]],[11,"set_sram2","","",504,[[["bool",15]]]],[11,"sram1","","",504,[[],["bool",15]]],[11,"set_sram1","","",504,[[["bool",15]]]],[11,"sram0","","",504,[[],["bool",15]]],[11,"set_sram0","","",504,[[["bool",15]]]],[3,"ProcInSyncBypass","","For each bit, if 1, bypass the input synchronizer between …",null,null],[12,"0","","",505,null],[11,"proc_in_sync_bypass","","",505,[[],["u32",15]]],[11,"set_proc_in_sync_bypass","","",505,[[["u32",15]]]],[3,"ProcConfig","","Configuration for processors",null,null],[12,"0","","",506,null],[11,"proc1_dap_instid","","Configure proc1 DAP instance ID. Recommend that this is …",506,[[],["u8",15]]],[11,"set_proc1_dap_instid","","Configure proc1 DAP instance ID. Recommend that this is …",506,[[["u8",15]]]],[11,"proc0_dap_instid","","Configure proc0 DAP instance ID. Recommend that this is …",506,[[],["u8",15]]],[11,"set_proc0_dap_instid","","Configure proc0 DAP instance ID. Recommend that this is …",506,[[["u8",15]]]],[11,"proc1_halted","","Indication that proc1 has halted",506,[[],["bool",15]]],[11,"set_proc1_halted","","Indication that proc1 has halted",506,[[["bool",15]]]],[11,"proc0_halted","","Indication that proc0 has halted",506,[[],["bool",15]]],[11,"set_proc0_halted","","Indication that proc0 has halted",506,[[["bool",15]]]],[3,"Dbgforce","","Directly control the SWD debug port of either processor",null,null],[12,"0","","",507,null],[11,"proc1_attach","","Attach processor 1 debug port to syscfg controls, and …",507,[[],["bool",15]]],[11,"set_proc1_attach","","Attach processor 1 debug port to syscfg controls, and …",507,[[["bool",15]]]],[11,"proc1_swclk","","Directly drive processor 1 SWCLK, if PROC1_ATTACH is set",507,[[],["bool",15]]],[11,"set_proc1_swclk","","Directly drive processor 1 SWCLK, if PROC1_ATTACH is set",507,[[["bool",15]]]],[11,"proc1_swdi","","Directly drive processor 1 SWDIO input, if PROC1_ATTACH …",507,[[],["bool",15]]],[11,"set_proc1_swdi","","Directly drive processor 1 SWDIO input, if PROC1_ATTACH …",507,[[["bool",15]]]],[11,"proc1_swdo","","Observe the value of processor 1 SWDIO output.",507,[[],["bool",15]]],[11,"set_proc1_swdo","","Observe the value of processor 1 SWDIO output.",507,[[["bool",15]]]],[11,"proc0_attach","","Attach processor 0 debug port to syscfg controls, and …",507,[[],["bool",15]]],[11,"set_proc0_attach","","Attach processor 0 debug port to syscfg controls, and …",507,[[["bool",15]]]],[11,"proc0_swclk","","Directly drive processor 0 SWCLK, if PROC0_ATTACH is set",507,[[],["bool",15]]],[11,"set_proc0_swclk","","Directly drive processor 0 SWCLK, if PROC0_ATTACH is set",507,[[["bool",15]]]],[11,"proc0_swdi","","Directly drive processor 0 SWDIO input, if PROC0_ATTACH …",507,[[],["bool",15]]],[11,"set_proc0_swdi","","Directly drive processor 0 SWDIO input, if PROC0_ATTACH …",507,[[["bool",15]]]],[11,"proc0_swdo","","Observe the value of processor 0 SWDIO output.",507,[[],["bool",15]]],[11,"set_proc0_swdo","","Observe the value of processor 0 SWDIO output.",507,[[["bool",15]]]],[3,"ProcInSyncBypassHi","","For each bit, if 1, bypass the input synchronizer between …",null,null],[12,"0","","",508,null],[11,"proc_in_sync_bypass_hi","","",508,[[],["u8",15]]],[11,"set_proc_in_sync_bypass_hi","","",508,[[["u8",15]]]],[3,"Syscfg","rp2040_pac2::syscfg","Register block for various chip control signals",null,null],[12,"0","","",509,null],[11,"proc0_nmi_mask","","Processor core 0 NMI source mask Set a bit high to enable …",509,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"proc1_nmi_mask","","Processor core 1 NMI source mask Set a bit high to enable …",509,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"proc_config","","Configuration for processors",509,[[],[["procconfig",3],["rw",3],["reg",3]]]],[11,"proc_in_sync_bypass","","For each bit, if 1, bypass the input synchronizer between …",509,[[],[["rw",3],["reg",3],["procinsyncbypass",3]]]],[11,"proc_in_sync_bypass_hi","","For each bit, if 1, bypass the input synchronizer between …",509,[[],[["rw",3],["reg",3],["procinsyncbypasshi",3]]]],[11,"dbgforce","","Directly control the SWD debug port of either processor",509,[[],[["reg",3],["dbgforce",3],["rw",3]]]],[11,"mempowerdown","","Control power downs to memories. Set high to power down …",509,[[],[["mempowerdown",3],["rw",3],["reg",3]]]],[0,"sysinfo","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::sysinfo","",null,null],[3,"ChipId","rp2040_pac2::sysinfo::regs","JEDEC JEP-106 compliant chip identifier.",null,null],[12,"0","","",510,null],[11,"revision","","",510,[[],["u8",15]]],[11,"set_revision","","",510,[[["u8",15]]]],[11,"part","","",510,[[],["u16",15]]],[11,"set_part","","",510,[[["u16",15]]]],[11,"manufacturer","","",510,[[],["u16",15]]],[11,"set_manufacturer","","",510,[[["u16",15]]]],[3,"Platform","","Platform register. Allows software to know what …",null,null],[12,"0","","",511,null],[11,"asic","","",511,[[],["bool",15]]],[11,"set_asic","","",511,[[["bool",15]]]],[11,"fpga","","",511,[[],["bool",15]]],[11,"set_fpga","","",511,[[["bool",15]]]],[3,"Sysinfo","rp2040_pac2::sysinfo","",null,null],[12,"0","","",512,null],[11,"chip_id","","JEDEC JEP-106 compliant chip identifier.",512,[[],[["chipid",3],["rw",3],["reg",3]]]],[11,"platform","","Platform register. Allows software to know what …",512,[[],[["reg",3],["platform",3],["rw",3]]]],[11,"gitref_rp2040","","Git hash of the chip source. Used to identify chip …",512,[[],[["u32",15],["reg",3],["r",3]]]],[0,"tbman","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::tbman","",null,null],[3,"Platform","rp2040_pac2::tbman::regs","Indicates the type of platform in use",null,null],[12,"0","","",513,null],[11,"fpga","","Indicates the platform is an FPGA",513,[[],["bool",15]]],[11,"set_fpga","","Indicates the platform is an FPGA",513,[[["bool",15]]]],[11,"asic","","Indicates the platform is an ASIC",513,[[],["bool",15]]],[11,"set_asic","","Indicates the platform is an ASIC",513,[[["bool",15]]]],[3,"Tbman","rp2040_pac2::tbman","Testbench manager. Allows the programmer to know what …",null,null],[12,"0","","",514,null],[11,"platform","","Indicates the type of platform in use",514,[[],[["rw",3],["reg",3],["platform",3]]]],[0,"timer","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::timer","",null,null],[3,"Armed","rp2040_pac2::timer::regs","Indicates the armed/disarmed status of each alarm. A …",null,null],[12,"0","","",515,null],[11,"armed","","",515,[[],["u8",15]]],[11,"set_armed","","",515,[[["u8",15]]]],[3,"Intr","","Raw Interrupts",null,null],[12,"0","","",516,null],[11,"alarm_3","","",516,[[],["bool",15]]],[11,"set_alarm_3","","",516,[[["bool",15]]]],[11,"alarm_2","","",516,[[],["bool",15]]],[11,"set_alarm_2","","",516,[[["bool",15]]]],[11,"alarm_1","","",516,[[],["bool",15]]],[11,"set_alarm_1","","",516,[[["bool",15]]]],[11,"alarm_0","","",516,[[],["bool",15]]],[11,"set_alarm_0","","",516,[[["bool",15]]]],[3,"Intf","","Interrupt Force",null,null],[12,"0","","",517,null],[11,"alarm_3","","",517,[[],["bool",15]]],[11,"set_alarm_3","","",517,[[["bool",15]]]],[11,"alarm_2","","",517,[[],["bool",15]]],[11,"set_alarm_2","","",517,[[["bool",15]]]],[11,"alarm_1","","",517,[[],["bool",15]]],[11,"set_alarm_1","","",517,[[["bool",15]]]],[11,"alarm_0","","",517,[[],["bool",15]]],[11,"set_alarm_0","","",517,[[["bool",15]]]],[3,"Ints","","Interrupt status after masking & forcing",null,null],[12,"0","","",518,null],[11,"alarm_3","","",518,[[],["bool",15]]],[11,"set_alarm_3","","",518,[[["bool",15]]]],[11,"alarm_2","","",518,[[],["bool",15]]],[11,"set_alarm_2","","",518,[[["bool",15]]]],[11,"alarm_1","","",518,[[],["bool",15]]],[11,"set_alarm_1","","",518,[[["bool",15]]]],[11,"alarm_0","","",518,[[],["bool",15]]],[11,"set_alarm_0","","",518,[[["bool",15]]]],[3,"Inte","","Interrupt Enable",null,null],[12,"0","","",519,null],[11,"alarm_3","","",519,[[],["bool",15]]],[11,"set_alarm_3","","",519,[[["bool",15]]]],[11,"alarm_2","","",519,[[],["bool",15]]],[11,"set_alarm_2","","",519,[[["bool",15]]]],[11,"alarm_1","","",519,[[],["bool",15]]],[11,"set_alarm_1","","",519,[[["bool",15]]]],[11,"alarm_0","","",519,[[],["bool",15]]],[11,"set_alarm_0","","",519,[[["bool",15]]]],[3,"Pause","","Set high to pause the timer",null,null],[12,"0","","",520,null],[11,"pause","","",520,[[],["bool",15]]],[11,"set_pause","","",520,[[["bool",15]]]],[3,"Dbgpause","","Set bits high to enable pause when the corresponding …",null,null],[12,"0","","",521,null],[11,"dbg1","","Pause when processor 1 is in debug mode",521,[[],["bool",15]]],[11,"set_dbg1","","Pause when processor 1 is in debug mode",521,[[["bool",15]]]],[11,"dbg0","","Pause when processor 0 is in debug mode",521,[[],["bool",15]]],[11,"set_dbg0","","Pause when processor 0 is in debug mode",521,[[["bool",15]]]],[3,"Timer","rp2040_pac2::timer","Controls time and alarms time is a 64 bit value …",null,null],[12,"0","","",522,null],[11,"timehw","","Write to bits 63:32 of time always write timelw before …",522,[[],[["u32",15],["w",3],["reg",3]]]],[11,"timelw","","Write to bits 31:0 of time writes do not get copied to …",522,[[],[["u32",15],["w",3],["reg",3]]]],[11,"timehr","","Read from bits 63:32 of time always read timelr before …",522,[[],[["u32",15],["reg",3],["r",3]]]],[11,"timelr","","Read from bits 31:0 of time",522,[[],[["u32",15],["reg",3],["r",3]]]],[11,"alarm0","","Arm alarm 0, and configure the time it will fire. Once …",522,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"alarm1","","Arm alarm 1, and configure the time it will fire. Once …",522,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"alarm2","","Arm alarm 2, and configure the time it will fire. Once …",522,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"alarm3","","Arm alarm 3, and configure the time it will fire. Once …",522,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"armed","","Indicates the armed/disarmed status of each alarm. A …",522,[[],[["reg",3],["armed",3],["rw",3]]]],[11,"timerawh","","Raw read from bits 63:32 of time (no side effects)",522,[[],[["u32",15],["reg",3],["r",3]]]],[11,"timerawl","","Raw read from bits 31:0 of time (no side effects)",522,[[],[["u32",15],["reg",3],["r",3]]]],[11,"dbgpause","","Set bits high to enable pause when the corresponding …",522,[[],[["dbgpause",3],["reg",3],["rw",3]]]],[11,"pause","","Set high to pause the timer",522,[[],[["reg",3],["pause",3],["rw",3]]]],[11,"intr","","Raw Interrupts",522,[[],[["intr",3],["rw",3],["reg",3]]]],[11,"inte","","Interrupt Enable",522,[[],[["inte",3],["reg",3],["rw",3]]]],[11,"intf","","Interrupt Force",522,[[],[["rw",3],["reg",3],["intf",3]]]],[11,"ints","","Interrupt status after masking & forcing",522,[[],[["ints",3],["reg",3],["rw",3]]]],[0,"uart","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::uart","",null,null],[3,"Uartperiphid3","rp2040_pac2::uart::regs","UARTPeriphID3 Register",null,null],[12,"0","","",523,null],[11,"configuration","","These bits read back as 0x00",523,[[],["u8",15]]],[11,"set_configuration","","These bits read back as 0x00",523,[[["u8",15]]]],[3,"Uartris","","Raw Interrupt Status Register, UARTRIS",null,null],[12,"0","","",524,null],[11,"oeris","","Overrun error interrupt status. Returns the raw interrupt …",524,[[],["bool",15]]],[11,"set_oeris","","Overrun error interrupt status. Returns the raw interrupt …",524,[[["bool",15]]]],[11,"beris","","Break error interrupt status. Returns the raw interrupt …",524,[[],["bool",15]]],[11,"set_beris","","Break error interrupt status. Returns the raw interrupt …",524,[[["bool",15]]]],[11,"peris","","Parity error interrupt status. Returns the raw interrupt …",524,[[],["bool",15]]],[11,"set_peris","","Parity error interrupt status. Returns the raw interrupt …",524,[[["bool",15]]]],[11,"feris","","Framing error interrupt status. Returns the raw interrupt …",524,[[],["bool",15]]],[11,"set_feris","","Framing error interrupt status. Returns the raw interrupt …",524,[[["bool",15]]]],[11,"rtris","","Receive timeout interrupt status. Returns the raw …",524,[[],["bool",15]]],[11,"set_rtris","","Receive timeout interrupt status. Returns the raw …",524,[[["bool",15]]]],[11,"txris","","Transmit interrupt status. Returns the raw interrupt …",524,[[],["bool",15]]],[11,"set_txris","","Transmit interrupt status. Returns the raw interrupt …",524,[[["bool",15]]]],[11,"rxris","","Receive interrupt status. Returns the raw interrupt state …",524,[[],["bool",15]]],[11,"set_rxris","","Receive interrupt status. Returns the raw interrupt state …",524,[[["bool",15]]]],[11,"dsrrmis","","nUARTDSR modem interrupt status. Returns the raw …",524,[[],["bool",15]]],[11,"set_dsrrmis","","nUARTDSR modem interrupt status. Returns the raw …",524,[[["bool",15]]]],[11,"dcdrmis","","nUARTDCD modem interrupt status. Returns the raw …",524,[[],["bool",15]]],[11,"set_dcdrmis","","nUARTDCD modem interrupt status. Returns the raw …",524,[[["bool",15]]]],[11,"ctsrmis","","nUARTCTS modem interrupt status. Returns the raw …",524,[[],["bool",15]]],[11,"set_ctsrmis","","nUARTCTS modem interrupt status. Returns the raw …",524,[[["bool",15]]]],[11,"rirmis","","nUARTRI modem interrupt status. Returns the raw interrupt …",524,[[],["bool",15]]],[11,"set_rirmis","","nUARTRI modem interrupt status. Returns the raw interrupt …",524,[[["bool",15]]]],[3,"Uartperiphid2","","UARTPeriphID2 Register",null,null],[12,"0","","",525,null],[11,"revision","","This field depends on the revision of the UART: r1p0 0x0 …",525,[[],["u8",15]]],[11,"set_revision","","This field depends on the revision of the UART: r1p0 0x0 …",525,[[["u8",15]]]],[11,"designer1","","These bits read back as 0x4",525,[[],["u8",15]]],[11,"set_designer1","","These bits read back as 0x4",525,[[["u8",15]]]],[3,"Uartmis","","Masked Interrupt Status Register, UARTMIS",null,null],[12,"0","","",526,null],[11,"oemis","","Overrun error masked interrupt status. Returns the masked …",526,[[],["bool",15]]],[11,"set_oemis","","Overrun error masked interrupt status. Returns the masked …",526,[[["bool",15]]]],[11,"bemis","","Break error masked interrupt status. Returns the masked …",526,[[],["bool",15]]],[11,"set_bemis","","Break error masked interrupt status. Returns the masked …",526,[[["bool",15]]]],[11,"pemis","","Parity error masked interrupt status. Returns the masked …",526,[[],["bool",15]]],[11,"set_pemis","","Parity error masked interrupt status. Returns the masked …",526,[[["bool",15]]]],[11,"femis","","Framing error masked interrupt status. Returns the masked …",526,[[],["bool",15]]],[11,"set_femis","","Framing error masked interrupt status. Returns the masked …",526,[[["bool",15]]]],[11,"rtmis","","Receive timeout masked interrupt status. Returns the …",526,[[],["bool",15]]],[11,"set_rtmis","","Receive timeout masked interrupt status. Returns the …",526,[[["bool",15]]]],[11,"txmis","","Transmit masked interrupt status. Returns the masked …",526,[[],["bool",15]]],[11,"set_txmis","","Transmit masked interrupt status. Returns the masked …",526,[[["bool",15]]]],[11,"rxmis","","Receive masked interrupt status. Returns the masked …",526,[[],["bool",15]]],[11,"set_rxmis","","Receive masked interrupt status. Returns the masked …",526,[[["bool",15]]]],[11,"dsrmmis","","nUARTDSR modem masked interrupt status. Returns the …",526,[[],["bool",15]]],[11,"set_dsrmmis","","nUARTDSR modem masked interrupt status. Returns the …",526,[[["bool",15]]]],[11,"dcdmmis","","nUARTDCD modem masked interrupt status. Returns the …",526,[[],["bool",15]]],[11,"set_dcdmmis","","nUARTDCD modem masked interrupt status. Returns the …",526,[[["bool",15]]]],[11,"ctsmmis","","nUARTCTS modem masked interrupt status. Returns the …",526,[[],["bool",15]]],[11,"set_ctsmmis","","nUARTCTS modem masked interrupt status. Returns the …",526,[[["bool",15]]]],[11,"rimmis","","nUARTRI modem masked interrupt status. Returns the masked …",526,[[],["bool",15]]],[11,"set_rimmis","","nUARTRI modem masked interrupt status. Returns the masked …",526,[[["bool",15]]]],[3,"Uartfbrd","","Fractional Baud Rate Register, UARTFBRD",null,null],[12,"0","","",527,null],[11,"baud_divfrac","","The fractional baud rate divisor. These bits are cleared …",527,[[],["u8",15]]],[11,"set_baud_divfrac","","The fractional baud rate divisor. These bits are cleared …",527,[[["u8",15]]]],[3,"Uartibrd","","Integer Baud Rate Register, UARTIBRD",null,null],[12,"0","","",528,null],[11,"baud_divint","","The integer baud rate divisor. These bits are cleared to …",528,[[],["u16",15]]],[11,"set_baud_divint","","The integer baud rate divisor. These bits are cleared to …",528,[[["u16",15]]]],[3,"Uartfr","","Flag Register, UARTFR",null,null],[12,"0","","",529,null],[11,"ri","","Ring indicator. This bit is the complement of the UART …",529,[[],["bool",15]]],[11,"set_ri","","Ring indicator. This bit is the complement of the UART …",529,[[["bool",15]]]],[11,"txfe","","Transmit FIFO empty. The meaning of this bit depends on …",529,[[],["bool",15]]],[11,"set_txfe","","Transmit FIFO empty. The meaning of this bit depends on …",529,[[["bool",15]]]],[11,"rxff","","Receive FIFO full. The meaning of this bit depends on the …",529,[[],["bool",15]]],[11,"set_rxff","","Receive FIFO full. The meaning of this bit depends on the …",529,[[["bool",15]]]],[11,"txff","","Transmit FIFO full. The meaning of this bit depends on …",529,[[],["bool",15]]],[11,"set_txff","","Transmit FIFO full. The meaning of this bit depends on …",529,[[["bool",15]]]],[11,"rxfe","","Receive FIFO empty. The meaning of this bit depends on …",529,[[],["bool",15]]],[11,"set_rxfe","","Receive FIFO empty. The meaning of this bit depends on …",529,[[["bool",15]]]],[11,"busy","","UART busy. If this bit is set to 1, the UART is busy …",529,[[],["bool",15]]],[11,"set_busy","","UART busy. If this bit is set to 1, the UART is busy …",529,[[["bool",15]]]],[11,"dcd","","Data carrier detect. This bit is the complement of the …",529,[[],["bool",15]]],[11,"set_dcd","","Data carrier detect. This bit is the complement of the …",529,[[["bool",15]]]],[11,"dsr","","Data set ready. This bit is the complement of the UART …",529,[[],["bool",15]]],[11,"set_dsr","","Data set ready. This bit is the complement of the UART …",529,[[["bool",15]]]],[11,"cts","","Clear to send. This bit is the complement of the UART …",529,[[],["bool",15]]],[11,"set_cts","","Clear to send. This bit is the complement of the UART …",529,[[["bool",15]]]],[3,"Uartifls","","Interrupt FIFO Level Select Register, UARTIFLS",null,null],[12,"0","","",530,null],[11,"rxiflsel","","Receive interrupt FIFO level select. The trigger points …",530,[[],["u8",15]]],[11,"set_rxiflsel","","Receive interrupt FIFO level select. The trigger points …",530,[[["u8",15]]]],[11,"txiflsel","","Transmit interrupt FIFO level select. The trigger points …",530,[[],["u8",15]]],[11,"set_txiflsel","","Transmit interrupt FIFO level select. The trigger points …",530,[[["u8",15]]]],[3,"Uartrsr","","Receive Status Register/Error Clear Register, …",null,null],[12,"0","","",531,null],[11,"oe","","Overrun error. This bit is set to 1 if data is received …",531,[[],["bool",15]]],[11,"set_oe","","Overrun error. This bit is set to 1 if data is received …",531,[[["bool",15]]]],[11,"be","","Break error. This bit is set to 1 if a break condition …",531,[[],["bool",15]]],[11,"set_be","","Break error. This bit is set to 1 if a break condition …",531,[[["bool",15]]]],[11,"pe","","Parity error. When set to 1, it indicates that the parity …",531,[[],["bool",15]]],[11,"set_pe","","Parity error. When set to 1, it indicates that the parity …",531,[[["bool",15]]]],[11,"fe","","Framing error. When set to 1, it indicates that the …",531,[[],["bool",15]]],[11,"set_fe","","Framing error. When set to 1, it indicates that the …",531,[[["bool",15]]]],[3,"Uartcr","","Control Register, UARTCR",null,null],[12,"0","","",532,null],[11,"ctsen","","CTS hardware flow control enable. If this bit is set to …",532,[[],["bool",15]]],[11,"set_ctsen","","CTS hardware flow control enable. If this bit is set to …",532,[[["bool",15]]]],[11,"rtsen","","RTS hardware flow control enable. If this bit is set to …",532,[[],["bool",15]]],[11,"set_rtsen","","RTS hardware flow control enable. If this bit is set to …",532,[[["bool",15]]]],[11,"out2","","This bit is the complement of the UART Out2 (nUARTOut2) …",532,[[],["bool",15]]],[11,"set_out2","","This bit is the complement of the UART Out2 (nUARTOut2) …",532,[[["bool",15]]]],[11,"out1","","This bit is the complement of the UART Out1 (nUARTOut1) …",532,[[],["bool",15]]],[11,"set_out1","","This bit is the complement of the UART Out1 (nUARTOut1) …",532,[[["bool",15]]]],[11,"rts","","Request to send. This bit is the complement of the UART …",532,[[],["bool",15]]],[11,"set_rts","","Request to send. This bit is the complement of the UART …",532,[[["bool",15]]]],[11,"dtr","","Data transmit ready. This bit is the complement of the …",532,[[],["bool",15]]],[11,"set_dtr","","Data transmit ready. This bit is the complement of the …",532,[[["bool",15]]]],[11,"rxe","","Receive enable. If this bit is set to 1, the receive …",532,[[],["bool",15]]],[11,"set_rxe","","Receive enable. If this bit is set to 1, the receive …",532,[[["bool",15]]]],[11,"txe","","Transmit enable. If this bit is set to 1, the transmit …",532,[[],["bool",15]]],[11,"set_txe","","Transmit enable. If this bit is set to 1, the transmit …",532,[[["bool",15]]]],[11,"lbe","","Loopback enable. If this bit is set to 1 and the SIREN …",532,[[],["bool",15]]],[11,"set_lbe","","Loopback enable. If this bit is set to 1 and the SIREN …",532,[[["bool",15]]]],[11,"sirlp","","SIR low-power IrDA mode. This bit selects the IrDA …",532,[[],["bool",15]]],[11,"set_sirlp","","SIR low-power IrDA mode. This bit selects the IrDA …",532,[[["bool",15]]]],[11,"siren","","SIR enable: 0 = IrDA SIR ENDEC is disabled. nSIROUT …",532,[[],["bool",15]]],[11,"set_siren","","SIR enable: 0 = IrDA SIR ENDEC is disabled. nSIROUT …",532,[[["bool",15]]]],[11,"uarten","","UART enable: 0 = UART is disabled. If the UART is …",532,[[],["bool",15]]],[11,"set_uarten","","UART enable: 0 = UART is disabled. If the UART is …",532,[[["bool",15]]]],[3,"Uartilpr","","IrDA Low-Power Counter Register, UARTILPR",null,null],[12,"0","","",533,null],[11,"ilpdvsr","","8-bit low-power divisor value. These bits are cleared to …",533,[[],["u8",15]]],[11,"set_ilpdvsr","","8-bit low-power divisor value. These bits are cleared to …",533,[[["u8",15]]]],[3,"Uartimsc","","Interrupt Mask Set/Clear Register, UARTIMSC",null,null],[12,"0","","",534,null],[11,"oeim","","Overrun error interrupt mask. A read returns the current …",534,[[],["bool",15]]],[11,"set_oeim","","Overrun error interrupt mask. A read returns the current …",534,[[["bool",15]]]],[11,"beim","","Break error interrupt mask. A read returns the current …",534,[[],["bool",15]]],[11,"set_beim","","Break error interrupt mask. A read returns the current …",534,[[["bool",15]]]],[11,"peim","","Parity error interrupt mask. A read returns the current …",534,[[],["bool",15]]],[11,"set_peim","","Parity error interrupt mask. A read returns the current …",534,[[["bool",15]]]],[11,"feim","","Framing error interrupt mask. A read returns the current …",534,[[],["bool",15]]],[11,"set_feim","","Framing error interrupt mask. A read returns the current …",534,[[["bool",15]]]],[11,"rtim","","Receive timeout interrupt mask. A read returns the …",534,[[],["bool",15]]],[11,"set_rtim","","Receive timeout interrupt mask. A read returns the …",534,[[["bool",15]]]],[11,"txim","","Transmit interrupt mask. A read returns the current mask …",534,[[],["bool",15]]],[11,"set_txim","","Transmit interrupt mask. A read returns the current mask …",534,[[["bool",15]]]],[11,"rxim","","Receive interrupt mask. A read returns the current mask …",534,[[],["bool",15]]],[11,"set_rxim","","Receive interrupt mask. A read returns the current mask …",534,[[["bool",15]]]],[11,"dsrmim","","nUARTDSR modem interrupt mask. A read returns the current …",534,[[],["bool",15]]],[11,"set_dsrmim","","nUARTDSR modem interrupt mask. A read returns the current …",534,[[["bool",15]]]],[11,"dcdmim","","nUARTDCD modem interrupt mask. A read returns the current …",534,[[],["bool",15]]],[11,"set_dcdmim","","nUARTDCD modem interrupt mask. A read returns the current …",534,[[["bool",15]]]],[11,"ctsmim","","nUARTCTS modem interrupt mask. A read returns the current …",534,[[],["bool",15]]],[11,"set_ctsmim","","nUARTCTS modem interrupt mask. A read returns the current …",534,[[["bool",15]]]],[11,"rimim","","nUARTRI modem interrupt mask. A read returns the current …",534,[[],["bool",15]]],[11,"set_rimim","","nUARTRI modem interrupt mask. A read returns the current …",534,[[["bool",15]]]],[3,"Uartperiphid0","","UARTPeriphID0 Register",null,null],[12,"0","","",535,null],[11,"partnumber0","","These bits read back as 0x11",535,[[],["u8",15]]],[11,"set_partnumber0","","These bits read back as 0x11",535,[[["u8",15]]]],[3,"Uartperiphid1","","UARTPeriphID1 Register",null,null],[12,"0","","",536,null],[11,"designer0","","These bits read back as 0x1",536,[[],["u8",15]]],[11,"set_designer0","","These bits read back as 0x1",536,[[["u8",15]]]],[11,"partnumber1","","These bits read back as 0x0",536,[[],["u8",15]]],[11,"set_partnumber1","","These bits read back as 0x0",536,[[["u8",15]]]],[3,"Uartpcellid1","","UARTPCellID1 Register",null,null],[12,"0","","",537,null],[11,"uartpcellid1","","These bits read back as 0xF0",537,[[],["u8",15]]],[11,"set_uartpcellid1","","These bits read back as 0xF0",537,[[["u8",15]]]],[3,"Uartpcellid3","","UARTPCellID3 Register",null,null],[12,"0","","",538,null],[11,"uartpcellid3","","These bits read back as 0xB1",538,[[],["u8",15]]],[11,"set_uartpcellid3","","These bits read back as 0xB1",538,[[["u8",15]]]],[3,"Uartdr","","Data Register, UARTDR",null,null],[12,"0","","",539,null],[11,"oe","","Overrun error. This bit is set to 1 if data is received …",539,[[],["bool",15]]],[11,"set_oe","","Overrun error. This bit is set to 1 if data is received …",539,[[["bool",15]]]],[11,"be","","Break error. This bit is set to 1 if a break condition …",539,[[],["bool",15]]],[11,"set_be","","Break error. This bit is set to 1 if a break condition …",539,[[["bool",15]]]],[11,"pe","","Parity error. When set to 1, it indicates that the parity …",539,[[],["bool",15]]],[11,"set_pe","","Parity error. When set to 1, it indicates that the parity …",539,[[["bool",15]]]],[11,"fe","","Framing error. When set to 1, it indicates that the …",539,[[],["bool",15]]],[11,"set_fe","","Framing error. When set to 1, it indicates that the …",539,[[["bool",15]]]],[11,"data","","Receive (read) data character. Transmit (write) data …",539,[[],["u8",15]]],[11,"set_data","","Receive (read) data character. Transmit (write) data …",539,[[["u8",15]]]],[3,"Uarticr","","Interrupt Clear Register, UARTICR",null,null],[12,"0","","",540,null],[11,"oeic","","Overrun error interrupt clear. Clears the UARTOEINTR …",540,[[],["bool",15]]],[11,"set_oeic","","Overrun error interrupt clear. Clears the UARTOEINTR …",540,[[["bool",15]]]],[11,"beic","","Break error interrupt clear. Clears the UARTBEINTR …",540,[[],["bool",15]]],[11,"set_beic","","Break error interrupt clear. Clears the UARTBEINTR …",540,[[["bool",15]]]],[11,"peic","","Parity error interrupt clear. Clears the UARTPEINTR …",540,[[],["bool",15]]],[11,"set_peic","","Parity error interrupt clear. Clears the UARTPEINTR …",540,[[["bool",15]]]],[11,"feic","","Framing error interrupt clear. Clears the UARTFEINTR …",540,[[],["bool",15]]],[11,"set_feic","","Framing error interrupt clear. Clears the UARTFEINTR …",540,[[["bool",15]]]],[11,"rtic","","Receive timeout interrupt clear. Clears the UARTRTINTR …",540,[[],["bool",15]]],[11,"set_rtic","","Receive timeout interrupt clear. Clears the UARTRTINTR …",540,[[["bool",15]]]],[11,"txic","","Transmit interrupt clear. Clears the UARTTXINTR interrupt.",540,[[],["bool",15]]],[11,"set_txic","","Transmit interrupt clear. Clears the UARTTXINTR interrupt.",540,[[["bool",15]]]],[11,"rxic","","Receive interrupt clear. Clears the UARTRXINTR interrupt.",540,[[],["bool",15]]],[11,"set_rxic","","Receive interrupt clear. Clears the UARTRXINTR interrupt.",540,[[["bool",15]]]],[11,"dsrmic","","nUARTDSR modem interrupt clear. Clears the UARTDSRINTR …",540,[[],["bool",15]]],[11,"set_dsrmic","","nUARTDSR modem interrupt clear. Clears the UARTDSRINTR …",540,[[["bool",15]]]],[11,"dcdmic","","nUARTDCD modem interrupt clear. Clears the UARTDCDINTR …",540,[[],["bool",15]]],[11,"set_dcdmic","","nUARTDCD modem interrupt clear. Clears the UARTDCDINTR …",540,[[["bool",15]]]],[11,"ctsmic","","nUARTCTS modem interrupt clear. Clears the UARTCTSINTR …",540,[[],["bool",15]]],[11,"set_ctsmic","","nUARTCTS modem interrupt clear. Clears the UARTCTSINTR …",540,[[["bool",15]]]],[11,"rimic","","nUARTRI modem interrupt clear. Clears the UARTRIINTR …",540,[[],["bool",15]]],[11,"set_rimic","","nUARTRI modem interrupt clear. Clears the UARTRIINTR …",540,[[["bool",15]]]],[3,"UartlcrH","","Line Control Register, UARTLCR_H",null,null],[12,"0","","",541,null],[11,"sps","","Stick parity select. 0 = stick parity is disabled 1 = …",541,[[],["bool",15]]],[11,"set_sps","","Stick parity select. 0 = stick parity is disabled 1 = …",541,[[["bool",15]]]],[11,"wlen","","Word length. These bits indicate the number of data bits …",541,[[],["u8",15]]],[11,"set_wlen","","Word length. These bits indicate the number of data bits …",541,[[["u8",15]]]],[11,"fen","","Enable FIFOs: 0 = FIFOs are disabled (character mode) …",541,[[],["bool",15]]],[11,"set_fen","","Enable FIFOs: 0 = FIFOs are disabled (character mode) …",541,[[["bool",15]]]],[11,"stp2","","Two stop bits select. If this bit is set to 1, two stop …",541,[[],["bool",15]]],[11,"set_stp2","","Two stop bits select. If this bit is set to 1, two stop …",541,[[["bool",15]]]],[11,"eps","","Even parity select. Controls the type of parity the UART …",541,[[],["bool",15]]],[11,"set_eps","","Even parity select. Controls the type of parity the UART …",541,[[["bool",15]]]],[11,"pen","","Parity enable: 0 = parity is disabled and no parity bit …",541,[[],["bool",15]]],[11,"set_pen","","Parity enable: 0 = parity is disabled and no parity bit …",541,[[["bool",15]]]],[11,"brk","","Send break. If this bit is set to 1, a low-level is …",541,[[],["bool",15]]],[11,"set_brk","","Send break. If this bit is set to 1, a low-level is …",541,[[["bool",15]]]],[3,"Uartdmacr","","DMA Control Register, UARTDMACR",null,null],[12,"0","","",542,null],[11,"dmaonerr","","DMA on error. If this bit is set to 1, the DMA receive …",542,[[],["bool",15]]],[11,"set_dmaonerr","","DMA on error. If this bit is set to 1, the DMA receive …",542,[[["bool",15]]]],[11,"txdmae","","Transmit DMA enable. If this bit is set to 1, DMA for the …",542,[[],["bool",15]]],[11,"set_txdmae","","Transmit DMA enable. If this bit is set to 1, DMA for the …",542,[[["bool",15]]]],[11,"rxdmae","","Receive DMA enable. If this bit is set to 1, DMA for the …",542,[[],["bool",15]]],[11,"set_rxdmae","","Receive DMA enable. If this bit is set to 1, DMA for the …",542,[[["bool",15]]]],[3,"Uartpcellid0","","UARTPCellID0 Register",null,null],[12,"0","","",543,null],[11,"uartpcellid0","","These bits read back as 0x0D",543,[[],["u8",15]]],[11,"set_uartpcellid0","","These bits read back as 0x0D",543,[[["u8",15]]]],[3,"Uartpcellid2","","UARTPCellID2 Register",null,null],[12,"0","","",544,null],[11,"uartpcellid2","","These bits read back as 0x05",544,[[],["u8",15]]],[11,"set_uartpcellid2","","These bits read back as 0x05",544,[[["u8",15]]]],[3,"Uart","rp2040_pac2::uart","",null,null],[12,"0","","",545,null],[11,"uartdr","","Data Register, UARTDR",545,[[],[["reg",3],["rw",3],["uartdr",3]]]],[11,"uartrsr","","Receive Status Register/Error Clear Register, …",545,[[],[["reg",3],["rw",3],["uartrsr",3]]]],[11,"uartfr","","Flag Register, UARTFR",545,[[],[["uartfr",3],["rw",3],["reg",3]]]],[11,"uartilpr","","IrDA Low-Power Counter Register, UARTILPR",545,[[],[["rw",3],["reg",3],["uartilpr",3]]]],[11,"uartibrd","","Integer Baud Rate Register, UARTIBRD",545,[[],[["uartibrd",3],["reg",3],["rw",3]]]],[11,"uartfbrd","","Fractional Baud Rate Register, UARTFBRD",545,[[],[["uartfbrd",3],["rw",3],["reg",3]]]],[11,"uartlcr_h","","Line Control Register, UARTLCR_H",545,[[],[["reg",3],["rw",3],["uartlcrh",3]]]],[11,"uartcr","","Control Register, UARTCR",545,[[],[["uartcr",3],["reg",3],["rw",3]]]],[11,"uartifls","","Interrupt FIFO Level Select Register, UARTIFLS",545,[[],[["uartifls",3],["reg",3],["rw",3]]]],[11,"uartimsc","","Interrupt Mask Set/Clear Register, UARTIMSC",545,[[],[["rw",3],["reg",3],["uartimsc",3]]]],[11,"uartris","","Raw Interrupt Status Register, UARTRIS",545,[[],[["rw",3],["reg",3],["uartris",3]]]],[11,"uartmis","","Masked Interrupt Status Register, UARTMIS",545,[[],[["reg",3],["uartmis",3],["rw",3]]]],[11,"uarticr","","Interrupt Clear Register, UARTICR",545,[[],[["reg",3],["rw",3],["uarticr",3]]]],[11,"uartdmacr","","DMA Control Register, UARTDMACR",545,[[],[["uartdmacr",3],["reg",3],["rw",3]]]],[11,"uartperiphid0","","UARTPeriphID0 Register",545,[[],[["uartperiphid0",3],["rw",3],["reg",3]]]],[11,"uartperiphid1","","UARTPeriphID1 Register",545,[[],[["reg",3],["uartperiphid1",3],["rw",3]]]],[11,"uartperiphid2","","UARTPeriphID2 Register",545,[[],[["reg",3],["uartperiphid2",3],["rw",3]]]],[11,"uartperiphid3","","UARTPeriphID3 Register",545,[[],[["reg",3],["rw",3],["uartperiphid3",3]]]],[11,"uartpcellid0","","UARTPCellID0 Register",545,[[],[["reg",3],["uartpcellid0",3],["rw",3]]]],[11,"uartpcellid1","","UARTPCellID1 Register",545,[[],[["uartpcellid1",3],["rw",3],["reg",3]]]],[11,"uartpcellid2","","UARTPCellID2 Register",545,[[],[["reg",3],["uartpcellid2",3],["rw",3]]]],[11,"uartpcellid3","","UARTPCellID3 Register",545,[[],[["uartpcellid3",3],["reg",3],["rw",3]]]],[0,"usbctrl_regs","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::usbctrl_regs","",null,null],[3,"UsbPwr","rp2040_pac2::usbctrl_regs::regs","Overrides for the power signals in the event that the …",null,null],[12,"0","","",546,null],[11,"overcurr_detect_en","","",546,[[],["bool",15]]],[11,"set_overcurr_detect_en","","",546,[[["bool",15]]]],[11,"overcurr_detect","","",546,[[],["bool",15]]],[11,"set_overcurr_detect","","",546,[[["bool",15]]]],[11,"vbus_detect_override_en","","",546,[[],["bool",15]]],[11,"set_vbus_detect_override_en","","",546,[[["bool",15]]]],[11,"vbus_detect","","",546,[[],["bool",15]]],[11,"set_vbus_detect","","",546,[[["bool",15]]]],[11,"vbus_en_override_en","","",546,[[],["bool",15]]],[11,"set_vbus_en_override_en","","",546,[[["bool",15]]]],[11,"vbus_en","","",546,[[],["bool",15]]],[11,"set_vbus_en","","",546,[[["bool",15]]]],[3,"AddrEndp11","","Interrupt endpoint 11. Only valid for HOST mode.",null,null],[12,"0","","",547,null],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",547,[[],["bool",15]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",547,[[["bool",15]]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",547,[[],["bool",15]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",547,[[["bool",15]]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",547,[[],["u8",15]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",547,[[["u8",15]]]],[11,"address","","Device address",547,[[],["u8",15]]],[11,"set_address","","Device address",547,[[["u8",15]]]],[3,"NakPoll","","Used by the host controller. Sets the wait time in …",null,null],[12,"0","","",548,null],[11,"delay_fs","","NAK polling interval for a full speed device",548,[[],["u16",15]]],[11,"set_delay_fs","","NAK polling interval for a full speed device",548,[[["u16",15]]]],[11,"delay_ls","","NAK polling interval for a low speed device",548,[[],["u16",15]]],[11,"set_delay_ls","","NAK polling interval for a low speed device",548,[[["u16",15]]]],[3,"SieStatus","","SIE status register",null,null],[12,"0","","",549,null],[11,"data_seq_error","","Data Sequence Error. The device can raise a sequence …",549,[[],["bool",15]]],[11,"set_data_seq_error","","Data Sequence Error. The device can raise a sequence …",549,[[["bool",15]]]],[11,"ack_rec","","ACK received. Raised by both host and device.",549,[[],["bool",15]]],[11,"set_ack_rec","","ACK received. Raised by both host and device.",549,[[["bool",15]]]],[11,"stall_rec","","Host: STALL received",549,[[],["bool",15]]],[11,"set_stall_rec","","Host: STALL received",549,[[["bool",15]]]],[11,"nak_rec","","Host: NAK received",549,[[],["bool",15]]],[11,"set_nak_rec","","Host: NAK received",549,[[["bool",15]]]],[11,"rx_timeout","","RX timeout is raised by both the host and device if an …",549,[[],["bool",15]]],[11,"set_rx_timeout","","RX timeout is raised by both the host and device if an …",549,[[["bool",15]]]],[11,"rx_overflow","","RX overflow is raised by the Serial RX engine if the …",549,[[],["bool",15]]],[11,"set_rx_overflow","","RX overflow is raised by the Serial RX engine if the …",549,[[["bool",15]]]],[11,"bit_stuff_error","","Bit Stuff Error. Raised by the Serial RX engine.",549,[[],["bool",15]]],[11,"set_bit_stuff_error","","Bit Stuff Error. Raised by the Serial RX engine.",549,[[["bool",15]]]],[11,"crc_error","","CRC Error. Raised by the Serial RX engine.",549,[[],["bool",15]]],[11,"set_crc_error","","CRC Error. Raised by the Serial RX engine.",549,[[["bool",15]]]],[11,"bus_reset","","Device: bus reset received",549,[[],["bool",15]]],[11,"set_bus_reset","","Device: bus reset received",549,[[["bool",15]]]],[11,"trans_complete","","Transaction complete. Raised by device if: * An IN or OUT …",549,[[],["bool",15]]],[11,"set_trans_complete","","Transaction complete. Raised by device if: * An IN or OUT …",549,[[["bool",15]]]],[11,"setup_rec","","Device: Setup packet received",549,[[],["bool",15]]],[11,"set_setup_rec","","Device: Setup packet received",549,[[["bool",15]]]],[11,"connected","","Device: connected",549,[[],["bool",15]]],[11,"set_connected","","Device: connected",549,[[["bool",15]]]],[11,"resume","","Host: Device has initiated a remote resume. Device: host …",549,[[],["bool",15]]],[11,"set_resume","","Host: Device has initiated a remote resume. Device: host …",549,[[["bool",15]]]],[11,"vbus_over_curr","","VBUS over current detected",549,[[],["bool",15]]],[11,"set_vbus_over_curr","","VBUS over current detected",549,[[["bool",15]]]],[11,"speed","","Host: device speed. Disconnected = 00, LS = 01, FS = 10",549,[[],["u8",15]]],[11,"set_speed","","Host: device speed. Disconnected = 00, LS = 01, FS = 10",549,[[["u8",15]]]],[11,"suspended","","Bus in suspended state. Valid for device and host. Host …",549,[[],["bool",15]]],[11,"set_suspended","","Bus in suspended state. Valid for device and host. Host …",549,[[["bool",15]]]],[11,"line_state","","USB bus line state",549,[[],["u8",15]]],[11,"set_line_state","","USB bus line state",549,[[["u8",15]]]],[11,"vbus_detected","","Device: VBUS Detected",549,[[],["bool",15]]],[11,"set_vbus_detected","","Device: VBUS Detected",549,[[["bool",15]]]],[3,"AddrEndp1","","Interrupt endpoint 1. Only valid for HOST mode.",null,null],[12,"0","","",550,null],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",550,[[],["bool",15]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",550,[[["bool",15]]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",550,[[],["bool",15]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",550,[[["bool",15]]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",550,[[],["u8",15]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",550,[[["u8",15]]]],[11,"address","","Device address",550,[[],["u8",15]]],[11,"set_address","","Device address",550,[[["u8",15]]]],[3,"UsbphyDirectOverride","","Override enable for each control in usbphy_direct",null,null],[12,"0","","",551,null],[11,"tx_diffmode_override_en","","",551,[[],["bool",15]]],[11,"set_tx_diffmode_override_en","","",551,[[["bool",15]]]],[11,"dm_pullup_override_en","","",551,[[],["bool",15]]],[11,"set_dm_pullup_override_en","","",551,[[["bool",15]]]],[11,"tx_fsslew_override_en","","",551,[[],["bool",15]]],[11,"set_tx_fsslew_override_en","","",551,[[["bool",15]]]],[11,"tx_pd_override_en","","",551,[[],["bool",15]]],[11,"set_tx_pd_override_en","","",551,[[["bool",15]]]],[11,"rx_pd_override_en","","",551,[[],["bool",15]]],[11,"set_rx_pd_override_en","","",551,[[["bool",15]]]],[11,"tx_dm_override_en","","",551,[[],["bool",15]]],[11,"set_tx_dm_override_en","","",551,[[["bool",15]]]],[11,"tx_dp_override_en","","",551,[[],["bool",15]]],[11,"set_tx_dp_override_en","","",551,[[["bool",15]]]],[11,"tx_dm_oe_override_en","","",551,[[],["bool",15]]],[11,"set_tx_dm_oe_override_en","","",551,[[["bool",15]]]],[11,"tx_dp_oe_override_en","","",551,[[],["bool",15]]],[11,"set_tx_dp_oe_override_en","","",551,[[["bool",15]]]],[11,"dm_pulldn_en_override_en","","",551,[[],["bool",15]]],[11,"set_dm_pulldn_en_override_en","","",551,[[["bool",15]]]],[11,"dp_pulldn_en_override_en","","",551,[[],["bool",15]]],[11,"set_dp_pulldn_en_override_en","","",551,[[["bool",15]]]],[11,"dp_pullup_en_override_en","","",551,[[],["bool",15]]],[11,"set_dp_pullup_en_override_en","","",551,[[["bool",15]]]],[11,"dm_pullup_hisel_override_en","","",551,[[],["bool",15]]],[11,"set_dm_pullup_hisel_override_en","","",551,[[["bool",15]]]],[11,"dp_pullup_hisel_override_en","","",551,[[],["bool",15]]],[11,"set_dp_pullup_hisel_override_en","","",551,[[["bool",15]]]],[3,"AddrEndp7","","Interrupt endpoint 7. Only valid for HOST mode.",null,null],[12,"0","","",552,null],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",552,[[],["bool",15]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",552,[[["bool",15]]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",552,[[],["bool",15]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",552,[[["bool",15]]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",552,[[],["u8",15]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",552,[[["u8",15]]]],[11,"address","","Device address",552,[[],["u8",15]]],[11,"set_address","","Device address",552,[[["u8",15]]]],[3,"AddrEndp15","","Interrupt endpoint 15. Only valid for HOST mode.",null,null],[12,"0","","",553,null],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",553,[[],["bool",15]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",553,[[["bool",15]]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",553,[[],["bool",15]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",553,[[["bool",15]]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",553,[[],["u8",15]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",553,[[["u8",15]]]],[11,"address","","Device address",553,[[],["u8",15]]],[11,"set_address","","Device address",553,[[["u8",15]]]],[3,"EpAbort","","Device only: Can be set to ignore the buffer control …",null,null],[12,"0","","",554,null],[11,"ep15_out","","",554,[[],["bool",15]]],[11,"set_ep15_out","","",554,[[["bool",15]]]],[11,"ep15_in","","",554,[[],["bool",15]]],[11,"set_ep15_in","","",554,[[["bool",15]]]],[11,"ep14_out","","",554,[[],["bool",15]]],[11,"set_ep14_out","","",554,[[["bool",15]]]],[11,"ep14_in","","",554,[[],["bool",15]]],[11,"set_ep14_in","","",554,[[["bool",15]]]],[11,"ep13_out","","",554,[[],["bool",15]]],[11,"set_ep13_out","","",554,[[["bool",15]]]],[11,"ep13_in","","",554,[[],["bool",15]]],[11,"set_ep13_in","","",554,[[["bool",15]]]],[11,"ep12_out","","",554,[[],["bool",15]]],[11,"set_ep12_out","","",554,[[["bool",15]]]],[11,"ep12_in","","",554,[[],["bool",15]]],[11,"set_ep12_in","","",554,[[["bool",15]]]],[11,"ep11_out","","",554,[[],["bool",15]]],[11,"set_ep11_out","","",554,[[["bool",15]]]],[11,"ep11_in","","",554,[[],["bool",15]]],[11,"set_ep11_in","","",554,[[["bool",15]]]],[11,"ep10_out","","",554,[[],["bool",15]]],[11,"set_ep10_out","","",554,[[["bool",15]]]],[11,"ep10_in","","",554,[[],["bool",15]]],[11,"set_ep10_in","","",554,[[["bool",15]]]],[11,"ep9_out","","",554,[[],["bool",15]]],[11,"set_ep9_out","","",554,[[["bool",15]]]],[11,"ep9_in","","",554,[[],["bool",15]]],[11,"set_ep9_in","","",554,[[["bool",15]]]],[11,"ep8_out","","",554,[[],["bool",15]]],[11,"set_ep8_out","","",554,[[["bool",15]]]],[11,"ep8_in","","",554,[[],["bool",15]]],[11,"set_ep8_in","","",554,[[["bool",15]]]],[11,"ep7_out","","",554,[[],["bool",15]]],[11,"set_ep7_out","","",554,[[["bool",15]]]],[11,"ep7_in","","",554,[[],["bool",15]]],[11,"set_ep7_in","","",554,[[["bool",15]]]],[11,"ep6_out","","",554,[[],["bool",15]]],[11,"set_ep6_out","","",554,[[["bool",15]]]],[11,"ep6_in","","",554,[[],["bool",15]]],[11,"set_ep6_in","","",554,[[["bool",15]]]],[11,"ep5_out","","",554,[[],["bool",15]]],[11,"set_ep5_out","","",554,[[["bool",15]]]],[11,"ep5_in","","",554,[[],["bool",15]]],[11,"set_ep5_in","","",554,[[["bool",15]]]],[11,"ep4_out","","",554,[[],["bool",15]]],[11,"set_ep4_out","","",554,[[["bool",15]]]],[11,"ep4_in","","",554,[[],["bool",15]]],[11,"set_ep4_in","","",554,[[["bool",15]]]],[11,"ep3_out","","",554,[[],["bool",15]]],[11,"set_ep3_out","","",554,[[["bool",15]]]],[11,"ep3_in","","",554,[[],["bool",15]]],[11,"set_ep3_in","","",554,[[["bool",15]]]],[11,"ep2_out","","",554,[[],["bool",15]]],[11,"set_ep2_out","","",554,[[["bool",15]]]],[11,"ep2_in","","",554,[[],["bool",15]]],[11,"set_ep2_in","","",554,[[["bool",15]]]],[11,"ep1_out","","",554,[[],["bool",15]]],[11,"set_ep1_out","","",554,[[["bool",15]]]],[11,"ep1_in","","",554,[[],["bool",15]]],[11,"set_ep1_in","","",554,[[["bool",15]]]],[11,"ep0_out","","",554,[[],["bool",15]]],[11,"set_ep0_out","","",554,[[["bool",15]]]],[11,"ep0_in","","",554,[[],["bool",15]]],[11,"set_ep0_in","","",554,[[["bool",15]]]],[3,"AddrEndp3","","Interrupt endpoint 3. Only valid for HOST mode.",null,null],[12,"0","","",555,null],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",555,[[],["bool",15]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",555,[[["bool",15]]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",555,[[],["bool",15]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",555,[[["bool",15]]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",555,[[],["u8",15]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",555,[[["u8",15]]]],[11,"address","","Device address",555,[[],["u8",15]]],[11,"set_address","","Device address",555,[[["u8",15]]]],[3,"MainCtrl","","Main control register",null,null],[12,"0","","",556,null],[11,"sim_timing","","Reduced timings for simulation",556,[[],["bool",15]]],[11,"set_sim_timing","","Reduced timings for simulation",556,[[["bool",15]]]],[11,"host_ndevice","","Device mode = 0, Host mode = 1",556,[[],["bool",15]]],[11,"set_host_ndevice","","Device mode = 0, Host mode = 1",556,[[["bool",15]]]],[11,"controller_en","","Enable controller",556,[[],["bool",15]]],[11,"set_controller_en","","Enable controller",556,[[["bool",15]]]],[3,"UsbMuxing","","Where to connect the USB controller. Should be to_phy by …",null,null],[12,"0","","",557,null],[11,"softcon","","",557,[[],["bool",15]]],[11,"set_softcon","","",557,[[["bool",15]]]],[11,"to_digital_pad","","",557,[[],["bool",15]]],[11,"set_to_digital_pad","","",557,[[["bool",15]]]],[11,"to_extphy","","",557,[[],["bool",15]]],[11,"set_to_extphy","","",557,[[["bool",15]]]],[11,"to_phy","","",557,[[],["bool",15]]],[11,"set_to_phy","","",557,[[["bool",15]]]],[3,"AddrEndp14","","Interrupt endpoint 14. Only valid for HOST mode.",null,null],[12,"0","","",558,null],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",558,[[],["bool",15]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",558,[[["bool",15]]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",558,[[],["bool",15]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",558,[[["bool",15]]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",558,[[],["u8",15]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",558,[[["u8",15]]]],[11,"address","","Device address",558,[[],["u8",15]]],[11,"set_address","","Device address",558,[[["u8",15]]]],[3,"AddrEndp8","","Interrupt endpoint 8. Only valid for HOST mode.",null,null],[12,"0","","",559,null],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",559,[[],["bool",15]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",559,[[["bool",15]]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",559,[[],["bool",15]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",559,[[["bool",15]]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",559,[[],["u8",15]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",559,[[["u8",15]]]],[11,"address","","Device address",559,[[],["u8",15]]],[11,"set_address","","Device address",559,[[["u8",15]]]],[3,"SofWr","","Set the SOF (Start of Frame) frame number in the host …",null,null],[12,"0","","",560,null],[11,"count","","",560,[[],["u16",15]]],[11,"set_count","","",560,[[["u16",15]]]],[3,"UsbphyDirect","","This register allows for direct control of the USB phy. …",null,null],[12,"0","","",561,null],[11,"dm_ovv","","DM over voltage",561,[[],["bool",15]]],[11,"set_dm_ovv","","DM over voltage",561,[[["bool",15]]]],[11,"dp_ovv","","DP over voltage",561,[[],["bool",15]]],[11,"set_dp_ovv","","DP over voltage",561,[[["bool",15]]]],[11,"dm_ovcn","","DM overcurrent",561,[[],["bool",15]]],[11,"set_dm_ovcn","","DM overcurrent",561,[[["bool",15]]]],[11,"dp_ovcn","","DP overcurrent",561,[[],["bool",15]]],[11,"set_dp_ovcn","","DP overcurrent",561,[[["bool",15]]]],[11,"rx_dm","","DPM pin state",561,[[],["bool",15]]],[11,"set_rx_dm","","DPM pin state",561,[[["bool",15]]]],[11,"rx_dp","","DPP pin state",561,[[],["bool",15]]],[11,"set_rx_dp","","DPP pin state",561,[[["bool",15]]]],[11,"rx_dd","","Differential RX",561,[[],["bool",15]]],[11,"set_rx_dd","","Differential RX",561,[[["bool",15]]]],[11,"tx_diffmode","","TX_DIFFMODE=0: Single ended mode TX_DIFFMODE=1: …",561,[[],["bool",15]]],[11,"set_tx_diffmode","","TX_DIFFMODE=0: Single ended mode TX_DIFFMODE=1: …",561,[[["bool",15]]]],[11,"tx_fsslew","","TX_FSSLEW=0: Low speed slew rate TX_FSSLEW=1: Full speed …",561,[[],["bool",15]]],[11,"set_tx_fsslew","","TX_FSSLEW=0: Low speed slew rate TX_FSSLEW=1: Full speed …",561,[[["bool",15]]]],[11,"tx_pd","","TX power down override (if override enable is set). 1 = …",561,[[],["bool",15]]],[11,"set_tx_pd","","TX power down override (if override enable is set). 1 = …",561,[[["bool",15]]]],[11,"rx_pd","","RX power down override (if override enable is set). 1 = …",561,[[],["bool",15]]],[11,"set_rx_pd","","RX power down override (if override enable is set). 1 = …",561,[[["bool",15]]]],[11,"tx_dm","","Output data. TX_DIFFMODE=1, Ignored TX_DIFFMODE=0, Drives …",561,[[],["bool",15]]],[11,"set_tx_dm","","Output data. TX_DIFFMODE=1, Ignored TX_DIFFMODE=0, Drives …",561,[[["bool",15]]]],[11,"tx_dp","","Output data. If TX_DIFFMODE=1, Drives DPP/DPM diff pair. …",561,[[],["bool",15]]],[11,"set_tx_dp","","Output data. If TX_DIFFMODE=1, Drives DPP/DPM diff pair. …",561,[[["bool",15]]]],[11,"tx_dm_oe","","Output enable. If TX_DIFFMODE=1, Ignored. If …",561,[[],["bool",15]]],[11,"set_tx_dm_oe","","Output enable. If TX_DIFFMODE=1, Ignored. If …",561,[[["bool",15]]]],[11,"tx_dp_oe","","Output enable. If TX_DIFFMODE=1, OE for DPP/DPM diff …",561,[[],["bool",15]]],[11,"set_tx_dp_oe","","Output enable. If TX_DIFFMODE=1, OE for DPP/DPM diff …",561,[[["bool",15]]]],[11,"dm_pulldn_en","","DM pull down enable",561,[[],["bool",15]]],[11,"set_dm_pulldn_en","","DM pull down enable",561,[[["bool",15]]]],[11,"dm_pullup_en","","DM pull up enable",561,[[],["bool",15]]],[11,"set_dm_pullup_en","","DM pull up enable",561,[[["bool",15]]]],[11,"dm_pullup_hisel","","Enable the second DM pull up resistor. 0 - Pull = Rpu2; 1 …",561,[[],["bool",15]]],[11,"set_dm_pullup_hisel","","Enable the second DM pull up resistor. 0 - Pull = Rpu2; 1 …",561,[[["bool",15]]]],[11,"dp_pulldn_en","","DP pull down enable",561,[[],["bool",15]]],[11,"set_dp_pulldn_en","","DP pull down enable",561,[[["bool",15]]]],[11,"dp_pullup_en","","DP pull up enable",561,[[],["bool",15]]],[11,"set_dp_pullup_en","","DP pull up enable",561,[[["bool",15]]]],[11,"dp_pullup_hisel","","Enable the second DP pull up resistor. 0 - Pull = Rpu2; 1 …",561,[[],["bool",15]]],[11,"set_dp_pullup_hisel","","Enable the second DP pull up resistor. 0 - Pull = Rpu2; 1 …",561,[[["bool",15]]]],[3,"AddrEndp9","","Interrupt endpoint 9. Only valid for HOST mode.",null,null],[12,"0","","",562,null],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",562,[[],["bool",15]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",562,[[["bool",15]]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",562,[[],["bool",15]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",562,[[["bool",15]]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",562,[[],["u8",15]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",562,[[["u8",15]]]],[11,"address","","Device address",562,[[],["u8",15]]],[11,"set_address","","Device address",562,[[["u8",15]]]],[3,"AddrEndp10","","Interrupt endpoint 10. Only valid for HOST mode.",null,null],[12,"0","","",563,null],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",563,[[],["bool",15]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",563,[[["bool",15]]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",563,[[],["bool",15]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",563,[[["bool",15]]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",563,[[],["u8",15]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",563,[[["u8",15]]]],[11,"address","","Device address",563,[[],["u8",15]]],[11,"set_address","","Device address",563,[[["u8",15]]]],[3,"Intf","","Interrupt Force",null,null],[12,"0","","",564,null],[11,"ep_stall_nak","","Raised when any bit in EP_STATUS_STALL_NAK is set. Clear …",564,[[],["bool",15]]],[11,"set_ep_stall_nak","","Raised when any bit in EP_STATUS_STALL_NAK is set. Clear …",564,[[["bool",15]]]],[11,"abort_done","","Raised when any bit in ABORT_DONE is set. Clear by …",564,[[],["bool",15]]],[11,"set_abort_done","","Raised when any bit in ABORT_DONE is set. Clear by …",564,[[["bool",15]]]],[11,"dev_sof","","Set every time the device receives a SOF (Start of Frame) …",564,[[],["bool",15]]],[11,"set_dev_sof","","Set every time the device receives a SOF (Start of Frame) …",564,[[["bool",15]]]],[11,"setup_req","","Device. Source: SIE_STATUS.SETUP_REC",564,[[],["bool",15]]],[11,"set_setup_req","","Device. Source: SIE_STATUS.SETUP_REC",564,[[["bool",15]]]],[11,"dev_resume_from_host","","Set when the device receives a resume from the host. …",564,[[],["bool",15]]],[11,"set_dev_resume_from_host","","Set when the device receives a resume from the host. …",564,[[["bool",15]]]],[11,"dev_suspend","","Set when the device suspend state changes. Cleared by …",564,[[],["bool",15]]],[11,"set_dev_suspend","","Set when the device suspend state changes. Cleared by …",564,[[["bool",15]]]],[11,"dev_conn_dis","","Set when the device connection state changes. Cleared by …",564,[[],["bool",15]]],[11,"set_dev_conn_dis","","Set when the device connection state changes. Cleared by …",564,[[["bool",15]]]],[11,"bus_reset","","Source: SIE_STATUS.BUS_RESET",564,[[],["bool",15]]],[11,"set_bus_reset","","Source: SIE_STATUS.BUS_RESET",564,[[["bool",15]]]],[11,"vbus_detect","","Source: SIE_STATUS.VBUS_DETECT",564,[[],["bool",15]]],[11,"set_vbus_detect","","Source: SIE_STATUS.VBUS_DETECT",564,[[["bool",15]]]],[11,"stall","","Source: SIE_STATUS.STALL_REC",564,[[],["bool",15]]],[11,"set_stall","","Source: SIE_STATUS.STALL_REC",564,[[["bool",15]]]],[11,"error_crc","","Source: SIE_STATUS.CRC_ERROR",564,[[],["bool",15]]],[11,"set_error_crc","","Source: SIE_STATUS.CRC_ERROR",564,[[["bool",15]]]],[11,"error_bit_stuff","","Source: SIE_STATUS.BIT_STUFF_ERROR",564,[[],["bool",15]]],[11,"set_error_bit_stuff","","Source: SIE_STATUS.BIT_STUFF_ERROR",564,[[["bool",15]]]],[11,"error_rx_overflow","","Source: SIE_STATUS.RX_OVERFLOW",564,[[],["bool",15]]],[11,"set_error_rx_overflow","","Source: SIE_STATUS.RX_OVERFLOW",564,[[["bool",15]]]],[11,"error_rx_timeout","","Source: SIE_STATUS.RX_TIMEOUT",564,[[],["bool",15]]],[11,"set_error_rx_timeout","","Source: SIE_STATUS.RX_TIMEOUT",564,[[["bool",15]]]],[11,"error_data_seq","","Source: SIE_STATUS.DATA_SEQ_ERROR",564,[[],["bool",15]]],[11,"set_error_data_seq","","Source: SIE_STATUS.DATA_SEQ_ERROR",564,[[["bool",15]]]],[11,"buff_status","","Raised when any bit in BUFF_STATUS is set. Clear by …",564,[[],["bool",15]]],[11,"set_buff_status","","Raised when any bit in BUFF_STATUS is set. Clear by …",564,[[["bool",15]]]],[11,"trans_complete","","Raised every time SIE_STATUS.TRANS_COMPLETE is set. Clear …",564,[[],["bool",15]]],[11,"set_trans_complete","","Raised every time SIE_STATUS.TRANS_COMPLETE is set. Clear …",564,[[["bool",15]]]],[11,"host_sof","","Host: raised every time the host sends a SOF (Start of …",564,[[],["bool",15]]],[11,"set_host_sof","","Host: raised every time the host sends a SOF (Start of …",564,[[["bool",15]]]],[11,"host_resume","","Host: raised when a device wakes up the host. Cleared by …",564,[[],["bool",15]]],[11,"set_host_resume","","Host: raised when a device wakes up the host. Cleared by …",564,[[["bool",15]]]],[11,"host_conn_dis","","Host: raised when a device is connected or disconnected …",564,[[],["bool",15]]],[11,"set_host_conn_dis","","Host: raised when a device is connected or disconnected …",564,[[["bool",15]]]],[3,"AddrEndp2","","Interrupt endpoint 2. Only valid for HOST mode.",null,null],[12,"0","","",565,null],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",565,[[],["bool",15]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",565,[[["bool",15]]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",565,[[],["bool",15]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",565,[[["bool",15]]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",565,[[],["u8",15]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",565,[[["u8",15]]]],[11,"address","","Device address",565,[[],["u8",15]]],[11,"set_address","","Device address",565,[[["u8",15]]]],[3,"AddrEndp5","","Interrupt endpoint 5. Only valid for HOST mode.",null,null],[12,"0","","",566,null],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",566,[[],["bool",15]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",566,[[["bool",15]]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",566,[[],["bool",15]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",566,[[["bool",15]]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",566,[[],["u8",15]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",566,[[["u8",15]]]],[11,"address","","Device address",566,[[],["u8",15]]],[11,"set_address","","Device address",566,[[["u8",15]]]],[3,"SieCtrl","","SIE control register",null,null],[12,"0","","",567,null],[11,"ep0_int_stall","","Device: Set bit in EP_STATUS_STALL_NAK when EP0 sends a …",567,[[],["bool",15]]],[11,"set_ep0_int_stall","","Device: Set bit in EP_STATUS_STALL_NAK when EP0 sends a …",567,[[["bool",15]]]],[11,"ep0_double_buf","","Device: EP0 single buffered = 0, double buffered = 1",567,[[],["bool",15]]],[11,"set_ep0_double_buf","","Device: EP0 single buffered = 0, double buffered = 1",567,[[["bool",15]]]],[11,"ep0_int_1buf","","Device: Set bit in BUFF_STATUS for every buffer completed …",567,[[],["bool",15]]],[11,"set_ep0_int_1buf","","Device: Set bit in BUFF_STATUS for every buffer completed …",567,[[["bool",15]]]],[11,"ep0_int_2buf","","Device: Set bit in BUFF_STATUS for every 2 buffers …",567,[[],["bool",15]]],[11,"set_ep0_int_2buf","","Device: Set bit in BUFF_STATUS for every 2 buffers …",567,[[["bool",15]]]],[11,"ep0_int_nak","","Device: Set bit in EP_STATUS_STALL_NAK when EP0 sends a …",567,[[],["bool",15]]],[11,"set_ep0_int_nak","","Device: Set bit in EP_STATUS_STALL_NAK when EP0 sends a …",567,[[["bool",15]]]],[11,"direct_en","","Direct bus drive enable",567,[[],["bool",15]]],[11,"set_direct_en","","Direct bus drive enable",567,[[["bool",15]]]],[11,"direct_dp","","Direct control of DP",567,[[],["bool",15]]],[11,"set_direct_dp","","Direct control of DP",567,[[["bool",15]]]],[11,"direct_dm","","Direct control of DM",567,[[],["bool",15]]],[11,"set_direct_dm","","Direct control of DM",567,[[["bool",15]]]],[11,"transceiver_pd","","Power down bus transceiver",567,[[],["bool",15]]],[11,"set_transceiver_pd","","Power down bus transceiver",567,[[["bool",15]]]],[11,"rpu_opt","","Device: Pull-up strength (0=1K2, 1=2k3)",567,[[],["bool",15]]],[11,"set_rpu_opt","","Device: Pull-up strength (0=1K2, 1=2k3)",567,[[["bool",15]]]],[11,"pullup_en","","Device: Enable pull up resistor",567,[[],["bool",15]]],[11,"set_pullup_en","","Device: Enable pull up resistor",567,[[["bool",15]]]],[11,"pulldown_en","","Host: Enable pull down resistors",567,[[],["bool",15]]],[11,"set_pulldown_en","","Host: Enable pull down resistors",567,[[["bool",15]]]],[11,"reset_bus","","Host: Reset bus",567,[[],["bool",15]]],[11,"set_reset_bus","","Host: Reset bus",567,[[["bool",15]]]],[11,"resume","","Device: Remote wakeup. Device can initiate its own resume …",567,[[],["bool",15]]],[11,"set_resume","","Device: Remote wakeup. Device can initiate its own resume …",567,[[["bool",15]]]],[11,"vbus_en","","Host: Enable VBUS",567,[[],["bool",15]]],[11,"set_vbus_en","","Host: Enable VBUS",567,[[["bool",15]]]],[11,"keep_alive_en","","Host: Enable keep alive packet (for low speed bus)",567,[[],["bool",15]]],[11,"set_keep_alive_en","","Host: Enable keep alive packet (for low speed bus)",567,[[["bool",15]]]],[11,"sof_en","","Host: Enable SOF generation (for full speed bus)",567,[[],["bool",15]]],[11,"set_sof_en","","Host: Enable SOF generation (for full speed bus)",567,[[["bool",15]]]],[11,"sof_sync","","Host: Delay packet(s) until after SOF",567,[[],["bool",15]]],[11,"set_sof_sync","","Host: Delay packet(s) until after SOF",567,[[["bool",15]]]],[11,"preamble_en","","Host: Preable enable for LS device on FS hub",567,[[],["bool",15]]],[11,"set_preamble_en","","Host: Preable enable for LS device on FS hub",567,[[["bool",15]]]],[11,"stop_trans","","Host: Stop transaction",567,[[],["bool",15]]],[11,"set_stop_trans","","Host: Stop transaction",567,[[["bool",15]]]],[11,"receive_data","","Host: Receive transaction (IN to host)",567,[[],["bool",15]]],[11,"set_receive_data","","Host: Receive transaction (IN to host)",567,[[["bool",15]]]],[11,"send_data","","Host: Send transaction (OUT from host)",567,[[],["bool",15]]],[11,"set_send_data","","Host: Send transaction (OUT from host)",567,[[["bool",15]]]],[11,"send_setup","","Host: Send Setup packet",567,[[],["bool",15]]],[11,"set_send_setup","","Host: Send Setup packet",567,[[["bool",15]]]],[11,"start_trans","","Host: Start transaction",567,[[],["bool",15]]],[11,"set_start_trans","","Host: Start transaction",567,[[["bool",15]]]],[3,"EpStatusStallNak","","Device: bits are set when the <code>IRQ_ON_NAK</code> or <code>IRQ_ON_STALL</code> …",null,null],[12,"0","","",568,null],[11,"ep15_out","","",568,[[],["bool",15]]],[11,"set_ep15_out","","",568,[[["bool",15]]]],[11,"ep15_in","","",568,[[],["bool",15]]],[11,"set_ep15_in","","",568,[[["bool",15]]]],[11,"ep14_out","","",568,[[],["bool",15]]],[11,"set_ep14_out","","",568,[[["bool",15]]]],[11,"ep14_in","","",568,[[],["bool",15]]],[11,"set_ep14_in","","",568,[[["bool",15]]]],[11,"ep13_out","","",568,[[],["bool",15]]],[11,"set_ep13_out","","",568,[[["bool",15]]]],[11,"ep13_in","","",568,[[],["bool",15]]],[11,"set_ep13_in","","",568,[[["bool",15]]]],[11,"ep12_out","","",568,[[],["bool",15]]],[11,"set_ep12_out","","",568,[[["bool",15]]]],[11,"ep12_in","","",568,[[],["bool",15]]],[11,"set_ep12_in","","",568,[[["bool",15]]]],[11,"ep11_out","","",568,[[],["bool",15]]],[11,"set_ep11_out","","",568,[[["bool",15]]]],[11,"ep11_in","","",568,[[],["bool",15]]],[11,"set_ep11_in","","",568,[[["bool",15]]]],[11,"ep10_out","","",568,[[],["bool",15]]],[11,"set_ep10_out","","",568,[[["bool",15]]]],[11,"ep10_in","","",568,[[],["bool",15]]],[11,"set_ep10_in","","",568,[[["bool",15]]]],[11,"ep9_out","","",568,[[],["bool",15]]],[11,"set_ep9_out","","",568,[[["bool",15]]]],[11,"ep9_in","","",568,[[],["bool",15]]],[11,"set_ep9_in","","",568,[[["bool",15]]]],[11,"ep8_out","","",568,[[],["bool",15]]],[11,"set_ep8_out","","",568,[[["bool",15]]]],[11,"ep8_in","","",568,[[],["bool",15]]],[11,"set_ep8_in","","",568,[[["bool",15]]]],[11,"ep7_out","","",568,[[],["bool",15]]],[11,"set_ep7_out","","",568,[[["bool",15]]]],[11,"ep7_in","","",568,[[],["bool",15]]],[11,"set_ep7_in","","",568,[[["bool",15]]]],[11,"ep6_out","","",568,[[],["bool",15]]],[11,"set_ep6_out","","",568,[[["bool",15]]]],[11,"ep6_in","","",568,[[],["bool",15]]],[11,"set_ep6_in","","",568,[[["bool",15]]]],[11,"ep5_out","","",568,[[],["bool",15]]],[11,"set_ep5_out","","",568,[[["bool",15]]]],[11,"ep5_in","","",568,[[],["bool",15]]],[11,"set_ep5_in","","",568,[[["bool",15]]]],[11,"ep4_out","","",568,[[],["bool",15]]],[11,"set_ep4_out","","",568,[[["bool",15]]]],[11,"ep4_in","","",568,[[],["bool",15]]],[11,"set_ep4_in","","",568,[[["bool",15]]]],[11,"ep3_out","","",568,[[],["bool",15]]],[11,"set_ep3_out","","",568,[[["bool",15]]]],[11,"ep3_in","","",568,[[],["bool",15]]],[11,"set_ep3_in","","",568,[[["bool",15]]]],[11,"ep2_out","","",568,[[],["bool",15]]],[11,"set_ep2_out","","",568,[[["bool",15]]]],[11,"ep2_in","","",568,[[],["bool",15]]],[11,"set_ep2_in","","",568,[[["bool",15]]]],[11,"ep1_out","","",568,[[],["bool",15]]],[11,"set_ep1_out","","",568,[[["bool",15]]]],[11,"ep1_in","","",568,[[],["bool",15]]],[11,"set_ep1_in","","",568,[[["bool",15]]]],[11,"ep0_out","","",568,[[],["bool",15]]],[11,"set_ep0_out","","",568,[[["bool",15]]]],[11,"ep0_in","","",568,[[],["bool",15]]],[11,"set_ep0_in","","",568,[[["bool",15]]]],[3,"AddrEndp","","Device address and endpoint control",null,null],[12,"0","","",569,null],[11,"endpoint","","Device endpoint to send data to. Only valid for HOST mode.",569,[[],["u8",15]]],[11,"set_endpoint","","Device endpoint to send data to. Only valid for HOST mode.",569,[[["u8",15]]]],[11,"address","","In device mode, the address that the device should …",569,[[],["u8",15]]],[11,"set_address","","In device mode, the address that the device should …",569,[[["u8",15]]]],[3,"AddrEndp13","","Interrupt endpoint 13. Only valid for HOST mode.",null,null],[12,"0","","",570,null],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",570,[[],["bool",15]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",570,[[["bool",15]]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",570,[[],["bool",15]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",570,[[["bool",15]]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",570,[[],["u8",15]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",570,[[["u8",15]]]],[11,"address","","Device address",570,[[],["u8",15]]],[11,"set_address","","Device address",570,[[["u8",15]]]],[3,"Ints","","Interrupt status after masking & forcing",null,null],[12,"0","","",571,null],[11,"ep_stall_nak","","Raised when any bit in EP_STATUS_STALL_NAK is set. Clear …",571,[[],["bool",15]]],[11,"set_ep_stall_nak","","Raised when any bit in EP_STATUS_STALL_NAK is set. Clear …",571,[[["bool",15]]]],[11,"abort_done","","Raised when any bit in ABORT_DONE is set. Clear by …",571,[[],["bool",15]]],[11,"set_abort_done","","Raised when any bit in ABORT_DONE is set. Clear by …",571,[[["bool",15]]]],[11,"dev_sof","","Set every time the device receives a SOF (Start of Frame) …",571,[[],["bool",15]]],[11,"set_dev_sof","","Set every time the device receives a SOF (Start of Frame) …",571,[[["bool",15]]]],[11,"setup_req","","Device. Source: SIE_STATUS.SETUP_REC",571,[[],["bool",15]]],[11,"set_setup_req","","Device. Source: SIE_STATUS.SETUP_REC",571,[[["bool",15]]]],[11,"dev_resume_from_host","","Set when the device receives a resume from the host. …",571,[[],["bool",15]]],[11,"set_dev_resume_from_host","","Set when the device receives a resume from the host. …",571,[[["bool",15]]]],[11,"dev_suspend","","Set when the device suspend state changes. Cleared by …",571,[[],["bool",15]]],[11,"set_dev_suspend","","Set when the device suspend state changes. Cleared by …",571,[[["bool",15]]]],[11,"dev_conn_dis","","Set when the device connection state changes. Cleared by …",571,[[],["bool",15]]],[11,"set_dev_conn_dis","","Set when the device connection state changes. Cleared by …",571,[[["bool",15]]]],[11,"bus_reset","","Source: SIE_STATUS.BUS_RESET",571,[[],["bool",15]]],[11,"set_bus_reset","","Source: SIE_STATUS.BUS_RESET",571,[[["bool",15]]]],[11,"vbus_detect","","Source: SIE_STATUS.VBUS_DETECT",571,[[],["bool",15]]],[11,"set_vbus_detect","","Source: SIE_STATUS.VBUS_DETECT",571,[[["bool",15]]]],[11,"stall","","Source: SIE_STATUS.STALL_REC",571,[[],["bool",15]]],[11,"set_stall","","Source: SIE_STATUS.STALL_REC",571,[[["bool",15]]]],[11,"error_crc","","Source: SIE_STATUS.CRC_ERROR",571,[[],["bool",15]]],[11,"set_error_crc","","Source: SIE_STATUS.CRC_ERROR",571,[[["bool",15]]]],[11,"error_bit_stuff","","Source: SIE_STATUS.BIT_STUFF_ERROR",571,[[],["bool",15]]],[11,"set_error_bit_stuff","","Source: SIE_STATUS.BIT_STUFF_ERROR",571,[[["bool",15]]]],[11,"error_rx_overflow","","Source: SIE_STATUS.RX_OVERFLOW",571,[[],["bool",15]]],[11,"set_error_rx_overflow","","Source: SIE_STATUS.RX_OVERFLOW",571,[[["bool",15]]]],[11,"error_rx_timeout","","Source: SIE_STATUS.RX_TIMEOUT",571,[[],["bool",15]]],[11,"set_error_rx_timeout","","Source: SIE_STATUS.RX_TIMEOUT",571,[[["bool",15]]]],[11,"error_data_seq","","Source: SIE_STATUS.DATA_SEQ_ERROR",571,[[],["bool",15]]],[11,"set_error_data_seq","","Source: SIE_STATUS.DATA_SEQ_ERROR",571,[[["bool",15]]]],[11,"buff_status","","Raised when any bit in BUFF_STATUS is set. Clear by …",571,[[],["bool",15]]],[11,"set_buff_status","","Raised when any bit in BUFF_STATUS is set. Clear by …",571,[[["bool",15]]]],[11,"trans_complete","","Raised every time SIE_STATUS.TRANS_COMPLETE is set. Clear …",571,[[],["bool",15]]],[11,"set_trans_complete","","Raised every time SIE_STATUS.TRANS_COMPLETE is set. Clear …",571,[[["bool",15]]]],[11,"host_sof","","Host: raised every time the host sends a SOF (Start of …",571,[[],["bool",15]]],[11,"set_host_sof","","Host: raised every time the host sends a SOF (Start of …",571,[[["bool",15]]]],[11,"host_resume","","Host: raised when a device wakes up the host. Cleared by …",571,[[],["bool",15]]],[11,"set_host_resume","","Host: raised when a device wakes up the host. Cleared by …",571,[[["bool",15]]]],[11,"host_conn_dis","","Host: raised when a device is connected or disconnected …",571,[[],["bool",15]]],[11,"set_host_conn_dis","","Host: raised when a device is connected or disconnected …",571,[[["bool",15]]]],[3,"BuffCpuShouldHandle","","Which of the double buffers should be handled. Only valid …",null,null],[12,"0","","",572,null],[11,"ep15_out","","",572,[[],["bool",15]]],[11,"set_ep15_out","","",572,[[["bool",15]]]],[11,"ep15_in","","",572,[[],["bool",15]]],[11,"set_ep15_in","","",572,[[["bool",15]]]],[11,"ep14_out","","",572,[[],["bool",15]]],[11,"set_ep14_out","","",572,[[["bool",15]]]],[11,"ep14_in","","",572,[[],["bool",15]]],[11,"set_ep14_in","","",572,[[["bool",15]]]],[11,"ep13_out","","",572,[[],["bool",15]]],[11,"set_ep13_out","","",572,[[["bool",15]]]],[11,"ep13_in","","",572,[[],["bool",15]]],[11,"set_ep13_in","","",572,[[["bool",15]]]],[11,"ep12_out","","",572,[[],["bool",15]]],[11,"set_ep12_out","","",572,[[["bool",15]]]],[11,"ep12_in","","",572,[[],["bool",15]]],[11,"set_ep12_in","","",572,[[["bool",15]]]],[11,"ep11_out","","",572,[[],["bool",15]]],[11,"set_ep11_out","","",572,[[["bool",15]]]],[11,"ep11_in","","",572,[[],["bool",15]]],[11,"set_ep11_in","","",572,[[["bool",15]]]],[11,"ep10_out","","",572,[[],["bool",15]]],[11,"set_ep10_out","","",572,[[["bool",15]]]],[11,"ep10_in","","",572,[[],["bool",15]]],[11,"set_ep10_in","","",572,[[["bool",15]]]],[11,"ep9_out","","",572,[[],["bool",15]]],[11,"set_ep9_out","","",572,[[["bool",15]]]],[11,"ep9_in","","",572,[[],["bool",15]]],[11,"set_ep9_in","","",572,[[["bool",15]]]],[11,"ep8_out","","",572,[[],["bool",15]]],[11,"set_ep8_out","","",572,[[["bool",15]]]],[11,"ep8_in","","",572,[[],["bool",15]]],[11,"set_ep8_in","","",572,[[["bool",15]]]],[11,"ep7_out","","",572,[[],["bool",15]]],[11,"set_ep7_out","","",572,[[["bool",15]]]],[11,"ep7_in","","",572,[[],["bool",15]]],[11,"set_ep7_in","","",572,[[["bool",15]]]],[11,"ep6_out","","",572,[[],["bool",15]]],[11,"set_ep6_out","","",572,[[["bool",15]]]],[11,"ep6_in","","",572,[[],["bool",15]]],[11,"set_ep6_in","","",572,[[["bool",15]]]],[11,"ep5_out","","",572,[[],["bool",15]]],[11,"set_ep5_out","","",572,[[["bool",15]]]],[11,"ep5_in","","",572,[[],["bool",15]]],[11,"set_ep5_in","","",572,[[["bool",15]]]],[11,"ep4_out","","",572,[[],["bool",15]]],[11,"set_ep4_out","","",572,[[["bool",15]]]],[11,"ep4_in","","",572,[[],["bool",15]]],[11,"set_ep4_in","","",572,[[["bool",15]]]],[11,"ep3_out","","",572,[[],["bool",15]]],[11,"set_ep3_out","","",572,[[["bool",15]]]],[11,"ep3_in","","",572,[[],["bool",15]]],[11,"set_ep3_in","","",572,[[["bool",15]]]],[11,"ep2_out","","",572,[[],["bool",15]]],[11,"set_ep2_out","","",572,[[["bool",15]]]],[11,"ep2_in","","",572,[[],["bool",15]]],[11,"set_ep2_in","","",572,[[["bool",15]]]],[11,"ep1_out","","",572,[[],["bool",15]]],[11,"set_ep1_out","","",572,[[["bool",15]]]],[11,"ep1_in","","",572,[[],["bool",15]]],[11,"set_ep1_in","","",572,[[["bool",15]]]],[11,"ep0_out","","",572,[[],["bool",15]]],[11,"set_ep0_out","","",572,[[["bool",15]]]],[11,"ep0_in","","",572,[[],["bool",15]]],[11,"set_ep0_in","","",572,[[["bool",15]]]],[3,"UsbphyTrim","","Used to adjust trim values of USB phy pull down resistors.",null,null],[12,"0","","",573,null],[11,"dm_pulldn_trim","","Value to drive to USB PHY DM pulldown resistor trim …",573,[[],["u8",15]]],[11,"set_dm_pulldn_trim","","Value to drive to USB PHY DM pulldown resistor trim …",573,[[["u8",15]]]],[11,"dp_pulldn_trim","","Value to drive to USB PHY DP pulldown resistor trim …",573,[[],["u8",15]]],[11,"set_dp_pulldn_trim","","Value to drive to USB PHY DP pulldown resistor trim …",573,[[["u8",15]]]],[3,"AddrEndp4","","Interrupt endpoint 4. Only valid for HOST mode.",null,null],[12,"0","","",574,null],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",574,[[],["bool",15]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",574,[[["bool",15]]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",574,[[],["bool",15]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",574,[[["bool",15]]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",574,[[],["u8",15]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",574,[[["u8",15]]]],[11,"address","","Device address",574,[[],["u8",15]]],[11,"set_address","","Device address",574,[[["u8",15]]]],[3,"IntEpCtrl","","interrupt endpoint control register",null,null],[12,"0","","",575,null],[11,"int_ep_active","","Host: Enable interrupt endpoint 1 -> 15",575,[[],["u16",15]]],[11,"set_int_ep_active","","Host: Enable interrupt endpoint 1 -> 15",575,[[["u16",15]]]],[3,"SofRd","","Read the last SOF (Start of Frame) frame number seen. In …",null,null],[12,"0","","",576,null],[11,"count","","",576,[[],["u16",15]]],[11,"set_count","","",576,[[["u16",15]]]],[3,"BuffStatus","","Buffer status register. A bit set here indicates that a …",null,null],[12,"0","","",577,null],[11,"ep15_out","","",577,[[],["bool",15]]],[11,"set_ep15_out","","",577,[[["bool",15]]]],[11,"ep15_in","","",577,[[],["bool",15]]],[11,"set_ep15_in","","",577,[[["bool",15]]]],[11,"ep14_out","","",577,[[],["bool",15]]],[11,"set_ep14_out","","",577,[[["bool",15]]]],[11,"ep14_in","","",577,[[],["bool",15]]],[11,"set_ep14_in","","",577,[[["bool",15]]]],[11,"ep13_out","","",577,[[],["bool",15]]],[11,"set_ep13_out","","",577,[[["bool",15]]]],[11,"ep13_in","","",577,[[],["bool",15]]],[11,"set_ep13_in","","",577,[[["bool",15]]]],[11,"ep12_out","","",577,[[],["bool",15]]],[11,"set_ep12_out","","",577,[[["bool",15]]]],[11,"ep12_in","","",577,[[],["bool",15]]],[11,"set_ep12_in","","",577,[[["bool",15]]]],[11,"ep11_out","","",577,[[],["bool",15]]],[11,"set_ep11_out","","",577,[[["bool",15]]]],[11,"ep11_in","","",577,[[],["bool",15]]],[11,"set_ep11_in","","",577,[[["bool",15]]]],[11,"ep10_out","","",577,[[],["bool",15]]],[11,"set_ep10_out","","",577,[[["bool",15]]]],[11,"ep10_in","","",577,[[],["bool",15]]],[11,"set_ep10_in","","",577,[[["bool",15]]]],[11,"ep9_out","","",577,[[],["bool",15]]],[11,"set_ep9_out","","",577,[[["bool",15]]]],[11,"ep9_in","","",577,[[],["bool",15]]],[11,"set_ep9_in","","",577,[[["bool",15]]]],[11,"ep8_out","","",577,[[],["bool",15]]],[11,"set_ep8_out","","",577,[[["bool",15]]]],[11,"ep8_in","","",577,[[],["bool",15]]],[11,"set_ep8_in","","",577,[[["bool",15]]]],[11,"ep7_out","","",577,[[],["bool",15]]],[11,"set_ep7_out","","",577,[[["bool",15]]]],[11,"ep7_in","","",577,[[],["bool",15]]],[11,"set_ep7_in","","",577,[[["bool",15]]]],[11,"ep6_out","","",577,[[],["bool",15]]],[11,"set_ep6_out","","",577,[[["bool",15]]]],[11,"ep6_in","","",577,[[],["bool",15]]],[11,"set_ep6_in","","",577,[[["bool",15]]]],[11,"ep5_out","","",577,[[],["bool",15]]],[11,"set_ep5_out","","",577,[[["bool",15]]]],[11,"ep5_in","","",577,[[],["bool",15]]],[11,"set_ep5_in","","",577,[[["bool",15]]]],[11,"ep4_out","","",577,[[],["bool",15]]],[11,"set_ep4_out","","",577,[[["bool",15]]]],[11,"ep4_in","","",577,[[],["bool",15]]],[11,"set_ep4_in","","",577,[[["bool",15]]]],[11,"ep3_out","","",577,[[],["bool",15]]],[11,"set_ep3_out","","",577,[[["bool",15]]]],[11,"ep3_in","","",577,[[],["bool",15]]],[11,"set_ep3_in","","",577,[[["bool",15]]]],[11,"ep2_out","","",577,[[],["bool",15]]],[11,"set_ep2_out","","",577,[[["bool",15]]]],[11,"ep2_in","","",577,[[],["bool",15]]],[11,"set_ep2_in","","",577,[[["bool",15]]]],[11,"ep1_out","","",577,[[],["bool",15]]],[11,"set_ep1_out","","",577,[[["bool",15]]]],[11,"ep1_in","","",577,[[],["bool",15]]],[11,"set_ep1_in","","",577,[[["bool",15]]]],[11,"ep0_out","","",577,[[],["bool",15]]],[11,"set_ep0_out","","",577,[[["bool",15]]]],[11,"ep0_in","","",577,[[],["bool",15]]],[11,"set_ep0_in","","",577,[[["bool",15]]]],[3,"Intr","","Raw Interrupts",null,null],[12,"0","","",578,null],[11,"ep_stall_nak","","Raised when any bit in EP_STATUS_STALL_NAK is set. Clear …",578,[[],["bool",15]]],[11,"set_ep_stall_nak","","Raised when any bit in EP_STATUS_STALL_NAK is set. Clear …",578,[[["bool",15]]]],[11,"abort_done","","Raised when any bit in ABORT_DONE is set. Clear by …",578,[[],["bool",15]]],[11,"set_abort_done","","Raised when any bit in ABORT_DONE is set. Clear by …",578,[[["bool",15]]]],[11,"dev_sof","","Set every time the device receives a SOF (Start of Frame) …",578,[[],["bool",15]]],[11,"set_dev_sof","","Set every time the device receives a SOF (Start of Frame) …",578,[[["bool",15]]]],[11,"setup_req","","Device. Source: SIE_STATUS.SETUP_REC",578,[[],["bool",15]]],[11,"set_setup_req","","Device. Source: SIE_STATUS.SETUP_REC",578,[[["bool",15]]]],[11,"dev_resume_from_host","","Set when the device receives a resume from the host. …",578,[[],["bool",15]]],[11,"set_dev_resume_from_host","","Set when the device receives a resume from the host. …",578,[[["bool",15]]]],[11,"dev_suspend","","Set when the device suspend state changes. Cleared by …",578,[[],["bool",15]]],[11,"set_dev_suspend","","Set when the device suspend state changes. Cleared by …",578,[[["bool",15]]]],[11,"dev_conn_dis","","Set when the device connection state changes. Cleared by …",578,[[],["bool",15]]],[11,"set_dev_conn_dis","","Set when the device connection state changes. Cleared by …",578,[[["bool",15]]]],[11,"bus_reset","","Source: SIE_STATUS.BUS_RESET",578,[[],["bool",15]]],[11,"set_bus_reset","","Source: SIE_STATUS.BUS_RESET",578,[[["bool",15]]]],[11,"vbus_detect","","Source: SIE_STATUS.VBUS_DETECT",578,[[],["bool",15]]],[11,"set_vbus_detect","","Source: SIE_STATUS.VBUS_DETECT",578,[[["bool",15]]]],[11,"stall","","Source: SIE_STATUS.STALL_REC",578,[[],["bool",15]]],[11,"set_stall","","Source: SIE_STATUS.STALL_REC",578,[[["bool",15]]]],[11,"error_crc","","Source: SIE_STATUS.CRC_ERROR",578,[[],["bool",15]]],[11,"set_error_crc","","Source: SIE_STATUS.CRC_ERROR",578,[[["bool",15]]]],[11,"error_bit_stuff","","Source: SIE_STATUS.BIT_STUFF_ERROR",578,[[],["bool",15]]],[11,"set_error_bit_stuff","","Source: SIE_STATUS.BIT_STUFF_ERROR",578,[[["bool",15]]]],[11,"error_rx_overflow","","Source: SIE_STATUS.RX_OVERFLOW",578,[[],["bool",15]]],[11,"set_error_rx_overflow","","Source: SIE_STATUS.RX_OVERFLOW",578,[[["bool",15]]]],[11,"error_rx_timeout","","Source: SIE_STATUS.RX_TIMEOUT",578,[[],["bool",15]]],[11,"set_error_rx_timeout","","Source: SIE_STATUS.RX_TIMEOUT",578,[[["bool",15]]]],[11,"error_data_seq","","Source: SIE_STATUS.DATA_SEQ_ERROR",578,[[],["bool",15]]],[11,"set_error_data_seq","","Source: SIE_STATUS.DATA_SEQ_ERROR",578,[[["bool",15]]]],[11,"buff_status","","Raised when any bit in BUFF_STATUS is set. Clear by …",578,[[],["bool",15]]],[11,"set_buff_status","","Raised when any bit in BUFF_STATUS is set. Clear by …",578,[[["bool",15]]]],[11,"trans_complete","","Raised every time SIE_STATUS.TRANS_COMPLETE is set. Clear …",578,[[],["bool",15]]],[11,"set_trans_complete","","Raised every time SIE_STATUS.TRANS_COMPLETE is set. Clear …",578,[[["bool",15]]]],[11,"host_sof","","Host: raised every time the host sends a SOF (Start of …",578,[[],["bool",15]]],[11,"set_host_sof","","Host: raised every time the host sends a SOF (Start of …",578,[[["bool",15]]]],[11,"host_resume","","Host: raised when a device wakes up the host. Cleared by …",578,[[],["bool",15]]],[11,"set_host_resume","","Host: raised when a device wakes up the host. Cleared by …",578,[[["bool",15]]]],[11,"host_conn_dis","","Host: raised when a device is connected or disconnected …",578,[[],["bool",15]]],[11,"set_host_conn_dis","","Host: raised when a device is connected or disconnected …",578,[[["bool",15]]]],[3,"EpStallArm","","Device: this bit must be set in conjunction with the <code>STALL</code>…",null,null],[12,"0","","",579,null],[11,"ep0_out","","",579,[[],["bool",15]]],[11,"set_ep0_out","","",579,[[["bool",15]]]],[11,"ep0_in","","",579,[[],["bool",15]]],[11,"set_ep0_in","","",579,[[["bool",15]]]],[3,"AddrEndp6","","Interrupt endpoint 6. Only valid for HOST mode.",null,null],[12,"0","","",580,null],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",580,[[],["bool",15]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",580,[[["bool",15]]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",580,[[],["bool",15]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",580,[[["bool",15]]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",580,[[],["u8",15]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",580,[[["u8",15]]]],[11,"address","","Device address",580,[[],["u8",15]]],[11,"set_address","","Device address",580,[[["u8",15]]]],[3,"AddrEndp12","","Interrupt endpoint 12. Only valid for HOST mode.",null,null],[12,"0","","",581,null],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",581,[[],["bool",15]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",581,[[["bool",15]]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",581,[[],["bool",15]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",581,[[["bool",15]]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",581,[[],["u8",15]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",581,[[["u8",15]]]],[11,"address","","Device address",581,[[],["u8",15]]],[11,"set_address","","Device address",581,[[["u8",15]]]],[3,"EpAbortDone","","Device only: Used in conjunction with <code>EP_ABORT</code>. Set once …",null,null],[12,"0","","",582,null],[11,"ep15_out","","",582,[[],["bool",15]]],[11,"set_ep15_out","","",582,[[["bool",15]]]],[11,"ep15_in","","",582,[[],["bool",15]]],[11,"set_ep15_in","","",582,[[["bool",15]]]],[11,"ep14_out","","",582,[[],["bool",15]]],[11,"set_ep14_out","","",582,[[["bool",15]]]],[11,"ep14_in","","",582,[[],["bool",15]]],[11,"set_ep14_in","","",582,[[["bool",15]]]],[11,"ep13_out","","",582,[[],["bool",15]]],[11,"set_ep13_out","","",582,[[["bool",15]]]],[11,"ep13_in","","",582,[[],["bool",15]]],[11,"set_ep13_in","","",582,[[["bool",15]]]],[11,"ep12_out","","",582,[[],["bool",15]]],[11,"set_ep12_out","","",582,[[["bool",15]]]],[11,"ep12_in","","",582,[[],["bool",15]]],[11,"set_ep12_in","","",582,[[["bool",15]]]],[11,"ep11_out","","",582,[[],["bool",15]]],[11,"set_ep11_out","","",582,[[["bool",15]]]],[11,"ep11_in","","",582,[[],["bool",15]]],[11,"set_ep11_in","","",582,[[["bool",15]]]],[11,"ep10_out","","",582,[[],["bool",15]]],[11,"set_ep10_out","","",582,[[["bool",15]]]],[11,"ep10_in","","",582,[[],["bool",15]]],[11,"set_ep10_in","","",582,[[["bool",15]]]],[11,"ep9_out","","",582,[[],["bool",15]]],[11,"set_ep9_out","","",582,[[["bool",15]]]],[11,"ep9_in","","",582,[[],["bool",15]]],[11,"set_ep9_in","","",582,[[["bool",15]]]],[11,"ep8_out","","",582,[[],["bool",15]]],[11,"set_ep8_out","","",582,[[["bool",15]]]],[11,"ep8_in","","",582,[[],["bool",15]]],[11,"set_ep8_in","","",582,[[["bool",15]]]],[11,"ep7_out","","",582,[[],["bool",15]]],[11,"set_ep7_out","","",582,[[["bool",15]]]],[11,"ep7_in","","",582,[[],["bool",15]]],[11,"set_ep7_in","","",582,[[["bool",15]]]],[11,"ep6_out","","",582,[[],["bool",15]]],[11,"set_ep6_out","","",582,[[["bool",15]]]],[11,"ep6_in","","",582,[[],["bool",15]]],[11,"set_ep6_in","","",582,[[["bool",15]]]],[11,"ep5_out","","",582,[[],["bool",15]]],[11,"set_ep5_out","","",582,[[["bool",15]]]],[11,"ep5_in","","",582,[[],["bool",15]]],[11,"set_ep5_in","","",582,[[["bool",15]]]],[11,"ep4_out","","",582,[[],["bool",15]]],[11,"set_ep4_out","","",582,[[["bool",15]]]],[11,"ep4_in","","",582,[[],["bool",15]]],[11,"set_ep4_in","","",582,[[["bool",15]]]],[11,"ep3_out","","",582,[[],["bool",15]]],[11,"set_ep3_out","","",582,[[["bool",15]]]],[11,"ep3_in","","",582,[[],["bool",15]]],[11,"set_ep3_in","","",582,[[["bool",15]]]],[11,"ep2_out","","",582,[[],["bool",15]]],[11,"set_ep2_out","","",582,[[["bool",15]]]],[11,"ep2_in","","",582,[[],["bool",15]]],[11,"set_ep2_in","","",582,[[["bool",15]]]],[11,"ep1_out","","",582,[[],["bool",15]]],[11,"set_ep1_out","","",582,[[["bool",15]]]],[11,"ep1_in","","",582,[[],["bool",15]]],[11,"set_ep1_in","","",582,[[["bool",15]]]],[11,"ep0_out","","",582,[[],["bool",15]]],[11,"set_ep0_out","","",582,[[["bool",15]]]],[11,"ep0_in","","",582,[[],["bool",15]]],[11,"set_ep0_in","","",582,[[["bool",15]]]],[3,"Inte","","Interrupt Enable",null,null],[12,"0","","",583,null],[11,"ep_stall_nak","","Raised when any bit in EP_STATUS_STALL_NAK is set. Clear …",583,[[],["bool",15]]],[11,"set_ep_stall_nak","","Raised when any bit in EP_STATUS_STALL_NAK is set. Clear …",583,[[["bool",15]]]],[11,"abort_done","","Raised when any bit in ABORT_DONE is set. Clear by …",583,[[],["bool",15]]],[11,"set_abort_done","","Raised when any bit in ABORT_DONE is set. Clear by …",583,[[["bool",15]]]],[11,"dev_sof","","Set every time the device receives a SOF (Start of Frame) …",583,[[],["bool",15]]],[11,"set_dev_sof","","Set every time the device receives a SOF (Start of Frame) …",583,[[["bool",15]]]],[11,"setup_req","","Device. Source: SIE_STATUS.SETUP_REC",583,[[],["bool",15]]],[11,"set_setup_req","","Device. Source: SIE_STATUS.SETUP_REC",583,[[["bool",15]]]],[11,"dev_resume_from_host","","Set when the device receives a resume from the host. …",583,[[],["bool",15]]],[11,"set_dev_resume_from_host","","Set when the device receives a resume from the host. …",583,[[["bool",15]]]],[11,"dev_suspend","","Set when the device suspend state changes. Cleared by …",583,[[],["bool",15]]],[11,"set_dev_suspend","","Set when the device suspend state changes. Cleared by …",583,[[["bool",15]]]],[11,"dev_conn_dis","","Set when the device connection state changes. Cleared by …",583,[[],["bool",15]]],[11,"set_dev_conn_dis","","Set when the device connection state changes. Cleared by …",583,[[["bool",15]]]],[11,"bus_reset","","Source: SIE_STATUS.BUS_RESET",583,[[],["bool",15]]],[11,"set_bus_reset","","Source: SIE_STATUS.BUS_RESET",583,[[["bool",15]]]],[11,"vbus_detect","","Source: SIE_STATUS.VBUS_DETECT",583,[[],["bool",15]]],[11,"set_vbus_detect","","Source: SIE_STATUS.VBUS_DETECT",583,[[["bool",15]]]],[11,"stall","","Source: SIE_STATUS.STALL_REC",583,[[],["bool",15]]],[11,"set_stall","","Source: SIE_STATUS.STALL_REC",583,[[["bool",15]]]],[11,"error_crc","","Source: SIE_STATUS.CRC_ERROR",583,[[],["bool",15]]],[11,"set_error_crc","","Source: SIE_STATUS.CRC_ERROR",583,[[["bool",15]]]],[11,"error_bit_stuff","","Source: SIE_STATUS.BIT_STUFF_ERROR",583,[[],["bool",15]]],[11,"set_error_bit_stuff","","Source: SIE_STATUS.BIT_STUFF_ERROR",583,[[["bool",15]]]],[11,"error_rx_overflow","","Source: SIE_STATUS.RX_OVERFLOW",583,[[],["bool",15]]],[11,"set_error_rx_overflow","","Source: SIE_STATUS.RX_OVERFLOW",583,[[["bool",15]]]],[11,"error_rx_timeout","","Source: SIE_STATUS.RX_TIMEOUT",583,[[],["bool",15]]],[11,"set_error_rx_timeout","","Source: SIE_STATUS.RX_TIMEOUT",583,[[["bool",15]]]],[11,"error_data_seq","","Source: SIE_STATUS.DATA_SEQ_ERROR",583,[[],["bool",15]]],[11,"set_error_data_seq","","Source: SIE_STATUS.DATA_SEQ_ERROR",583,[[["bool",15]]]],[11,"buff_status","","Raised when any bit in BUFF_STATUS is set. Clear by …",583,[[],["bool",15]]],[11,"set_buff_status","","Raised when any bit in BUFF_STATUS is set. Clear by …",583,[[["bool",15]]]],[11,"trans_complete","","Raised every time SIE_STATUS.TRANS_COMPLETE is set. Clear …",583,[[],["bool",15]]],[11,"set_trans_complete","","Raised every time SIE_STATUS.TRANS_COMPLETE is set. Clear …",583,[[["bool",15]]]],[11,"host_sof","","Host: raised every time the host sends a SOF (Start of …",583,[[],["bool",15]]],[11,"set_host_sof","","Host: raised every time the host sends a SOF (Start of …",583,[[["bool",15]]]],[11,"host_resume","","Host: raised when a device wakes up the host. Cleared by …",583,[[],["bool",15]]],[11,"set_host_resume","","Host: raised when a device wakes up the host. Cleared by …",583,[[["bool",15]]]],[11,"host_conn_dis","","Host: raised when a device is connected or disconnected …",583,[[],["bool",15]]],[11,"set_host_conn_dis","","Host: raised when a device is connected or disconnected …",583,[[["bool",15]]]],[3,"UsbctrlRegs","rp2040_pac2::usbctrl_regs","USB FS/LS controller device registers",null,null],[12,"0","","",584,null],[11,"addr_endp","","Device address and endpoint control",584,[[],[["addrendp",3],["rw",3],["reg",3]]]],[11,"addr_endp1","","Interrupt endpoint 1. Only valid for HOST mode.",584,[[],[["addrendp1",3],["rw",3],["reg",3]]]],[11,"addr_endp2","","Interrupt endpoint 2. Only valid for HOST mode.",584,[[],[["addrendp2",3],["reg",3],["rw",3]]]],[11,"addr_endp3","","Interrupt endpoint 3. Only valid for HOST mode.",584,[[],[["reg",3],["addrendp3",3],["rw",3]]]],[11,"addr_endp4","","Interrupt endpoint 4. Only valid for HOST mode.",584,[[],[["reg",3],["addrendp4",3],["rw",3]]]],[11,"addr_endp5","","Interrupt endpoint 5. Only valid for HOST mode.",584,[[],[["addrendp5",3],["rw",3],["reg",3]]]],[11,"addr_endp6","","Interrupt endpoint 6. Only valid for HOST mode.",584,[[],[["addrendp6",3],["reg",3],["rw",3]]]],[11,"addr_endp7","","Interrupt endpoint 7. Only valid for HOST mode.",584,[[],[["reg",3],["rw",3],["addrendp7",3]]]],[11,"addr_endp8","","Interrupt endpoint 8. Only valid for HOST mode.",584,[[],[["addrendp8",3],["reg",3],["rw",3]]]],[11,"addr_endp9","","Interrupt endpoint 9. Only valid for HOST mode.",584,[[],[["addrendp9",3],["rw",3],["reg",3]]]],[11,"addr_endp10","","Interrupt endpoint 10. Only valid for HOST mode.",584,[[],[["addrendp10",3],["rw",3],["reg",3]]]],[11,"addr_endp11","","Interrupt endpoint 11. Only valid for HOST mode.",584,[[],[["rw",3],["reg",3],["addrendp11",3]]]],[11,"addr_endp12","","Interrupt endpoint 12. Only valid for HOST mode.",584,[[],[["reg",3],["addrendp12",3],["rw",3]]]],[11,"addr_endp13","","Interrupt endpoint 13. Only valid for HOST mode.",584,[[],[["addrendp13",3],["reg",3],["rw",3]]]],[11,"addr_endp14","","Interrupt endpoint 14. Only valid for HOST mode.",584,[[],[["reg",3],["addrendp14",3],["rw",3]]]],[11,"addr_endp15","","Interrupt endpoint 15. Only valid for HOST mode.",584,[[],[["reg",3],["addrendp15",3],["rw",3]]]],[11,"main_ctrl","","Main control register",584,[[],[["reg",3],["mainctrl",3],["rw",3]]]],[11,"sof_wr","","Set the SOF (Start of Frame) frame number in the host …",584,[[],[["rw",3],["reg",3],["sofwr",3]]]],[11,"sof_rd","","Read the last SOF (Start of Frame) frame number seen. In …",584,[[],[["rw",3],["reg",3],["sofrd",3]]]],[11,"sie_ctrl","","SIE control register",584,[[],[["siectrl",3],["rw",3],["reg",3]]]],[11,"sie_status","","SIE status register",584,[[],[["reg",3],["rw",3],["siestatus",3]]]],[11,"int_ep_ctrl","","interrupt endpoint control register",584,[[],[["rw",3],["reg",3],["intepctrl",3]]]],[11,"buff_status","","Buffer status register. A bit set here indicates that a …",584,[[],[["buffstatus",3],["rw",3],["reg",3]]]],[11,"buff_cpu_should_handle","","Which of the double buffers should be handled. Only valid …",584,[[],[["buffcpushouldhandle",3],["rw",3],["reg",3]]]],[11,"ep_abort","","Device only: Can be set to ignore the buffer control …",584,[[],[["epabort",3],["rw",3],["reg",3]]]],[11,"ep_abort_done","","Device only: Used in conjunction with <code>EP_ABORT</code>. Set once …",584,[[],[["reg",3],["epabortdone",3],["rw",3]]]],[11,"ep_stall_arm","","Device: this bit must be set in conjunction with the <code>STALL</code>…",584,[[],[["rw",3],["reg",3],["epstallarm",3]]]],[11,"nak_poll","","Used by the host controller. Sets the wait time in …",584,[[],[["reg",3],["nakpoll",3],["rw",3]]]],[11,"ep_status_stall_nak","","Device: bits are set when the <code>IRQ_ON_NAK</code> or <code>IRQ_ON_STALL</code> …",584,[[],[["reg",3],["epstatusstallnak",3],["rw",3]]]],[11,"usb_muxing","","Where to connect the USB controller. Should be to_phy by …",584,[[],[["rw",3],["reg",3],["usbmuxing",3]]]],[11,"usb_pwr","","Overrides for the power signals in the event that the …",584,[[],[["reg",3],["usbpwr",3],["rw",3]]]],[11,"usbphy_direct","","This register allows for direct control of the USB phy. …",584,[[],[["usbphydirect",3],["reg",3],["rw",3]]]],[11,"usbphy_direct_override","","Override enable for each control in usbphy_direct",584,[[],[["reg",3],["usbphydirectoverride",3],["rw",3]]]],[11,"usbphy_trim","","Used to adjust trim values of USB phy pull down resistors.",584,[[],[["usbphytrim",3],["rw",3],["reg",3]]]],[11,"intr","","Raw Interrupts",584,[[],[["reg",3],["intr",3],["rw",3]]]],[11,"inte","","Interrupt Enable",584,[[],[["inte",3],["reg",3],["rw",3]]]],[11,"intf","","Interrupt Force",584,[[],[["reg",3],["intf",3],["rw",3]]]],[11,"ints","","Interrupt status after masking & forcing",584,[[],[["ints",3],["rw",3],["reg",3]]]],[0,"vreg_and_chip_reset","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::vreg_and_chip_reset","",null,null],[3,"ChipReset","rp2040_pac2::vreg_and_chip_reset::regs","Chip reset control and status",null,null],[12,"0","","",585,null],[11,"psm_restart_flag","","This is set by psm_restart from the debugger. Its purpose …",585,[[],["bool",15]]],[11,"set_psm_restart_flag","","This is set by psm_restart from the debugger. Its purpose …",585,[[["bool",15]]]],[11,"had_psm_restart","","Last reset was from the debug port",585,[[],["bool",15]]],[11,"set_had_psm_restart","","Last reset was from the debug port",585,[[["bool",15]]]],[11,"had_run","","Last reset was from the RUN pin",585,[[],["bool",15]]],[11,"set_had_run","","Last reset was from the RUN pin",585,[[["bool",15]]]],[11,"had_por","","Last reset was from the power-on reset or brown-out …",585,[[],["bool",15]]],[11,"set_had_por","","Last reset was from the power-on reset or brown-out …",585,[[["bool",15]]]],[3,"Bod","","brown-out detection control",null,null],[12,"0","","",586,null],[11,"vsel","","threshold select 0000 - 0.473V 0001 - 0.516V 0010 - …",586,[[],["u8",15]]],[11,"set_vsel","","threshold select 0000 - 0.473V 0001 - 0.516V 0010 - …",586,[[["u8",15]]]],[11,"en","","enable 0=not enabled, 1=enabled",586,[[],["bool",15]]],[11,"set_en","","enable 0=not enabled, 1=enabled",586,[[["bool",15]]]],[3,"Vreg","","Voltage regulator control and status",null,null],[12,"0","","",587,null],[11,"rok","","regulation status 0=not in regulation, 1=in regulation",587,[[],["bool",15]]],[11,"set_rok","","regulation status 0=not in regulation, 1=in regulation",587,[[["bool",15]]]],[11,"vsel","","output voltage select 0000 to 0101 - 0.80V 0110 - 0.85V …",587,[[],["u8",15]]],[11,"set_vsel","","output voltage select 0000 to 0101 - 0.80V 0110 - 0.85V …",587,[[["u8",15]]]],[11,"hiz","","high impedance mode select 0=not in high impedance mode, …",587,[[],["bool",15]]],[11,"set_hiz","","high impedance mode select 0=not in high impedance mode, …",587,[[["bool",15]]]],[11,"en","","enable 0=not enabled, 1=enabled",587,[[],["bool",15]]],[11,"set_en","","enable 0=not enabled, 1=enabled",587,[[["bool",15]]]],[3,"VregAndChipReset","rp2040_pac2::vreg_and_chip_reset","control and status for on-chip voltage regulator and chip …",null,null],[12,"0","","",588,null],[11,"vreg","","Voltage regulator control and status",588,[[],[["reg",3],["rw",3],["vreg",3]]]],[11,"bod","","brown-out detection control",588,[[],[["reg",3],["bod",3],["rw",3]]]],[11,"chip_reset","","Chip reset control and status",588,[[],[["chipreset",3],["rw",3],["reg",3]]]],[0,"watchdog","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::watchdog","",null,null],[3,"Ctrl","rp2040_pac2::watchdog::regs","Watchdog control The rst_wdsel register determines which …",null,null],[12,"0","","",589,null],[11,"trigger","","Trigger a watchdog reset",589,[[],["bool",15]]],[11,"set_trigger","","Trigger a watchdog reset",589,[[["bool",15]]]],[11,"enable","","When not enabled the watchdog timer is paused",589,[[],["bool",15]]],[11,"set_enable","","When not enabled the watchdog timer is paused",589,[[["bool",15]]]],[11,"pause_dbg1","","Pause the watchdog timer when processor 1 is in debug mode",589,[[],["bool",15]]],[11,"set_pause_dbg1","","Pause the watchdog timer when processor 1 is in debug mode",589,[[["bool",15]]]],[11,"pause_dbg0","","Pause the watchdog timer when processor 0 is in debug mode",589,[[],["bool",15]]],[11,"set_pause_dbg0","","Pause the watchdog timer when processor 0 is in debug mode",589,[[["bool",15]]]],[11,"pause_jtag","","Pause the watchdog timer when JTAG is accessing the bus …",589,[[],["bool",15]]],[11,"set_pause_jtag","","Pause the watchdog timer when JTAG is accessing the bus …",589,[[["bool",15]]]],[11,"time","","Indicates the number of ticks / 2 (see errata RP2040-E1) …",589,[[],["u32",15]]],[11,"set_time","","Indicates the number of ticks / 2 (see errata RP2040-E1) …",589,[[["u32",15]]]],[3,"Tick","","Controls the tick generator",null,null],[12,"0","","",590,null],[11,"count","","Count down timer: the remaining number clk_tick cycles …",590,[[],["u16",15]]],[11,"set_count","","Count down timer: the remaining number clk_tick cycles …",590,[[["u16",15]]]],[11,"running","","Is the tick generator running?",590,[[],["bool",15]]],[11,"set_running","","Is the tick generator running?",590,[[["bool",15]]]],[11,"enable","","start / stop tick generation",590,[[],["bool",15]]],[11,"set_enable","","start / stop tick generation",590,[[["bool",15]]]],[11,"cycles","","Total number of clk_tick cycles before the next tick.",590,[[],["u16",15]]],[11,"set_cycles","","Total number of clk_tick cycles before the next tick.",590,[[["u16",15]]]],[3,"Load","","Load the watchdog timer. The maximum setting is 0xffffff …",null,null],[12,"0","","",591,null],[11,"load","","",591,[[],["u32",15]]],[11,"set_load","","",591,[[["u32",15]]]],[3,"Reason","","Logs the reason for the last reset. Both bits are zero …",null,null],[12,"0","","",592,null],[11,"force","","",592,[[],["bool",15]]],[11,"set_force","","",592,[[["bool",15]]]],[11,"timer","","",592,[[],["bool",15]]],[11,"set_timer","","",592,[[["bool",15]]]],[3,"Watchdog","rp2040_pac2::watchdog","",null,null],[12,"0","","",593,null],[11,"ctrl","","Watchdog control The rst_wdsel register determines which …",593,[[],[["ctrl",3],["rw",3],["reg",3]]]],[11,"load","","Load the watchdog timer. The maximum setting is 0xffffff …",593,[[],[["rw",3],["reg",3],["load",3]]]],[11,"reason","","Logs the reason for the last reset. Both bits are zero …",593,[[],[["rw",3],["reg",3],["reason",3]]]],[11,"scratch0","","Scratch register. Information persists through soft reset …",593,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"scratch1","","Scratch register. Information persists through soft reset …",593,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"scratch2","","Scratch register. Information persists through soft reset …",593,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"scratch3","","Scratch register. Information persists through soft reset …",593,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"scratch4","","Scratch register. Information persists through soft reset …",593,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"scratch5","","Scratch register. Information persists through soft reset …",593,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"scratch6","","Scratch register. Information persists through soft reset …",593,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"scratch7","","Scratch register. Information persists through soft reset …",593,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"tick","","Controls the tick generator",593,[[],[["tick",3],["rw",3],["reg",3]]]],[0,"xip_ctrl","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::xip_ctrl","",null,null],[3,"StreamCtr","rp2040_pac2::xip_ctrl::regs","FIFO stream control",null,null],[12,"0","","",594,null],[11,"stream_ctr","","Write a nonzero value to start a streaming read. This …",594,[[],["u32",15]]],[11,"set_stream_ctr","","Write a nonzero value to start a streaming read. This …",594,[[["u32",15]]]],[3,"Flush","","Cache Flush control",null,null],[12,"0","","",595,null],[11,"flush","","Write 1 to flush the cache. This clears the tag memory, …",595,[[],["bool",15]]],[11,"set_flush","","Write 1 to flush the cache. This clears the tag memory, …",595,[[["bool",15]]]],[3,"Stat","","Cache Status",null,null],[12,"0","","",596,null],[11,"fifo_full","","When 1, indicates the XIP streaming FIFO is completely …",596,[[],["bool",15]]],[11,"set_fifo_full","","When 1, indicates the XIP streaming FIFO is completely …",596,[[["bool",15]]]],[11,"fifo_empty","","When 1, indicates the XIP streaming FIFO is completely …",596,[[],["bool",15]]],[11,"set_fifo_empty","","When 1, indicates the XIP streaming FIFO is completely …",596,[[["bool",15]]]],[11,"flush_ready","","Reads as 0 while a cache flush is in progress, and 1 …",596,[[],["bool",15]]],[11,"set_flush_ready","","Reads as 0 while a cache flush is in progress, and 1 …",596,[[["bool",15]]]],[3,"StreamAddr","","FIFO stream address",null,null],[12,"0","","",597,null],[11,"stream_addr","","The address of the next word to be streamed from flash to …",597,[[],["u32",15]]],[11,"set_stream_addr","","The address of the next word to be streamed from flash to …",597,[[["u32",15]]]],[3,"Ctrl","","Cache control",null,null],[12,"0","","",598,null],[11,"power_down","","When 1, the cache memories are powered down. They retain …",598,[[],["bool",15]]],[11,"set_power_down","","When 1, the cache memories are powered down. They retain …",598,[[["bool",15]]]],[11,"err_badwrite","","When 1, writes to any alias other than 0x0 (caching, …",598,[[],["bool",15]]],[11,"set_err_badwrite","","When 1, writes to any alias other than 0x0 (caching, …",598,[[["bool",15]]]],[11,"en","","When 1, enable the cache. When the cache is disabled, all …",598,[[],["bool",15]]],[11,"set_en","","When 1, enable the cache. When the cache is disabled, all …",598,[[["bool",15]]]],[3,"XipCtrl","rp2040_pac2::xip_ctrl","QSPI flash execute-in-place block",null,null],[12,"0","","",599,null],[11,"ctrl","","Cache control",599,[[],[["ctrl",3],["reg",3],["rw",3]]]],[11,"flush","","Cache Flush control",599,[[],[["flush",3],["reg",3],["rw",3]]]],[11,"stat","","Cache Status",599,[[],[["stat",3],["rw",3],["reg",3]]]],[11,"ctr_hit","","Cache Hit counter A 32 bit saturating counter that …",599,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"ctr_acc","","Cache Access counter A 32 bit saturating counter that …",599,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"stream_addr","","FIFO stream address",599,[[],[["reg",3],["streamaddr",3],["rw",3]]]],[11,"stream_ctr","","FIFO stream control",599,[[],[["streamctr",3],["reg",3],["rw",3]]]],[11,"stream_fifo","","FIFO stream data Streamed data is buffered here, for …",599,[[],[["u32",15],["reg",3],["r",3]]]],[0,"xip_ssi","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::xip_ssi","",null,null],[3,"Ser","rp2040_pac2::xip_ssi::regs","Slave enable",null,null],[12,"0","","",600,null],[11,"ser","","For each bit: 0 -> slave not selected 1 -> slave selected",600,[[],["bool",15]]],[11,"set_ser","","For each bit: 0 -> slave not selected 1 -> slave selected",600,[[["bool",15]]]],[3,"Rxflr","","RX FIFO level",null,null],[12,"0","","",601,null],[11,"rxtfl","","Receive FIFO level",601,[[],["u8",15]]],[11,"set_rxtfl","","Receive FIFO level",601,[[["u8",15]]]],[3,"Dmardlr","","DMA RX data level",null,null],[12,"0","","",602,null],[11,"dmardl","","Receive data watermark level (DMARDLR+1)",602,[[],["u8",15]]],[11,"set_dmardl","","Receive data watermark level (DMARDLR+1)",602,[[["u8",15]]]],[3,"Sr","","Status register",null,null],[12,"0","","",603,null],[11,"dcol","","Data collision error",603,[[],["bool",15]]],[11,"set_dcol","","Data collision error",603,[[["bool",15]]]],[11,"txe","","Transmission error",603,[[],["bool",15]]],[11,"set_txe","","Transmission error",603,[[["bool",15]]]],[11,"rff","","Receive FIFO full",603,[[],["bool",15]]],[11,"set_rff","","Receive FIFO full",603,[[["bool",15]]]],[11,"rfne","","Receive FIFO not empty",603,[[],["bool",15]]],[11,"set_rfne","","Receive FIFO not empty",603,[[["bool",15]]]],[11,"tfe","","Transmit FIFO empty",603,[[],["bool",15]]],[11,"set_tfe","","Transmit FIFO empty",603,[[["bool",15]]]],[11,"tfnf","","Transmit FIFO not full",603,[[],["bool",15]]],[11,"set_tfnf","","Transmit FIFO not full",603,[[["bool",15]]]],[11,"busy","","SSI busy flag",603,[[],["bool",15]]],[11,"set_busy","","SSI busy flag",603,[[["bool",15]]]],[3,"Icr","","Interrupt clear",null,null],[12,"0","","",604,null],[11,"icr","","Clear-on-read all active interrupts",604,[[],["bool",15]]],[11,"set_icr","","Clear-on-read all active interrupts",604,[[["bool",15]]]],[3,"Rxftlr","","RX FIFO threshold level",null,null],[12,"0","","",605,null],[11,"rft","","Receive FIFO threshold",605,[[],["u8",15]]],[11,"set_rft","","Receive FIFO threshold",605,[[["u8",15]]]],[3,"Imr","","Interrupt mask",null,null],[12,"0","","",606,null],[11,"mstim","","Multi-master contention interrupt mask",606,[[],["bool",15]]],[11,"set_mstim","","Multi-master contention interrupt mask",606,[[["bool",15]]]],[11,"rxfim","","Receive FIFO full interrupt mask",606,[[],["bool",15]]],[11,"set_rxfim","","Receive FIFO full interrupt mask",606,[[["bool",15]]]],[11,"rxoim","","Receive FIFO overflow interrupt mask",606,[[],["bool",15]]],[11,"set_rxoim","","Receive FIFO overflow interrupt mask",606,[[["bool",15]]]],[11,"rxuim","","Receive FIFO underflow interrupt mask",606,[[],["bool",15]]],[11,"set_rxuim","","Receive FIFO underflow interrupt mask",606,[[["bool",15]]]],[11,"txoim","","Transmit FIFO overflow interrupt mask",606,[[],["bool",15]]],[11,"set_txoim","","Transmit FIFO overflow interrupt mask",606,[[["bool",15]]]],[11,"txeim","","Transmit FIFO empty interrupt mask",606,[[],["bool",15]]],[11,"set_txeim","","Transmit FIFO empty interrupt mask",606,[[["bool",15]]]],[3,"Ssienr","","SSI Enable",null,null],[12,"0","","",607,null],[11,"ssi_en","","SSI enable",607,[[],["bool",15]]],[11,"set_ssi_en","","SSI enable",607,[[["bool",15]]]],[3,"Txoicr","","TX FIFO overflow interrupt clear",null,null],[12,"0","","",608,null],[11,"txoicr","","Clear-on-read transmit FIFO overflow interrupt",608,[[],["bool",15]]],[11,"set_txoicr","","Clear-on-read transmit FIFO overflow interrupt",608,[[["bool",15]]]],[3,"Baudr","","Baud rate",null,null],[12,"0","","",609,null],[11,"sckdv","","SSI clock divider",609,[[],["u16",15]]],[11,"set_sckdv","","SSI clock divider",609,[[["u16",15]]]],[3,"Msticr","","Multi-master interrupt clear",null,null],[12,"0","","",610,null],[11,"msticr","","Clear-on-read multi-master contention interrupt",610,[[],["bool",15]]],[11,"set_msticr","","Clear-on-read multi-master contention interrupt",610,[[["bool",15]]]],[3,"Dmatdlr","","DMA TX data level",null,null],[12,"0","","",611,null],[11,"dmatdl","","Transmit data watermark level",611,[[],["u8",15]]],[11,"set_dmatdl","","Transmit data watermark level",611,[[["u8",15]]]],[3,"Rxoicr","","RX FIFO overflow interrupt clear",null,null],[12,"0","","",612,null],[11,"rxoicr","","Clear-on-read receive FIFO overflow interrupt",612,[[],["bool",15]]],[11,"set_rxoicr","","Clear-on-read receive FIFO overflow interrupt",612,[[["bool",15]]]],[3,"Dmacr","","DMA control",null,null],[12,"0","","",613,null],[11,"tdmae","","Transmit DMA enable",613,[[],["bool",15]]],[11,"set_tdmae","","Transmit DMA enable",613,[[["bool",15]]]],[11,"rdmae","","Receive DMA enable",613,[[],["bool",15]]],[11,"set_rdmae","","Receive DMA enable",613,[[["bool",15]]]],[3,"Txflr","","TX FIFO level",null,null],[12,"0","","",614,null],[11,"tftfl","","Transmit FIFO level",614,[[],["u8",15]]],[11,"set_tftfl","","Transmit FIFO level",614,[[["u8",15]]]],[3,"Ctrlr1","","Master Control register 1",null,null],[12,"0","","",615,null],[11,"ndf","","Number of data frames",615,[[],["u16",15]]],[11,"set_ndf","","Number of data frames",615,[[["u16",15]]]],[3,"Ctrlr0","","Control register 0",null,null],[12,"0","","",616,null],[11,"sste","","Slave select toggle enable",616,[[],["bool",15]]],[11,"set_sste","","Slave select toggle enable",616,[[["bool",15]]]],[11,"spi_frf","","SPI frame format",616,[[],["ctrlr0spifrf",3]]],[11,"set_spi_frf","","SPI frame format",616,[[["ctrlr0spifrf",3]]]],[11,"dfs_32","","Data frame size in 32b transfer mode Value of n -> n+1 …",616,[[],["u8",15]]],[11,"set_dfs_32","","Data frame size in 32b transfer mode Value of n -> n+1 …",616,[[["u8",15]]]],[11,"cfs","","Control frame size Value of n -> n+1 clocks per frame.",616,[[],["u8",15]]],[11,"set_cfs","","Control frame size Value of n -> n+1 clocks per frame.",616,[[["u8",15]]]],[11,"srl","","Shift register loop (test mode)",616,[[],["bool",15]]],[11,"set_srl","","Shift register loop (test mode)",616,[[["bool",15]]]],[11,"slv_oe","","Slave output enable",616,[[],["bool",15]]],[11,"set_slv_oe","","Slave output enable",616,[[["bool",15]]]],[11,"tmod","","Transfer mode",616,[[],["ctrlr0tmod",3]]],[11,"set_tmod","","Transfer mode",616,[[["ctrlr0tmod",3]]]],[11,"scpol","","Serial clock polarity",616,[[],["bool",15]]],[11,"set_scpol","","Serial clock polarity",616,[[["bool",15]]]],[11,"scph","","Serial clock phase",616,[[],["bool",15]]],[11,"set_scph","","Serial clock phase",616,[[["bool",15]]]],[11,"frf","","Frame format",616,[[],["u8",15]]],[11,"set_frf","","Frame format",616,[[["u8",15]]]],[11,"dfs","","Data frame size",616,[[],["u8",15]]],[11,"set_dfs","","Data frame size",616,[[["u8",15]]]],[3,"SpiCtrlr0","","SPI control",null,null],[12,"0","","",617,null],[11,"xip_cmd","","SPI Command to send in XIP mode (INST_L = 8-bit) or to …",617,[[],["u8",15]]],[11,"set_xip_cmd","","SPI Command to send in XIP mode (INST_L = 8-bit) or to …",617,[[["u8",15]]]],[11,"spi_rxds_en","","Read data strobe enable",617,[[],["bool",15]]],[11,"set_spi_rxds_en","","Read data strobe enable",617,[[["bool",15]]]],[11,"inst_ddr_en","","Instruction DDR transfer enable",617,[[],["bool",15]]],[11,"set_inst_ddr_en","","Instruction DDR transfer enable",617,[[["bool",15]]]],[11,"spi_ddr_en","","SPI DDR transfer enable",617,[[],["bool",15]]],[11,"set_spi_ddr_en","","SPI DDR transfer enable",617,[[["bool",15]]]],[11,"wait_cycles","","Wait cycles between control frame transmit and data …",617,[[],["u8",15]]],[11,"set_wait_cycles","","Wait cycles between control frame transmit and data …",617,[[["u8",15]]]],[11,"inst_l","","Instruction length (0/4/8/16b)",617,[[],["spictrlr0instl",3]]],[11,"set_inst_l","","Instruction length (0/4/8/16b)",617,[[["spictrlr0instl",3]]]],[11,"addr_l","","Address length (0b-60b in 4b increments)",617,[[],["u8",15]]],[11,"set_addr_l","","Address length (0b-60b in 4b increments)",617,[[["u8",15]]]],[11,"trans_type","","Address and instruction transfer format",617,[[],["spictrlr0transtype",3]]],[11,"set_trans_type","","Address and instruction transfer format",617,[[["spictrlr0transtype",3]]]],[3,"RxSampleDly","","RX sample delay",null,null],[12,"0","","",618,null],[11,"rsd","","RXD sample delay (in SCLK cycles)",618,[[],["u8",15]]],[11,"set_rsd","","RXD sample delay (in SCLK cycles)",618,[[["u8",15]]]],[3,"Txftlr","","TX FIFO threshold level",null,null],[12,"0","","",619,null],[11,"tft","","Transmit FIFO threshold",619,[[],["u8",15]]],[11,"set_tft","","Transmit FIFO threshold",619,[[["u8",15]]]],[3,"Mwcr","","Microwire Control",null,null],[12,"0","","",620,null],[11,"mhs","","Microwire handshaking",620,[[],["bool",15]]],[11,"set_mhs","","Microwire handshaking",620,[[["bool",15]]]],[11,"mdd","","Microwire control",620,[[],["bool",15]]],[11,"set_mdd","","Microwire control",620,[[["bool",15]]]],[11,"mwmod","","Microwire transfer mode",620,[[],["bool",15]]],[11,"set_mwmod","","Microwire transfer mode",620,[[["bool",15]]]],[3,"Rxuicr","","RX FIFO underflow interrupt clear",null,null],[12,"0","","",621,null],[11,"rxuicr","","Clear-on-read receive FIFO underflow interrupt",621,[[],["bool",15]]],[11,"set_rxuicr","","Clear-on-read receive FIFO underflow interrupt",621,[[["bool",15]]]],[3,"TxdDriveEdge","","TX drive edge",null,null],[12,"0","","",622,null],[11,"tde","","TXD drive edge",622,[[],["u8",15]]],[11,"set_tde","","TXD drive edge",622,[[["u8",15]]]],[3,"Risr","","Raw interrupt status",null,null],[12,"0","","",623,null],[11,"mstir","","Multi-master contention raw interrupt status",623,[[],["bool",15]]],[11,"set_mstir","","Multi-master contention raw interrupt status",623,[[["bool",15]]]],[11,"rxfir","","Receive FIFO full raw interrupt status",623,[[],["bool",15]]],[11,"set_rxfir","","Receive FIFO full raw interrupt status",623,[[["bool",15]]]],[11,"rxoir","","Receive FIFO overflow raw interrupt status",623,[[],["bool",15]]],[11,"set_rxoir","","Receive FIFO overflow raw interrupt status",623,[[["bool",15]]]],[11,"rxuir","","Receive FIFO underflow raw interrupt status",623,[[],["bool",15]]],[11,"set_rxuir","","Receive FIFO underflow raw interrupt status",623,[[["bool",15]]]],[11,"txoir","","Transmit FIFO overflow raw interrupt status",623,[[],["bool",15]]],[11,"set_txoir","","Transmit FIFO overflow raw interrupt status",623,[[["bool",15]]]],[11,"txeir","","Transmit FIFO empty raw interrupt status",623,[[],["bool",15]]],[11,"set_txeir","","Transmit FIFO empty raw interrupt status",623,[[["bool",15]]]],[3,"Isr","","Interrupt status",null,null],[12,"0","","",624,null],[11,"mstis","","Multi-master contention interrupt status",624,[[],["bool",15]]],[11,"set_mstis","","Multi-master contention interrupt status",624,[[["bool",15]]]],[11,"rxfis","","Receive FIFO full interrupt status",624,[[],["bool",15]]],[11,"set_rxfis","","Receive FIFO full interrupt status",624,[[["bool",15]]]],[11,"rxois","","Receive FIFO overflow interrupt status",624,[[],["bool",15]]],[11,"set_rxois","","Receive FIFO overflow interrupt status",624,[[["bool",15]]]],[11,"rxuis","","Receive FIFO underflow interrupt status",624,[[],["bool",15]]],[11,"set_rxuis","","Receive FIFO underflow interrupt status",624,[[["bool",15]]]],[11,"txois","","Transmit FIFO overflow interrupt status",624,[[],["bool",15]]],[11,"set_txois","","Transmit FIFO overflow interrupt status",624,[[["bool",15]]]],[11,"txeis","","Transmit FIFO empty interrupt status",624,[[],["bool",15]]],[11,"set_txeis","","Transmit FIFO empty interrupt status",624,[[["bool",15]]]],[0,"vals","rp2040_pac2::xip_ssi","",null,null],[3,"Ctrlr0Tmod","rp2040_pac2::xip_ssi::vals","Control register 0",null,null],[12,"0","","",625,null],[18,"TX_AND_RX","","Both transmit and receive",625,null],[18,"TX_ONLY","","Transmit only (not for FRF == 0, standard SPI mode)",625,null],[18,"RX_ONLY","","Receive only (not for FRF == 0, standard SPI mode)",625,null],[18,"EEPROM_READ","","EEPROM read mode (TX then RX; RX starts after control …",625,null],[3,"SpiCtrlr0InstL","","SPI control",null,null],[12,"0","","",626,null],[18,"NONE","","No instruction",626,null],[18,"_4B","","4-bit instruction",626,null],[18,"_8B","","8-bit instruction",626,null],[18,"_16B","","16-bit instruction",626,null],[3,"SpiCtrlr0TransType","","SPI control",null,null],[12,"0","","",627,null],[18,"_1C1A","","Command and address both in standard SPI frame format",627,null],[18,"_1C2A","","Command in standard SPI format, address in format …",627,null],[18,"_2C2A","","Command and address both in format specified by FRF (e.g. …",627,null],[3,"Ctrlr0SpiFrf","","Control register 0",null,null],[12,"0","","",628,null],[18,"STD","","Standard 1-bit SPI frame format; 1 bit per SCK, …",628,null],[18,"DUAL","","Dual-SPI frame format; two bits per SCK, half-duplex",628,null],[18,"QUAD","","Quad-SPI frame format; four bits per SCK, half-duplex",628,null],[3,"XipSsi","rp2040_pac2::xip_ssi","DW_apb_ssi has the following features: * APB interface …",null,null],[12,"0","","",629,null],[11,"ctrlr0","","Control register 0",629,[[],[["reg",3],["ctrlr0",3],["rw",3]]]],[11,"ctrlr1","","Master Control register 1",629,[[],[["ctrlr1",3],["reg",3],["rw",3]]]],[11,"ssienr","","SSI Enable",629,[[],[["rw",3],["reg",3],["ssienr",3]]]],[11,"mwcr","","Microwire Control",629,[[],[["reg",3],["mwcr",3],["rw",3]]]],[11,"ser","","Slave enable",629,[[],[["ser",3],["reg",3],["rw",3]]]],[11,"baudr","","Baud rate",629,[[],[["reg",3],["baudr",3],["rw",3]]]],[11,"txftlr","","TX FIFO threshold level",629,[[],[["reg",3],["txftlr",3],["rw",3]]]],[11,"rxftlr","","RX FIFO threshold level",629,[[],[["reg",3],["rxftlr",3],["rw",3]]]],[11,"txflr","","TX FIFO level",629,[[],[["txflr",3],["reg",3],["rw",3]]]],[11,"rxflr","","RX FIFO level",629,[[],[["rxflr",3],["reg",3],["rw",3]]]],[11,"sr","","Status register",629,[[],[["reg",3],["sr",3],["rw",3]]]],[11,"imr","","Interrupt mask",629,[[],[["imr",3],["rw",3],["reg",3]]]],[11,"isr","","Interrupt status",629,[[],[["reg",3],["isr",3],["rw",3]]]],[11,"risr","","Raw interrupt status",629,[[],[["reg",3],["risr",3],["rw",3]]]],[11,"txoicr","","TX FIFO overflow interrupt clear",629,[[],[["rw",3],["reg",3],["txoicr",3]]]],[11,"rxoicr","","RX FIFO overflow interrupt clear",629,[[],[["rxoicr",3],["rw",3],["reg",3]]]],[11,"rxuicr","","RX FIFO underflow interrupt clear",629,[[],[["rxuicr",3],["rw",3],["reg",3]]]],[11,"msticr","","Multi-master interrupt clear",629,[[],[["msticr",3],["reg",3],["rw",3]]]],[11,"icr","","Interrupt clear",629,[[],[["reg",3],["rw",3],["icr",3]]]],[11,"dmacr","","DMA control",629,[[],[["dmacr",3],["rw",3],["reg",3]]]],[11,"dmatdlr","","DMA TX data level",629,[[],[["dmatdlr",3],["rw",3],["reg",3]]]],[11,"dmardlr","","DMA RX data level",629,[[],[["rw",3],["reg",3],["dmardlr",3]]]],[11,"idr","","Identification register",629,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"ssi_version_id","","Version ID",629,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"dr0","","Data Register 0 (of 36)",629,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"rx_sample_dly","","RX sample delay",629,[[],[["reg",3],["rxsampledly",3],["rw",3]]]],[11,"spi_ctrlr0","","SPI control",629,[[],[["reg",3],["spictrlr0",3],["rw",3]]]],[11,"txd_drive_edge","","TX drive edge",629,[[],[["reg",3],["txddriveedge",3],["rw",3]]]],[0,"xosc","rp2040_pac2","",null,null],[0,"regs","rp2040_pac2::xosc","",null,null],[3,"Count","rp2040_pac2::xosc::regs","A down counter running at the xosc frequency which counts …",null,null],[12,"0","","",630,null],[11,"count","","",630,[[],["u8",15]]],[11,"set_count","","",630,[[["u8",15]]]],[3,"Status","","Crystal Oscillator Status",null,null],[12,"0","","",631,null],[11,"stable","","Oscillator is running and stable",631,[[],["bool",15]]],[11,"set_stable","","Oscillator is running and stable",631,[[["bool",15]]]],[11,"badwrite","","An invalid value has been written to CTRL_ENABLE or …",631,[[],["bool",15]]],[11,"set_badwrite","","An invalid value has been written to CTRL_ENABLE or …",631,[[["bool",15]]]],[11,"enabled","","Oscillator is enabled but not necessarily running and …",631,[[],["bool",15]]],[11,"set_enabled","","Oscillator is enabled but not necessarily running and …",631,[[["bool",15]]]],[11,"freq_range","","The current frequency range setting, always reads 0",631,[[],["statusfreqrange",3]]],[11,"set_freq_range","","The current frequency range setting, always reads 0",631,[[["statusfreqrange",3]]]],[3,"Startup","","Controls the startup delay",null,null],[12,"0","","",632,null],[11,"x4","","Multiplies the startup_delay by 4. This is of little …",632,[[],["bool",15]]],[11,"set_x4","","Multiplies the startup_delay by 4. This is of little …",632,[[["bool",15]]]],[11,"delay","","in multiples of 256*xtal_period",632,[[],["u16",15]]],[11,"set_delay","","in multiples of 256*xtal_period",632,[[["u16",15]]]],[3,"Ctrl","","Crystal Oscillator Control",null,null],[12,"0","","",633,null],[11,"enable","","On power-up this field is initialised to DISABLE and the …",633,[[],["ctrlenable",3]]],[11,"set_enable","","On power-up this field is initialised to DISABLE and the …",633,[[["ctrlenable",3]]]],[11,"freq_range","","Frequency range. This resets to 0xAA0 and cannot be …",633,[[],["ctrlfreqrange",3]]],[11,"set_freq_range","","Frequency range. This resets to 0xAA0 and cannot be …",633,[[["ctrlfreqrange",3]]]],[0,"vals","rp2040_pac2::xosc","",null,null],[3,"StatusFreqRange","rp2040_pac2::xosc::vals","Crystal Oscillator Status",null,null],[12,"0","","",634,null],[18,"_1_15MHZ","","",634,null],[18,"RESERVED_1","","",634,null],[18,"RESERVED_2","","",634,null],[18,"RESERVED_3","","",634,null],[3,"CtrlFreqRange","","Crystal Oscillator Control",null,null],[12,"0","","",635,null],[18,"_1_15MHZ","","",635,null],[18,"RESERVED_1","","",635,null],[18,"RESERVED_2","","",635,null],[18,"RESERVED_3","","",635,null],[3,"CtrlEnable","","Crystal Oscillator Control",null,null],[12,"0","","",636,null],[18,"DISABLE","","",636,null],[18,"ENABLE","","",636,null],[3,"Xosc","rp2040_pac2::xosc","Controls the crystal oscillator",null,null],[12,"0","","",637,null],[11,"ctrl","","Crystal Oscillator Control",637,[[],[["ctrl",3],["reg",3],["rw",3]]]],[11,"status","","Crystal Oscillator Status",637,[[],[["rw",3],["status",3],["reg",3]]]],[11,"dormant","","Crystal Oscillator pause control This is used to save …",637,[[],[["u32",15],["reg",3],["rw",3]]]],[11,"startup","","Controls the startup delay",637,[[],[["reg",3],["startup",3],["rw",3]]]],[11,"count","","A down counter running at the xosc frequency which counts …",637,[[],[["count",3],["rw",3],["reg",3]]]],[4,"Interrupt","rp2040_pac2","",null,null],[13,"XIP_IRQ","","6 - XIP_IRQ",638,null],[13,"CLOCKS_IRQ","","17 - CLOCKS_IRQ",638,null],[13,"IO_IRQ_BANK0","","13 - IO_IRQ_BANK0",638,null],[13,"IO_IRQ_QSPI","","14 - IO_IRQ_QSPI",638,null],[13,"UART0_IRQ","","20 - UART0_IRQ",638,null],[13,"UART1_IRQ","","21 - UART1_IRQ",638,null],[13,"SPI0_IRQ","","18 - SPI0_IRQ",638,null],[13,"SPI1_IRQ","","19 - SPI1_IRQ",638,null],[13,"I2C0_IRQ","","23 - I2C0_IRQ",638,null],[13,"I2C1_IRQ","","24 - I2C1_IRQ",638,null],[13,"ADC_IRQ_FIFO","","22 - ADC_IRQ_FIFO",638,null],[13,"PWM_IRQ_WRAP","","4 - PWM_IRQ_WRAP",638,null],[13,"TIMER_IRQ_0","","0 - TIMER_IRQ_0",638,null],[13,"TIMER_IRQ_1","","1 - TIMER_IRQ_1",638,null],[13,"TIMER_IRQ_2","","2 - TIMER_IRQ_2",638,null],[13,"TIMER_IRQ_3","","3 - TIMER_IRQ_3",638,null],[13,"RTC_IRQ","","25 - RTC_IRQ",638,null],[13,"DMA_IRQ_0","","11 - DMA_IRQ_0",638,null],[13,"DMA_IRQ_1","","12 - DMA_IRQ_1",638,null],[13,"USBCTRL_IRQ","","5 - USBCTRL_IRQ",638,null],[13,"PIO0_IRQ_0","","7 - PIO0_IRQ_0",638,null],[13,"PIO0_IRQ_1","","8 - PIO0_IRQ_1",638,null],[13,"PIO1_IRQ_0","","9 - PIO1_IRQ_0",638,null],[13,"PIO1_IRQ_1","","10 - PIO1_IRQ_1",638,null],[13,"SIO_IRQ_PROC0","","15 - SIO_IRQ_PROC0",638,null],[13,"SIO_IRQ_PROC1","","16 - SIO_IRQ_PROC1",638,null],[17,"XIP_CTRL","","QSPI flash execute-in-place block",null,null],[17,"XIP_SSI","","DW_apb_ssi has the following features: * APB interface …",null,null],[17,"SYSINFO","","",null,null],[17,"SYSCFG","","Register block for various chip control signals",null,null],[17,"CLOCKS","","",null,null],[17,"RESETS","","",null,null],[17,"PSM","","",null,null],[17,"IO_BANK0","","",null,null],[17,"IO_QSPI","","",null,null],[17,"PADS_BANK0","","",null,null],[17,"PADS_QSPI","","",null,null],[17,"XOSC","","Controls the crystal oscillator",null,null],[17,"PLL_SYS","","",null,null],[17,"PLL_USB","","",null,null],[17,"BUSCTRL","","Register block for busfabric control signals and …",null,null],[17,"UART0","","",null,null],[17,"UART1","","",null,null],[17,"SPI0","","",null,null],[17,"SPI1","","",null,null],[17,"I2C0","","DW_apb_i2c address block",null,null],[17,"I2C1","","",null,null],[17,"ADC","","Control and data interface to SAR ADC",null,null],[17,"PWM","","Simple PWM",null,null],[17,"TIMER","","Controls time and alarms time is a 64 bit value …",null,null],[17,"WATCHDOG","","",null,null],[17,"RTC","","Register block to control RTC",null,null],[17,"ROSC","","",null,null],[17,"VREG_AND_CHIP_RESET","","control and status for on-chip voltage regulator and chip …",null,null],[17,"TBMAN","","Testbench manager. Allows the programmer to know what …",null,null],[17,"DMA","","DMA with separate read and write masters",null,null],[17,"USBCTRL_REGS","","USB FS/LS controller device registers",null,null],[17,"PIO0","","Programmable IO block",null,null],[17,"PIO1","","",null,null],[17,"SIO","","Single-cycle IO block Provides core-local and inter-core …",null,null],[17,"PPB","","",null,null],[17,"NVIC_PRIO_BITS","","Number available in the NVIC for configuring priority",null,null],[11,"borrow","rp2040_pac2::adc::regs","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::adc","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::busctrl::regs","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::busctrl","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::clocks::regs","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::clocks::vals","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::clocks","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::dma::regs","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::dma::vals","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::dma","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::generic","",639,[[]]],[11,"borrow_mut","","",639,[[]]],[11,"try_from","","",639,[[],["result",4]]],[11,"from","","",639,[[]]],[11,"into","","",639,[[]]],[11,"try_into","","",639,[[],["result",4]]],[11,"type_id","","",639,[[],["typeid",3]]],[11,"borrow","","",640,[[]]],[11,"borrow_mut","","",640,[[]]],[11,"try_from","","",640,[[],["result",4]]],[11,"from","","",640,[[]]],[11,"into","","",640,[[]]],[11,"try_into","","",640,[[],["result",4]]],[11,"type_id","","",640,[[],["typeid",3]]],[11,"borrow","","",641,[[]]],[11,"borrow_mut","","",641,[[]]],[11,"try_from","","",641,[[],["result",4]]],[11,"from","","",641,[[]]],[11,"into","","",641,[[]]],[11,"try_into","","",641,[[],["result",4]]],[11,"type_id","","",641,[[],["typeid",3]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::i2c::regs","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::i2c::vals","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"from","","",223,[[]]],[11,"into","","",223,[[]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"from","","",224,[[]]],[11,"into","","",224,[[]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"from","","",225,[[]]],[11,"into","","",225,[[]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::i2c","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"from","","",226,[[]]],[11,"into","","",226,[[]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::io::regs","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::io::vals","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"from","","",230,[[]]],[11,"into","","",230,[[]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"from","","",231,[[]]],[11,"into","","",231,[[]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"from","","",232,[[]]],[11,"into","","",232,[[]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"from","","",233,[[]]],[11,"into","","",233,[[]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"from","","",234,[[]]],[11,"into","","",234,[[]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"from","","",235,[[]]],[11,"into","","",235,[[]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"from","","",236,[[]]],[11,"into","","",236,[[]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"from","","",237,[[]]],[11,"into","","",237,[[]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"from","","",238,[[]]],[11,"into","","",238,[[]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"from","","",239,[[]]],[11,"into","","",239,[[]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"from","","",240,[[]]],[11,"into","","",240,[[]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"from","","",241,[[]]],[11,"into","","",241,[[]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"from","","",242,[[]]],[11,"into","","",242,[[]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"from","","",243,[[]]],[11,"into","","",243,[[]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"from","","",244,[[]]],[11,"into","","",244,[[]]],[11,"try_into","","",244,[[],["result",4]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"from","","",245,[[]]],[11,"into","","",245,[[]]],[11,"try_into","","",245,[[],["result",4]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"from","","",246,[[]]],[11,"into","","",246,[[]]],[11,"try_into","","",246,[[],["result",4]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"from","","",247,[[]]],[11,"into","","",247,[[]]],[11,"try_into","","",247,[[],["result",4]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"from","","",248,[[]]],[11,"into","","",248,[[]]],[11,"try_into","","",248,[[],["result",4]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"from","","",249,[[]]],[11,"into","","",249,[[]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"borrow","","",250,[[]]],[11,"borrow_mut","","",250,[[]]],[11,"try_from","","",250,[[],["result",4]]],[11,"from","","",250,[[]]],[11,"into","","",250,[[]]],[11,"try_into","","",250,[[],["result",4]]],[11,"type_id","","",250,[[],["typeid",3]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"from","","",251,[[]]],[11,"into","","",251,[[]]],[11,"try_into","","",251,[[],["result",4]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"from","","",252,[[]]],[11,"into","","",252,[[]]],[11,"try_into","","",252,[[],["result",4]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"from","","",253,[[]]],[11,"into","","",253,[[]]],[11,"try_into","","",253,[[],["result",4]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"borrow","","",254,[[]]],[11,"borrow_mut","","",254,[[]]],[11,"try_from","","",254,[[],["result",4]]],[11,"from","","",254,[[]]],[11,"into","","",254,[[]]],[11,"try_into","","",254,[[],["result",4]]],[11,"type_id","","",254,[[],["typeid",3]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"from","","",255,[[]]],[11,"into","","",255,[[]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"from","","",256,[[]]],[11,"into","","",256,[[]]],[11,"try_into","","",256,[[],["result",4]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"from","","",257,[[]]],[11,"into","","",257,[[]]],[11,"try_into","","",257,[[],["result",4]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"from","","",258,[[]]],[11,"into","","",258,[[]]],[11,"try_into","","",258,[[],["result",4]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"from","","",259,[[]]],[11,"into","","",259,[[]]],[11,"try_into","","",259,[[],["result",4]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"borrow","","",260,[[]]],[11,"borrow_mut","","",260,[[]]],[11,"try_from","","",260,[[],["result",4]]],[11,"from","","",260,[[]]],[11,"into","","",260,[[]]],[11,"try_into","","",260,[[],["result",4]]],[11,"type_id","","",260,[[],["typeid",3]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"from","","",261,[[]]],[11,"into","","",261,[[]]],[11,"try_into","","",261,[[],["result",4]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"borrow","","",262,[[]]],[11,"borrow_mut","","",262,[[]]],[11,"try_from","","",262,[[],["result",4]]],[11,"from","","",262,[[]]],[11,"into","","",262,[[]]],[11,"try_into","","",262,[[],["result",4]]],[11,"type_id","","",262,[[],["typeid",3]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"from","","",263,[[]]],[11,"into","","",263,[[]]],[11,"try_into","","",263,[[],["result",4]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::io","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"from","","",264,[[]]],[11,"into","","",264,[[]]],[11,"try_into","","",264,[[],["result",4]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"borrow","","",265,[[]]],[11,"borrow_mut","","",265,[[]]],[11,"try_from","","",265,[[],["result",4]]],[11,"from","","",265,[[]]],[11,"into","","",265,[[]]],[11,"try_into","","",265,[[],["result",4]]],[11,"type_id","","",265,[[],["typeid",3]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"from","","",266,[[]]],[11,"into","","",266,[[]]],[11,"try_into","","",266,[[],["result",4]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::io_qspi::regs","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"from","","",267,[[]]],[11,"into","","",267,[[]]],[11,"try_into","","",267,[[],["result",4]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"from","","",268,[[]]],[11,"into","","",268,[[]]],[11,"try_into","","",268,[[],["result",4]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"from","","",269,[[]]],[11,"into","","",269,[[]]],[11,"try_into","","",269,[[],["result",4]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"borrow","","",270,[[]]],[11,"borrow_mut","","",270,[[]]],[11,"try_from","","",270,[[],["result",4]]],[11,"from","","",270,[[]]],[11,"into","","",270,[[]]],[11,"try_into","","",270,[[],["result",4]]],[11,"type_id","","",270,[[],["typeid",3]]],[11,"borrow","","",271,[[]]],[11,"borrow_mut","","",271,[[]]],[11,"try_from","","",271,[[],["result",4]]],[11,"from","","",271,[[]]],[11,"into","","",271,[[]]],[11,"try_into","","",271,[[],["result",4]]],[11,"type_id","","",271,[[],["typeid",3]]],[11,"borrow","","",272,[[]]],[11,"borrow_mut","","",272,[[]]],[11,"try_from","","",272,[[],["result",4]]],[11,"from","","",272,[[]]],[11,"into","","",272,[[]]],[11,"try_into","","",272,[[],["result",4]]],[11,"type_id","","",272,[[],["typeid",3]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"from","","",273,[[]]],[11,"into","","",273,[[]]],[11,"try_into","","",273,[[],["result",4]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"from","","",274,[[]]],[11,"into","","",274,[[]]],[11,"try_into","","",274,[[],["result",4]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"from","","",275,[[]]],[11,"into","","",275,[[]]],[11,"try_into","","",275,[[],["result",4]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"from","","",276,[[]]],[11,"into","","",276,[[]]],[11,"try_into","","",276,[[],["result",4]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"borrow","","",277,[[]]],[11,"borrow_mut","","",277,[[]]],[11,"try_from","","",277,[[],["result",4]]],[11,"from","","",277,[[]]],[11,"into","","",277,[[]]],[11,"try_into","","",277,[[],["result",4]]],[11,"type_id","","",277,[[],["typeid",3]]],[11,"borrow","","",278,[[]]],[11,"borrow_mut","","",278,[[]]],[11,"try_from","","",278,[[],["result",4]]],[11,"from","","",278,[[]]],[11,"into","","",278,[[]]],[11,"try_into","","",278,[[],["result",4]]],[11,"type_id","","",278,[[],["typeid",3]]],[11,"borrow","","",279,[[]]],[11,"borrow_mut","","",279,[[]]],[11,"try_from","","",279,[[],["result",4]]],[11,"from","","",279,[[]]],[11,"into","","",279,[[]]],[11,"try_into","","",279,[[],["result",4]]],[11,"type_id","","",279,[[],["typeid",3]]],[11,"borrow","","",280,[[]]],[11,"borrow_mut","","",280,[[]]],[11,"try_from","","",280,[[],["result",4]]],[11,"from","","",280,[[]]],[11,"into","","",280,[[]]],[11,"try_into","","",280,[[],["result",4]]],[11,"type_id","","",280,[[],["typeid",3]]],[11,"borrow","","",281,[[]]],[11,"borrow_mut","","",281,[[]]],[11,"try_from","","",281,[[],["result",4]]],[11,"from","","",281,[[]]],[11,"into","","",281,[[]]],[11,"try_into","","",281,[[],["result",4]]],[11,"type_id","","",281,[[],["typeid",3]]],[11,"borrow","","",282,[[]]],[11,"borrow_mut","","",282,[[]]],[11,"try_from","","",282,[[],["result",4]]],[11,"from","","",282,[[]]],[11,"into","","",282,[[]]],[11,"try_into","","",282,[[],["result",4]]],[11,"type_id","","",282,[[],["typeid",3]]],[11,"borrow","","",283,[[]]],[11,"borrow_mut","","",283,[[]]],[11,"try_from","","",283,[[],["result",4]]],[11,"from","","",283,[[]]],[11,"into","","",283,[[]]],[11,"try_into","","",283,[[],["result",4]]],[11,"type_id","","",283,[[],["typeid",3]]],[11,"borrow","","",284,[[]]],[11,"borrow_mut","","",284,[[]]],[11,"try_from","","",284,[[],["result",4]]],[11,"from","","",284,[[]]],[11,"into","","",284,[[]]],[11,"try_into","","",284,[[],["result",4]]],[11,"type_id","","",284,[[],["typeid",3]]],[11,"borrow","","",285,[[]]],[11,"borrow_mut","","",285,[[]]],[11,"try_from","","",285,[[],["result",4]]],[11,"from","","",285,[[]]],[11,"into","","",285,[[]]],[11,"try_into","","",285,[[],["result",4]]],[11,"type_id","","",285,[[],["typeid",3]]],[11,"borrow","","",286,[[]]],[11,"borrow_mut","","",286,[[]]],[11,"try_from","","",286,[[],["result",4]]],[11,"from","","",286,[[]]],[11,"into","","",286,[[]]],[11,"try_into","","",286,[[],["result",4]]],[11,"type_id","","",286,[[],["typeid",3]]],[11,"borrow","","",287,[[]]],[11,"borrow_mut","","",287,[[]]],[11,"try_from","","",287,[[],["result",4]]],[11,"from","","",287,[[]]],[11,"into","","",287,[[]]],[11,"try_into","","",287,[[],["result",4]]],[11,"type_id","","",287,[[],["typeid",3]]],[11,"borrow","","",288,[[]]],[11,"borrow_mut","","",288,[[]]],[11,"try_from","","",288,[[],["result",4]]],[11,"from","","",288,[[]]],[11,"into","","",288,[[]]],[11,"try_into","","",288,[[],["result",4]]],[11,"type_id","","",288,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::io_qspi::vals","",289,[[]]],[11,"borrow_mut","","",289,[[]]],[11,"try_from","","",289,[[],["result",4]]],[11,"from","","",289,[[]]],[11,"into","","",289,[[]]],[11,"try_into","","",289,[[],["result",4]]],[11,"type_id","","",289,[[],["typeid",3]]],[11,"borrow","","",290,[[]]],[11,"borrow_mut","","",290,[[]]],[11,"try_from","","",290,[[],["result",4]]],[11,"from","","",290,[[]]],[11,"into","","",290,[[]]],[11,"try_into","","",290,[[],["result",4]]],[11,"type_id","","",290,[[],["typeid",3]]],[11,"borrow","","",291,[[]]],[11,"borrow_mut","","",291,[[]]],[11,"try_from","","",291,[[],["result",4]]],[11,"from","","",291,[[]]],[11,"into","","",291,[[]]],[11,"try_into","","",291,[[],["result",4]]],[11,"type_id","","",291,[[],["typeid",3]]],[11,"borrow","","",292,[[]]],[11,"borrow_mut","","",292,[[]]],[11,"try_from","","",292,[[],["result",4]]],[11,"from","","",292,[[]]],[11,"into","","",292,[[]]],[11,"try_into","","",292,[[],["result",4]]],[11,"type_id","","",292,[[],["typeid",3]]],[11,"borrow","","",293,[[]]],[11,"borrow_mut","","",293,[[]]],[11,"try_from","","",293,[[],["result",4]]],[11,"from","","",293,[[]]],[11,"into","","",293,[[]]],[11,"try_into","","",293,[[],["result",4]]],[11,"type_id","","",293,[[],["typeid",3]]],[11,"borrow","","",294,[[]]],[11,"borrow_mut","","",294,[[]]],[11,"try_from","","",294,[[],["result",4]]],[11,"from","","",294,[[]]],[11,"into","","",294,[[]]],[11,"try_into","","",294,[[],["result",4]]],[11,"type_id","","",294,[[],["typeid",3]]],[11,"borrow","","",295,[[]]],[11,"borrow_mut","","",295,[[]]],[11,"try_from","","",295,[[],["result",4]]],[11,"from","","",295,[[]]],[11,"into","","",295,[[]]],[11,"try_into","","",295,[[],["result",4]]],[11,"type_id","","",295,[[],["typeid",3]]],[11,"borrow","","",296,[[]]],[11,"borrow_mut","","",296,[[]]],[11,"try_from","","",296,[[],["result",4]]],[11,"from","","",296,[[]]],[11,"into","","",296,[[]]],[11,"try_into","","",296,[[],["result",4]]],[11,"type_id","","",296,[[],["typeid",3]]],[11,"borrow","","",297,[[]]],[11,"borrow_mut","","",297,[[]]],[11,"try_from","","",297,[[],["result",4]]],[11,"from","","",297,[[]]],[11,"into","","",297,[[]]],[11,"try_into","","",297,[[],["result",4]]],[11,"type_id","","",297,[[],["typeid",3]]],[11,"borrow","","",298,[[]]],[11,"borrow_mut","","",298,[[]]],[11,"try_from","","",298,[[],["result",4]]],[11,"from","","",298,[[]]],[11,"into","","",298,[[]]],[11,"try_into","","",298,[[],["result",4]]],[11,"type_id","","",298,[[],["typeid",3]]],[11,"borrow","","",299,[[]]],[11,"borrow_mut","","",299,[[]]],[11,"try_from","","",299,[[],["result",4]]],[11,"from","","",299,[[]]],[11,"into","","",299,[[]]],[11,"try_into","","",299,[[],["result",4]]],[11,"type_id","","",299,[[],["typeid",3]]],[11,"borrow","","",300,[[]]],[11,"borrow_mut","","",300,[[]]],[11,"try_from","","",300,[[],["result",4]]],[11,"from","","",300,[[]]],[11,"into","","",300,[[]]],[11,"try_into","","",300,[[],["result",4]]],[11,"type_id","","",300,[[],["typeid",3]]],[11,"borrow","","",301,[[]]],[11,"borrow_mut","","",301,[[]]],[11,"try_from","","",301,[[],["result",4]]],[11,"from","","",301,[[]]],[11,"into","","",301,[[]]],[11,"try_into","","",301,[[],["result",4]]],[11,"type_id","","",301,[[],["typeid",3]]],[11,"borrow","","",302,[[]]],[11,"borrow_mut","","",302,[[]]],[11,"try_from","","",302,[[],["result",4]]],[11,"from","","",302,[[]]],[11,"into","","",302,[[]]],[11,"try_into","","",302,[[],["result",4]]],[11,"type_id","","",302,[[],["typeid",3]]],[11,"borrow","","",303,[[]]],[11,"borrow_mut","","",303,[[]]],[11,"try_from","","",303,[[],["result",4]]],[11,"from","","",303,[[]]],[11,"into","","",303,[[]]],[11,"try_into","","",303,[[],["result",4]]],[11,"type_id","","",303,[[],["typeid",3]]],[11,"borrow","","",304,[[]]],[11,"borrow_mut","","",304,[[]]],[11,"try_from","","",304,[[],["result",4]]],[11,"from","","",304,[[]]],[11,"into","","",304,[[]]],[11,"try_into","","",304,[[],["result",4]]],[11,"type_id","","",304,[[],["typeid",3]]],[11,"borrow","","",305,[[]]],[11,"borrow_mut","","",305,[[]]],[11,"try_from","","",305,[[],["result",4]]],[11,"from","","",305,[[]]],[11,"into","","",305,[[]]],[11,"try_into","","",305,[[],["result",4]]],[11,"type_id","","",305,[[],["typeid",3]]],[11,"borrow","","",306,[[]]],[11,"borrow_mut","","",306,[[]]],[11,"try_from","","",306,[[],["result",4]]],[11,"from","","",306,[[]]],[11,"into","","",306,[[]]],[11,"try_into","","",306,[[],["result",4]]],[11,"type_id","","",306,[[],["typeid",3]]],[11,"borrow","","",307,[[]]],[11,"borrow_mut","","",307,[[]]],[11,"try_from","","",307,[[],["result",4]]],[11,"from","","",307,[[]]],[11,"into","","",307,[[]]],[11,"try_into","","",307,[[],["result",4]]],[11,"type_id","","",307,[[],["typeid",3]]],[11,"borrow","","",308,[[]]],[11,"borrow_mut","","",308,[[]]],[11,"try_from","","",308,[[],["result",4]]],[11,"from","","",308,[[]]],[11,"into","","",308,[[]]],[11,"try_into","","",308,[[],["result",4]]],[11,"type_id","","",308,[[],["typeid",3]]],[11,"borrow","","",309,[[]]],[11,"borrow_mut","","",309,[[]]],[11,"try_from","","",309,[[],["result",4]]],[11,"from","","",309,[[]]],[11,"into","","",309,[[]]],[11,"try_into","","",309,[[],["result",4]]],[11,"type_id","","",309,[[],["typeid",3]]],[11,"borrow","","",310,[[]]],[11,"borrow_mut","","",310,[[]]],[11,"try_from","","",310,[[],["result",4]]],[11,"from","","",310,[[]]],[11,"into","","",310,[[]]],[11,"try_into","","",310,[[],["result",4]]],[11,"type_id","","",310,[[],["typeid",3]]],[11,"borrow","","",311,[[]]],[11,"borrow_mut","","",311,[[]]],[11,"try_from","","",311,[[],["result",4]]],[11,"from","","",311,[[]]],[11,"into","","",311,[[]]],[11,"try_into","","",311,[[],["result",4]]],[11,"type_id","","",311,[[],["typeid",3]]],[11,"borrow","","",312,[[]]],[11,"borrow_mut","","",312,[[]]],[11,"try_from","","",312,[[],["result",4]]],[11,"from","","",312,[[]]],[11,"into","","",312,[[]]],[11,"try_into","","",312,[[],["result",4]]],[11,"type_id","","",312,[[],["typeid",3]]],[11,"borrow","","",313,[[]]],[11,"borrow_mut","","",313,[[]]],[11,"try_from","","",313,[[],["result",4]]],[11,"from","","",313,[[]]],[11,"into","","",313,[[]]],[11,"try_into","","",313,[[],["result",4]]],[11,"type_id","","",313,[[],["typeid",3]]],[11,"borrow","","",314,[[]]],[11,"borrow_mut","","",314,[[]]],[11,"try_from","","",314,[[],["result",4]]],[11,"from","","",314,[[]]],[11,"into","","",314,[[]]],[11,"try_into","","",314,[[],["result",4]]],[11,"type_id","","",314,[[],["typeid",3]]],[11,"borrow","","",315,[[]]],[11,"borrow_mut","","",315,[[]]],[11,"try_from","","",315,[[],["result",4]]],[11,"from","","",315,[[]]],[11,"into","","",315,[[]]],[11,"try_into","","",315,[[],["result",4]]],[11,"type_id","","",315,[[],["typeid",3]]],[11,"borrow","","",316,[[]]],[11,"borrow_mut","","",316,[[]]],[11,"try_from","","",316,[[],["result",4]]],[11,"from","","",316,[[]]],[11,"into","","",316,[[]]],[11,"try_into","","",316,[[],["result",4]]],[11,"type_id","","",316,[[],["typeid",3]]],[11,"borrow","","",317,[[]]],[11,"borrow_mut","","",317,[[]]],[11,"try_from","","",317,[[],["result",4]]],[11,"from","","",317,[[]]],[11,"into","","",317,[[]]],[11,"try_into","","",317,[[],["result",4]]],[11,"type_id","","",317,[[],["typeid",3]]],[11,"borrow","","",318,[[]]],[11,"borrow_mut","","",318,[[]]],[11,"try_from","","",318,[[],["result",4]]],[11,"from","","",318,[[]]],[11,"into","","",318,[[]]],[11,"try_into","","",318,[[],["result",4]]],[11,"type_id","","",318,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::pads::regs","",319,[[]]],[11,"borrow_mut","","",319,[[]]],[11,"try_from","","",319,[[],["result",4]]],[11,"from","","",319,[[]]],[11,"into","","",319,[[]]],[11,"try_into","","",319,[[],["result",4]]],[11,"type_id","","",319,[[],["typeid",3]]],[11,"borrow","","",320,[[]]],[11,"borrow_mut","","",320,[[]]],[11,"try_from","","",320,[[],["result",4]]],[11,"from","","",320,[[]]],[11,"into","","",320,[[]]],[11,"try_into","","",320,[[],["result",4]]],[11,"type_id","","",320,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::pads::vals","",321,[[]]],[11,"borrow_mut","","",321,[[]]],[11,"try_from","","",321,[[],["result",4]]],[11,"from","","",321,[[]]],[11,"into","","",321,[[]]],[11,"try_into","","",321,[[],["result",4]]],[11,"type_id","","",321,[[],["typeid",3]]],[11,"borrow","","",322,[[]]],[11,"borrow_mut","","",322,[[]]],[11,"try_from","","",322,[[],["result",4]]],[11,"from","","",322,[[]]],[11,"into","","",322,[[]]],[11,"try_into","","",322,[[],["result",4]]],[11,"type_id","","",322,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::pads","",323,[[]]],[11,"borrow_mut","","",323,[[]]],[11,"try_from","","",323,[[],["result",4]]],[11,"from","","",323,[[]]],[11,"into","","",323,[[]]],[11,"try_into","","",323,[[],["result",4]]],[11,"type_id","","",323,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::pads_qspi::regs","",324,[[]]],[11,"borrow_mut","","",324,[[]]],[11,"try_from","","",324,[[],["result",4]]],[11,"from","","",324,[[]]],[11,"into","","",324,[[]]],[11,"try_into","","",324,[[],["result",4]]],[11,"type_id","","",324,[[],["typeid",3]]],[11,"borrow","","",325,[[]]],[11,"borrow_mut","","",325,[[]]],[11,"try_from","","",325,[[],["result",4]]],[11,"from","","",325,[[]]],[11,"into","","",325,[[]]],[11,"try_into","","",325,[[],["result",4]]],[11,"type_id","","",325,[[],["typeid",3]]],[11,"borrow","","",326,[[]]],[11,"borrow_mut","","",326,[[]]],[11,"try_from","","",326,[[],["result",4]]],[11,"from","","",326,[[]]],[11,"into","","",326,[[]]],[11,"try_into","","",326,[[],["result",4]]],[11,"type_id","","",326,[[],["typeid",3]]],[11,"borrow","","",327,[[]]],[11,"borrow_mut","","",327,[[]]],[11,"try_from","","",327,[[],["result",4]]],[11,"from","","",327,[[]]],[11,"into","","",327,[[]]],[11,"try_into","","",327,[[],["result",4]]],[11,"type_id","","",327,[[],["typeid",3]]],[11,"borrow","","",328,[[]]],[11,"borrow_mut","","",328,[[]]],[11,"try_from","","",328,[[],["result",4]]],[11,"from","","",328,[[]]],[11,"into","","",328,[[]]],[11,"try_into","","",328,[[],["result",4]]],[11,"type_id","","",328,[[],["typeid",3]]],[11,"borrow","","",329,[[]]],[11,"borrow_mut","","",329,[[]]],[11,"try_from","","",329,[[],["result",4]]],[11,"from","","",329,[[]]],[11,"into","","",329,[[]]],[11,"try_into","","",329,[[],["result",4]]],[11,"type_id","","",329,[[],["typeid",3]]],[11,"borrow","","",330,[[]]],[11,"borrow_mut","","",330,[[]]],[11,"try_from","","",330,[[],["result",4]]],[11,"from","","",330,[[]]],[11,"into","","",330,[[]]],[11,"try_into","","",330,[[],["result",4]]],[11,"type_id","","",330,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::pads_qspi::vals","",331,[[]]],[11,"borrow_mut","","",331,[[]]],[11,"try_from","","",331,[[],["result",4]]],[11,"from","","",331,[[]]],[11,"into","","",331,[[]]],[11,"try_into","","",331,[[],["result",4]]],[11,"type_id","","",331,[[],["typeid",3]]],[11,"borrow","","",332,[[]]],[11,"borrow_mut","","",332,[[]]],[11,"try_from","","",332,[[],["result",4]]],[11,"from","","",332,[[]]],[11,"into","","",332,[[]]],[11,"try_into","","",332,[[],["result",4]]],[11,"type_id","","",332,[[],["typeid",3]]],[11,"borrow","","",333,[[]]],[11,"borrow_mut","","",333,[[]]],[11,"try_from","","",333,[[],["result",4]]],[11,"from","","",333,[[]]],[11,"into","","",333,[[]]],[11,"try_into","","",333,[[],["result",4]]],[11,"type_id","","",333,[[],["typeid",3]]],[11,"borrow","","",334,[[]]],[11,"borrow_mut","","",334,[[]]],[11,"try_from","","",334,[[],["result",4]]],[11,"from","","",334,[[]]],[11,"into","","",334,[[]]],[11,"try_into","","",334,[[],["result",4]]],[11,"type_id","","",334,[[],["typeid",3]]],[11,"borrow","","",335,[[]]],[11,"borrow_mut","","",335,[[]]],[11,"try_from","","",335,[[],["result",4]]],[11,"from","","",335,[[]]],[11,"into","","",335,[[]]],[11,"try_into","","",335,[[],["result",4]]],[11,"type_id","","",335,[[],["typeid",3]]],[11,"borrow","","",336,[[]]],[11,"borrow_mut","","",336,[[]]],[11,"try_from","","",336,[[],["result",4]]],[11,"from","","",336,[[]]],[11,"into","","",336,[[]]],[11,"try_into","","",336,[[],["result",4]]],[11,"type_id","","",336,[[],["typeid",3]]],[11,"borrow","","",337,[[]]],[11,"borrow_mut","","",337,[[]]],[11,"try_from","","",337,[[],["result",4]]],[11,"from","","",337,[[]]],[11,"into","","",337,[[]]],[11,"try_into","","",337,[[],["result",4]]],[11,"type_id","","",337,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::pio::regs","",338,[[]]],[11,"borrow_mut","","",338,[[]]],[11,"try_from","","",338,[[],["result",4]]],[11,"from","","",338,[[]]],[11,"into","","",338,[[]]],[11,"try_into","","",338,[[],["result",4]]],[11,"type_id","","",338,[[],["typeid",3]]],[11,"borrow","","",339,[[]]],[11,"borrow_mut","","",339,[[]]],[11,"try_from","","",339,[[],["result",4]]],[11,"from","","",339,[[]]],[11,"into","","",339,[[]]],[11,"try_into","","",339,[[],["result",4]]],[11,"type_id","","",339,[[],["typeid",3]]],[11,"borrow","","",340,[[]]],[11,"borrow_mut","","",340,[[]]],[11,"try_from","","",340,[[],["result",4]]],[11,"from","","",340,[[]]],[11,"into","","",340,[[]]],[11,"try_into","","",340,[[],["result",4]]],[11,"type_id","","",340,[[],["typeid",3]]],[11,"borrow","","",341,[[]]],[11,"borrow_mut","","",341,[[]]],[11,"try_from","","",341,[[],["result",4]]],[11,"from","","",341,[[]]],[11,"into","","",341,[[]]],[11,"try_into","","",341,[[],["result",4]]],[11,"type_id","","",341,[[],["typeid",3]]],[11,"borrow","","",342,[[]]],[11,"borrow_mut","","",342,[[]]],[11,"try_from","","",342,[[],["result",4]]],[11,"from","","",342,[[]]],[11,"into","","",342,[[]]],[11,"try_into","","",342,[[],["result",4]]],[11,"type_id","","",342,[[],["typeid",3]]],[11,"borrow","","",343,[[]]],[11,"borrow_mut","","",343,[[]]],[11,"try_from","","",343,[[],["result",4]]],[11,"from","","",343,[[]]],[11,"into","","",343,[[]]],[11,"try_into","","",343,[[],["result",4]]],[11,"type_id","","",343,[[],["typeid",3]]],[11,"borrow","","",344,[[]]],[11,"borrow_mut","","",344,[[]]],[11,"try_from","","",344,[[],["result",4]]],[11,"from","","",344,[[]]],[11,"into","","",344,[[]]],[11,"try_into","","",344,[[],["result",4]]],[11,"type_id","","",344,[[],["typeid",3]]],[11,"borrow","","",345,[[]]],[11,"borrow_mut","","",345,[[]]],[11,"try_from","","",345,[[],["result",4]]],[11,"from","","",345,[[]]],[11,"into","","",345,[[]]],[11,"try_into","","",345,[[],["result",4]]],[11,"type_id","","",345,[[],["typeid",3]]],[11,"borrow","","",346,[[]]],[11,"borrow_mut","","",346,[[]]],[11,"try_from","","",346,[[],["result",4]]],[11,"from","","",346,[[]]],[11,"into","","",346,[[]]],[11,"try_into","","",346,[[],["result",4]]],[11,"type_id","","",346,[[],["typeid",3]]],[11,"borrow","","",347,[[]]],[11,"borrow_mut","","",347,[[]]],[11,"try_from","","",347,[[],["result",4]]],[11,"from","","",347,[[]]],[11,"into","","",347,[[]]],[11,"try_into","","",347,[[],["result",4]]],[11,"type_id","","",347,[[],["typeid",3]]],[11,"borrow","","",348,[[]]],[11,"borrow_mut","","",348,[[]]],[11,"try_from","","",348,[[],["result",4]]],[11,"from","","",348,[[]]],[11,"into","","",348,[[]]],[11,"try_into","","",348,[[],["result",4]]],[11,"type_id","","",348,[[],["typeid",3]]],[11,"borrow","","",349,[[]]],[11,"borrow_mut","","",349,[[]]],[11,"try_from","","",349,[[],["result",4]]],[11,"from","","",349,[[]]],[11,"into","","",349,[[]]],[11,"try_into","","",349,[[],["result",4]]],[11,"type_id","","",349,[[],["typeid",3]]],[11,"borrow","","",350,[[]]],[11,"borrow_mut","","",350,[[]]],[11,"try_from","","",350,[[],["result",4]]],[11,"from","","",350,[[]]],[11,"into","","",350,[[]]],[11,"try_into","","",350,[[],["result",4]]],[11,"type_id","","",350,[[],["typeid",3]]],[11,"borrow","","",351,[[]]],[11,"borrow_mut","","",351,[[]]],[11,"try_from","","",351,[[],["result",4]]],[11,"from","","",351,[[]]],[11,"into","","",351,[[]]],[11,"try_into","","",351,[[],["result",4]]],[11,"type_id","","",351,[[],["typeid",3]]],[11,"borrow","","",352,[[]]],[11,"borrow_mut","","",352,[[]]],[11,"try_from","","",352,[[],["result",4]]],[11,"from","","",352,[[]]],[11,"into","","",352,[[]]],[11,"try_into","","",352,[[],["result",4]]],[11,"type_id","","",352,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::pio::vals","",353,[[]]],[11,"borrow_mut","","",353,[[]]],[11,"try_from","","",353,[[],["result",4]]],[11,"from","","",353,[[]]],[11,"into","","",353,[[]]],[11,"try_into","","",353,[[],["result",4]]],[11,"type_id","","",353,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::pio","",354,[[]]],[11,"borrow_mut","","",354,[[]]],[11,"try_from","","",354,[[],["result",4]]],[11,"from","","",354,[[]]],[11,"into","","",354,[[]]],[11,"try_into","","",354,[[],["result",4]]],[11,"type_id","","",354,[[],["typeid",3]]],[11,"borrow","","",355,[[]]],[11,"borrow_mut","","",355,[[]]],[11,"try_from","","",355,[[],["result",4]]],[11,"from","","",355,[[]]],[11,"into","","",355,[[]]],[11,"try_into","","",355,[[],["result",4]]],[11,"type_id","","",355,[[],["typeid",3]]],[11,"borrow","","",356,[[]]],[11,"borrow_mut","","",356,[[]]],[11,"try_from","","",356,[[],["result",4]]],[11,"from","","",356,[[]]],[11,"into","","",356,[[]]],[11,"try_into","","",356,[[],["result",4]]],[11,"type_id","","",356,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::pll::regs","",357,[[]]],[11,"borrow_mut","","",357,[[]]],[11,"try_from","","",357,[[],["result",4]]],[11,"from","","",357,[[]]],[11,"into","","",357,[[]]],[11,"try_into","","",357,[[],["result",4]]],[11,"type_id","","",357,[[],["typeid",3]]],[11,"borrow","","",358,[[]]],[11,"borrow_mut","","",358,[[]]],[11,"try_from","","",358,[[],["result",4]]],[11,"from","","",358,[[]]],[11,"into","","",358,[[]]],[11,"try_into","","",358,[[],["result",4]]],[11,"type_id","","",358,[[],["typeid",3]]],[11,"borrow","","",359,[[]]],[11,"borrow_mut","","",359,[[]]],[11,"try_from","","",359,[[],["result",4]]],[11,"from","","",359,[[]]],[11,"into","","",359,[[]]],[11,"try_into","","",359,[[],["result",4]]],[11,"type_id","","",359,[[],["typeid",3]]],[11,"borrow","","",360,[[]]],[11,"borrow_mut","","",360,[[]]],[11,"try_from","","",360,[[],["result",4]]],[11,"from","","",360,[[]]],[11,"into","","",360,[[]]],[11,"try_into","","",360,[[],["result",4]]],[11,"type_id","","",360,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::pll","",361,[[]]],[11,"borrow_mut","","",361,[[]]],[11,"try_from","","",361,[[],["result",4]]],[11,"from","","",361,[[]]],[11,"into","","",361,[[]]],[11,"try_into","","",361,[[],["result",4]]],[11,"type_id","","",361,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::ppb::regs","",362,[[]]],[11,"borrow_mut","","",362,[[]]],[11,"try_from","","",362,[[],["result",4]]],[11,"from","","",362,[[]]],[11,"into","","",362,[[]]],[11,"try_into","","",362,[[],["result",4]]],[11,"type_id","","",362,[[],["typeid",3]]],[11,"borrow","","",363,[[]]],[11,"borrow_mut","","",363,[[]]],[11,"try_from","","",363,[[],["result",4]]],[11,"from","","",363,[[]]],[11,"into","","",363,[[]]],[11,"try_into","","",363,[[],["result",4]]],[11,"type_id","","",363,[[],["typeid",3]]],[11,"borrow","","",364,[[]]],[11,"borrow_mut","","",364,[[]]],[11,"try_from","","",364,[[],["result",4]]],[11,"from","","",364,[[]]],[11,"into","","",364,[[]]],[11,"try_into","","",364,[[],["result",4]]],[11,"type_id","","",364,[[],["typeid",3]]],[11,"borrow","","",365,[[]]],[11,"borrow_mut","","",365,[[]]],[11,"try_from","","",365,[[],["result",4]]],[11,"from","","",365,[[]]],[11,"into","","",365,[[]]],[11,"try_into","","",365,[[],["result",4]]],[11,"type_id","","",365,[[],["typeid",3]]],[11,"borrow","","",366,[[]]],[11,"borrow_mut","","",366,[[]]],[11,"try_from","","",366,[[],["result",4]]],[11,"from","","",366,[[]]],[11,"into","","",366,[[]]],[11,"try_into","","",366,[[],["result",4]]],[11,"type_id","","",366,[[],["typeid",3]]],[11,"borrow","","",367,[[]]],[11,"borrow_mut","","",367,[[]]],[11,"try_from","","",367,[[],["result",4]]],[11,"from","","",367,[[]]],[11,"into","","",367,[[]]],[11,"try_into","","",367,[[],["result",4]]],[11,"type_id","","",367,[[],["typeid",3]]],[11,"borrow","","",368,[[]]],[11,"borrow_mut","","",368,[[]]],[11,"try_from","","",368,[[],["result",4]]],[11,"from","","",368,[[]]],[11,"into","","",368,[[]]],[11,"try_into","","",368,[[],["result",4]]],[11,"type_id","","",368,[[],["typeid",3]]],[11,"borrow","","",369,[[]]],[11,"borrow_mut","","",369,[[]]],[11,"try_from","","",369,[[],["result",4]]],[11,"from","","",369,[[]]],[11,"into","","",369,[[]]],[11,"try_into","","",369,[[],["result",4]]],[11,"type_id","","",369,[[],["typeid",3]]],[11,"borrow","","",370,[[]]],[11,"borrow_mut","","",370,[[]]],[11,"try_from","","",370,[[],["result",4]]],[11,"from","","",370,[[]]],[11,"into","","",370,[[]]],[11,"try_into","","",370,[[],["result",4]]],[11,"type_id","","",370,[[],["typeid",3]]],[11,"borrow","","",371,[[]]],[11,"borrow_mut","","",371,[[]]],[11,"try_from","","",371,[[],["result",4]]],[11,"from","","",371,[[]]],[11,"into","","",371,[[]]],[11,"try_into","","",371,[[],["result",4]]],[11,"type_id","","",371,[[],["typeid",3]]],[11,"borrow","","",372,[[]]],[11,"borrow_mut","","",372,[[]]],[11,"try_from","","",372,[[],["result",4]]],[11,"from","","",372,[[]]],[11,"into","","",372,[[]]],[11,"try_into","","",372,[[],["result",4]]],[11,"type_id","","",372,[[],["typeid",3]]],[11,"borrow","","",373,[[]]],[11,"borrow_mut","","",373,[[]]],[11,"try_from","","",373,[[],["result",4]]],[11,"from","","",373,[[]]],[11,"into","","",373,[[]]],[11,"try_into","","",373,[[],["result",4]]],[11,"type_id","","",373,[[],["typeid",3]]],[11,"borrow","","",374,[[]]],[11,"borrow_mut","","",374,[[]]],[11,"try_from","","",374,[[],["result",4]]],[11,"from","","",374,[[]]],[11,"into","","",374,[[]]],[11,"try_into","","",374,[[],["result",4]]],[11,"type_id","","",374,[[],["typeid",3]]],[11,"borrow","","",375,[[]]],[11,"borrow_mut","","",375,[[]]],[11,"try_from","","",375,[[],["result",4]]],[11,"from","","",375,[[]]],[11,"into","","",375,[[]]],[11,"try_into","","",375,[[],["result",4]]],[11,"type_id","","",375,[[],["typeid",3]]],[11,"borrow","","",376,[[]]],[11,"borrow_mut","","",376,[[]]],[11,"try_from","","",376,[[],["result",4]]],[11,"from","","",376,[[]]],[11,"into","","",376,[[]]],[11,"try_into","","",376,[[],["result",4]]],[11,"type_id","","",376,[[],["typeid",3]]],[11,"borrow","","",377,[[]]],[11,"borrow_mut","","",377,[[]]],[11,"try_from","","",377,[[],["result",4]]],[11,"from","","",377,[[]]],[11,"into","","",377,[[]]],[11,"try_into","","",377,[[],["result",4]]],[11,"type_id","","",377,[[],["typeid",3]]],[11,"borrow","","",378,[[]]],[11,"borrow_mut","","",378,[[]]],[11,"try_from","","",378,[[],["result",4]]],[11,"from","","",378,[[]]],[11,"into","","",378,[[]]],[11,"try_into","","",378,[[],["result",4]]],[11,"type_id","","",378,[[],["typeid",3]]],[11,"borrow","","",379,[[]]],[11,"borrow_mut","","",379,[[]]],[11,"try_from","","",379,[[],["result",4]]],[11,"from","","",379,[[]]],[11,"into","","",379,[[]]],[11,"try_into","","",379,[[],["result",4]]],[11,"type_id","","",379,[[],["typeid",3]]],[11,"borrow","","",380,[[]]],[11,"borrow_mut","","",380,[[]]],[11,"try_from","","",380,[[],["result",4]]],[11,"from","","",380,[[]]],[11,"into","","",380,[[]]],[11,"try_into","","",380,[[],["result",4]]],[11,"type_id","","",380,[[],["typeid",3]]],[11,"borrow","","",381,[[]]],[11,"borrow_mut","","",381,[[]]],[11,"try_from","","",381,[[],["result",4]]],[11,"from","","",381,[[]]],[11,"into","","",381,[[]]],[11,"try_into","","",381,[[],["result",4]]],[11,"type_id","","",381,[[],["typeid",3]]],[11,"borrow","","",382,[[]]],[11,"borrow_mut","","",382,[[]]],[11,"try_from","","",382,[[],["result",4]]],[11,"from","","",382,[[]]],[11,"into","","",382,[[]]],[11,"try_into","","",382,[[],["result",4]]],[11,"type_id","","",382,[[],["typeid",3]]],[11,"borrow","","",383,[[]]],[11,"borrow_mut","","",383,[[]]],[11,"try_from","","",383,[[],["result",4]]],[11,"from","","",383,[[]]],[11,"into","","",383,[[]]],[11,"try_into","","",383,[[],["result",4]]],[11,"type_id","","",383,[[],["typeid",3]]],[11,"borrow","","",384,[[]]],[11,"borrow_mut","","",384,[[]]],[11,"try_from","","",384,[[],["result",4]]],[11,"from","","",384,[[]]],[11,"into","","",384,[[]]],[11,"try_into","","",384,[[],["result",4]]],[11,"type_id","","",384,[[],["typeid",3]]],[11,"borrow","","",385,[[]]],[11,"borrow_mut","","",385,[[]]],[11,"try_from","","",385,[[],["result",4]]],[11,"from","","",385,[[]]],[11,"into","","",385,[[]]],[11,"try_into","","",385,[[],["result",4]]],[11,"type_id","","",385,[[],["typeid",3]]],[11,"borrow","","",386,[[]]],[11,"borrow_mut","","",386,[[]]],[11,"try_from","","",386,[[],["result",4]]],[11,"from","","",386,[[]]],[11,"into","","",386,[[]]],[11,"try_into","","",386,[[],["result",4]]],[11,"type_id","","",386,[[],["typeid",3]]],[11,"borrow","","",387,[[]]],[11,"borrow_mut","","",387,[[]]],[11,"try_from","","",387,[[],["result",4]]],[11,"from","","",387,[[]]],[11,"into","","",387,[[]]],[11,"try_into","","",387,[[],["result",4]]],[11,"type_id","","",387,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::ppb","",388,[[]]],[11,"borrow_mut","","",388,[[]]],[11,"try_from","","",388,[[],["result",4]]],[11,"from","","",388,[[]]],[11,"into","","",388,[[]]],[11,"try_into","","",388,[[],["result",4]]],[11,"type_id","","",388,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::psm::regs","",389,[[]]],[11,"borrow_mut","","",389,[[]]],[11,"try_from","","",389,[[],["result",4]]],[11,"from","","",389,[[]]],[11,"into","","",389,[[]]],[11,"try_into","","",389,[[],["result",4]]],[11,"type_id","","",389,[[],["typeid",3]]],[11,"borrow","","",390,[[]]],[11,"borrow_mut","","",390,[[]]],[11,"try_from","","",390,[[],["result",4]]],[11,"from","","",390,[[]]],[11,"into","","",390,[[]]],[11,"try_into","","",390,[[],["result",4]]],[11,"type_id","","",390,[[],["typeid",3]]],[11,"borrow","","",391,[[]]],[11,"borrow_mut","","",391,[[]]],[11,"try_from","","",391,[[],["result",4]]],[11,"from","","",391,[[]]],[11,"into","","",391,[[]]],[11,"try_into","","",391,[[],["result",4]]],[11,"type_id","","",391,[[],["typeid",3]]],[11,"borrow","","",392,[[]]],[11,"borrow_mut","","",392,[[]]],[11,"try_from","","",392,[[],["result",4]]],[11,"from","","",392,[[]]],[11,"into","","",392,[[]]],[11,"try_into","","",392,[[],["result",4]]],[11,"type_id","","",392,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::psm","",393,[[]]],[11,"borrow_mut","","",393,[[]]],[11,"try_from","","",393,[[],["result",4]]],[11,"from","","",393,[[]]],[11,"into","","",393,[[]]],[11,"try_into","","",393,[[],["result",4]]],[11,"type_id","","",393,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::pwm::regs","",394,[[]]],[11,"borrow_mut","","",394,[[]]],[11,"try_from","","",394,[[],["result",4]]],[11,"from","","",394,[[]]],[11,"into","","",394,[[]]],[11,"try_into","","",394,[[],["result",4]]],[11,"type_id","","",394,[[],["typeid",3]]],[11,"borrow","","",395,[[]]],[11,"borrow_mut","","",395,[[]]],[11,"try_from","","",395,[[],["result",4]]],[11,"from","","",395,[[]]],[11,"into","","",395,[[]]],[11,"try_into","","",395,[[],["result",4]]],[11,"type_id","","",395,[[],["typeid",3]]],[11,"borrow","","",396,[[]]],[11,"borrow_mut","","",396,[[]]],[11,"try_from","","",396,[[],["result",4]]],[11,"from","","",396,[[]]],[11,"into","","",396,[[]]],[11,"try_into","","",396,[[],["result",4]]],[11,"type_id","","",396,[[],["typeid",3]]],[11,"borrow","","",397,[[]]],[11,"borrow_mut","","",397,[[]]],[11,"try_from","","",397,[[],["result",4]]],[11,"from","","",397,[[]]],[11,"into","","",397,[[]]],[11,"try_into","","",397,[[],["result",4]]],[11,"type_id","","",397,[[],["typeid",3]]],[11,"borrow","","",398,[[]]],[11,"borrow_mut","","",398,[[]]],[11,"try_from","","",398,[[],["result",4]]],[11,"from","","",398,[[]]],[11,"into","","",398,[[]]],[11,"try_into","","",398,[[],["result",4]]],[11,"type_id","","",398,[[],["typeid",3]]],[11,"borrow","","",399,[[]]],[11,"borrow_mut","","",399,[[]]],[11,"try_from","","",399,[[],["result",4]]],[11,"from","","",399,[[]]],[11,"into","","",399,[[]]],[11,"try_into","","",399,[[],["result",4]]],[11,"type_id","","",399,[[],["typeid",3]]],[11,"borrow","","",400,[[]]],[11,"borrow_mut","","",400,[[]]],[11,"try_from","","",400,[[],["result",4]]],[11,"from","","",400,[[]]],[11,"into","","",400,[[]]],[11,"try_into","","",400,[[],["result",4]]],[11,"type_id","","",400,[[],["typeid",3]]],[11,"borrow","","",401,[[]]],[11,"borrow_mut","","",401,[[]]],[11,"try_from","","",401,[[],["result",4]]],[11,"from","","",401,[[]]],[11,"into","","",401,[[]]],[11,"try_into","","",401,[[],["result",4]]],[11,"type_id","","",401,[[],["typeid",3]]],[11,"borrow","","",402,[[]]],[11,"borrow_mut","","",402,[[]]],[11,"try_from","","",402,[[],["result",4]]],[11,"from","","",402,[[]]],[11,"into","","",402,[[]]],[11,"try_into","","",402,[[],["result",4]]],[11,"type_id","","",402,[[],["typeid",3]]],[11,"borrow","","",403,[[]]],[11,"borrow_mut","","",403,[[]]],[11,"try_from","","",403,[[],["result",4]]],[11,"from","","",403,[[]]],[11,"into","","",403,[[]]],[11,"try_into","","",403,[[],["result",4]]],[11,"type_id","","",403,[[],["typeid",3]]],[11,"borrow","","",404,[[]]],[11,"borrow_mut","","",404,[[]]],[11,"try_from","","",404,[[],["result",4]]],[11,"from","","",404,[[]]],[11,"into","","",404,[[]]],[11,"try_into","","",404,[[],["result",4]]],[11,"type_id","","",404,[[],["typeid",3]]],[11,"borrow","","",405,[[]]],[11,"borrow_mut","","",405,[[]]],[11,"try_from","","",405,[[],["result",4]]],[11,"from","","",405,[[]]],[11,"into","","",405,[[]]],[11,"try_into","","",405,[[],["result",4]]],[11,"type_id","","",405,[[],["typeid",3]]],[11,"borrow","","",406,[[]]],[11,"borrow_mut","","",406,[[]]],[11,"try_from","","",406,[[],["result",4]]],[11,"from","","",406,[[]]],[11,"into","","",406,[[]]],[11,"try_into","","",406,[[],["result",4]]],[11,"type_id","","",406,[[],["typeid",3]]],[11,"borrow","","",407,[[]]],[11,"borrow_mut","","",407,[[]]],[11,"try_from","","",407,[[],["result",4]]],[11,"from","","",407,[[]]],[11,"into","","",407,[[]]],[11,"try_into","","",407,[[],["result",4]]],[11,"type_id","","",407,[[],["typeid",3]]],[11,"borrow","","",408,[[]]],[11,"borrow_mut","","",408,[[]]],[11,"try_from","","",408,[[],["result",4]]],[11,"from","","",408,[[]]],[11,"into","","",408,[[]]],[11,"try_into","","",408,[[],["result",4]]],[11,"type_id","","",408,[[],["typeid",3]]],[11,"borrow","","",409,[[]]],[11,"borrow_mut","","",409,[[]]],[11,"try_from","","",409,[[],["result",4]]],[11,"from","","",409,[[]]],[11,"into","","",409,[[]]],[11,"try_into","","",409,[[],["result",4]]],[11,"type_id","","",409,[[],["typeid",3]]],[11,"borrow","","",410,[[]]],[11,"borrow_mut","","",410,[[]]],[11,"try_from","","",410,[[],["result",4]]],[11,"from","","",410,[[]]],[11,"into","","",410,[[]]],[11,"try_into","","",410,[[],["result",4]]],[11,"type_id","","",410,[[],["typeid",3]]],[11,"borrow","","",411,[[]]],[11,"borrow_mut","","",411,[[]]],[11,"try_from","","",411,[[],["result",4]]],[11,"from","","",411,[[]]],[11,"into","","",411,[[]]],[11,"try_into","","",411,[[],["result",4]]],[11,"type_id","","",411,[[],["typeid",3]]],[11,"borrow","","",412,[[]]],[11,"borrow_mut","","",412,[[]]],[11,"try_from","","",412,[[],["result",4]]],[11,"from","","",412,[[]]],[11,"into","","",412,[[]]],[11,"try_into","","",412,[[],["result",4]]],[11,"type_id","","",412,[[],["typeid",3]]],[11,"borrow","","",413,[[]]],[11,"borrow_mut","","",413,[[]]],[11,"try_from","","",413,[[],["result",4]]],[11,"from","","",413,[[]]],[11,"into","","",413,[[]]],[11,"try_into","","",413,[[],["result",4]]],[11,"type_id","","",413,[[],["typeid",3]]],[11,"borrow","","",414,[[]]],[11,"borrow_mut","","",414,[[]]],[11,"try_from","","",414,[[],["result",4]]],[11,"from","","",414,[[]]],[11,"into","","",414,[[]]],[11,"try_into","","",414,[[],["result",4]]],[11,"type_id","","",414,[[],["typeid",3]]],[11,"borrow","","",415,[[]]],[11,"borrow_mut","","",415,[[]]],[11,"try_from","","",415,[[],["result",4]]],[11,"from","","",415,[[]]],[11,"into","","",415,[[]]],[11,"try_into","","",415,[[],["result",4]]],[11,"type_id","","",415,[[],["typeid",3]]],[11,"borrow","","",416,[[]]],[11,"borrow_mut","","",416,[[]]],[11,"try_from","","",416,[[],["result",4]]],[11,"from","","",416,[[]]],[11,"into","","",416,[[]]],[11,"try_into","","",416,[[],["result",4]]],[11,"type_id","","",416,[[],["typeid",3]]],[11,"borrow","","",417,[[]]],[11,"borrow_mut","","",417,[[]]],[11,"try_from","","",417,[[],["result",4]]],[11,"from","","",417,[[]]],[11,"into","","",417,[[]]],[11,"try_into","","",417,[[],["result",4]]],[11,"type_id","","",417,[[],["typeid",3]]],[11,"borrow","","",418,[[]]],[11,"borrow_mut","","",418,[[]]],[11,"try_from","","",418,[[],["result",4]]],[11,"from","","",418,[[]]],[11,"into","","",418,[[]]],[11,"try_into","","",418,[[],["result",4]]],[11,"type_id","","",418,[[],["typeid",3]]],[11,"borrow","","",419,[[]]],[11,"borrow_mut","","",419,[[]]],[11,"try_from","","",419,[[],["result",4]]],[11,"from","","",419,[[]]],[11,"into","","",419,[[]]],[11,"try_into","","",419,[[],["result",4]]],[11,"type_id","","",419,[[],["typeid",3]]],[11,"borrow","","",420,[[]]],[11,"borrow_mut","","",420,[[]]],[11,"try_from","","",420,[[],["result",4]]],[11,"from","","",420,[[]]],[11,"into","","",420,[[]]],[11,"try_into","","",420,[[],["result",4]]],[11,"type_id","","",420,[[],["typeid",3]]],[11,"borrow","","",421,[[]]],[11,"borrow_mut","","",421,[[]]],[11,"try_from","","",421,[[],["result",4]]],[11,"from","","",421,[[]]],[11,"into","","",421,[[]]],[11,"try_into","","",421,[[],["result",4]]],[11,"type_id","","",421,[[],["typeid",3]]],[11,"borrow","","",422,[[]]],[11,"borrow_mut","","",422,[[]]],[11,"try_from","","",422,[[],["result",4]]],[11,"from","","",422,[[]]],[11,"into","","",422,[[]]],[11,"try_into","","",422,[[],["result",4]]],[11,"type_id","","",422,[[],["typeid",3]]],[11,"borrow","","",423,[[]]],[11,"borrow_mut","","",423,[[]]],[11,"try_from","","",423,[[],["result",4]]],[11,"from","","",423,[[]]],[11,"into","","",423,[[]]],[11,"try_into","","",423,[[],["result",4]]],[11,"type_id","","",423,[[],["typeid",3]]],[11,"borrow","","",424,[[]]],[11,"borrow_mut","","",424,[[]]],[11,"try_from","","",424,[[],["result",4]]],[11,"from","","",424,[[]]],[11,"into","","",424,[[]]],[11,"try_into","","",424,[[],["result",4]]],[11,"type_id","","",424,[[],["typeid",3]]],[11,"borrow","","",425,[[]]],[11,"borrow_mut","","",425,[[]]],[11,"try_from","","",425,[[],["result",4]]],[11,"from","","",425,[[]]],[11,"into","","",425,[[]]],[11,"try_into","","",425,[[],["result",4]]],[11,"type_id","","",425,[[],["typeid",3]]],[11,"borrow","","",426,[[]]],[11,"borrow_mut","","",426,[[]]],[11,"try_from","","",426,[[],["result",4]]],[11,"from","","",426,[[]]],[11,"into","","",426,[[]]],[11,"try_into","","",426,[[],["result",4]]],[11,"type_id","","",426,[[],["typeid",3]]],[11,"borrow","","",427,[[]]],[11,"borrow_mut","","",427,[[]]],[11,"try_from","","",427,[[],["result",4]]],[11,"from","","",427,[[]]],[11,"into","","",427,[[]]],[11,"try_into","","",427,[[],["result",4]]],[11,"type_id","","",427,[[],["typeid",3]]],[11,"borrow","","",428,[[]]],[11,"borrow_mut","","",428,[[]]],[11,"try_from","","",428,[[],["result",4]]],[11,"from","","",428,[[]]],[11,"into","","",428,[[]]],[11,"try_into","","",428,[[],["result",4]]],[11,"type_id","","",428,[[],["typeid",3]]],[11,"borrow","","",429,[[]]],[11,"borrow_mut","","",429,[[]]],[11,"try_from","","",429,[[],["result",4]]],[11,"from","","",429,[[]]],[11,"into","","",429,[[]]],[11,"try_into","","",429,[[],["result",4]]],[11,"type_id","","",429,[[],["typeid",3]]],[11,"borrow","","",430,[[]]],[11,"borrow_mut","","",430,[[]]],[11,"try_from","","",430,[[],["result",4]]],[11,"from","","",430,[[]]],[11,"into","","",430,[[]]],[11,"try_into","","",430,[[],["result",4]]],[11,"type_id","","",430,[[],["typeid",3]]],[11,"borrow","","",431,[[]]],[11,"borrow_mut","","",431,[[]]],[11,"try_from","","",431,[[],["result",4]]],[11,"from","","",431,[[]]],[11,"into","","",431,[[]]],[11,"try_into","","",431,[[],["result",4]]],[11,"type_id","","",431,[[],["typeid",3]]],[11,"borrow","","",432,[[]]],[11,"borrow_mut","","",432,[[]]],[11,"try_from","","",432,[[],["result",4]]],[11,"from","","",432,[[]]],[11,"into","","",432,[[]]],[11,"try_into","","",432,[[],["result",4]]],[11,"type_id","","",432,[[],["typeid",3]]],[11,"borrow","","",433,[[]]],[11,"borrow_mut","","",433,[[]]],[11,"try_from","","",433,[[],["result",4]]],[11,"from","","",433,[[]]],[11,"into","","",433,[[]]],[11,"try_into","","",433,[[],["result",4]]],[11,"type_id","","",433,[[],["typeid",3]]],[11,"borrow","","",434,[[]]],[11,"borrow_mut","","",434,[[]]],[11,"try_from","","",434,[[],["result",4]]],[11,"from","","",434,[[]]],[11,"into","","",434,[[]]],[11,"try_into","","",434,[[],["result",4]]],[11,"type_id","","",434,[[],["typeid",3]]],[11,"borrow","","",435,[[]]],[11,"borrow_mut","","",435,[[]]],[11,"try_from","","",435,[[],["result",4]]],[11,"from","","",435,[[]]],[11,"into","","",435,[[]]],[11,"try_into","","",435,[[],["result",4]]],[11,"type_id","","",435,[[],["typeid",3]]],[11,"borrow","","",436,[[]]],[11,"borrow_mut","","",436,[[]]],[11,"try_from","","",436,[[],["result",4]]],[11,"from","","",436,[[]]],[11,"into","","",436,[[]]],[11,"try_into","","",436,[[],["result",4]]],[11,"type_id","","",436,[[],["typeid",3]]],[11,"borrow","","",437,[[]]],[11,"borrow_mut","","",437,[[]]],[11,"try_from","","",437,[[],["result",4]]],[11,"from","","",437,[[]]],[11,"into","","",437,[[]]],[11,"try_into","","",437,[[],["result",4]]],[11,"type_id","","",437,[[],["typeid",3]]],[11,"borrow","","",438,[[]]],[11,"borrow_mut","","",438,[[]]],[11,"try_from","","",438,[[],["result",4]]],[11,"from","","",438,[[]]],[11,"into","","",438,[[]]],[11,"try_into","","",438,[[],["result",4]]],[11,"type_id","","",438,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::pwm::vals","",439,[[]]],[11,"borrow_mut","","",439,[[]]],[11,"try_from","","",439,[[],["result",4]]],[11,"from","","",439,[[]]],[11,"into","","",439,[[]]],[11,"try_into","","",439,[[],["result",4]]],[11,"type_id","","",439,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::pwm","",440,[[]]],[11,"borrow_mut","","",440,[[]]],[11,"try_from","","",440,[[],["result",4]]],[11,"from","","",440,[[]]],[11,"into","","",440,[[]]],[11,"try_into","","",440,[[],["result",4]]],[11,"type_id","","",440,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::resets::regs","",441,[[]]],[11,"borrow_mut","","",441,[[]]],[11,"try_from","","",441,[[],["result",4]]],[11,"from","","",441,[[]]],[11,"into","","",441,[[]]],[11,"try_into","","",441,[[],["result",4]]],[11,"type_id","","",441,[[],["typeid",3]]],[11,"borrow","","",442,[[]]],[11,"borrow_mut","","",442,[[]]],[11,"try_from","","",442,[[],["result",4]]],[11,"from","","",442,[[]]],[11,"into","","",442,[[]]],[11,"try_into","","",442,[[],["result",4]]],[11,"type_id","","",442,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::resets","",443,[[]]],[11,"borrow_mut","","",443,[[]]],[11,"try_from","","",443,[[],["result",4]]],[11,"from","","",443,[[]]],[11,"into","","",443,[[]]],[11,"try_into","","",443,[[],["result",4]]],[11,"type_id","","",443,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::rosc::regs","",444,[[]]],[11,"borrow_mut","","",444,[[]]],[11,"try_from","","",444,[[],["result",4]]],[11,"from","","",444,[[]]],[11,"into","","",444,[[]]],[11,"try_into","","",444,[[],["result",4]]],[11,"type_id","","",444,[[],["typeid",3]]],[11,"borrow","","",445,[[]]],[11,"borrow_mut","","",445,[[]]],[11,"try_from","","",445,[[],["result",4]]],[11,"from","","",445,[[]]],[11,"into","","",445,[[]]],[11,"try_into","","",445,[[],["result",4]]],[11,"type_id","","",445,[[],["typeid",3]]],[11,"borrow","","",446,[[]]],[11,"borrow_mut","","",446,[[]]],[11,"try_from","","",446,[[],["result",4]]],[11,"from","","",446,[[]]],[11,"into","","",446,[[]]],[11,"try_into","","",446,[[],["result",4]]],[11,"type_id","","",446,[[],["typeid",3]]],[11,"borrow","","",447,[[]]],[11,"borrow_mut","","",447,[[]]],[11,"try_from","","",447,[[],["result",4]]],[11,"from","","",447,[[]]],[11,"into","","",447,[[]]],[11,"try_into","","",447,[[],["result",4]]],[11,"type_id","","",447,[[],["typeid",3]]],[11,"borrow","","",448,[[]]],[11,"borrow_mut","","",448,[[]]],[11,"try_from","","",448,[[],["result",4]]],[11,"from","","",448,[[]]],[11,"into","","",448,[[]]],[11,"try_into","","",448,[[],["result",4]]],[11,"type_id","","",448,[[],["typeid",3]]],[11,"borrow","","",449,[[]]],[11,"borrow_mut","","",449,[[]]],[11,"try_from","","",449,[[],["result",4]]],[11,"from","","",449,[[]]],[11,"into","","",449,[[]]],[11,"try_into","","",449,[[],["result",4]]],[11,"type_id","","",449,[[],["typeid",3]]],[11,"borrow","","",450,[[]]],[11,"borrow_mut","","",450,[[]]],[11,"try_from","","",450,[[],["result",4]]],[11,"from","","",450,[[]]],[11,"into","","",450,[[]]],[11,"try_into","","",450,[[],["result",4]]],[11,"type_id","","",450,[[],["typeid",3]]],[11,"borrow","","",451,[[]]],[11,"borrow_mut","","",451,[[]]],[11,"try_from","","",451,[[],["result",4]]],[11,"from","","",451,[[]]],[11,"into","","",451,[[]]],[11,"try_into","","",451,[[],["result",4]]],[11,"type_id","","",451,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::rosc::vals","",452,[[]]],[11,"borrow_mut","","",452,[[]]],[11,"try_from","","",452,[[],["result",4]]],[11,"from","","",452,[[]]],[11,"into","","",452,[[]]],[11,"try_into","","",452,[[],["result",4]]],[11,"type_id","","",452,[[],["typeid",3]]],[11,"borrow","","",453,[[]]],[11,"borrow_mut","","",453,[[]]],[11,"try_from","","",453,[[],["result",4]]],[11,"from","","",453,[[]]],[11,"into","","",453,[[]]],[11,"try_into","","",453,[[],["result",4]]],[11,"type_id","","",453,[[],["typeid",3]]],[11,"borrow","","",454,[[]]],[11,"borrow_mut","","",454,[[]]],[11,"try_from","","",454,[[],["result",4]]],[11,"from","","",454,[[]]],[11,"into","","",454,[[]]],[11,"try_into","","",454,[[],["result",4]]],[11,"type_id","","",454,[[],["typeid",3]]],[11,"borrow","","",455,[[]]],[11,"borrow_mut","","",455,[[]]],[11,"try_from","","",455,[[],["result",4]]],[11,"from","","",455,[[]]],[11,"into","","",455,[[]]],[11,"try_into","","",455,[[],["result",4]]],[11,"type_id","","",455,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::rosc","",456,[[]]],[11,"borrow_mut","","",456,[[]]],[11,"try_from","","",456,[[],["result",4]]],[11,"from","","",456,[[]]],[11,"into","","",456,[[]]],[11,"try_into","","",456,[[],["result",4]]],[11,"type_id","","",456,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::rtc::regs","",457,[[]]],[11,"borrow_mut","","",457,[[]]],[11,"try_from","","",457,[[],["result",4]]],[11,"from","","",457,[[]]],[11,"into","","",457,[[]]],[11,"try_into","","",457,[[],["result",4]]],[11,"type_id","","",457,[[],["typeid",3]]],[11,"borrow","","",458,[[]]],[11,"borrow_mut","","",458,[[]]],[11,"try_from","","",458,[[],["result",4]]],[11,"from","","",458,[[]]],[11,"into","","",458,[[]]],[11,"try_into","","",458,[[],["result",4]]],[11,"type_id","","",458,[[],["typeid",3]]],[11,"borrow","","",459,[[]]],[11,"borrow_mut","","",459,[[]]],[11,"try_from","","",459,[[],["result",4]]],[11,"from","","",459,[[]]],[11,"into","","",459,[[]]],[11,"try_into","","",459,[[],["result",4]]],[11,"type_id","","",459,[[],["typeid",3]]],[11,"borrow","","",460,[[]]],[11,"borrow_mut","","",460,[[]]],[11,"try_from","","",460,[[],["result",4]]],[11,"from","","",460,[[]]],[11,"into","","",460,[[]]],[11,"try_into","","",460,[[],["result",4]]],[11,"type_id","","",460,[[],["typeid",3]]],[11,"borrow","","",461,[[]]],[11,"borrow_mut","","",461,[[]]],[11,"try_from","","",461,[[],["result",4]]],[11,"from","","",461,[[]]],[11,"into","","",461,[[]]],[11,"try_into","","",461,[[],["result",4]]],[11,"type_id","","",461,[[],["typeid",3]]],[11,"borrow","","",462,[[]]],[11,"borrow_mut","","",462,[[]]],[11,"try_from","","",462,[[],["result",4]]],[11,"from","","",462,[[]]],[11,"into","","",462,[[]]],[11,"try_into","","",462,[[],["result",4]]],[11,"type_id","","",462,[[],["typeid",3]]],[11,"borrow","","",463,[[]]],[11,"borrow_mut","","",463,[[]]],[11,"try_from","","",463,[[],["result",4]]],[11,"from","","",463,[[]]],[11,"into","","",463,[[]]],[11,"try_into","","",463,[[],["result",4]]],[11,"type_id","","",463,[[],["typeid",3]]],[11,"borrow","","",464,[[]]],[11,"borrow_mut","","",464,[[]]],[11,"try_from","","",464,[[],["result",4]]],[11,"from","","",464,[[]]],[11,"into","","",464,[[]]],[11,"try_into","","",464,[[],["result",4]]],[11,"type_id","","",464,[[],["typeid",3]]],[11,"borrow","","",465,[[]]],[11,"borrow_mut","","",465,[[]]],[11,"try_from","","",465,[[],["result",4]]],[11,"from","","",465,[[]]],[11,"into","","",465,[[]]],[11,"try_into","","",465,[[],["result",4]]],[11,"type_id","","",465,[[],["typeid",3]]],[11,"borrow","","",466,[[]]],[11,"borrow_mut","","",466,[[]]],[11,"try_from","","",466,[[],["result",4]]],[11,"from","","",466,[[]]],[11,"into","","",466,[[]]],[11,"try_into","","",466,[[],["result",4]]],[11,"type_id","","",466,[[],["typeid",3]]],[11,"borrow","","",467,[[]]],[11,"borrow_mut","","",467,[[]]],[11,"try_from","","",467,[[],["result",4]]],[11,"from","","",467,[[]]],[11,"into","","",467,[[]]],[11,"try_into","","",467,[[],["result",4]]],[11,"type_id","","",467,[[],["typeid",3]]],[11,"borrow","","",468,[[]]],[11,"borrow_mut","","",468,[[]]],[11,"try_from","","",468,[[],["result",4]]],[11,"from","","",468,[[]]],[11,"into","","",468,[[]]],[11,"try_into","","",468,[[],["result",4]]],[11,"type_id","","",468,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::rtc","",469,[[]]],[11,"borrow_mut","","",469,[[]]],[11,"try_from","","",469,[[],["result",4]]],[11,"from","","",469,[[]]],[11,"into","","",469,[[]]],[11,"try_into","","",469,[[],["result",4]]],[11,"type_id","","",469,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::sio::regs","",470,[[]]],[11,"borrow_mut","","",470,[[]]],[11,"try_from","","",470,[[],["result",4]]],[11,"from","","",470,[[]]],[11,"into","","",470,[[]]],[11,"try_into","","",470,[[],["result",4]]],[11,"type_id","","",470,[[],["typeid",3]]],[11,"borrow","","",471,[[]]],[11,"borrow_mut","","",471,[[]]],[11,"try_from","","",471,[[],["result",4]]],[11,"from","","",471,[[]]],[11,"into","","",471,[[]]],[11,"try_into","","",471,[[],["result",4]]],[11,"type_id","","",471,[[],["typeid",3]]],[11,"borrow","","",472,[[]]],[11,"borrow_mut","","",472,[[]]],[11,"try_from","","",472,[[],["result",4]]],[11,"from","","",472,[[]]],[11,"into","","",472,[[]]],[11,"try_into","","",472,[[],["result",4]]],[11,"type_id","","",472,[[],["typeid",3]]],[11,"borrow","","",473,[[]]],[11,"borrow_mut","","",473,[[]]],[11,"try_from","","",473,[[],["result",4]]],[11,"from","","",473,[[]]],[11,"into","","",473,[[]]],[11,"try_into","","",473,[[],["result",4]]],[11,"type_id","","",473,[[],["typeid",3]]],[11,"borrow","","",474,[[]]],[11,"borrow_mut","","",474,[[]]],[11,"try_from","","",474,[[],["result",4]]],[11,"from","","",474,[[]]],[11,"into","","",474,[[]]],[11,"try_into","","",474,[[],["result",4]]],[11,"type_id","","",474,[[],["typeid",3]]],[11,"borrow","","",475,[[]]],[11,"borrow_mut","","",475,[[]]],[11,"try_from","","",475,[[],["result",4]]],[11,"from","","",475,[[]]],[11,"into","","",475,[[]]],[11,"try_into","","",475,[[],["result",4]]],[11,"type_id","","",475,[[],["typeid",3]]],[11,"borrow","","",476,[[]]],[11,"borrow_mut","","",476,[[]]],[11,"try_from","","",476,[[],["result",4]]],[11,"from","","",476,[[]]],[11,"into","","",476,[[]]],[11,"try_into","","",476,[[],["result",4]]],[11,"type_id","","",476,[[],["typeid",3]]],[11,"borrow","","",477,[[]]],[11,"borrow_mut","","",477,[[]]],[11,"try_from","","",477,[[],["result",4]]],[11,"from","","",477,[[]]],[11,"into","","",477,[[]]],[11,"try_into","","",477,[[],["result",4]]],[11,"type_id","","",477,[[],["typeid",3]]],[11,"borrow","","",478,[[]]],[11,"borrow_mut","","",478,[[]]],[11,"try_from","","",478,[[],["result",4]]],[11,"from","","",478,[[]]],[11,"into","","",478,[[]]],[11,"try_into","","",478,[[],["result",4]]],[11,"type_id","","",478,[[],["typeid",3]]],[11,"borrow","","",479,[[]]],[11,"borrow_mut","","",479,[[]]],[11,"try_from","","",479,[[],["result",4]]],[11,"from","","",479,[[]]],[11,"into","","",479,[[]]],[11,"try_into","","",479,[[],["result",4]]],[11,"type_id","","",479,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::sio","",480,[[]]],[11,"borrow_mut","","",480,[[]]],[11,"try_from","","",480,[[],["result",4]]],[11,"from","","",480,[[]]],[11,"into","","",480,[[]]],[11,"try_into","","",480,[[],["result",4]]],[11,"type_id","","",480,[[],["typeid",3]]],[11,"borrow","","",481,[[]]],[11,"borrow_mut","","",481,[[]]],[11,"try_from","","",481,[[],["result",4]]],[11,"from","","",481,[[]]],[11,"into","","",481,[[]]],[11,"try_into","","",481,[[],["result",4]]],[11,"type_id","","",481,[[],["typeid",3]]],[11,"borrow","","",482,[[]]],[11,"borrow_mut","","",482,[[]]],[11,"try_from","","",482,[[],["result",4]]],[11,"from","","",482,[[]]],[11,"into","","",482,[[]]],[11,"try_into","","",482,[[],["result",4]]],[11,"type_id","","",482,[[],["typeid",3]]],[11,"borrow","","",483,[[]]],[11,"borrow_mut","","",483,[[]]],[11,"try_from","","",483,[[],["result",4]]],[11,"from","","",483,[[]]],[11,"into","","",483,[[]]],[11,"try_into","","",483,[[],["result",4]]],[11,"type_id","","",483,[[],["typeid",3]]],[11,"borrow","","",484,[[]]],[11,"borrow_mut","","",484,[[]]],[11,"try_from","","",484,[[],["result",4]]],[11,"from","","",484,[[]]],[11,"into","","",484,[[]]],[11,"try_into","","",484,[[],["result",4]]],[11,"type_id","","",484,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::spi::regs","",485,[[]]],[11,"borrow_mut","","",485,[[]]],[11,"try_from","","",485,[[],["result",4]]],[11,"from","","",485,[[]]],[11,"into","","",485,[[]]],[11,"try_into","","",485,[[],["result",4]]],[11,"type_id","","",485,[[],["typeid",3]]],[11,"borrow","","",486,[[]]],[11,"borrow_mut","","",486,[[]]],[11,"try_from","","",486,[[],["result",4]]],[11,"from","","",486,[[]]],[11,"into","","",486,[[]]],[11,"try_into","","",486,[[],["result",4]]],[11,"type_id","","",486,[[],["typeid",3]]],[11,"borrow","","",487,[[]]],[11,"borrow_mut","","",487,[[]]],[11,"try_from","","",487,[[],["result",4]]],[11,"from","","",487,[[]]],[11,"into","","",487,[[]]],[11,"try_into","","",487,[[],["result",4]]],[11,"type_id","","",487,[[],["typeid",3]]],[11,"borrow","","",488,[[]]],[11,"borrow_mut","","",488,[[]]],[11,"try_from","","",488,[[],["result",4]]],[11,"from","","",488,[[]]],[11,"into","","",488,[[]]],[11,"try_into","","",488,[[],["result",4]]],[11,"type_id","","",488,[[],["typeid",3]]],[11,"borrow","","",489,[[]]],[11,"borrow_mut","","",489,[[]]],[11,"try_from","","",489,[[],["result",4]]],[11,"from","","",489,[[]]],[11,"into","","",489,[[]]],[11,"try_into","","",489,[[],["result",4]]],[11,"type_id","","",489,[[],["typeid",3]]],[11,"borrow","","",490,[[]]],[11,"borrow_mut","","",490,[[]]],[11,"try_from","","",490,[[],["result",4]]],[11,"from","","",490,[[]]],[11,"into","","",490,[[]]],[11,"try_into","","",490,[[],["result",4]]],[11,"type_id","","",490,[[],["typeid",3]]],[11,"borrow","","",491,[[]]],[11,"borrow_mut","","",491,[[]]],[11,"try_from","","",491,[[],["result",4]]],[11,"from","","",491,[[]]],[11,"into","","",491,[[]]],[11,"try_into","","",491,[[],["result",4]]],[11,"type_id","","",491,[[],["typeid",3]]],[11,"borrow","","",492,[[]]],[11,"borrow_mut","","",492,[[]]],[11,"try_from","","",492,[[],["result",4]]],[11,"from","","",492,[[]]],[11,"into","","",492,[[]]],[11,"try_into","","",492,[[],["result",4]]],[11,"type_id","","",492,[[],["typeid",3]]],[11,"borrow","","",493,[[]]],[11,"borrow_mut","","",493,[[]]],[11,"try_from","","",493,[[],["result",4]]],[11,"from","","",493,[[]]],[11,"into","","",493,[[]]],[11,"try_into","","",493,[[],["result",4]]],[11,"type_id","","",493,[[],["typeid",3]]],[11,"borrow","","",494,[[]]],[11,"borrow_mut","","",494,[[]]],[11,"try_from","","",494,[[],["result",4]]],[11,"from","","",494,[[]]],[11,"into","","",494,[[]]],[11,"try_into","","",494,[[],["result",4]]],[11,"type_id","","",494,[[],["typeid",3]]],[11,"borrow","","",495,[[]]],[11,"borrow_mut","","",495,[[]]],[11,"try_from","","",495,[[],["result",4]]],[11,"from","","",495,[[]]],[11,"into","","",495,[[]]],[11,"try_into","","",495,[[],["result",4]]],[11,"type_id","","",495,[[],["typeid",3]]],[11,"borrow","","",496,[[]]],[11,"borrow_mut","","",496,[[]]],[11,"try_from","","",496,[[],["result",4]]],[11,"from","","",496,[[]]],[11,"into","","",496,[[]]],[11,"try_into","","",496,[[],["result",4]]],[11,"type_id","","",496,[[],["typeid",3]]],[11,"borrow","","",497,[[]]],[11,"borrow_mut","","",497,[[]]],[11,"try_from","","",497,[[],["result",4]]],[11,"from","","",497,[[]]],[11,"into","","",497,[[]]],[11,"try_into","","",497,[[],["result",4]]],[11,"type_id","","",497,[[],["typeid",3]]],[11,"borrow","","",498,[[]]],[11,"borrow_mut","","",498,[[]]],[11,"try_from","","",498,[[],["result",4]]],[11,"from","","",498,[[]]],[11,"into","","",498,[[]]],[11,"try_into","","",498,[[],["result",4]]],[11,"type_id","","",498,[[],["typeid",3]]],[11,"borrow","","",499,[[]]],[11,"borrow_mut","","",499,[[]]],[11,"try_from","","",499,[[],["result",4]]],[11,"from","","",499,[[]]],[11,"into","","",499,[[]]],[11,"try_into","","",499,[[],["result",4]]],[11,"type_id","","",499,[[],["typeid",3]]],[11,"borrow","","",500,[[]]],[11,"borrow_mut","","",500,[[]]],[11,"try_from","","",500,[[],["result",4]]],[11,"from","","",500,[[]]],[11,"into","","",500,[[]]],[11,"try_into","","",500,[[],["result",4]]],[11,"type_id","","",500,[[],["typeid",3]]],[11,"borrow","","",501,[[]]],[11,"borrow_mut","","",501,[[]]],[11,"try_from","","",501,[[],["result",4]]],[11,"from","","",501,[[]]],[11,"into","","",501,[[]]],[11,"try_into","","",501,[[],["result",4]]],[11,"type_id","","",501,[[],["typeid",3]]],[11,"borrow","","",502,[[]]],[11,"borrow_mut","","",502,[[]]],[11,"try_from","","",502,[[],["result",4]]],[11,"from","","",502,[[]]],[11,"into","","",502,[[]]],[11,"try_into","","",502,[[],["result",4]]],[11,"type_id","","",502,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::spi","",503,[[]]],[11,"borrow_mut","","",503,[[]]],[11,"try_from","","",503,[[],["result",4]]],[11,"from","","",503,[[]]],[11,"into","","",503,[[]]],[11,"try_into","","",503,[[],["result",4]]],[11,"type_id","","",503,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::syscfg::regs","",504,[[]]],[11,"borrow_mut","","",504,[[]]],[11,"try_from","","",504,[[],["result",4]]],[11,"from","","",504,[[]]],[11,"into","","",504,[[]]],[11,"try_into","","",504,[[],["result",4]]],[11,"type_id","","",504,[[],["typeid",3]]],[11,"borrow","","",505,[[]]],[11,"borrow_mut","","",505,[[]]],[11,"try_from","","",505,[[],["result",4]]],[11,"from","","",505,[[]]],[11,"into","","",505,[[]]],[11,"try_into","","",505,[[],["result",4]]],[11,"type_id","","",505,[[],["typeid",3]]],[11,"borrow","","",506,[[]]],[11,"borrow_mut","","",506,[[]]],[11,"try_from","","",506,[[],["result",4]]],[11,"from","","",506,[[]]],[11,"into","","",506,[[]]],[11,"try_into","","",506,[[],["result",4]]],[11,"type_id","","",506,[[],["typeid",3]]],[11,"borrow","","",507,[[]]],[11,"borrow_mut","","",507,[[]]],[11,"try_from","","",507,[[],["result",4]]],[11,"from","","",507,[[]]],[11,"into","","",507,[[]]],[11,"try_into","","",507,[[],["result",4]]],[11,"type_id","","",507,[[],["typeid",3]]],[11,"borrow","","",508,[[]]],[11,"borrow_mut","","",508,[[]]],[11,"try_from","","",508,[[],["result",4]]],[11,"from","","",508,[[]]],[11,"into","","",508,[[]]],[11,"try_into","","",508,[[],["result",4]]],[11,"type_id","","",508,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::syscfg","",509,[[]]],[11,"borrow_mut","","",509,[[]]],[11,"try_from","","",509,[[],["result",4]]],[11,"from","","",509,[[]]],[11,"into","","",509,[[]]],[11,"try_into","","",509,[[],["result",4]]],[11,"type_id","","",509,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::sysinfo::regs","",510,[[]]],[11,"borrow_mut","","",510,[[]]],[11,"try_from","","",510,[[],["result",4]]],[11,"from","","",510,[[]]],[11,"into","","",510,[[]]],[11,"try_into","","",510,[[],["result",4]]],[11,"type_id","","",510,[[],["typeid",3]]],[11,"borrow","","",511,[[]]],[11,"borrow_mut","","",511,[[]]],[11,"try_from","","",511,[[],["result",4]]],[11,"from","","",511,[[]]],[11,"into","","",511,[[]]],[11,"try_into","","",511,[[],["result",4]]],[11,"type_id","","",511,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::sysinfo","",512,[[]]],[11,"borrow_mut","","",512,[[]]],[11,"try_from","","",512,[[],["result",4]]],[11,"from","","",512,[[]]],[11,"into","","",512,[[]]],[11,"try_into","","",512,[[],["result",4]]],[11,"type_id","","",512,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::tbman::regs","",513,[[]]],[11,"borrow_mut","","",513,[[]]],[11,"try_from","","",513,[[],["result",4]]],[11,"from","","",513,[[]]],[11,"into","","",513,[[]]],[11,"try_into","","",513,[[],["result",4]]],[11,"type_id","","",513,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::tbman","",514,[[]]],[11,"borrow_mut","","",514,[[]]],[11,"try_from","","",514,[[],["result",4]]],[11,"from","","",514,[[]]],[11,"into","","",514,[[]]],[11,"try_into","","",514,[[],["result",4]]],[11,"type_id","","",514,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::timer::regs","",515,[[]]],[11,"borrow_mut","","",515,[[]]],[11,"try_from","","",515,[[],["result",4]]],[11,"from","","",515,[[]]],[11,"into","","",515,[[]]],[11,"try_into","","",515,[[],["result",4]]],[11,"type_id","","",515,[[],["typeid",3]]],[11,"borrow","","",516,[[]]],[11,"borrow_mut","","",516,[[]]],[11,"try_from","","",516,[[],["result",4]]],[11,"from","","",516,[[]]],[11,"into","","",516,[[]]],[11,"try_into","","",516,[[],["result",4]]],[11,"type_id","","",516,[[],["typeid",3]]],[11,"borrow","","",517,[[]]],[11,"borrow_mut","","",517,[[]]],[11,"try_from","","",517,[[],["result",4]]],[11,"from","","",517,[[]]],[11,"into","","",517,[[]]],[11,"try_into","","",517,[[],["result",4]]],[11,"type_id","","",517,[[],["typeid",3]]],[11,"borrow","","",518,[[]]],[11,"borrow_mut","","",518,[[]]],[11,"try_from","","",518,[[],["result",4]]],[11,"from","","",518,[[]]],[11,"into","","",518,[[]]],[11,"try_into","","",518,[[],["result",4]]],[11,"type_id","","",518,[[],["typeid",3]]],[11,"borrow","","",519,[[]]],[11,"borrow_mut","","",519,[[]]],[11,"try_from","","",519,[[],["result",4]]],[11,"from","","",519,[[]]],[11,"into","","",519,[[]]],[11,"try_into","","",519,[[],["result",4]]],[11,"type_id","","",519,[[],["typeid",3]]],[11,"borrow","","",520,[[]]],[11,"borrow_mut","","",520,[[]]],[11,"try_from","","",520,[[],["result",4]]],[11,"from","","",520,[[]]],[11,"into","","",520,[[]]],[11,"try_into","","",520,[[],["result",4]]],[11,"type_id","","",520,[[],["typeid",3]]],[11,"borrow","","",521,[[]]],[11,"borrow_mut","","",521,[[]]],[11,"try_from","","",521,[[],["result",4]]],[11,"from","","",521,[[]]],[11,"into","","",521,[[]]],[11,"try_into","","",521,[[],["result",4]]],[11,"type_id","","",521,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::timer","",522,[[]]],[11,"borrow_mut","","",522,[[]]],[11,"try_from","","",522,[[],["result",4]]],[11,"from","","",522,[[]]],[11,"into","","",522,[[]]],[11,"try_into","","",522,[[],["result",4]]],[11,"type_id","","",522,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::uart::regs","",523,[[]]],[11,"borrow_mut","","",523,[[]]],[11,"try_from","","",523,[[],["result",4]]],[11,"from","","",523,[[]]],[11,"into","","",523,[[]]],[11,"try_into","","",523,[[],["result",4]]],[11,"type_id","","",523,[[],["typeid",3]]],[11,"borrow","","",524,[[]]],[11,"borrow_mut","","",524,[[]]],[11,"try_from","","",524,[[],["result",4]]],[11,"from","","",524,[[]]],[11,"into","","",524,[[]]],[11,"try_into","","",524,[[],["result",4]]],[11,"type_id","","",524,[[],["typeid",3]]],[11,"borrow","","",525,[[]]],[11,"borrow_mut","","",525,[[]]],[11,"try_from","","",525,[[],["result",4]]],[11,"from","","",525,[[]]],[11,"into","","",525,[[]]],[11,"try_into","","",525,[[],["result",4]]],[11,"type_id","","",525,[[],["typeid",3]]],[11,"borrow","","",526,[[]]],[11,"borrow_mut","","",526,[[]]],[11,"try_from","","",526,[[],["result",4]]],[11,"from","","",526,[[]]],[11,"into","","",526,[[]]],[11,"try_into","","",526,[[],["result",4]]],[11,"type_id","","",526,[[],["typeid",3]]],[11,"borrow","","",527,[[]]],[11,"borrow_mut","","",527,[[]]],[11,"try_from","","",527,[[],["result",4]]],[11,"from","","",527,[[]]],[11,"into","","",527,[[]]],[11,"try_into","","",527,[[],["result",4]]],[11,"type_id","","",527,[[],["typeid",3]]],[11,"borrow","","",528,[[]]],[11,"borrow_mut","","",528,[[]]],[11,"try_from","","",528,[[],["result",4]]],[11,"from","","",528,[[]]],[11,"into","","",528,[[]]],[11,"try_into","","",528,[[],["result",4]]],[11,"type_id","","",528,[[],["typeid",3]]],[11,"borrow","","",529,[[]]],[11,"borrow_mut","","",529,[[]]],[11,"try_from","","",529,[[],["result",4]]],[11,"from","","",529,[[]]],[11,"into","","",529,[[]]],[11,"try_into","","",529,[[],["result",4]]],[11,"type_id","","",529,[[],["typeid",3]]],[11,"borrow","","",530,[[]]],[11,"borrow_mut","","",530,[[]]],[11,"try_from","","",530,[[],["result",4]]],[11,"from","","",530,[[]]],[11,"into","","",530,[[]]],[11,"try_into","","",530,[[],["result",4]]],[11,"type_id","","",530,[[],["typeid",3]]],[11,"borrow","","",531,[[]]],[11,"borrow_mut","","",531,[[]]],[11,"try_from","","",531,[[],["result",4]]],[11,"from","","",531,[[]]],[11,"into","","",531,[[]]],[11,"try_into","","",531,[[],["result",4]]],[11,"type_id","","",531,[[],["typeid",3]]],[11,"borrow","","",532,[[]]],[11,"borrow_mut","","",532,[[]]],[11,"try_from","","",532,[[],["result",4]]],[11,"from","","",532,[[]]],[11,"into","","",532,[[]]],[11,"try_into","","",532,[[],["result",4]]],[11,"type_id","","",532,[[],["typeid",3]]],[11,"borrow","","",533,[[]]],[11,"borrow_mut","","",533,[[]]],[11,"try_from","","",533,[[],["result",4]]],[11,"from","","",533,[[]]],[11,"into","","",533,[[]]],[11,"try_into","","",533,[[],["result",4]]],[11,"type_id","","",533,[[],["typeid",3]]],[11,"borrow","","",534,[[]]],[11,"borrow_mut","","",534,[[]]],[11,"try_from","","",534,[[],["result",4]]],[11,"from","","",534,[[]]],[11,"into","","",534,[[]]],[11,"try_into","","",534,[[],["result",4]]],[11,"type_id","","",534,[[],["typeid",3]]],[11,"borrow","","",535,[[]]],[11,"borrow_mut","","",535,[[]]],[11,"try_from","","",535,[[],["result",4]]],[11,"from","","",535,[[]]],[11,"into","","",535,[[]]],[11,"try_into","","",535,[[],["result",4]]],[11,"type_id","","",535,[[],["typeid",3]]],[11,"borrow","","",536,[[]]],[11,"borrow_mut","","",536,[[]]],[11,"try_from","","",536,[[],["result",4]]],[11,"from","","",536,[[]]],[11,"into","","",536,[[]]],[11,"try_into","","",536,[[],["result",4]]],[11,"type_id","","",536,[[],["typeid",3]]],[11,"borrow","","",537,[[]]],[11,"borrow_mut","","",537,[[]]],[11,"try_from","","",537,[[],["result",4]]],[11,"from","","",537,[[]]],[11,"into","","",537,[[]]],[11,"try_into","","",537,[[],["result",4]]],[11,"type_id","","",537,[[],["typeid",3]]],[11,"borrow","","",538,[[]]],[11,"borrow_mut","","",538,[[]]],[11,"try_from","","",538,[[],["result",4]]],[11,"from","","",538,[[]]],[11,"into","","",538,[[]]],[11,"try_into","","",538,[[],["result",4]]],[11,"type_id","","",538,[[],["typeid",3]]],[11,"borrow","","",539,[[]]],[11,"borrow_mut","","",539,[[]]],[11,"try_from","","",539,[[],["result",4]]],[11,"from","","",539,[[]]],[11,"into","","",539,[[]]],[11,"try_into","","",539,[[],["result",4]]],[11,"type_id","","",539,[[],["typeid",3]]],[11,"borrow","","",540,[[]]],[11,"borrow_mut","","",540,[[]]],[11,"try_from","","",540,[[],["result",4]]],[11,"from","","",540,[[]]],[11,"into","","",540,[[]]],[11,"try_into","","",540,[[],["result",4]]],[11,"type_id","","",540,[[],["typeid",3]]],[11,"borrow","","",541,[[]]],[11,"borrow_mut","","",541,[[]]],[11,"try_from","","",541,[[],["result",4]]],[11,"from","","",541,[[]]],[11,"into","","",541,[[]]],[11,"try_into","","",541,[[],["result",4]]],[11,"type_id","","",541,[[],["typeid",3]]],[11,"borrow","","",542,[[]]],[11,"borrow_mut","","",542,[[]]],[11,"try_from","","",542,[[],["result",4]]],[11,"from","","",542,[[]]],[11,"into","","",542,[[]]],[11,"try_into","","",542,[[],["result",4]]],[11,"type_id","","",542,[[],["typeid",3]]],[11,"borrow","","",543,[[]]],[11,"borrow_mut","","",543,[[]]],[11,"try_from","","",543,[[],["result",4]]],[11,"from","","",543,[[]]],[11,"into","","",543,[[]]],[11,"try_into","","",543,[[],["result",4]]],[11,"type_id","","",543,[[],["typeid",3]]],[11,"borrow","","",544,[[]]],[11,"borrow_mut","","",544,[[]]],[11,"try_from","","",544,[[],["result",4]]],[11,"from","","",544,[[]]],[11,"into","","",544,[[]]],[11,"try_into","","",544,[[],["result",4]]],[11,"type_id","","",544,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::uart","",545,[[]]],[11,"borrow_mut","","",545,[[]]],[11,"try_from","","",545,[[],["result",4]]],[11,"from","","",545,[[]]],[11,"into","","",545,[[]]],[11,"try_into","","",545,[[],["result",4]]],[11,"type_id","","",545,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::usbctrl_regs::regs","",546,[[]]],[11,"borrow_mut","","",546,[[]]],[11,"try_from","","",546,[[],["result",4]]],[11,"from","","",546,[[]]],[11,"into","","",546,[[]]],[11,"try_into","","",546,[[],["result",4]]],[11,"type_id","","",546,[[],["typeid",3]]],[11,"borrow","","",547,[[]]],[11,"borrow_mut","","",547,[[]]],[11,"try_from","","",547,[[],["result",4]]],[11,"from","","",547,[[]]],[11,"into","","",547,[[]]],[11,"try_into","","",547,[[],["result",4]]],[11,"type_id","","",547,[[],["typeid",3]]],[11,"borrow","","",548,[[]]],[11,"borrow_mut","","",548,[[]]],[11,"try_from","","",548,[[],["result",4]]],[11,"from","","",548,[[]]],[11,"into","","",548,[[]]],[11,"try_into","","",548,[[],["result",4]]],[11,"type_id","","",548,[[],["typeid",3]]],[11,"borrow","","",549,[[]]],[11,"borrow_mut","","",549,[[]]],[11,"try_from","","",549,[[],["result",4]]],[11,"from","","",549,[[]]],[11,"into","","",549,[[]]],[11,"try_into","","",549,[[],["result",4]]],[11,"type_id","","",549,[[],["typeid",3]]],[11,"borrow","","",550,[[]]],[11,"borrow_mut","","",550,[[]]],[11,"try_from","","",550,[[],["result",4]]],[11,"from","","",550,[[]]],[11,"into","","",550,[[]]],[11,"try_into","","",550,[[],["result",4]]],[11,"type_id","","",550,[[],["typeid",3]]],[11,"borrow","","",551,[[]]],[11,"borrow_mut","","",551,[[]]],[11,"try_from","","",551,[[],["result",4]]],[11,"from","","",551,[[]]],[11,"into","","",551,[[]]],[11,"try_into","","",551,[[],["result",4]]],[11,"type_id","","",551,[[],["typeid",3]]],[11,"borrow","","",552,[[]]],[11,"borrow_mut","","",552,[[]]],[11,"try_from","","",552,[[],["result",4]]],[11,"from","","",552,[[]]],[11,"into","","",552,[[]]],[11,"try_into","","",552,[[],["result",4]]],[11,"type_id","","",552,[[],["typeid",3]]],[11,"borrow","","",553,[[]]],[11,"borrow_mut","","",553,[[]]],[11,"try_from","","",553,[[],["result",4]]],[11,"from","","",553,[[]]],[11,"into","","",553,[[]]],[11,"try_into","","",553,[[],["result",4]]],[11,"type_id","","",553,[[],["typeid",3]]],[11,"borrow","","",554,[[]]],[11,"borrow_mut","","",554,[[]]],[11,"try_from","","",554,[[],["result",4]]],[11,"from","","",554,[[]]],[11,"into","","",554,[[]]],[11,"try_into","","",554,[[],["result",4]]],[11,"type_id","","",554,[[],["typeid",3]]],[11,"borrow","","",555,[[]]],[11,"borrow_mut","","",555,[[]]],[11,"try_from","","",555,[[],["result",4]]],[11,"from","","",555,[[]]],[11,"into","","",555,[[]]],[11,"try_into","","",555,[[],["result",4]]],[11,"type_id","","",555,[[],["typeid",3]]],[11,"borrow","","",556,[[]]],[11,"borrow_mut","","",556,[[]]],[11,"try_from","","",556,[[],["result",4]]],[11,"from","","",556,[[]]],[11,"into","","",556,[[]]],[11,"try_into","","",556,[[],["result",4]]],[11,"type_id","","",556,[[],["typeid",3]]],[11,"borrow","","",557,[[]]],[11,"borrow_mut","","",557,[[]]],[11,"try_from","","",557,[[],["result",4]]],[11,"from","","",557,[[]]],[11,"into","","",557,[[]]],[11,"try_into","","",557,[[],["result",4]]],[11,"type_id","","",557,[[],["typeid",3]]],[11,"borrow","","",558,[[]]],[11,"borrow_mut","","",558,[[]]],[11,"try_from","","",558,[[],["result",4]]],[11,"from","","",558,[[]]],[11,"into","","",558,[[]]],[11,"try_into","","",558,[[],["result",4]]],[11,"type_id","","",558,[[],["typeid",3]]],[11,"borrow","","",559,[[]]],[11,"borrow_mut","","",559,[[]]],[11,"try_from","","",559,[[],["result",4]]],[11,"from","","",559,[[]]],[11,"into","","",559,[[]]],[11,"try_into","","",559,[[],["result",4]]],[11,"type_id","","",559,[[],["typeid",3]]],[11,"borrow","","",560,[[]]],[11,"borrow_mut","","",560,[[]]],[11,"try_from","","",560,[[],["result",4]]],[11,"from","","",560,[[]]],[11,"into","","",560,[[]]],[11,"try_into","","",560,[[],["result",4]]],[11,"type_id","","",560,[[],["typeid",3]]],[11,"borrow","","",561,[[]]],[11,"borrow_mut","","",561,[[]]],[11,"try_from","","",561,[[],["result",4]]],[11,"from","","",561,[[]]],[11,"into","","",561,[[]]],[11,"try_into","","",561,[[],["result",4]]],[11,"type_id","","",561,[[],["typeid",3]]],[11,"borrow","","",562,[[]]],[11,"borrow_mut","","",562,[[]]],[11,"try_from","","",562,[[],["result",4]]],[11,"from","","",562,[[]]],[11,"into","","",562,[[]]],[11,"try_into","","",562,[[],["result",4]]],[11,"type_id","","",562,[[],["typeid",3]]],[11,"borrow","","",563,[[]]],[11,"borrow_mut","","",563,[[]]],[11,"try_from","","",563,[[],["result",4]]],[11,"from","","",563,[[]]],[11,"into","","",563,[[]]],[11,"try_into","","",563,[[],["result",4]]],[11,"type_id","","",563,[[],["typeid",3]]],[11,"borrow","","",564,[[]]],[11,"borrow_mut","","",564,[[]]],[11,"try_from","","",564,[[],["result",4]]],[11,"from","","",564,[[]]],[11,"into","","",564,[[]]],[11,"try_into","","",564,[[],["result",4]]],[11,"type_id","","",564,[[],["typeid",3]]],[11,"borrow","","",565,[[]]],[11,"borrow_mut","","",565,[[]]],[11,"try_from","","",565,[[],["result",4]]],[11,"from","","",565,[[]]],[11,"into","","",565,[[]]],[11,"try_into","","",565,[[],["result",4]]],[11,"type_id","","",565,[[],["typeid",3]]],[11,"borrow","","",566,[[]]],[11,"borrow_mut","","",566,[[]]],[11,"try_from","","",566,[[],["result",4]]],[11,"from","","",566,[[]]],[11,"into","","",566,[[]]],[11,"try_into","","",566,[[],["result",4]]],[11,"type_id","","",566,[[],["typeid",3]]],[11,"borrow","","",567,[[]]],[11,"borrow_mut","","",567,[[]]],[11,"try_from","","",567,[[],["result",4]]],[11,"from","","",567,[[]]],[11,"into","","",567,[[]]],[11,"try_into","","",567,[[],["result",4]]],[11,"type_id","","",567,[[],["typeid",3]]],[11,"borrow","","",568,[[]]],[11,"borrow_mut","","",568,[[]]],[11,"try_from","","",568,[[],["result",4]]],[11,"from","","",568,[[]]],[11,"into","","",568,[[]]],[11,"try_into","","",568,[[],["result",4]]],[11,"type_id","","",568,[[],["typeid",3]]],[11,"borrow","","",569,[[]]],[11,"borrow_mut","","",569,[[]]],[11,"try_from","","",569,[[],["result",4]]],[11,"from","","",569,[[]]],[11,"into","","",569,[[]]],[11,"try_into","","",569,[[],["result",4]]],[11,"type_id","","",569,[[],["typeid",3]]],[11,"borrow","","",570,[[]]],[11,"borrow_mut","","",570,[[]]],[11,"try_from","","",570,[[],["result",4]]],[11,"from","","",570,[[]]],[11,"into","","",570,[[]]],[11,"try_into","","",570,[[],["result",4]]],[11,"type_id","","",570,[[],["typeid",3]]],[11,"borrow","","",571,[[]]],[11,"borrow_mut","","",571,[[]]],[11,"try_from","","",571,[[],["result",4]]],[11,"from","","",571,[[]]],[11,"into","","",571,[[]]],[11,"try_into","","",571,[[],["result",4]]],[11,"type_id","","",571,[[],["typeid",3]]],[11,"borrow","","",572,[[]]],[11,"borrow_mut","","",572,[[]]],[11,"try_from","","",572,[[],["result",4]]],[11,"from","","",572,[[]]],[11,"into","","",572,[[]]],[11,"try_into","","",572,[[],["result",4]]],[11,"type_id","","",572,[[],["typeid",3]]],[11,"borrow","","",573,[[]]],[11,"borrow_mut","","",573,[[]]],[11,"try_from","","",573,[[],["result",4]]],[11,"from","","",573,[[]]],[11,"into","","",573,[[]]],[11,"try_into","","",573,[[],["result",4]]],[11,"type_id","","",573,[[],["typeid",3]]],[11,"borrow","","",574,[[]]],[11,"borrow_mut","","",574,[[]]],[11,"try_from","","",574,[[],["result",4]]],[11,"from","","",574,[[]]],[11,"into","","",574,[[]]],[11,"try_into","","",574,[[],["result",4]]],[11,"type_id","","",574,[[],["typeid",3]]],[11,"borrow","","",575,[[]]],[11,"borrow_mut","","",575,[[]]],[11,"try_from","","",575,[[],["result",4]]],[11,"from","","",575,[[]]],[11,"into","","",575,[[]]],[11,"try_into","","",575,[[],["result",4]]],[11,"type_id","","",575,[[],["typeid",3]]],[11,"borrow","","",576,[[]]],[11,"borrow_mut","","",576,[[]]],[11,"try_from","","",576,[[],["result",4]]],[11,"from","","",576,[[]]],[11,"into","","",576,[[]]],[11,"try_into","","",576,[[],["result",4]]],[11,"type_id","","",576,[[],["typeid",3]]],[11,"borrow","","",577,[[]]],[11,"borrow_mut","","",577,[[]]],[11,"try_from","","",577,[[],["result",4]]],[11,"from","","",577,[[]]],[11,"into","","",577,[[]]],[11,"try_into","","",577,[[],["result",4]]],[11,"type_id","","",577,[[],["typeid",3]]],[11,"borrow","","",578,[[]]],[11,"borrow_mut","","",578,[[]]],[11,"try_from","","",578,[[],["result",4]]],[11,"from","","",578,[[]]],[11,"into","","",578,[[]]],[11,"try_into","","",578,[[],["result",4]]],[11,"type_id","","",578,[[],["typeid",3]]],[11,"borrow","","",579,[[]]],[11,"borrow_mut","","",579,[[]]],[11,"try_from","","",579,[[],["result",4]]],[11,"from","","",579,[[]]],[11,"into","","",579,[[]]],[11,"try_into","","",579,[[],["result",4]]],[11,"type_id","","",579,[[],["typeid",3]]],[11,"borrow","","",580,[[]]],[11,"borrow_mut","","",580,[[]]],[11,"try_from","","",580,[[],["result",4]]],[11,"from","","",580,[[]]],[11,"into","","",580,[[]]],[11,"try_into","","",580,[[],["result",4]]],[11,"type_id","","",580,[[],["typeid",3]]],[11,"borrow","","",581,[[]]],[11,"borrow_mut","","",581,[[]]],[11,"try_from","","",581,[[],["result",4]]],[11,"from","","",581,[[]]],[11,"into","","",581,[[]]],[11,"try_into","","",581,[[],["result",4]]],[11,"type_id","","",581,[[],["typeid",3]]],[11,"borrow","","",582,[[]]],[11,"borrow_mut","","",582,[[]]],[11,"try_from","","",582,[[],["result",4]]],[11,"from","","",582,[[]]],[11,"into","","",582,[[]]],[11,"try_into","","",582,[[],["result",4]]],[11,"type_id","","",582,[[],["typeid",3]]],[11,"borrow","","",583,[[]]],[11,"borrow_mut","","",583,[[]]],[11,"try_from","","",583,[[],["result",4]]],[11,"from","","",583,[[]]],[11,"into","","",583,[[]]],[11,"try_into","","",583,[[],["result",4]]],[11,"type_id","","",583,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::usbctrl_regs","",584,[[]]],[11,"borrow_mut","","",584,[[]]],[11,"try_from","","",584,[[],["result",4]]],[11,"from","","",584,[[]]],[11,"into","","",584,[[]]],[11,"try_into","","",584,[[],["result",4]]],[11,"type_id","","",584,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::vreg_and_chip_reset::regs","",585,[[]]],[11,"borrow_mut","","",585,[[]]],[11,"try_from","","",585,[[],["result",4]]],[11,"from","","",585,[[]]],[11,"into","","",585,[[]]],[11,"try_into","","",585,[[],["result",4]]],[11,"type_id","","",585,[[],["typeid",3]]],[11,"borrow","","",586,[[]]],[11,"borrow_mut","","",586,[[]]],[11,"try_from","","",586,[[],["result",4]]],[11,"from","","",586,[[]]],[11,"into","","",586,[[]]],[11,"try_into","","",586,[[],["result",4]]],[11,"type_id","","",586,[[],["typeid",3]]],[11,"borrow","","",587,[[]]],[11,"borrow_mut","","",587,[[]]],[11,"try_from","","",587,[[],["result",4]]],[11,"from","","",587,[[]]],[11,"into","","",587,[[]]],[11,"try_into","","",587,[[],["result",4]]],[11,"type_id","","",587,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::vreg_and_chip_reset","",588,[[]]],[11,"borrow_mut","","",588,[[]]],[11,"try_from","","",588,[[],["result",4]]],[11,"from","","",588,[[]]],[11,"into","","",588,[[]]],[11,"try_into","","",588,[[],["result",4]]],[11,"type_id","","",588,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::watchdog::regs","",589,[[]]],[11,"borrow_mut","","",589,[[]]],[11,"try_from","","",589,[[],["result",4]]],[11,"from","","",589,[[]]],[11,"into","","",589,[[]]],[11,"try_into","","",589,[[],["result",4]]],[11,"type_id","","",589,[[],["typeid",3]]],[11,"borrow","","",590,[[]]],[11,"borrow_mut","","",590,[[]]],[11,"try_from","","",590,[[],["result",4]]],[11,"from","","",590,[[]]],[11,"into","","",590,[[]]],[11,"try_into","","",590,[[],["result",4]]],[11,"type_id","","",590,[[],["typeid",3]]],[11,"borrow","","",591,[[]]],[11,"borrow_mut","","",591,[[]]],[11,"try_from","","",591,[[],["result",4]]],[11,"from","","",591,[[]]],[11,"into","","",591,[[]]],[11,"try_into","","",591,[[],["result",4]]],[11,"type_id","","",591,[[],["typeid",3]]],[11,"borrow","","",592,[[]]],[11,"borrow_mut","","",592,[[]]],[11,"try_from","","",592,[[],["result",4]]],[11,"from","","",592,[[]]],[11,"into","","",592,[[]]],[11,"try_into","","",592,[[],["result",4]]],[11,"type_id","","",592,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::watchdog","",593,[[]]],[11,"borrow_mut","","",593,[[]]],[11,"try_from","","",593,[[],["result",4]]],[11,"from","","",593,[[]]],[11,"into","","",593,[[]]],[11,"try_into","","",593,[[],["result",4]]],[11,"type_id","","",593,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::xip_ctrl::regs","",594,[[]]],[11,"borrow_mut","","",594,[[]]],[11,"try_from","","",594,[[],["result",4]]],[11,"from","","",594,[[]]],[11,"into","","",594,[[]]],[11,"try_into","","",594,[[],["result",4]]],[11,"type_id","","",594,[[],["typeid",3]]],[11,"borrow","","",595,[[]]],[11,"borrow_mut","","",595,[[]]],[11,"try_from","","",595,[[],["result",4]]],[11,"from","","",595,[[]]],[11,"into","","",595,[[]]],[11,"try_into","","",595,[[],["result",4]]],[11,"type_id","","",595,[[],["typeid",3]]],[11,"borrow","","",596,[[]]],[11,"borrow_mut","","",596,[[]]],[11,"try_from","","",596,[[],["result",4]]],[11,"from","","",596,[[]]],[11,"into","","",596,[[]]],[11,"try_into","","",596,[[],["result",4]]],[11,"type_id","","",596,[[],["typeid",3]]],[11,"borrow","","",597,[[]]],[11,"borrow_mut","","",597,[[]]],[11,"try_from","","",597,[[],["result",4]]],[11,"from","","",597,[[]]],[11,"into","","",597,[[]]],[11,"try_into","","",597,[[],["result",4]]],[11,"type_id","","",597,[[],["typeid",3]]],[11,"borrow","","",598,[[]]],[11,"borrow_mut","","",598,[[]]],[11,"try_from","","",598,[[],["result",4]]],[11,"from","","",598,[[]]],[11,"into","","",598,[[]]],[11,"try_into","","",598,[[],["result",4]]],[11,"type_id","","",598,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::xip_ctrl","",599,[[]]],[11,"borrow_mut","","",599,[[]]],[11,"try_from","","",599,[[],["result",4]]],[11,"from","","",599,[[]]],[11,"into","","",599,[[]]],[11,"try_into","","",599,[[],["result",4]]],[11,"type_id","","",599,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::xip_ssi::regs","",600,[[]]],[11,"borrow_mut","","",600,[[]]],[11,"try_from","","",600,[[],["result",4]]],[11,"from","","",600,[[]]],[11,"into","","",600,[[]]],[11,"try_into","","",600,[[],["result",4]]],[11,"type_id","","",600,[[],["typeid",3]]],[11,"borrow","","",601,[[]]],[11,"borrow_mut","","",601,[[]]],[11,"try_from","","",601,[[],["result",4]]],[11,"from","","",601,[[]]],[11,"into","","",601,[[]]],[11,"try_into","","",601,[[],["result",4]]],[11,"type_id","","",601,[[],["typeid",3]]],[11,"borrow","","",602,[[]]],[11,"borrow_mut","","",602,[[]]],[11,"try_from","","",602,[[],["result",4]]],[11,"from","","",602,[[]]],[11,"into","","",602,[[]]],[11,"try_into","","",602,[[],["result",4]]],[11,"type_id","","",602,[[],["typeid",3]]],[11,"borrow","","",603,[[]]],[11,"borrow_mut","","",603,[[]]],[11,"try_from","","",603,[[],["result",4]]],[11,"from","","",603,[[]]],[11,"into","","",603,[[]]],[11,"try_into","","",603,[[],["result",4]]],[11,"type_id","","",603,[[],["typeid",3]]],[11,"borrow","","",604,[[]]],[11,"borrow_mut","","",604,[[]]],[11,"try_from","","",604,[[],["result",4]]],[11,"from","","",604,[[]]],[11,"into","","",604,[[]]],[11,"try_into","","",604,[[],["result",4]]],[11,"type_id","","",604,[[],["typeid",3]]],[11,"borrow","","",605,[[]]],[11,"borrow_mut","","",605,[[]]],[11,"try_from","","",605,[[],["result",4]]],[11,"from","","",605,[[]]],[11,"into","","",605,[[]]],[11,"try_into","","",605,[[],["result",4]]],[11,"type_id","","",605,[[],["typeid",3]]],[11,"borrow","","",606,[[]]],[11,"borrow_mut","","",606,[[]]],[11,"try_from","","",606,[[],["result",4]]],[11,"from","","",606,[[]]],[11,"into","","",606,[[]]],[11,"try_into","","",606,[[],["result",4]]],[11,"type_id","","",606,[[],["typeid",3]]],[11,"borrow","","",607,[[]]],[11,"borrow_mut","","",607,[[]]],[11,"try_from","","",607,[[],["result",4]]],[11,"from","","",607,[[]]],[11,"into","","",607,[[]]],[11,"try_into","","",607,[[],["result",4]]],[11,"type_id","","",607,[[],["typeid",3]]],[11,"borrow","","",608,[[]]],[11,"borrow_mut","","",608,[[]]],[11,"try_from","","",608,[[],["result",4]]],[11,"from","","",608,[[]]],[11,"into","","",608,[[]]],[11,"try_into","","",608,[[],["result",4]]],[11,"type_id","","",608,[[],["typeid",3]]],[11,"borrow","","",609,[[]]],[11,"borrow_mut","","",609,[[]]],[11,"try_from","","",609,[[],["result",4]]],[11,"from","","",609,[[]]],[11,"into","","",609,[[]]],[11,"try_into","","",609,[[],["result",4]]],[11,"type_id","","",609,[[],["typeid",3]]],[11,"borrow","","",610,[[]]],[11,"borrow_mut","","",610,[[]]],[11,"try_from","","",610,[[],["result",4]]],[11,"from","","",610,[[]]],[11,"into","","",610,[[]]],[11,"try_into","","",610,[[],["result",4]]],[11,"type_id","","",610,[[],["typeid",3]]],[11,"borrow","","",611,[[]]],[11,"borrow_mut","","",611,[[]]],[11,"try_from","","",611,[[],["result",4]]],[11,"from","","",611,[[]]],[11,"into","","",611,[[]]],[11,"try_into","","",611,[[],["result",4]]],[11,"type_id","","",611,[[],["typeid",3]]],[11,"borrow","","",612,[[]]],[11,"borrow_mut","","",612,[[]]],[11,"try_from","","",612,[[],["result",4]]],[11,"from","","",612,[[]]],[11,"into","","",612,[[]]],[11,"try_into","","",612,[[],["result",4]]],[11,"type_id","","",612,[[],["typeid",3]]],[11,"borrow","","",613,[[]]],[11,"borrow_mut","","",613,[[]]],[11,"try_from","","",613,[[],["result",4]]],[11,"from","","",613,[[]]],[11,"into","","",613,[[]]],[11,"try_into","","",613,[[],["result",4]]],[11,"type_id","","",613,[[],["typeid",3]]],[11,"borrow","","",614,[[]]],[11,"borrow_mut","","",614,[[]]],[11,"try_from","","",614,[[],["result",4]]],[11,"from","","",614,[[]]],[11,"into","","",614,[[]]],[11,"try_into","","",614,[[],["result",4]]],[11,"type_id","","",614,[[],["typeid",3]]],[11,"borrow","","",615,[[]]],[11,"borrow_mut","","",615,[[]]],[11,"try_from","","",615,[[],["result",4]]],[11,"from","","",615,[[]]],[11,"into","","",615,[[]]],[11,"try_into","","",615,[[],["result",4]]],[11,"type_id","","",615,[[],["typeid",3]]],[11,"borrow","","",616,[[]]],[11,"borrow_mut","","",616,[[]]],[11,"try_from","","",616,[[],["result",4]]],[11,"from","","",616,[[]]],[11,"into","","",616,[[]]],[11,"try_into","","",616,[[],["result",4]]],[11,"type_id","","",616,[[],["typeid",3]]],[11,"borrow","","",617,[[]]],[11,"borrow_mut","","",617,[[]]],[11,"try_from","","",617,[[],["result",4]]],[11,"from","","",617,[[]]],[11,"into","","",617,[[]]],[11,"try_into","","",617,[[],["result",4]]],[11,"type_id","","",617,[[],["typeid",3]]],[11,"borrow","","",618,[[]]],[11,"borrow_mut","","",618,[[]]],[11,"try_from","","",618,[[],["result",4]]],[11,"from","","",618,[[]]],[11,"into","","",618,[[]]],[11,"try_into","","",618,[[],["result",4]]],[11,"type_id","","",618,[[],["typeid",3]]],[11,"borrow","","",619,[[]]],[11,"borrow_mut","","",619,[[]]],[11,"try_from","","",619,[[],["result",4]]],[11,"from","","",619,[[]]],[11,"into","","",619,[[]]],[11,"try_into","","",619,[[],["result",4]]],[11,"type_id","","",619,[[],["typeid",3]]],[11,"borrow","","",620,[[]]],[11,"borrow_mut","","",620,[[]]],[11,"try_from","","",620,[[],["result",4]]],[11,"from","","",620,[[]]],[11,"into","","",620,[[]]],[11,"try_into","","",620,[[],["result",4]]],[11,"type_id","","",620,[[],["typeid",3]]],[11,"borrow","","",621,[[]]],[11,"borrow_mut","","",621,[[]]],[11,"try_from","","",621,[[],["result",4]]],[11,"from","","",621,[[]]],[11,"into","","",621,[[]]],[11,"try_into","","",621,[[],["result",4]]],[11,"type_id","","",621,[[],["typeid",3]]],[11,"borrow","","",622,[[]]],[11,"borrow_mut","","",622,[[]]],[11,"try_from","","",622,[[],["result",4]]],[11,"from","","",622,[[]]],[11,"into","","",622,[[]]],[11,"try_into","","",622,[[],["result",4]]],[11,"type_id","","",622,[[],["typeid",3]]],[11,"borrow","","",623,[[]]],[11,"borrow_mut","","",623,[[]]],[11,"try_from","","",623,[[],["result",4]]],[11,"from","","",623,[[]]],[11,"into","","",623,[[]]],[11,"try_into","","",623,[[],["result",4]]],[11,"type_id","","",623,[[],["typeid",3]]],[11,"borrow","","",624,[[]]],[11,"borrow_mut","","",624,[[]]],[11,"try_from","","",624,[[],["result",4]]],[11,"from","","",624,[[]]],[11,"into","","",624,[[]]],[11,"try_into","","",624,[[],["result",4]]],[11,"type_id","","",624,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::xip_ssi::vals","",625,[[]]],[11,"borrow_mut","","",625,[[]]],[11,"try_from","","",625,[[],["result",4]]],[11,"from","","",625,[[]]],[11,"into","","",625,[[]]],[11,"try_into","","",625,[[],["result",4]]],[11,"type_id","","",625,[[],["typeid",3]]],[11,"borrow","","",626,[[]]],[11,"borrow_mut","","",626,[[]]],[11,"try_from","","",626,[[],["result",4]]],[11,"from","","",626,[[]]],[11,"into","","",626,[[]]],[11,"try_into","","",626,[[],["result",4]]],[11,"type_id","","",626,[[],["typeid",3]]],[11,"borrow","","",627,[[]]],[11,"borrow_mut","","",627,[[]]],[11,"try_from","","",627,[[],["result",4]]],[11,"from","","",627,[[]]],[11,"into","","",627,[[]]],[11,"try_into","","",627,[[],["result",4]]],[11,"type_id","","",627,[[],["typeid",3]]],[11,"borrow","","",628,[[]]],[11,"borrow_mut","","",628,[[]]],[11,"try_from","","",628,[[],["result",4]]],[11,"from","","",628,[[]]],[11,"into","","",628,[[]]],[11,"try_into","","",628,[[],["result",4]]],[11,"type_id","","",628,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::xip_ssi","",629,[[]]],[11,"borrow_mut","","",629,[[]]],[11,"try_from","","",629,[[],["result",4]]],[11,"from","","",629,[[]]],[11,"into","","",629,[[]]],[11,"try_into","","",629,[[],["result",4]]],[11,"type_id","","",629,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::xosc::regs","",630,[[]]],[11,"borrow_mut","","",630,[[]]],[11,"try_from","","",630,[[],["result",4]]],[11,"from","","",630,[[]]],[11,"into","","",630,[[]]],[11,"try_into","","",630,[[],["result",4]]],[11,"type_id","","",630,[[],["typeid",3]]],[11,"borrow","","",631,[[]]],[11,"borrow_mut","","",631,[[]]],[11,"try_from","","",631,[[],["result",4]]],[11,"from","","",631,[[]]],[11,"into","","",631,[[]]],[11,"try_into","","",631,[[],["result",4]]],[11,"type_id","","",631,[[],["typeid",3]]],[11,"borrow","","",632,[[]]],[11,"borrow_mut","","",632,[[]]],[11,"try_from","","",632,[[],["result",4]]],[11,"from","","",632,[[]]],[11,"into","","",632,[[]]],[11,"try_into","","",632,[[],["result",4]]],[11,"type_id","","",632,[[],["typeid",3]]],[11,"borrow","","",633,[[]]],[11,"borrow_mut","","",633,[[]]],[11,"try_from","","",633,[[],["result",4]]],[11,"from","","",633,[[]]],[11,"into","","",633,[[]]],[11,"try_into","","",633,[[],["result",4]]],[11,"type_id","","",633,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::xosc::vals","",634,[[]]],[11,"borrow_mut","","",634,[[]]],[11,"try_from","","",634,[[],["result",4]]],[11,"from","","",634,[[]]],[11,"into","","",634,[[]]],[11,"try_into","","",634,[[],["result",4]]],[11,"type_id","","",634,[[],["typeid",3]]],[11,"borrow","","",635,[[]]],[11,"borrow_mut","","",635,[[]]],[11,"try_from","","",635,[[],["result",4]]],[11,"from","","",635,[[]]],[11,"into","","",635,[[]]],[11,"try_into","","",635,[[],["result",4]]],[11,"type_id","","",635,[[],["typeid",3]]],[11,"borrow","","",636,[[]]],[11,"borrow_mut","","",636,[[]]],[11,"try_from","","",636,[[],["result",4]]],[11,"from","","",636,[[]]],[11,"into","","",636,[[]]],[11,"try_into","","",636,[[],["result",4]]],[11,"type_id","","",636,[[],["typeid",3]]],[11,"borrow","rp2040_pac2::xosc","",637,[[]]],[11,"borrow_mut","","",637,[[]]],[11,"try_from","","",637,[[],["result",4]]],[11,"from","","",637,[[]]],[11,"into","","",637,[[]]],[11,"try_into","","",637,[[],["result",4]]],[11,"type_id","","",637,[[],["typeid",3]]],[11,"borrow","rp2040_pac2","",638,[[]]],[11,"borrow_mut","","",638,[[]]],[11,"try_from","","",638,[[],["result",4]]],[11,"from","","",638,[[]]],[11,"into","","",638,[[]]],[11,"try_into","","",638,[[],["result",4]]],[11,"type_id","","",638,[[],["typeid",3]]],[11,"fmt","","",638,[[["formatter",3]],["result",6]]],[11,"eq","","",638,[[["interrupt",4]],["bool",15]]],[11,"clone","","",638,[[],["interrupt",4]]],[11,"clone","rp2040_pac2::adc","",9,[[],["adc",3]]],[11,"clone","rp2040_pac2::adc::regs","",0,[[],["ints",3]]],[11,"clone","","",1,[[],["div",3]]],[11,"clone","","",2,[[],["inte",3]]],[11,"clone","","",3,[[],["fifo",3]]],[11,"clone","","",4,[[],["intr",3]]],[11,"clone","","",5,[[],["fcs",3]]],[11,"clone","","",6,[[],["intf",3]]],[11,"clone","","",7,[[],["result",3]]],[11,"clone","","",8,[[],["cs",3]]],[11,"clone","rp2040_pac2::busctrl","",20,[[],["busctrl",3]]],[11,"clone","rp2040_pac2::busctrl::regs","",10,[[],["perfctr3",3]]],[11,"clone","","",11,[[],["perfctr2",3]]],[11,"clone","","",12,[[],["perfctr0",3]]],[11,"clone","","",13,[[],["perfsel0",3]]],[11,"clone","","",14,[[],["perfsel2",3]]],[11,"clone","","",15,[[],["perfctr1",3]]],[11,"clone","","",16,[[],["perfsel3",3]]],[11,"clone","","",17,[[],["buspriorityack",3]]],[11,"clone","","",18,[[],["perfsel1",3]]],[11,"clone","","",19,[[],["buspriority",3]]],[11,"clone","rp2040_pac2::clocks","",73,[[],["clocks",3]]],[11,"clone","rp2040_pac2::clocks::regs","",21,[[],["clksysdiv",3]]],[11,"clone","","",22,[[],["fc0maxkhz",3]]],[11,"clone","","",23,[[],["clkgpout1ctrl",3]]],[11,"clone","","",24,[[],["fc0src",3]]],[11,"clone","","",25,[[],["intr",3]]],[11,"clone","","",26,[[],["clkgpout1div",3]]],[11,"clone","","",27,[[],["clkgpout3ctrl",3]]],[11,"clone","","",28,[[],["clkusbdiv",3]]],[11,"clone","","",29,[[],["fc0status",3]]],[11,"clone","","",30,[[],["wakeen0",3]]],[11,"clone","","",31,[[],["clkrtcdiv",3]]],[11,"clone","","",32,[[],["sleepen0",3]]],[11,"clone","","",33,[[],["enabled1",3]]],[11,"clone","","",34,[[],["clkadcctrl",3]]],[11,"clone","","",35,[[],["clkrtcctrl",3]]],[11,"clone","","",36,[[],["clksysctrl",3]]],[11,"clone","","",37,[[],["clkrefdiv",3]]],[11,"clone","","",38,[[],["clkgpout0div",3]]],[11,"clone","","",39,[[],["clkusbctrl",3]]],[11,"clone","","",40,[[],["clkgpout2div",3]]],[11,"clone","","",41,[[],["fc0interval",3]]],[11,"clone","","",42,[[],["wakeen1",3]]],[11,"clone","","",43,[[],["clkadcdiv",3]]],[11,"clone","","",44,[[],["intf",3]]],[11,"clone","","",45,[[],["clkgpout3div",3]]],[11,"clone","","",46,[[],["clkgpout0ctrl",3]]],[11,"clone","","",47,[[],["clkperictrl",3]]],[11,"clone","","",48,[[],["fc0result",3]]],[11,"clone","","",49,[[],["clksysresusstatus",3]]],[11,"clone","","",50,[[],["fc0minkhz",3]]],[11,"clone","","",51,[[],["clkrefctrl",3]]],[11,"clone","","",52,[[],["clksysresusctrl",3]]],[11,"clone","","",53,[[],["sleepen1",3]]],[11,"clone","","",54,[[],["inte",3]]],[11,"clone","","",55,[[],["clkgpout2ctrl",3]]],[11,"clone","","",56,[[],["enabled0",3]]],[11,"clone","","",57,[[],["fc0refkhz",3]]],[11,"clone","","",58,[[],["ints",3]]],[11,"clone","","",59,[[],["fc0delay",3]]],[11,"clone","rp2040_pac2::clocks::vals","",60,[[],["clksysctrlsrc",3]]],[11,"clone","","",61,[[],["clkgpout0ctrlauxsrc",3]]],[11,"clone","","",62,[[],["fc0src",3]]],[11,"clone","","",63,[[],["clkgpout2ctrlauxsrc",3]]],[11,"clone","","",64,[[],["clkadcctrlauxsrc",3]]],[11,"clone","","",65,[[],["clkperictrlauxsrc",3]]],[11,"clone","","",66,[[],["clkusbctrlauxsrc",3]]],[11,"clone","","",67,[[],["clkrefctrlsrc",3]]],[11,"clone","","",68,[[],["clkrtcctrlauxsrc",3]]],[11,"clone","","",69,[[],["clksysctrlauxsrc",3]]],[11,"clone","","",70,[[],["clkgpout3ctrlauxsrc",3]]],[11,"clone","","",71,[[],["clkgpout1ctrlauxsrc",3]]],[11,"clone","","",72,[[],["clkrefctrlauxsrc",3]]],[11,"clone","rp2040_pac2::dma","",92,[[],["dma",3]]],[11,"clone","","",93,[[],["channel",3]]],[11,"clone","rp2040_pac2::dma::regs","",74,[[],["fifolevels",3]]],[11,"clone","","",75,[[],["inte0",3]]],[11,"clone","","",76,[[],["intf0",3]]],[11,"clone","","",77,[[],["ints0",3]]],[11,"clone","","",78,[[],["intf1",3]]],[11,"clone","","",79,[[],["ints1",3]]],[11,"clone","","",80,[[],["inte1",3]]],[11,"clone","","",81,[[],["intr",3]]],[11,"clone","","",82,[[],["nchannels",3]]],[11,"clone","","",83,[[],["dbgctdreq",3]]],[11,"clone","","",84,[[],["timer",3]]],[11,"clone","","",85,[[],["ctrltrig",3]]],[11,"clone","","",86,[[],["chanabort",3]]],[11,"clone","","",87,[[],["sniffctrl",3]]],[11,"clone","","",88,[[],["multichantrigger",3]]],[11,"clone","rp2040_pac2::dma::vals","",89,[[],["treqsel",3]]],[11,"clone","","",90,[[],["sniffctrlcalc",3]]],[11,"clone","","",91,[[],["datasize",3]]],[11,"clone","rp2040_pac2::generic","",639,[[],["rw",3]]],[11,"clone","","",640,[[],["r",3]]],[11,"clone","","",641,[[],["w",3]]],[11,"clone","","",94,[[],["reg",3]]],[11,"clone","rp2040_pac2::i2c","",226,[[],["i2c",3]]],[11,"clone","rp2040_pac2::i2c::regs","",95,[[],["icsar",3]]],[11,"clone","","",96,[[],["icackgeneralcall",3]]],[11,"clone","","",97,[[],["icdmacr",3]]],[11,"clone","","",98,[[],["icclrrdreq",3]]],[11,"clone","","",99,[[],["icrawintrstat",3]]],[11,"clone","","",100,[[],["icfsspklen",3]]],[11,"clone","","",101,[[],["iccon",3]]],[11,"clone","","",102,[[],["icstatus",3]]],[11,"clone","","",103,[[],["icintrmask",3]]],[11,"clone","","",104,[[],["icclrrxunder",3]]],[11,"clone","","",105,[[],["icclrstartdet",3]]],[11,"clone","","",106,[[],["icclrrestartdet",3]]],[11,"clone","","",107,[[],["icclrtxabrt",3]]],[11,"clone","","",108,[[],["ictar",3]]],[11,"clone","","",109,[[],["icclrgencall",3]]],[11,"clone","","",110,[[],["icclrrxdone",3]]],[11,"clone","","",111,[[],["icslvdatanackonly",3]]],[11,"clone","","",112,[[],["icenablestatus",3]]],[11,"clone","","",113,[[],["icsssclhcnt",3]]],[11,"clone","","",114,[[],["icrxflr",3]]],[11,"clone","","",115,[[],["icdmardlr",3]]],[11,"clone","","",116,[[],["icclractivity",3]]],[11,"clone","","",117,[[],["icfssclhcnt",3]]],[11,"clone","","",118,[[],["icsdasetup",3]]],[11,"clone","","",119,[[],["icssscllcnt",3]]],[11,"clone","","",120,[[],["icsdahold",3]]],[11,"clone","","",121,[[],["icclrtxover",3]]],[11,"clone","","",122,[[],["icclrstopdet",3]]],[11,"clone","","",123,[[],["ictxtl",3]]],[11,"clone","","",124,[[],["icenable",3]]],[11,"clone","","",125,[[],["iccompparam1",3]]],[11,"clone","","",126,[[],["icclrintr",3]]],[11,"clone","","",127,[[],["icfsscllcnt",3]]],[11,"clone","","",128,[[],["ictxabrtsource",3]]],[11,"clone","","",129,[[],["icdmatdlr",3]]],[11,"clone","","",130,[[],["icdatacmd",3]]],[11,"clone","","",131,[[],["ictxflr",3]]],[11,"clone","","",132,[[],["icintrstat",3]]],[11,"clone","","",133,[[],["icrxtl",3]]],[11,"clone","","",134,[[],["icclrrxover",3]]],[11,"clone","rp2040_pac2::i2c::vals","",135,[[],["ictxabrtsourceabrthsnorstrt",3]]],[11,"clone","","",136,[[],["icrawintrstatrdreq",3]]],[11,"clone","","",137,[[],["icslvdatanackonlynack",3]]],[11,"clone","","",138,[[],["icstatustfnf",3]]],[11,"clone","","",139,[[],["icintrmaskmstopdet",3]]],[11,"clone","","",140,[[],["icrawintrstatgencall",3]]],[11,"clone","","",141,[[],["icrawintrstattxempty",3]]],[11,"clone","","",142,[[],["icintrstatrtxabrt",3]]],[11,"clone","","",143,[[],["icintrstatractivity",3]]],[11,"clone","","",144,[[],["icintrmaskmtxabrt",3]]],[11,"clone","","",145,[[],["ictxabrtsourceabrt10brdnorstrt",3]]],[11,"clone","","",146,[[],["ictxabrtsourceabrthsackdet",3]]],[11,"clone","","",147,[[],["ictxabrtsourcearblost",3]]],[11,"clone","","",148,[[],["icenableabort",3]]],[11,"clone","","",149,[[],["icintrstatrstopdet",3]]],[11,"clone","","",150,[[],["ictxabrtsourceabrt10addr2noack",3]]],[11,"clone","","",151,[[],["icintrstatrrxdone",3]]],[11,"clone","","",152,[[],["icconrxfifofullhldctrl",3]]],[11,"clone","","",153,[[],["icintrmaskmrdreq",3]]],[11,"clone","","",154,[[],["ictxabrtsourceabrtmasterdis",3]]],[11,"clone","","",155,[[],["icstatusrfne",3]]],[11,"clone","","",156,[[],["ictargcorstart",3]]],[11,"clone","","",157,[[],["icintrmaskmactivity",3]]],[11,"clone","","",158,[[],["icconmastermode",3]]],[11,"clone","","",159,[[],["icdatacmdfirstdatabyte",3]]],[11,"clone","","",160,[[],["ictxabrtsourceabrtuserabrt",3]]],[11,"clone","","",161,[[],["icrawintrstatactivity",3]]],[11,"clone","","",162,[[],["icconic10bitaddrslave",3]]],[11,"clone","","",163,[[],["icintrstatrgencall",3]]],[11,"clone","","",164,[[],["icdatacmdrestart",3]]],[11,"clone","","",165,[[],["icintrmaskmmasteronholdreadonly",3]]],[11,"clone","","",166,[[],["icackgeneralcallackgencall",3]]],[11,"clone","","",167,[[],["icenablestatusslvrxdatalost",3]]],[11,"clone","","",168,[[],["ictxabrtsourceabrttxdatanoack",3]]],[11,"clone","","",169,[[],["icrawintrstattxover",3]]],[11,"clone","","",170,[[],["icstatusactivity",3]]],[11,"clone","","",171,[[],["icconspeed",3]]],[11,"clone","","",172,[[],["icdatacmdstop",3]]],[11,"clone","","",173,[[],["icintrstatrstartdet",3]]],[11,"clone","","",174,[[],["icintrstatrrdreq",3]]],[11,"clone","","",175,[[],["icintrstatrtxempty",3]]],[11,"clone","","",176,[[],["icrawintrstatstopdet",3]]],[11,"clone","","",177,[[],["icrawintrstatrxfull",3]]],[11,"clone","","",178,[[],["icstatusmstactivity",3]]],[11,"clone","","",179,[[],["icintrstatrrxfull",3]]],[11,"clone","","",180,[[],["icenablestatusslvdisabledwhilebusy",3]]],[11,"clone","","",181,[[],["icintrmaskmtxempty",3]]],[11,"clone","","",182,[[],["ictxabrtsourceabrtsbytenorstrt",3]]],[11,"clone","","",183,[[],["icrawintrstatrestartdet",3]]],[11,"clone","","",184,[[],["icrawintrstatstartdet",3]]],[11,"clone","","",185,[[],["ictxabrtsourceabrtgcallread",3]]],[11,"clone","","",186,[[],["ictxabrtsourceabrtgcallnoack",3]]],[11,"clone","","",187,[[],["icrawintrstattxabrt",3]]],[11,"clone","","",188,[[],["icintrstatrrestartdet",3]]],[11,"clone","","",189,[[],["ictxabrtsourceabrt7baddrnoack",3]]],[11,"clone","","",190,[[],["icstatustfe",3]]],[11,"clone","","",191,[[],["icenablestatusicen",3]]],[11,"clone","","",192,[[],["iccontxemptyctrl",3]]],[11,"clone","","",193,[[],["ictxabrtsourceabrtslvrdintx",3]]],[11,"clone","","",194,[[],["icintrmaskmgencall",3]]],[11,"clone","","",195,[[],["icintrstatrrxunder",3]]],[11,"clone","","",196,[[],["icconic10bitaddrmaster",3]]],[11,"clone","","",197,[[],["icrawintrstatrxunder",3]]],[11,"clone","","",198,[[],["ictxabrtsourceabrt10addr1noack",3]]],[11,"clone","","",199,[[],["icintrstatrrxover",3]]],[11,"clone","","",200,[[],["icintrmaskmrxover",3]]],[11,"clone","","",201,[[],["icenabletxcmdblock",3]]],[11,"clone","","",202,[[],["icdmacrtdmae",3]]],[11,"clone","","",203,[[],["icconicslavedisable",3]]],[11,"clone","","",204,[[],["icenableenable",3]]],[11,"clone","","",205,[[],["icdatacmdcmd",3]]],[11,"clone","","",206,[[],["icintrmaskmrestartdet",3]]],[11,"clone","","",207,[[],["ictxabrtsourceabrtslvarblost",3]]],[11,"clone","","",208,[[],["icintrmaskmstartdet",3]]],[11,"clone","","",209,[[],["icintrmaskmrxunder",3]]],[11,"clone","","",210,[[],["icintrmaskmrxfull",3]]],[11,"clone","","",211,[[],["ictxabrtsourceabrtslvflushtxfifo",3]]],[11,"clone","","",212,[[],["icintrmaskmtxover",3]]],[11,"clone","","",213,[[],["icstatusslvactivity",3]]],[11,"clone","","",214,[[],["icintrstatrtxover",3]]],[11,"clone","","",215,[[],["icconicrestarten",3]]],[11,"clone","","",216,[[],["ictarspecial",3]]],[11,"clone","","",217,[[],["icdmacrrdmae",3]]],[11,"clone","","",218,[[],["icintrstatrmasteronhold",3]]],[11,"clone","","",219,[[],["icstatusrff",3]]],[11,"clone","","",220,[[],["icconstopdetifaddressed",3]]],[11,"clone","","",221,[[],["ictxabrtsourceabrtsbyteackdet",3]]],[11,"clone","","",222,[[],["icintrmaskmrxdone",3]]],[11,"clone","","",223,[[],["icrawintrstatrxover",3]]],[11,"clone","","",224,[[],["icrawintrstatmasteronhold",3]]],[11,"clone","","",225,[[],["icrawintrstatrxdone",3]]],[11,"clone","rp2040_pac2::io","",264,[[],["int",3]]],[11,"clone","","",265,[[],["io",3]]],[11,"clone","","",266,[[],["gpio",3]]],[11,"clone","rp2040_pac2::io::regs","",227,[[],["gpiostatus",3]]],[11,"clone","","",228,[[],["int",3]]],[11,"clone","","",229,[[],["gpioctrl",3]]],[11,"clone","rp2040_pac2::io::vals","",230,[[],["gpio23ctrlfuncsel",3]]],[11,"clone","","",231,[[],["gpio6ctrlfuncsel",3]]],[11,"clone","","",232,[[],["gpio24ctrlfuncsel",3]]],[11,"clone","","",233,[[],["gpio7ctrlfuncsel",3]]],[11,"clone","","",234,[[],["gpio29ctrlfuncsel",3]]],[11,"clone","","",235,[[],["gpio0ctrlfuncsel",3]]],[11,"clone","","",236,[[],["gpio26ctrlfuncsel",3]]],[11,"clone","","",237,[[],["gpio4ctrlfuncsel",3]]],[11,"clone","","",238,[[],["gpio28ctrlfuncsel",3]]],[11,"clone","","",239,[[],["gpio15ctrlfuncsel",3]]],[11,"clone","","",240,[[],["oeover",3]]],[11,"clone","","",241,[[],["gpio20ctrlfuncsel",3]]],[11,"clone","","",242,[[],["gpio12ctrlfuncsel",3]]],[11,"clone","","",243,[[],["gpio1ctrlfuncsel",3]]],[11,"clone","","",244,[[],["gpio8ctrlfuncsel",3]]],[11,"clone","","",245,[[],["inover",3]]],[11,"clone","","",246,[[],["gpio3ctrlfuncsel",3]]],[11,"clone","","",247,[[],["gpio5ctrlfuncsel",3]]],[11,"clone","","",248,[[],["gpio13ctrlfuncsel",3]]],[11,"clone","","",249,[[],["gpio22ctrlfuncsel",3]]],[11,"clone","","",250,[[],["gpio17ctrlfuncsel",3]]],[11,"clone","","",251,[[],["outover",3]]],[11,"clone","","",252,[[],["gpio27ctrlfuncsel",3]]],[11,"clone","","",253,[[],["gpio14ctrlfuncsel",3]]],[11,"clone","","",254,[[],["gpio25ctrlfuncsel",3]]],[11,"clone","","",255,[[],["gpio19ctrlfuncsel",3]]],[11,"clone","","",256,[[],["irqover",3]]],[11,"clone","","",257,[[],["gpio9ctrlfuncsel",3]]],[11,"clone","","",258,[[],["gpio16ctrlfuncsel",3]]],[11,"clone","","",259,[[],["gpio21ctrlfuncsel",3]]],[11,"clone","","",260,[[],["gpio11ctrlfuncsel",3]]],[11,"clone","","",261,[[],["gpio2ctrlfuncsel",3]]],[11,"clone","","",262,[[],["gpio18ctrlfuncsel",3]]],[11,"clone","","",263,[[],["gpio10ctrlfuncsel",3]]],[11,"clone","rp2040_pac2::io_qspi::regs","",267,[[],["intr",3]]],[11,"clone","","",268,[[],["gpioqspisclkstatus",3]]],[11,"clone","","",269,[[],["gpioqspisd3status",3]]],[11,"clone","","",270,[[],["gpioqspissctrl",3]]],[11,"clone","","",271,[[],["gpioqspisclkctrl",3]]],[11,"clone","","",272,[[],["proc1intf",3]]],[11,"clone","","",273,[[],["proc1inte",3]]],[11,"clone","","",274,[[],["proc0ints",3]]],[11,"clone","","",275,[[],["gpioqspisd0status",3]]],[11,"clone","","",276,[[],["dormantwakeinte",3]]],[11,"clone","","",277,[[],["gpioqspisd3ctrl",3]]],[11,"clone","","",278,[[],["proc0inte",3]]],[11,"clone","","",279,[[],["gpioqspisd1ctrl",3]]],[11,"clone","","",280,[[],["gpioqspisd1status",3]]],[11,"clone","","",281,[[],["proc1ints",3]]],[11,"clone","","",282,[[],["dormantwakeints",3]]],[11,"clone","","",283,[[],["proc0intf",3]]],[11,"clone","","",284,[[],["gpioqspisd2status",3]]],[11,"clone","","",285,[[],["gpioqspissstatus",3]]],[11,"clone","","",286,[[],["gpioqspisd0ctrl",3]]],[11,"clone","","",287,[[],["dormantwakeintf",3]]],[11,"clone","","",288,[[],["gpioqspisd2ctrl",3]]],[11,"clone","rp2040_pac2::io_qspi::vals","",289,[[],["gpioqspissctrloutover",3]]],[11,"clone","","",290,[[],["gpioqspisd3ctrlfuncsel",3]]],[11,"clone","","",291,[[],["gpioqspisd2ctrlirqover",3]]],[11,"clone","","",292,[[],["gpioqspisd1ctrlfuncsel",3]]],[11,"clone","","",293,[[],["gpioqspisd2ctrloeover",3]]],[11,"clone","","",294,[[],["gpioqspisd3ctrlirqover",3]]],[11,"clone","","",295,[[],["gpioqspisclkctrloutover",3]]],[11,"clone","","",296,[[],["gpioqspisd0ctrloeover",3]]],[11,"clone","","",297,[[],["gpioqspissctrloeover",3]]],[11,"clone","","",298,[[],["gpioqspissctrlfuncsel",3]]],[11,"clone","","",299,[[],["gpioqspisd2ctrloutover",3]]],[11,"clone","","",300,[[],["gpioqspissctrlinover",3]]],[11,"clone","","",301,[[],["gpioqspisd1ctrloutover",3]]],[11,"clone","","",302,[[],["gpioqspisd3ctrloutover",3]]],[11,"clone","","",303,[[],["gpioqspisclkctrlirqover",3]]],[11,"clone","","",304,[[],["gpioqspissctrlirqover",3]]],[11,"clone","","",305,[[],["gpioqspisclkctrlinover",3]]],[11,"clone","","",306,[[],["gpioqspisclkctrloeover",3]]],[11,"clone","","",307,[[],["gpioqspisd2ctrlfuncsel",3]]],[11,"clone","","",308,[[],["gpioqspisd0ctrlfuncsel",3]]],[11,"clone","","",309,[[],["gpioqspisd0ctrloutover",3]]],[11,"clone","","",310,[[],["gpioqspisclkctrlfuncsel",3]]],[11,"clone","","",311,[[],["gpioqspisd2ctrlinover",3]]],[11,"clone","","",312,[[],["gpioqspisd1ctrlirqover",3]]],[11,"clone","","",313,[[],["gpioqspisd0ctrlirqover",3]]],[11,"clone","","",314,[[],["gpioqspisd3ctrloeover",3]]],[11,"clone","","",315,[[],["gpioqspisd1ctrlinover",3]]],[11,"clone","","",316,[[],["gpioqspisd1ctrloeover",3]]],[11,"clone","","",317,[[],["gpioqspisd3ctrlinover",3]]],[11,"clone","","",318,[[],["gpioqspisd0ctrlinover",3]]],[11,"clone","rp2040_pac2::pads","",323,[[],["pads",3]]],[11,"clone","rp2040_pac2::pads::regs","",319,[[],["voltageselect",3]]],[11,"clone","","",320,[[],["gpioctrl",3]]],[11,"clone","rp2040_pac2::pads::vals","",321,[[],["drive",3]]],[11,"clone","","",322,[[],["voltageselect",3]]],[11,"clone","rp2040_pac2::pads_qspi::regs","",324,[[],["gpioqspisd1",3]]],[11,"clone","","",325,[[],["gpioqspisd3",3]]],[11,"clone","","",326,[[],["gpioqspisclk",3]]],[11,"clone","","",327,[[],["gpioqspisd0",3]]],[11,"clone","","",328,[[],["gpioqspisd2",3]]],[11,"clone","","",329,[[],["gpioqspiss",3]]],[11,"clone","","",330,[[],["voltageselect",3]]],[11,"clone","rp2040_pac2::pads_qspi::vals","",331,[[],["voltageselect",3]]],[11,"clone","","",332,[[],["gpioqspisd2drive",3]]],[11,"clone","","",333,[[],["gpioqspisd0drive",3]]],[11,"clone","","",334,[[],["gpioqspissdrive",3]]],[11,"clone","","",335,[[],["gpioqspisclkdrive",3]]],[11,"clone","","",336,[[],["gpioqspisd1drive",3]]],[11,"clone","","",337,[[],["gpioqspisd3drive",3]]],[11,"clone","rp2040_pac2::pio","",354,[[],["irq",3]]],[11,"clone","","",355,[[],["statemachine",3]]],[11,"clone","","",356,[[],["pio",3]]],[11,"clone","rp2040_pac2::pio::regs","",338,[[],["smexecctrl",3]]],[11,"clone","","",339,[[],["fdebug",3]]],[11,"clone","","",340,[[],["irqforce",3]]],[11,"clone","","",341,[[],["irq",3]]],[11,"clone","","",342,[[],["intr",3]]],[11,"clone","","",343,[[],["flevel",3]]],[11,"clone","","",344,[[],["smclkdiv",3]]],[11,"clone","","",345,[[],["dbgcfginfo",3]]],[11,"clone","","",346,[[],["smaddr",3]]],[11,"clone","","",347,[[],["smshiftctrl",3]]],[11,"clone","","",348,[[],["ctrl",3]]],[11,"clone","","",349,[[],["smpinctrl",3]]],[11,"clone","","",350,[[],["instrmem",3]]],[11,"clone","","",351,[[],["fstat",3]]],[11,"clone","","",352,[[],["sminstr",3]]],[11,"clone","rp2040_pac2::pio::vals","",353,[[],["smexecctrlstatussel",3]]],[11,"clone","rp2040_pac2::pll","",361,[[],["pll",3]]],[11,"clone","rp2040_pac2::pll::regs","",357,[[],["cs",3]]],[11,"clone","","",358,[[],["fbdivint",3]]],[11,"clone","","",359,[[],["pwr",3]]],[11,"clone","","",360,[[],["prim",3]]],[11,"clone","rp2040_pac2::ppb","",388,[[],["ppb",3]]],[11,"clone","rp2040_pac2::ppb::regs","",362,[[],["nvicipr5",3]]],[11,"clone","","",363,[[],["icsr",3]]],[11,"clone","","",364,[[],["mpurbar",3]]],[11,"clone","","",365,[[],["scr",3]]],[11,"clone","","",366,[[],["nvicipr1",3]]],[11,"clone","","",367,[[],["systrvr",3]]],[11,"clone","","",368,[[],["shcsr",3]]],[11,"clone","","",369,[[],["shpr2",3]]],[11,"clone","","",370,[[],["nvicipr4",3]]],[11,"clone","","",371,[[],["nvicipr6",3]]],[11,"clone","","",372,[[],["nvicipr2",3]]],[11,"clone","","",373,[[],["aircr",3]]],[11,"clone","","",374,[[],["systcsr",3]]],[11,"clone","","",375,[[],["systcalib",3]]],[11,"clone","","",376,[[],["mputype",3]]],[11,"clone","","",377,[[],["nvicipr7",3]]],[11,"clone","","",378,[[],["nvicipr3",3]]],[11,"clone","","",379,[[],["mpurasr",3]]],[11,"clone","","",380,[[],["mpuctrl",3]]],[11,"clone","","",381,[[],["cpuid",3]]],[11,"clone","","",382,[[],["vtor",3]]],[11,"clone","","",383,[[],["nvicipr0",3]]],[11,"clone","","",384,[[],["shpr3",3]]],[11,"clone","","",385,[[],["mpurnr",3]]],[11,"clone","","",386,[[],["ccr",3]]],[11,"clone","","",387,[[],["systcvr",3]]],[11,"clone","rp2040_pac2::psm","",393,[[],["psm",3]]],[11,"clone","rp2040_pac2::psm::regs","",389,[[],["frceon",3]]],[11,"clone","","",390,[[],["wdsel",3]]],[11,"clone","","",391,[[],["frceoff",3]]],[11,"clone","","",392,[[],["done",3]]],[11,"clone","rp2040_pac2::pwm","",440,[[],["pwm",3]]],[11,"clone","rp2040_pac2::pwm::regs","",394,[[],["ch2csr",3]]],[11,"clone","","",395,[[],["en",3]]],[11,"clone","","",396,[[],["ch7csr",3]]],[11,"clone","","",397,[[],["ch7ctr",3]]],[11,"clone","","",398,[[],["intr",3]]],[11,"clone","","",399,[[],["ch1ctr",3]]],[11,"clone","","",400,[[],["ch4cc",3]]],[11,"clone","","",401,[[],["ch7top",3]]],[11,"clone","","",402,[[],["ch6csr",3]]],[11,"clone","","",403,[[],["ch4div",3]]],[11,"clone","","",404,[[],["ch1div",3]]],[11,"clone","","",405,[[],["inte",3]]],[11,"clone","","",406,[[],["ch2top",3]]],[11,"clone","","",407,[[],["ch4ctr",3]]],[11,"clone","","",408,[[],["ch5ctr",3]]],[11,"clone","","",409,[[],["ch2div",3]]],[11,"clone","","",410,[[],["ch4csr",3]]],[11,"clone","","",411,[[],["ch1csr",3]]],[11,"clone","","",412,[[],["ints",3]]],[11,"clone","","",413,[[],["ch7div",3]]],[11,"clone","","",414,[[],["ch5cc",3]]],[11,"clone","","",415,[[],["ch5div",3]]],[11,"clone","","",416,[[],["ch0div",3]]],[11,"clone","","",417,[[],["ch2ctr",3]]],[11,"clone","","",418,[[],["ch0cc",3]]],[11,"clone","","",419,[[],["ch0csr",3]]],[11,"clone","","",420,[[],["ch6div",3]]],[11,"clone","","",421,[[],["intf",3]]],[11,"clone","","",422,[[],["ch0top",3]]],[11,"clone","","",423,[[],["ch6cc",3]]],[11,"clone","","",424,[[],["ch6top",3]]],[11,"clone","","",425,[[],["ch4top",3]]],[11,"clone","","",426,[[],["ch0ctr",3]]],[11,"clone","","",427,[[],["ch3csr",3]]],[11,"clone","","",428,[[],["ch3cc",3]]],[11,"clone","","",429,[[],["ch3ctr",3]]],[11,"clone","","",430,[[],["ch5top",3]]],[11,"clone","","",431,[[],["ch6ctr",3]]],[11,"clone","","",432,[[],["ch1cc",3]]],[11,"clone","","",433,[[],["ch3top",3]]],[11,"clone","","",434,[[],["ch2cc",3]]],[11,"clone","","",435,[[],["ch3div",3]]],[11,"clone","","",436,[[],["ch5csr",3]]],[11,"clone","","",437,[[],["ch1top",3]]],[11,"clone","","",438,[[],["ch7cc",3]]],[11,"clone","rp2040_pac2::pwm::vals","",439,[[],["divmode",3]]],[11,"clone","rp2040_pac2::resets","",443,[[],["resets",3]]],[11,"clone","rp2040_pac2::resets::regs","",441,[[],["peripherals",3]]],[11,"clone","","",442,[[],["wdsel",3]]],[11,"clone","rp2040_pac2::rosc","",456,[[],["rosc",3]]],[11,"clone","rp2040_pac2::rosc::regs","",444,[[],["div",3]]],[11,"clone","","",445,[[],["freqa",3]]],[11,"clone","","",446,[[],["freqb",3]]],[11,"clone","","",447,[[],["ctrl",3]]],[11,"clone","","",448,[[],["count",3]]],[11,"clone","","",449,[[],["status",3]]],[11,"clone","","",450,[[],["phase",3]]],[11,"clone","","",451,[[],["randombit",3]]],[11,"clone","rp2040_pac2::rosc::vals","",452,[[],["ctrlenable",3]]],[11,"clone","","",453,[[],["passwd",3]]],[11,"clone","","",454,[[],["ctrlfreqrange",3]]],[11,"clone","","",455,[[],["div",3]]],[11,"clone","rp2040_pac2::rtc","",469,[[],["rtc",3]]],[11,"clone","rp2040_pac2::rtc::regs","",457,[[],["ctrl",3]]],[11,"clone","","",458,[[],["clkdivm1",3]]],[11,"clone","","",459,[[],["rtc0",3]]],[11,"clone","","",460,[[],["irqsetup1",3]]],[11,"clone","","",461,[[],["rtc1",3]]],[11,"clone","","",462,[[],["inte",3]]],[11,"clone","","",463,[[],["ints",3]]],[11,"clone","","",464,[[],["intf",3]]],[11,"clone","","",465,[[],["setup1",3]]],[11,"clone","","",466,[[],["irqsetup0",3]]],[11,"clone","","",467,[[],["setup0",3]]],[11,"clone","","",468,[[],["intr",3]]],[11,"clone","rp2040_pac2::sio","",480,[[],["fifo",3]]],[11,"clone","","",481,[[],["gpio",3]]],[11,"clone","","",482,[[],["interp",3]]],[11,"clone","","",483,[[],["div",3]]],[11,"clone","","",484,[[],["sio",3]]],[11,"clone","rp2040_pac2::sio::regs","",470,[[],["interp0ctrllane0",3]]],[11,"clone","","",471,[[],["interp1ctrllane1",3]]],[11,"clone","","",472,[[],["interp0accum0add",3]]],[11,"clone","","",473,[[],["interp0accum1add",3]]],[11,"clone","","",474,[[],["divcsr",3]]],[11,"clone","","",475,[[],["interp1accum1add",3]]],[11,"clone","","",476,[[],["interp1accum0add",3]]],[11,"clone","","",477,[[],["fifost",3]]],[11,"clone","","",478,[[],["interp1ctrllane0",3]]],[11,"clone","","",479,[[],["interp0ctrllane1",3]]],[11,"clone","rp2040_pac2::spi","",503,[[],["spi",3]]],[11,"clone","rp2040_pac2::spi::regs","",485,[[],["sspris",3]]],[11,"clone","","",486,[[],["sspperiphid0",3]]],[11,"clone","","",487,[[],["sspicr",3]]],[11,"clone","","",488,[[],["sspcr0",3]]],[11,"clone","","",489,[[],["sspcr1",3]]],[11,"clone","","",490,[[],["sspdmacr",3]]],[11,"clone","","",491,[[],["sspperiphid2",3]]],[11,"clone","","",492,[[],["ssppcellid2",3]]],[11,"clone","","",493,[[],["ssppcellid0",3]]],[11,"clone","","",494,[[],["ssppcellid3",3]]],[11,"clone","","",495,[[],["sspperiphid1",3]]],[11,"clone","","",496,[[],["ssppcellid1",3]]],[11,"clone","","",497,[[],["sspperiphid3",3]]],[11,"clone","","",498,[[],["sspcpsr",3]]],[11,"clone","","",499,[[],["sspdr",3]]],[11,"clone","","",500,[[],["sspsr",3]]],[11,"clone","","",501,[[],["sspimsc",3]]],[11,"clone","","",502,[[],["sspmis",3]]],[11,"clone","rp2040_pac2::syscfg","",509,[[],["syscfg",3]]],[11,"clone","rp2040_pac2::syscfg::regs","",504,[[],["mempowerdown",3]]],[11,"clone","","",505,[[],["procinsyncbypass",3]]],[11,"clone","","",506,[[],["procconfig",3]]],[11,"clone","","",507,[[],["dbgforce",3]]],[11,"clone","","",508,[[],["procinsyncbypasshi",3]]],[11,"clone","rp2040_pac2::sysinfo","",512,[[],["sysinfo",3]]],[11,"clone","rp2040_pac2::sysinfo::regs","",510,[[],["chipid",3]]],[11,"clone","","",511,[[],["platform",3]]],[11,"clone","rp2040_pac2::tbman","",514,[[],["tbman",3]]],[11,"clone","rp2040_pac2::tbman::regs","",513,[[],["platform",3]]],[11,"clone","rp2040_pac2::timer","",522,[[],["timer",3]]],[11,"clone","rp2040_pac2::timer::regs","",515,[[],["armed",3]]],[11,"clone","","",516,[[],["intr",3]]],[11,"clone","","",517,[[],["intf",3]]],[11,"clone","","",518,[[],["ints",3]]],[11,"clone","","",519,[[],["inte",3]]],[11,"clone","","",520,[[],["pause",3]]],[11,"clone","","",521,[[],["dbgpause",3]]],[11,"clone","rp2040_pac2::uart","",545,[[],["uart",3]]],[11,"clone","rp2040_pac2::uart::regs","",523,[[],["uartperiphid3",3]]],[11,"clone","","",524,[[],["uartris",3]]],[11,"clone","","",525,[[],["uartperiphid2",3]]],[11,"clone","","",526,[[],["uartmis",3]]],[11,"clone","","",527,[[],["uartfbrd",3]]],[11,"clone","","",528,[[],["uartibrd",3]]],[11,"clone","","",529,[[],["uartfr",3]]],[11,"clone","","",530,[[],["uartifls",3]]],[11,"clone","","",531,[[],["uartrsr",3]]],[11,"clone","","",532,[[],["uartcr",3]]],[11,"clone","","",533,[[],["uartilpr",3]]],[11,"clone","","",534,[[],["uartimsc",3]]],[11,"clone","","",535,[[],["uartperiphid0",3]]],[11,"clone","","",536,[[],["uartperiphid1",3]]],[11,"clone","","",537,[[],["uartpcellid1",3]]],[11,"clone","","",538,[[],["uartpcellid3",3]]],[11,"clone","","",539,[[],["uartdr",3]]],[11,"clone","","",540,[[],["uarticr",3]]],[11,"clone","","",541,[[],["uartlcrh",3]]],[11,"clone","","",542,[[],["uartdmacr",3]]],[11,"clone","","",543,[[],["uartpcellid0",3]]],[11,"clone","","",544,[[],["uartpcellid2",3]]],[11,"clone","rp2040_pac2::usbctrl_regs","",584,[[],["usbctrlregs",3]]],[11,"clone","rp2040_pac2::usbctrl_regs::regs","",546,[[],["usbpwr",3]]],[11,"clone","","",547,[[],["addrendp11",3]]],[11,"clone","","",548,[[],["nakpoll",3]]],[11,"clone","","",549,[[],["siestatus",3]]],[11,"clone","","",550,[[],["addrendp1",3]]],[11,"clone","","",551,[[],["usbphydirectoverride",3]]],[11,"clone","","",552,[[],["addrendp7",3]]],[11,"clone","","",553,[[],["addrendp15",3]]],[11,"clone","","",554,[[],["epabort",3]]],[11,"clone","","",555,[[],["addrendp3",3]]],[11,"clone","","",556,[[],["mainctrl",3]]],[11,"clone","","",557,[[],["usbmuxing",3]]],[11,"clone","","",558,[[],["addrendp14",3]]],[11,"clone","","",559,[[],["addrendp8",3]]],[11,"clone","","",560,[[],["sofwr",3]]],[11,"clone","","",561,[[],["usbphydirect",3]]],[11,"clone","","",562,[[],["addrendp9",3]]],[11,"clone","","",563,[[],["addrendp10",3]]],[11,"clone","","",564,[[],["intf",3]]],[11,"clone","","",565,[[],["addrendp2",3]]],[11,"clone","","",566,[[],["addrendp5",3]]],[11,"clone","","",567,[[],["siectrl",3]]],[11,"clone","","",568,[[],["epstatusstallnak",3]]],[11,"clone","","",569,[[],["addrendp",3]]],[11,"clone","","",570,[[],["addrendp13",3]]],[11,"clone","","",571,[[],["ints",3]]],[11,"clone","","",572,[[],["buffcpushouldhandle",3]]],[11,"clone","","",573,[[],["usbphytrim",3]]],[11,"clone","","",574,[[],["addrendp4",3]]],[11,"clone","","",575,[[],["intepctrl",3]]],[11,"clone","","",576,[[],["sofrd",3]]],[11,"clone","","",577,[[],["buffstatus",3]]],[11,"clone","","",578,[[],["intr",3]]],[11,"clone","","",579,[[],["epstallarm",3]]],[11,"clone","","",580,[[],["addrendp6",3]]],[11,"clone","","",581,[[],["addrendp12",3]]],[11,"clone","","",582,[[],["epabortdone",3]]],[11,"clone","","",583,[[],["inte",3]]],[11,"clone","rp2040_pac2::vreg_and_chip_reset","",588,[[],["vregandchipreset",3]]],[11,"clone","rp2040_pac2::vreg_and_chip_reset::regs","",585,[[],["chipreset",3]]],[11,"clone","","",586,[[],["bod",3]]],[11,"clone","","",587,[[],["vreg",3]]],[11,"clone","rp2040_pac2::watchdog","",593,[[],["watchdog",3]]],[11,"clone","rp2040_pac2::watchdog::regs","",589,[[],["ctrl",3]]],[11,"clone","","",590,[[],["tick",3]]],[11,"clone","","",591,[[],["load",3]]],[11,"clone","","",592,[[],["reason",3]]],[11,"clone","rp2040_pac2::xip_ctrl","",599,[[],["xipctrl",3]]],[11,"clone","rp2040_pac2::xip_ctrl::regs","",594,[[],["streamctr",3]]],[11,"clone","","",595,[[],["flush",3]]],[11,"clone","","",596,[[],["stat",3]]],[11,"clone","","",597,[[],["streamaddr",3]]],[11,"clone","","",598,[[],["ctrl",3]]],[11,"clone","rp2040_pac2::xip_ssi","",629,[[],["xipssi",3]]],[11,"clone","rp2040_pac2::xip_ssi::regs","",600,[[],["ser",3]]],[11,"clone","","",601,[[],["rxflr",3]]],[11,"clone","","",602,[[],["dmardlr",3]]],[11,"clone","","",603,[[],["sr",3]]],[11,"clone","","",604,[[],["icr",3]]],[11,"clone","","",605,[[],["rxftlr",3]]],[11,"clone","","",606,[[],["imr",3]]],[11,"clone","","",607,[[],["ssienr",3]]],[11,"clone","","",608,[[],["txoicr",3]]],[11,"clone","","",609,[[],["baudr",3]]],[11,"clone","","",610,[[],["msticr",3]]],[11,"clone","","",611,[[],["dmatdlr",3]]],[11,"clone","","",612,[[],["rxoicr",3]]],[11,"clone","","",613,[[],["dmacr",3]]],[11,"clone","","",614,[[],["txflr",3]]],[11,"clone","","",615,[[],["ctrlr1",3]]],[11,"clone","","",616,[[],["ctrlr0",3]]],[11,"clone","","",617,[[],["spictrlr0",3]]],[11,"clone","","",618,[[],["rxsampledly",3]]],[11,"clone","","",619,[[],["txftlr",3]]],[11,"clone","","",620,[[],["mwcr",3]]],[11,"clone","","",621,[[],["rxuicr",3]]],[11,"clone","","",622,[[],["txddriveedge",3]]],[11,"clone","","",623,[[],["risr",3]]],[11,"clone","","",624,[[],["isr",3]]],[11,"clone","rp2040_pac2::xip_ssi::vals","",625,[[],["ctrlr0tmod",3]]],[11,"clone","","",626,[[],["spictrlr0instl",3]]],[11,"clone","","",627,[[],["spictrlr0transtype",3]]],[11,"clone","","",628,[[],["ctrlr0spifrf",3]]],[11,"clone","rp2040_pac2::xosc","",637,[[],["xosc",3]]],[11,"clone","rp2040_pac2::xosc::regs","",630,[[],["count",3]]],[11,"clone","","",631,[[],["status",3]]],[11,"clone","","",632,[[],["startup",3]]],[11,"clone","","",633,[[],["ctrl",3]]],[11,"clone","rp2040_pac2::xosc::vals","",634,[[],["statusfreqrange",3]]],[11,"clone","","",635,[[],["ctrlfreqrange",3]]],[11,"clone","","",636,[[],["ctrlenable",3]]],[11,"default","rp2040_pac2::adc::regs","",0,[[],["ints",3]]],[11,"default","","",1,[[],["div",3]]],[11,"default","","",2,[[],["inte",3]]],[11,"default","","",3,[[],["fifo",3]]],[11,"default","","",4,[[],["intr",3]]],[11,"default","","",5,[[],["fcs",3]]],[11,"default","","",6,[[],["intf",3]]],[11,"default","","",7,[[],["result",3]]],[11,"default","","",8,[[],["cs",3]]],[11,"default","rp2040_pac2::busctrl::regs","",10,[[],["perfctr3",3]]],[11,"default","","",11,[[],["perfctr2",3]]],[11,"default","","",12,[[],["perfctr0",3]]],[11,"default","","",13,[[],["perfsel0",3]]],[11,"default","","",14,[[],["perfsel2",3]]],[11,"default","","",15,[[],["perfctr1",3]]],[11,"default","","",16,[[],["perfsel3",3]]],[11,"default","","",17,[[],["buspriorityack",3]]],[11,"default","","",18,[[],["perfsel1",3]]],[11,"default","","",19,[[],["buspriority",3]]],[11,"default","rp2040_pac2::clocks::regs","",21,[[],["clksysdiv",3]]],[11,"default","","",22,[[],["fc0maxkhz",3]]],[11,"default","","",23,[[],["clkgpout1ctrl",3]]],[11,"default","","",24,[[],["fc0src",3]]],[11,"default","","",25,[[],["intr",3]]],[11,"default","","",26,[[],["clkgpout1div",3]]],[11,"default","","",27,[[],["clkgpout3ctrl",3]]],[11,"default","","",28,[[],["clkusbdiv",3]]],[11,"default","","",29,[[],["fc0status",3]]],[11,"default","","",30,[[],["wakeen0",3]]],[11,"default","","",31,[[],["clkrtcdiv",3]]],[11,"default","","",32,[[],["sleepen0",3]]],[11,"default","","",33,[[],["enabled1",3]]],[11,"default","","",34,[[],["clkadcctrl",3]]],[11,"default","","",35,[[],["clkrtcctrl",3]]],[11,"default","","",36,[[],["clksysctrl",3]]],[11,"default","","",37,[[],["clkrefdiv",3]]],[11,"default","","",38,[[],["clkgpout0div",3]]],[11,"default","","",39,[[],["clkusbctrl",3]]],[11,"default","","",40,[[],["clkgpout2div",3]]],[11,"default","","",41,[[],["fc0interval",3]]],[11,"default","","",42,[[],["wakeen1",3]]],[11,"default","","",43,[[],["clkadcdiv",3]]],[11,"default","","",44,[[],["intf",3]]],[11,"default","","",45,[[],["clkgpout3div",3]]],[11,"default","","",46,[[],["clkgpout0ctrl",3]]],[11,"default","","",47,[[],["clkperictrl",3]]],[11,"default","","",48,[[],["fc0result",3]]],[11,"default","","",49,[[],["clksysresusstatus",3]]],[11,"default","","",50,[[],["fc0minkhz",3]]],[11,"default","","",51,[[],["clkrefctrl",3]]],[11,"default","","",52,[[],["clksysresusctrl",3]]],[11,"default","","",53,[[],["sleepen1",3]]],[11,"default","","",54,[[],["inte",3]]],[11,"default","","",55,[[],["clkgpout2ctrl",3]]],[11,"default","","",56,[[],["enabled0",3]]],[11,"default","","",57,[[],["fc0refkhz",3]]],[11,"default","","",58,[[],["ints",3]]],[11,"default","","",59,[[],["fc0delay",3]]],[11,"default","rp2040_pac2::dma::regs","",74,[[],["fifolevels",3]]],[11,"default","","",75,[[],["inte0",3]]],[11,"default","","",76,[[],["intf0",3]]],[11,"default","","",77,[[],["ints0",3]]],[11,"default","","",78,[[],["intf1",3]]],[11,"default","","",79,[[],["ints1",3]]],[11,"default","","",80,[[],["inte1",3]]],[11,"default","","",81,[[],["intr",3]]],[11,"default","","",82,[[],["nchannels",3]]],[11,"default","","",83,[[],["dbgctdreq",3]]],[11,"default","","",84,[[],["timer",3]]],[11,"default","","",85,[[],["ctrltrig",3]]],[11,"default","","",86,[[],["chanabort",3]]],[11,"default","","",87,[[],["sniffctrl",3]]],[11,"default","","",88,[[],["multichantrigger",3]]],[11,"default","rp2040_pac2::i2c::regs","",95,[[],["icsar",3]]],[11,"default","","",96,[[],["icackgeneralcall",3]]],[11,"default","","",97,[[],["icdmacr",3]]],[11,"default","","",98,[[],["icclrrdreq",3]]],[11,"default","","",99,[[],["icrawintrstat",3]]],[11,"default","","",100,[[],["icfsspklen",3]]],[11,"default","","",101,[[],["iccon",3]]],[11,"default","","",102,[[],["icstatus",3]]],[11,"default","","",103,[[],["icintrmask",3]]],[11,"default","","",104,[[],["icclrrxunder",3]]],[11,"default","","",105,[[],["icclrstartdet",3]]],[11,"default","","",106,[[],["icclrrestartdet",3]]],[11,"default","","",107,[[],["icclrtxabrt",3]]],[11,"default","","",108,[[],["ictar",3]]],[11,"default","","",109,[[],["icclrgencall",3]]],[11,"default","","",110,[[],["icclrrxdone",3]]],[11,"default","","",111,[[],["icslvdatanackonly",3]]],[11,"default","","",112,[[],["icenablestatus",3]]],[11,"default","","",113,[[],["icsssclhcnt",3]]],[11,"default","","",114,[[],["icrxflr",3]]],[11,"default","","",115,[[],["icdmardlr",3]]],[11,"default","","",116,[[],["icclractivity",3]]],[11,"default","","",117,[[],["icfssclhcnt",3]]],[11,"default","","",118,[[],["icsdasetup",3]]],[11,"default","","",119,[[],["icssscllcnt",3]]],[11,"default","","",120,[[],["icsdahold",3]]],[11,"default","","",121,[[],["icclrtxover",3]]],[11,"default","","",122,[[],["icclrstopdet",3]]],[11,"default","","",123,[[],["ictxtl",3]]],[11,"default","","",124,[[],["icenable",3]]],[11,"default","","",125,[[],["iccompparam1",3]]],[11,"default","","",126,[[],["icclrintr",3]]],[11,"default","","",127,[[],["icfsscllcnt",3]]],[11,"default","","",128,[[],["ictxabrtsource",3]]],[11,"default","","",129,[[],["icdmatdlr",3]]],[11,"default","","",130,[[],["icdatacmd",3]]],[11,"default","","",131,[[],["ictxflr",3]]],[11,"default","","",132,[[],["icintrstat",3]]],[11,"default","","",133,[[],["icrxtl",3]]],[11,"default","","",134,[[],["icclrrxover",3]]],[11,"default","rp2040_pac2::io::regs","",227,[[],["gpiostatus",3]]],[11,"default","","",228,[[],["int",3]]],[11,"default","","",229,[[],["gpioctrl",3]]],[11,"default","rp2040_pac2::io_qspi::regs","",267,[[],["intr",3]]],[11,"default","","",268,[[],["gpioqspisclkstatus",3]]],[11,"default","","",269,[[],["gpioqspisd3status",3]]],[11,"default","","",270,[[],["gpioqspissctrl",3]]],[11,"default","","",271,[[],["gpioqspisclkctrl",3]]],[11,"default","","",272,[[],["proc1intf",3]]],[11,"default","","",273,[[],["proc1inte",3]]],[11,"default","","",274,[[],["proc0ints",3]]],[11,"default","","",275,[[],["gpioqspisd0status",3]]],[11,"default","","",276,[[],["dormantwakeinte",3]]],[11,"default","","",277,[[],["gpioqspisd3ctrl",3]]],[11,"default","","",278,[[],["proc0inte",3]]],[11,"default","","",279,[[],["gpioqspisd1ctrl",3]]],[11,"default","","",280,[[],["gpioqspisd1status",3]]],[11,"default","","",281,[[],["proc1ints",3]]],[11,"default","","",282,[[],["dormantwakeints",3]]],[11,"default","","",283,[[],["proc0intf",3]]],[11,"default","","",284,[[],["gpioqspisd2status",3]]],[11,"default","","",285,[[],["gpioqspissstatus",3]]],[11,"default","","",286,[[],["gpioqspisd0ctrl",3]]],[11,"default","","",287,[[],["dormantwakeintf",3]]],[11,"default","","",288,[[],["gpioqspisd2ctrl",3]]],[11,"default","rp2040_pac2::pads::regs","",319,[[],["voltageselect",3]]],[11,"default","","",320,[[],["gpioctrl",3]]],[11,"default","rp2040_pac2::pads_qspi::regs","",324,[[],["gpioqspisd1",3]]],[11,"default","","",325,[[],["gpioqspisd3",3]]],[11,"default","","",326,[[],["gpioqspisclk",3]]],[11,"default","","",327,[[],["gpioqspisd0",3]]],[11,"default","","",328,[[],["gpioqspisd2",3]]],[11,"default","","",329,[[],["gpioqspiss",3]]],[11,"default","","",330,[[],["voltageselect",3]]],[11,"default","rp2040_pac2::pio::regs","",338,[[],["smexecctrl",3]]],[11,"default","","",339,[[],["fdebug",3]]],[11,"default","","",340,[[],["irqforce",3]]],[11,"default","","",341,[[],["irq",3]]],[11,"default","","",342,[[],["intr",3]]],[11,"default","","",343,[[],["flevel",3]]],[11,"default","","",344,[[],["smclkdiv",3]]],[11,"default","","",345,[[],["dbgcfginfo",3]]],[11,"default","","",346,[[],["smaddr",3]]],[11,"default","","",347,[[],["smshiftctrl",3]]],[11,"default","","",348,[[],["ctrl",3]]],[11,"default","","",349,[[],["smpinctrl",3]]],[11,"default","","",350,[[],["instrmem",3]]],[11,"default","","",351,[[],["fstat",3]]],[11,"default","","",352,[[],["sminstr",3]]],[11,"default","rp2040_pac2::pll::regs","",357,[[],["cs",3]]],[11,"default","","",358,[[],["fbdivint",3]]],[11,"default","","",359,[[],["pwr",3]]],[11,"default","","",360,[[],["prim",3]]],[11,"default","rp2040_pac2::ppb::regs","",362,[[],["nvicipr5",3]]],[11,"default","","",363,[[],["icsr",3]]],[11,"default","","",364,[[],["mpurbar",3]]],[11,"default","","",365,[[],["scr",3]]],[11,"default","","",366,[[],["nvicipr1",3]]],[11,"default","","",367,[[],["systrvr",3]]],[11,"default","","",368,[[],["shcsr",3]]],[11,"default","","",369,[[],["shpr2",3]]],[11,"default","","",370,[[],["nvicipr4",3]]],[11,"default","","",371,[[],["nvicipr6",3]]],[11,"default","","",372,[[],["nvicipr2",3]]],[11,"default","","",373,[[],["aircr",3]]],[11,"default","","",374,[[],["systcsr",3]]],[11,"default","","",375,[[],["systcalib",3]]],[11,"default","","",376,[[],["mputype",3]]],[11,"default","","",377,[[],["nvicipr7",3]]],[11,"default","","",378,[[],["nvicipr3",3]]],[11,"default","","",379,[[],["mpurasr",3]]],[11,"default","","",380,[[],["mpuctrl",3]]],[11,"default","","",381,[[],["cpuid",3]]],[11,"default","","",382,[[],["vtor",3]]],[11,"default","","",383,[[],["nvicipr0",3]]],[11,"default","","",384,[[],["shpr3",3]]],[11,"default","","",385,[[],["mpurnr",3]]],[11,"default","","",386,[[],["ccr",3]]],[11,"default","","",387,[[],["systcvr",3]]],[11,"default","rp2040_pac2::psm::regs","",389,[[],["frceon",3]]],[11,"default","","",390,[[],["wdsel",3]]],[11,"default","","",391,[[],["frceoff",3]]],[11,"default","","",392,[[],["done",3]]],[11,"default","rp2040_pac2::pwm::regs","",394,[[],["ch2csr",3]]],[11,"default","","",395,[[],["en",3]]],[11,"default","","",396,[[],["ch7csr",3]]],[11,"default","","",397,[[],["ch7ctr",3]]],[11,"default","","",398,[[],["intr",3]]],[11,"default","","",399,[[],["ch1ctr",3]]],[11,"default","","",400,[[],["ch4cc",3]]],[11,"default","","",401,[[],["ch7top",3]]],[11,"default","","",402,[[],["ch6csr",3]]],[11,"default","","",403,[[],["ch4div",3]]],[11,"default","","",404,[[],["ch1div",3]]],[11,"default","","",405,[[],["inte",3]]],[11,"default","","",406,[[],["ch2top",3]]],[11,"default","","",407,[[],["ch4ctr",3]]],[11,"default","","",408,[[],["ch5ctr",3]]],[11,"default","","",409,[[],["ch2div",3]]],[11,"default","","",410,[[],["ch4csr",3]]],[11,"default","","",411,[[],["ch1csr",3]]],[11,"default","","",412,[[],["ints",3]]],[11,"default","","",413,[[],["ch7div",3]]],[11,"default","","",414,[[],["ch5cc",3]]],[11,"default","","",415,[[],["ch5div",3]]],[11,"default","","",416,[[],["ch0div",3]]],[11,"default","","",417,[[],["ch2ctr",3]]],[11,"default","","",418,[[],["ch0cc",3]]],[11,"default","","",419,[[],["ch0csr",3]]],[11,"default","","",420,[[],["ch6div",3]]],[11,"default","","",421,[[],["intf",3]]],[11,"default","","",422,[[],["ch0top",3]]],[11,"default","","",423,[[],["ch6cc",3]]],[11,"default","","",424,[[],["ch6top",3]]],[11,"default","","",425,[[],["ch4top",3]]],[11,"default","","",426,[[],["ch0ctr",3]]],[11,"default","","",427,[[],["ch3csr",3]]],[11,"default","","",428,[[],["ch3cc",3]]],[11,"default","","",429,[[],["ch3ctr",3]]],[11,"default","","",430,[[],["ch5top",3]]],[11,"default","","",431,[[],["ch6ctr",3]]],[11,"default","","",432,[[],["ch1cc",3]]],[11,"default","","",433,[[],["ch3top",3]]],[11,"default","","",434,[[],["ch2cc",3]]],[11,"default","","",435,[[],["ch3div",3]]],[11,"default","","",436,[[],["ch5csr",3]]],[11,"default","","",437,[[],["ch1top",3]]],[11,"default","","",438,[[],["ch7cc",3]]],[11,"default","rp2040_pac2::resets::regs","",441,[[],["peripherals",3]]],[11,"default","","",442,[[],["wdsel",3]]],[11,"default","rp2040_pac2::rosc::regs","",444,[[],["div",3]]],[11,"default","","",445,[[],["freqa",3]]],[11,"default","","",446,[[],["freqb",3]]],[11,"default","","",447,[[],["ctrl",3]]],[11,"default","","",448,[[],["count",3]]],[11,"default","","",449,[[],["status",3]]],[11,"default","","",450,[[],["phase",3]]],[11,"default","","",451,[[],["randombit",3]]],[11,"default","rp2040_pac2::rtc::regs","",457,[[],["ctrl",3]]],[11,"default","","",458,[[],["clkdivm1",3]]],[11,"default","","",459,[[],["rtc0",3]]],[11,"default","","",460,[[],["irqsetup1",3]]],[11,"default","","",461,[[],["rtc1",3]]],[11,"default","","",462,[[],["inte",3]]],[11,"default","","",463,[[],["ints",3]]],[11,"default","","",464,[[],["intf",3]]],[11,"default","","",465,[[],["setup1",3]]],[11,"default","","",466,[[],["irqsetup0",3]]],[11,"default","","",467,[[],["setup0",3]]],[11,"default","","",468,[[],["intr",3]]],[11,"default","rp2040_pac2::sio::regs","",470,[[],["interp0ctrllane0",3]]],[11,"default","","",471,[[],["interp1ctrllane1",3]]],[11,"default","","",472,[[],["interp0accum0add",3]]],[11,"default","","",473,[[],["interp0accum1add",3]]],[11,"default","","",474,[[],["divcsr",3]]],[11,"default","","",475,[[],["interp1accum1add",3]]],[11,"default","","",476,[[],["interp1accum0add",3]]],[11,"default","","",477,[[],["fifost",3]]],[11,"default","","",478,[[],["interp1ctrllane0",3]]],[11,"default","","",479,[[],["interp0ctrllane1",3]]],[11,"default","rp2040_pac2::spi::regs","",485,[[],["sspris",3]]],[11,"default","","",486,[[],["sspperiphid0",3]]],[11,"default","","",487,[[],["sspicr",3]]],[11,"default","","",488,[[],["sspcr0",3]]],[11,"default","","",489,[[],["sspcr1",3]]],[11,"default","","",490,[[],["sspdmacr",3]]],[11,"default","","",491,[[],["sspperiphid2",3]]],[11,"default","","",492,[[],["ssppcellid2",3]]],[11,"default","","",493,[[],["ssppcellid0",3]]],[11,"default","","",494,[[],["ssppcellid3",3]]],[11,"default","","",495,[[],["sspperiphid1",3]]],[11,"default","","",496,[[],["ssppcellid1",3]]],[11,"default","","",497,[[],["sspperiphid3",3]]],[11,"default","","",498,[[],["sspcpsr",3]]],[11,"default","","",499,[[],["sspdr",3]]],[11,"default","","",500,[[],["sspsr",3]]],[11,"default","","",501,[[],["sspimsc",3]]],[11,"default","","",502,[[],["sspmis",3]]],[11,"default","rp2040_pac2::syscfg::regs","",504,[[],["mempowerdown",3]]],[11,"default","","",505,[[],["procinsyncbypass",3]]],[11,"default","","",506,[[],["procconfig",3]]],[11,"default","","",507,[[],["dbgforce",3]]],[11,"default","","",508,[[],["procinsyncbypasshi",3]]],[11,"default","rp2040_pac2::sysinfo::regs","",510,[[],["chipid",3]]],[11,"default","","",511,[[],["platform",3]]],[11,"default","rp2040_pac2::tbman::regs","",513,[[],["platform",3]]],[11,"default","rp2040_pac2::timer::regs","",515,[[],["armed",3]]],[11,"default","","",516,[[],["intr",3]]],[11,"default","","",517,[[],["intf",3]]],[11,"default","","",518,[[],["ints",3]]],[11,"default","","",519,[[],["inte",3]]],[11,"default","","",520,[[],["pause",3]]],[11,"default","","",521,[[],["dbgpause",3]]],[11,"default","rp2040_pac2::uart::regs","",523,[[],["uartperiphid3",3]]],[11,"default","","",524,[[],["uartris",3]]],[11,"default","","",525,[[],["uartperiphid2",3]]],[11,"default","","",526,[[],["uartmis",3]]],[11,"default","","",527,[[],["uartfbrd",3]]],[11,"default","","",528,[[],["uartibrd",3]]],[11,"default","","",529,[[],["uartfr",3]]],[11,"default","","",530,[[],["uartifls",3]]],[11,"default","","",531,[[],["uartrsr",3]]],[11,"default","","",532,[[],["uartcr",3]]],[11,"default","","",533,[[],["uartilpr",3]]],[11,"default","","",534,[[],["uartimsc",3]]],[11,"default","","",535,[[],["uartperiphid0",3]]],[11,"default","","",536,[[],["uartperiphid1",3]]],[11,"default","","",537,[[],["uartpcellid1",3]]],[11,"default","","",538,[[],["uartpcellid3",3]]],[11,"default","","",539,[[],["uartdr",3]]],[11,"default","","",540,[[],["uarticr",3]]],[11,"default","","",541,[[],["uartlcrh",3]]],[11,"default","","",542,[[],["uartdmacr",3]]],[11,"default","","",543,[[],["uartpcellid0",3]]],[11,"default","","",544,[[],["uartpcellid2",3]]],[11,"default","rp2040_pac2::usbctrl_regs::regs","",546,[[],["usbpwr",3]]],[11,"default","","",547,[[],["addrendp11",3]]],[11,"default","","",548,[[],["nakpoll",3]]],[11,"default","","",549,[[],["siestatus",3]]],[11,"default","","",550,[[],["addrendp1",3]]],[11,"default","","",551,[[],["usbphydirectoverride",3]]],[11,"default","","",552,[[],["addrendp7",3]]],[11,"default","","",553,[[],["addrendp15",3]]],[11,"default","","",554,[[],["epabort",3]]],[11,"default","","",555,[[],["addrendp3",3]]],[11,"default","","",556,[[],["mainctrl",3]]],[11,"default","","",557,[[],["usbmuxing",3]]],[11,"default","","",558,[[],["addrendp14",3]]],[11,"default","","",559,[[],["addrendp8",3]]],[11,"default","","",560,[[],["sofwr",3]]],[11,"default","","",561,[[],["usbphydirect",3]]],[11,"default","","",562,[[],["addrendp9",3]]],[11,"default","","",563,[[],["addrendp10",3]]],[11,"default","","",564,[[],["intf",3]]],[11,"default","","",565,[[],["addrendp2",3]]],[11,"default","","",566,[[],["addrendp5",3]]],[11,"default","","",567,[[],["siectrl",3]]],[11,"default","","",568,[[],["epstatusstallnak",3]]],[11,"default","","",569,[[],["addrendp",3]]],[11,"default","","",570,[[],["addrendp13",3]]],[11,"default","","",571,[[],["ints",3]]],[11,"default","","",572,[[],["buffcpushouldhandle",3]]],[11,"default","","",573,[[],["usbphytrim",3]]],[11,"default","","",574,[[],["addrendp4",3]]],[11,"default","","",575,[[],["intepctrl",3]]],[11,"default","","",576,[[],["sofrd",3]]],[11,"default","","",577,[[],["buffstatus",3]]],[11,"default","","",578,[[],["intr",3]]],[11,"default","","",579,[[],["epstallarm",3]]],[11,"default","","",580,[[],["addrendp6",3]]],[11,"default","","",581,[[],["addrendp12",3]]],[11,"default","","",582,[[],["epabortdone",3]]],[11,"default","","",583,[[],["inte",3]]],[11,"default","rp2040_pac2::vreg_and_chip_reset::regs","",585,[[],["chipreset",3]]],[11,"default","","",586,[[],["bod",3]]],[11,"default","","",587,[[],["vreg",3]]],[11,"default","rp2040_pac2::watchdog::regs","",589,[[],["ctrl",3]]],[11,"default","","",590,[[],["tick",3]]],[11,"default","","",591,[[],["load",3]]],[11,"default","","",592,[[],["reason",3]]],[11,"default","rp2040_pac2::xip_ctrl::regs","",594,[[],["streamctr",3]]],[11,"default","","",595,[[],["flush",3]]],[11,"default","","",596,[[],["stat",3]]],[11,"default","","",597,[[],["streamaddr",3]]],[11,"default","","",598,[[],["ctrl",3]]],[11,"default","rp2040_pac2::xip_ssi::regs","",600,[[],["ser",3]]],[11,"default","","",601,[[],["rxflr",3]]],[11,"default","","",602,[[],["dmardlr",3]]],[11,"default","","",603,[[],["sr",3]]],[11,"default","","",604,[[],["icr",3]]],[11,"default","","",605,[[],["rxftlr",3]]],[11,"default","","",606,[[],["imr",3]]],[11,"default","","",607,[[],["ssienr",3]]],[11,"default","","",608,[[],["txoicr",3]]],[11,"default","","",609,[[],["baudr",3]]],[11,"default","","",610,[[],["msticr",3]]],[11,"default","","",611,[[],["dmatdlr",3]]],[11,"default","","",612,[[],["rxoicr",3]]],[11,"default","","",613,[[],["dmacr",3]]],[11,"default","","",614,[[],["txflr",3]]],[11,"default","","",615,[[],["ctrlr1",3]]],[11,"default","","",616,[[],["ctrlr0",3]]],[11,"default","","",617,[[],["spictrlr0",3]]],[11,"default","","",618,[[],["rxsampledly",3]]],[11,"default","","",619,[[],["txftlr",3]]],[11,"default","","",620,[[],["mwcr",3]]],[11,"default","","",621,[[],["rxuicr",3]]],[11,"default","","",622,[[],["txddriveedge",3]]],[11,"default","","",623,[[],["risr",3]]],[11,"default","","",624,[[],["isr",3]]],[11,"default","rp2040_pac2::xosc::regs","",630,[[],["count",3]]],[11,"default","","",631,[[],["status",3]]],[11,"default","","",632,[[],["startup",3]]],[11,"default","","",633,[[],["ctrl",3]]],[11,"number","rp2040_pac2","",638,[[],["u16",15]]]],"p":[[3,"Ints"],[3,"Div"],[3,"Inte"],[3,"Fifo"],[3,"Intr"],[3,"Fcs"],[3,"Intf"],[3,"Result"],[3,"Cs"],[3,"Adc"],[3,"Perfctr3"],[3,"Perfctr2"],[3,"Perfctr0"],[3,"Perfsel0"],[3,"Perfsel2"],[3,"Perfctr1"],[3,"Perfsel3"],[3,"BusPriorityAck"],[3,"Perfsel1"],[3,"BusPriority"],[3,"Busctrl"],[3,"ClkSysDiv"],[3,"Fc0MaxKhz"],[3,"ClkGpout1Ctrl"],[3,"Fc0Src"],[3,"Intr"],[3,"ClkGpout1Div"],[3,"ClkGpout3Ctrl"],[3,"ClkUsbDiv"],[3,"Fc0Status"],[3,"WakeEn0"],[3,"ClkRtcDiv"],[3,"SleepEn0"],[3,"Enabled1"],[3,"ClkAdcCtrl"],[3,"ClkRtcCtrl"],[3,"ClkSysCtrl"],[3,"ClkRefDiv"],[3,"ClkGpout0Div"],[3,"ClkUsbCtrl"],[3,"ClkGpout2Div"],[3,"Fc0Interval"],[3,"WakeEn1"],[3,"ClkAdcDiv"],[3,"Intf"],[3,"ClkGpout3Div"],[3,"ClkGpout0Ctrl"],[3,"ClkPeriCtrl"],[3,"Fc0Result"],[3,"ClkSysResusStatus"],[3,"Fc0MinKhz"],[3,"ClkRefCtrl"],[3,"ClkSysResusCtrl"],[3,"SleepEn1"],[3,"Inte"],[3,"ClkGpout2Ctrl"],[3,"Enabled0"],[3,"Fc0RefKhz"],[3,"Ints"],[3,"Fc0Delay"],[3,"ClkSysCtrlSrc"],[3,"ClkGpout0CtrlAuxsrc"],[3,"Fc0Src"],[3,"ClkGpout2CtrlAuxsrc"],[3,"ClkAdcCtrlAuxsrc"],[3,"ClkPeriCtrlAuxsrc"],[3,"ClkUsbCtrlAuxsrc"],[3,"ClkRefCtrlSrc"],[3,"ClkRtcCtrlAuxsrc"],[3,"ClkSysCtrlAuxsrc"],[3,"ClkGpout3CtrlAuxsrc"],[3,"ClkGpout1CtrlAuxsrc"],[3,"ClkRefCtrlAuxsrc"],[3,"Clocks"],[3,"FifoLevels"],[3,"Inte0"],[3,"Intf0"],[3,"Ints0"],[3,"Intf1"],[3,"Ints1"],[3,"Inte1"],[3,"Intr"],[3,"NChannels"],[3,"DbgCtdreq"],[3,"Timer"],[3,"CtrlTrig"],[3,"ChanAbort"],[3,"SniffCtrl"],[3,"MultiChanTrigger"],[3,"TreqSel"],[3,"SniffCtrlCalc"],[3,"DataSize"],[3,"Dma"],[3,"Channel"],[3,"Reg"],[3,"IcSar"],[3,"IcAckGeneralCall"],[3,"IcDmaCr"],[3,"IcClrRdReq"],[3,"IcRawIntrStat"],[3,"IcFsSpklen"],[3,"IcCon"],[3,"IcStatus"],[3,"IcIntrMask"],[3,"IcClrRxUnder"],[3,"IcClrStartDet"],[3,"IcClrRestartDet"],[3,"IcClrTxAbrt"],[3,"IcTar"],[3,"IcClrGenCall"],[3,"IcClrRxDone"],[3,"IcSlvDataNackOnly"],[3,"IcEnableStatus"],[3,"IcSsSclHcnt"],[3,"IcRxflr"],[3,"IcDmaRdlr"],[3,"IcClrActivity"],[3,"IcFsSclHcnt"],[3,"IcSdaSetup"],[3,"IcSsSclLcnt"],[3,"IcSdaHold"],[3,"IcClrTxOver"],[3,"IcClrStopDet"],[3,"IcTxTl"],[3,"IcEnable"],[3,"IcCompParam1"],[3,"IcClrIntr"],[3,"IcFsSclLcnt"],[3,"IcTxAbrtSource"],[3,"IcDmaTdlr"],[3,"IcDataCmd"],[3,"IcTxflr"],[3,"IcIntrStat"],[3,"IcRxTl"],[3,"IcClrRxOver"],[3,"IcTxAbrtSourceAbrtHsNorstrt"],[3,"IcRawIntrStatRdReq"],[3,"IcSlvDataNackOnlyNack"],[3,"IcStatusTfnf"],[3,"IcIntrMaskMStopDet"],[3,"IcRawIntrStatGenCall"],[3,"IcRawIntrStatTxEmpty"],[3,"IcIntrStatRTxAbrt"],[3,"IcIntrStatRActivity"],[3,"IcIntrMaskMTxAbrt"],[3,"IcTxAbrtSourceAbrt10bRdNorstrt"],[3,"IcTxAbrtSourceAbrtHsAckdet"],[3,"IcTxAbrtSourceArbLost"],[3,"IcEnableAbort"],[3,"IcIntrStatRStopDet"],[3,"IcTxAbrtSourceAbrt10addr2Noack"],[3,"IcIntrStatRRxDone"],[3,"IcConRxFifoFullHldCtrl"],[3,"IcIntrMaskMRdReq"],[3,"IcTxAbrtSourceAbrtMasterDis"],[3,"IcStatusRfne"],[3,"IcTarGcOrStart"],[3,"IcIntrMaskMActivity"],[3,"IcConMasterMode"],[3,"IcDataCmdFirstDataByte"],[3,"IcTxAbrtSourceAbrtUserAbrt"],[3,"IcRawIntrStatActivity"],[3,"IcConIc10bitaddrSlave"],[3,"IcIntrStatRGenCall"],[3,"IcDataCmdRestart"],[3,"IcIntrMaskMMasterOnHoldReadOnly"],[3,"IcAckGeneralCallAckGenCall"],[3,"IcEnableStatusSlvRxDataLost"],[3,"IcTxAbrtSourceAbrtTxdataNoack"],[3,"IcRawIntrStatTxOver"],[3,"IcStatusActivity"],[3,"IcConSpeed"],[3,"IcDataCmdStop"],[3,"IcIntrStatRStartDet"],[3,"IcIntrStatRRdReq"],[3,"IcIntrStatRTxEmpty"],[3,"IcRawIntrStatStopDet"],[3,"IcRawIntrStatRxFull"],[3,"IcStatusMstActivity"],[3,"IcIntrStatRRxFull"],[3,"IcEnableStatusSlvDisabledWhileBusy"],[3,"IcIntrMaskMTxEmpty"],[3,"IcTxAbrtSourceAbrtSbyteNorstrt"],[3,"IcRawIntrStatRestartDet"],[3,"IcRawIntrStatStartDet"],[3,"IcTxAbrtSourceAbrtGcallRead"],[3,"IcTxAbrtSourceAbrtGcallNoack"],[3,"IcRawIntrStatTxAbrt"],[3,"IcIntrStatRRestartDet"],[3,"IcTxAbrtSourceAbrt7bAddrNoack"],[3,"IcStatusTfe"],[3,"IcEnableStatusIcEn"],[3,"IcConTxEmptyCtrl"],[3,"IcTxAbrtSourceAbrtSlvrdIntx"],[3,"IcIntrMaskMGenCall"],[3,"IcIntrStatRRxUnder"],[3,"IcConIc10bitaddrMaster"],[3,"IcRawIntrStatRxUnder"],[3,"IcTxAbrtSourceAbrt10addr1Noack"],[3,"IcIntrStatRRxOver"],[3,"IcIntrMaskMRxOver"],[3,"IcEnableTxCmdBlock"],[3,"IcDmaCrTdmae"],[3,"IcConIcSlaveDisable"],[3,"IcEnableEnable"],[3,"IcDataCmdCmd"],[3,"IcIntrMaskMRestartDet"],[3,"IcTxAbrtSourceAbrtSlvArblost"],[3,"IcIntrMaskMStartDet"],[3,"IcIntrMaskMRxUnder"],[3,"IcIntrMaskMRxFull"],[3,"IcTxAbrtSourceAbrtSlvflushTxfifo"],[3,"IcIntrMaskMTxOver"],[3,"IcStatusSlvActivity"],[3,"IcIntrStatRTxOver"],[3,"IcConIcRestartEn"],[3,"IcTarSpecial"],[3,"IcDmaCrRdmae"],[3,"IcIntrStatRMasterOnHold"],[3,"IcStatusRff"],[3,"IcConStopDetIfaddressed"],[3,"IcTxAbrtSourceAbrtSbyteAckdet"],[3,"IcIntrMaskMRxDone"],[3,"IcRawIntrStatRxOver"],[3,"IcRawIntrStatMasterOnHold"],[3,"IcRawIntrStatRxDone"],[3,"I2c"],[3,"GpioStatus"],[3,"Int"],[3,"GpioCtrl"],[3,"Gpio23CtrlFuncsel"],[3,"Gpio6CtrlFuncsel"],[3,"Gpio24CtrlFuncsel"],[3,"Gpio7CtrlFuncsel"],[3,"Gpio29CtrlFuncsel"],[3,"Gpio0CtrlFuncsel"],[3,"Gpio26CtrlFuncsel"],[3,"Gpio4CtrlFuncsel"],[3,"Gpio28CtrlFuncsel"],[3,"Gpio15CtrlFuncsel"],[3,"Oeover"],[3,"Gpio20CtrlFuncsel"],[3,"Gpio12CtrlFuncsel"],[3,"Gpio1CtrlFuncsel"],[3,"Gpio8CtrlFuncsel"],[3,"Inover"],[3,"Gpio3CtrlFuncsel"],[3,"Gpio5CtrlFuncsel"],[3,"Gpio13CtrlFuncsel"],[3,"Gpio22CtrlFuncsel"],[3,"Gpio17CtrlFuncsel"],[3,"Outover"],[3,"Gpio27CtrlFuncsel"],[3,"Gpio14CtrlFuncsel"],[3,"Gpio25CtrlFuncsel"],[3,"Gpio19CtrlFuncsel"],[3,"Irqover"],[3,"Gpio9CtrlFuncsel"],[3,"Gpio16CtrlFuncsel"],[3,"Gpio21CtrlFuncsel"],[3,"Gpio11CtrlFuncsel"],[3,"Gpio2CtrlFuncsel"],[3,"Gpio18CtrlFuncsel"],[3,"Gpio10CtrlFuncsel"],[3,"Int"],[3,"Io"],[3,"Gpio"],[3,"Intr"],[3,"GpioQspiSclkStatus"],[3,"GpioQspiSd3Status"],[3,"GpioQspiSsCtrl"],[3,"GpioQspiSclkCtrl"],[3,"Proc1Intf"],[3,"Proc1Inte"],[3,"Proc0Ints"],[3,"GpioQspiSd0Status"],[3,"DormantWakeInte"],[3,"GpioQspiSd3Ctrl"],[3,"Proc0Inte"],[3,"GpioQspiSd1Ctrl"],[3,"GpioQspiSd1Status"],[3,"Proc1Ints"],[3,"DormantWakeInts"],[3,"Proc0Intf"],[3,"GpioQspiSd2Status"],[3,"GpioQspiSsStatus"],[3,"GpioQspiSd0Ctrl"],[3,"DormantWakeIntf"],[3,"GpioQspiSd2Ctrl"],[3,"GpioQspiSsCtrlOutover"],[3,"GpioQspiSd3CtrlFuncsel"],[3,"GpioQspiSd2CtrlIrqover"],[3,"GpioQspiSd1CtrlFuncsel"],[3,"GpioQspiSd2CtrlOeover"],[3,"GpioQspiSd3CtrlIrqover"],[3,"GpioQspiSclkCtrlOutover"],[3,"GpioQspiSd0CtrlOeover"],[3,"GpioQspiSsCtrlOeover"],[3,"GpioQspiSsCtrlFuncsel"],[3,"GpioQspiSd2CtrlOutover"],[3,"GpioQspiSsCtrlInover"],[3,"GpioQspiSd1CtrlOutover"],[3,"GpioQspiSd3CtrlOutover"],[3,"GpioQspiSclkCtrlIrqover"],[3,"GpioQspiSsCtrlIrqover"],[3,"GpioQspiSclkCtrlInover"],[3,"GpioQspiSclkCtrlOeover"],[3,"GpioQspiSd2CtrlFuncsel"],[3,"GpioQspiSd0CtrlFuncsel"],[3,"GpioQspiSd0CtrlOutover"],[3,"GpioQspiSclkCtrlFuncsel"],[3,"GpioQspiSd2CtrlInover"],[3,"GpioQspiSd1CtrlIrqover"],[3,"GpioQspiSd0CtrlIrqover"],[3,"GpioQspiSd3CtrlOeover"],[3,"GpioQspiSd1CtrlInover"],[3,"GpioQspiSd1CtrlOeover"],[3,"GpioQspiSd3CtrlInover"],[3,"GpioQspiSd0CtrlInover"],[3,"VoltageSelect"],[3,"GpioCtrl"],[3,"Drive"],[3,"VoltageSelect"],[3,"Pads"],[3,"GpioQspiSd1"],[3,"GpioQspiSd3"],[3,"GpioQspiSclk"],[3,"GpioQspiSd0"],[3,"GpioQspiSd2"],[3,"GpioQspiSs"],[3,"VoltageSelect"],[3,"VoltageSelect"],[3,"GpioQspiSd2Drive"],[3,"GpioQspiSd0Drive"],[3,"GpioQspiSsDrive"],[3,"GpioQspiSclkDrive"],[3,"GpioQspiSd1Drive"],[3,"GpioQspiSd3Drive"],[3,"SmExecctrl"],[3,"Fdebug"],[3,"IrqForce"],[3,"Irq"],[3,"Intr"],[3,"Flevel"],[3,"SmClkdiv"],[3,"DbgCfginfo"],[3,"SmAddr"],[3,"SmShiftctrl"],[3,"Ctrl"],[3,"SmPinctrl"],[3,"InstrMem"],[3,"Fstat"],[3,"SmInstr"],[3,"SmExecctrlStatusSel"],[3,"Irq"],[3,"StateMachine"],[3,"Pio"],[3,"Cs"],[3,"FbdivInt"],[3,"Pwr"],[3,"Prim"],[3,"Pll"],[3,"NvicIpr5"],[3,"Icsr"],[3,"MpuRbar"],[3,"Scr"],[3,"NvicIpr1"],[3,"SystRvr"],[3,"Shcsr"],[3,"Shpr2"],[3,"NvicIpr4"],[3,"NvicIpr6"],[3,"NvicIpr2"],[3,"Aircr"],[3,"SystCsr"],[3,"SystCalib"],[3,"MpuType"],[3,"NvicIpr7"],[3,"NvicIpr3"],[3,"MpuRasr"],[3,"MpuCtrl"],[3,"Cpuid"],[3,"Vtor"],[3,"NvicIpr0"],[3,"Shpr3"],[3,"MpuRnr"],[3,"Ccr"],[3,"SystCvr"],[3,"Ppb"],[3,"FrceOn"],[3,"Wdsel"],[3,"FrceOff"],[3,"Done"],[3,"Psm"],[3,"Ch2Csr"],[3,"En"],[3,"Ch7Csr"],[3,"Ch7Ctr"],[3,"Intr"],[3,"Ch1Ctr"],[3,"Ch4Cc"],[3,"Ch7Top"],[3,"Ch6Csr"],[3,"Ch4Div"],[3,"Ch1Div"],[3,"Inte"],[3,"Ch2Top"],[3,"Ch4Ctr"],[3,"Ch5Ctr"],[3,"Ch2Div"],[3,"Ch4Csr"],[3,"Ch1Csr"],[3,"Ints"],[3,"Ch7Div"],[3,"Ch5Cc"],[3,"Ch5Div"],[3,"Ch0Div"],[3,"Ch2Ctr"],[3,"Ch0Cc"],[3,"Ch0Csr"],[3,"Ch6Div"],[3,"Intf"],[3,"Ch0Top"],[3,"Ch6Cc"],[3,"Ch6Top"],[3,"Ch4Top"],[3,"Ch0Ctr"],[3,"Ch3Csr"],[3,"Ch3Cc"],[3,"Ch3Ctr"],[3,"Ch5Top"],[3,"Ch6Ctr"],[3,"Ch1Cc"],[3,"Ch3Top"],[3,"Ch2Cc"],[3,"Ch3Div"],[3,"Ch5Csr"],[3,"Ch1Top"],[3,"Ch7Cc"],[3,"Divmode"],[3,"Pwm"],[3,"Peripherals"],[3,"Wdsel"],[3,"Resets"],[3,"Div"],[3,"Freqa"],[3,"Freqb"],[3,"Ctrl"],[3,"Count"],[3,"Status"],[3,"Phase"],[3,"Randombit"],[3,"CtrlEnable"],[3,"Passwd"],[3,"CtrlFreqRange"],[3,"Div"],[3,"Rosc"],[3,"Ctrl"],[3,"ClkdivM1"],[3,"Rtc0"],[3,"IrqSetup1"],[3,"Rtc1"],[3,"Inte"],[3,"Ints"],[3,"Intf"],[3,"Setup1"],[3,"IrqSetup0"],[3,"Setup0"],[3,"Intr"],[3,"Rtc"],[3,"Interp0CtrlLane0"],[3,"Interp1CtrlLane1"],[3,"Interp0Accum0Add"],[3,"Interp0Accum1Add"],[3,"DivCsr"],[3,"Interp1Accum1Add"],[3,"Interp1Accum0Add"],[3,"FifoSt"],[3,"Interp1CtrlLane0"],[3,"Interp0CtrlLane1"],[3,"Fifo"],[3,"Gpio"],[3,"Interp"],[3,"Div"],[3,"Sio"],[3,"Sspris"],[3,"Sspperiphid0"],[3,"Sspicr"],[3,"Sspcr0"],[3,"Sspcr1"],[3,"Sspdmacr"],[3,"Sspperiphid2"],[3,"Ssppcellid2"],[3,"Ssppcellid0"],[3,"Ssppcellid3"],[3,"Sspperiphid1"],[3,"Ssppcellid1"],[3,"Sspperiphid3"],[3,"Sspcpsr"],[3,"Sspdr"],[3,"Sspsr"],[3,"Sspimsc"],[3,"Sspmis"],[3,"Spi"],[3,"Mempowerdown"],[3,"ProcInSyncBypass"],[3,"ProcConfig"],[3,"Dbgforce"],[3,"ProcInSyncBypassHi"],[3,"Syscfg"],[3,"ChipId"],[3,"Platform"],[3,"Sysinfo"],[3,"Platform"],[3,"Tbman"],[3,"Armed"],[3,"Intr"],[3,"Intf"],[3,"Ints"],[3,"Inte"],[3,"Pause"],[3,"Dbgpause"],[3,"Timer"],[3,"Uartperiphid3"],[3,"Uartris"],[3,"Uartperiphid2"],[3,"Uartmis"],[3,"Uartfbrd"],[3,"Uartibrd"],[3,"Uartfr"],[3,"Uartifls"],[3,"Uartrsr"],[3,"Uartcr"],[3,"Uartilpr"],[3,"Uartimsc"],[3,"Uartperiphid0"],[3,"Uartperiphid1"],[3,"Uartpcellid1"],[3,"Uartpcellid3"],[3,"Uartdr"],[3,"Uarticr"],[3,"UartlcrH"],[3,"Uartdmacr"],[3,"Uartpcellid0"],[3,"Uartpcellid2"],[3,"Uart"],[3,"UsbPwr"],[3,"AddrEndp11"],[3,"NakPoll"],[3,"SieStatus"],[3,"AddrEndp1"],[3,"UsbphyDirectOverride"],[3,"AddrEndp7"],[3,"AddrEndp15"],[3,"EpAbort"],[3,"AddrEndp3"],[3,"MainCtrl"],[3,"UsbMuxing"],[3,"AddrEndp14"],[3,"AddrEndp8"],[3,"SofWr"],[3,"UsbphyDirect"],[3,"AddrEndp9"],[3,"AddrEndp10"],[3,"Intf"],[3,"AddrEndp2"],[3,"AddrEndp5"],[3,"SieCtrl"],[3,"EpStatusStallNak"],[3,"AddrEndp"],[3,"AddrEndp13"],[3,"Ints"],[3,"BuffCpuShouldHandle"],[3,"UsbphyTrim"],[3,"AddrEndp4"],[3,"IntEpCtrl"],[3,"SofRd"],[3,"BuffStatus"],[3,"Intr"],[3,"EpStallArm"],[3,"AddrEndp6"],[3,"AddrEndp12"],[3,"EpAbortDone"],[3,"Inte"],[3,"UsbctrlRegs"],[3,"ChipReset"],[3,"Bod"],[3,"Vreg"],[3,"VregAndChipReset"],[3,"Ctrl"],[3,"Tick"],[3,"Load"],[3,"Reason"],[3,"Watchdog"],[3,"StreamCtr"],[3,"Flush"],[3,"Stat"],[3,"StreamAddr"],[3,"Ctrl"],[3,"XipCtrl"],[3,"Ser"],[3,"Rxflr"],[3,"Dmardlr"],[3,"Sr"],[3,"Icr"],[3,"Rxftlr"],[3,"Imr"],[3,"Ssienr"],[3,"Txoicr"],[3,"Baudr"],[3,"Msticr"],[3,"Dmatdlr"],[3,"Rxoicr"],[3,"Dmacr"],[3,"Txflr"],[3,"Ctrlr1"],[3,"Ctrlr0"],[3,"SpiCtrlr0"],[3,"RxSampleDly"],[3,"Txftlr"],[3,"Mwcr"],[3,"Rxuicr"],[3,"TxdDriveEdge"],[3,"Risr"],[3,"Isr"],[3,"Ctrlr0Tmod"],[3,"SpiCtrlr0InstL"],[3,"SpiCtrlr0TransType"],[3,"Ctrlr0SpiFrf"],[3,"XipSsi"],[3,"Count"],[3,"Status"],[3,"Startup"],[3,"Ctrl"],[3,"StatusFreqRange"],[3,"CtrlFreqRange"],[3,"CtrlEnable"],[3,"Xosc"],[4,"Interrupt"],[3,"RW"],[3,"R"],[3,"W"]]},\
"vcell":{"doc":"Just like <code>Cell</code> but with volatile read / write operations","i":[[3,"VolatileCell","vcell","Just like <code>Cell</code> but with volatile read / write operations",null,null],[11,"new","","Creates a new <code>VolatileCell</code> containing the given value",0,[[]]],[11,"get","","Returns a copy of the contained value",0,[[]]],[11,"set","","Sets the contained value",0,[[]]],[11,"as_ptr","","Returns a raw pointer to the underlying data in the cell",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]]],"p":[[3,"VolatileCell"]]},\
"void":{"doc":"VoidThe uninhabited void type for use in statically …","i":[[4,"Void","void","The empty type for cases which can’t occur.",null,null],[5,"unreachable","","A safe version of <code>intrinsincs::unreachable</code>.",null,[[["void",4]]]],[8,"ResultVoidExt","","Extensions to <code>Result<T, Void></code>",null,null],[10,"void_unwrap","","Get the value out of a wrapper.",0,[[]]],[8,"ResultVoidErrExt","","Extensions to <code>Result<Void, E></code>",null,null],[10,"void_unwrap_err","","Get the error out of a wrapper.",1,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"eq","","",2,[[],["bool",15]]],[11,"partial_cmp","","",2,[[],[["ordering",4],["option",4]]]],[11,"clone","","",2,[[],["void",4]]]],"p":[[8,"ResultVoidExt"],[8,"ResultVoidErrExt"],[4,"Void"]]},\
"volatile_register":{"doc":"Volatile access to memory mapped hardware registers","i":[[3,"RO","volatile_register","Read-Only register",null,null],[11,"read","","Reads the value of the register",0,[[]]],[3,"RW","","Read-Write register",null,null],[11,"modify","","Performs a read-modify-write operation",1,[[]]],[11,"read","","Reads the value of the register",1,[[]]],[11,"write","","Writes a <code>value</code> into the register",1,[[]]],[3,"WO","","Write-Only register",null,null],[11,"write","","Writes <code>value</code> into the register",2,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]]],"p":[[3,"RO"],[3,"RW"],[3,"WO"]]}\
}');
initSearch(searchIndex);