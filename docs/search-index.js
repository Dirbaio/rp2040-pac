var searchIndex = JSON.parse('{\
"bare_metal":{"doc":"Abstractions common to bare metal systems","i":[[3,"Peripheral","bare_metal","A peripheral",null,null],[11,"new","","Creates a new peripheral",0,[[]]],[11,"borrow","","Borrows the peripheral for the duration of a critical …",0,[[["criticalsection",3]]]],[11,"get","","Returns a pointer to the register block",0,[[]]],[3,"CriticalSection","","Critical section token",null,null],[11,"new","","Creates a critical section token",1,[[]]],[3,"Mutex","","A \\\"mutex\\\" based on critical sections",null,null],[11,"new","","Creates a new mutex",2,[[]]],[11,"borrow","","Borrows the data for the duration of the critical section",2,[[["criticalsection",3]]]],[8,"Nr","","Interrupt number",null,null],[10,"nr","","Returns the number associated with an interrupt",3,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"Peripheral"],[3,"CriticalSection"],[3,"Mutex"],[8,"Nr"]]},\
"bitfield":{"doc":"This crate provides macros to generate bitfield-like …","i":[[8,"BitRange","bitfield","A trait to get or set ranges of bits.",null,null],[10,"bit_range","","Get a range of bits.",0,[[]]],[10,"set_bit_range","","Set a range of bits.",0,[[]]],[8,"Bit","","A trait to get or set a single bit.",null,null],[10,"bit","","Get a single bit.",1,[[]]],[10,"set_bit","","Set a single bit.",1,[[]]],[14,"bitfield_fields","","Declares the fields of struct.",null,null],[14,"bitfield_debug","","Generates a <code>fmt::Debug</code> implementation.",null,null],[14,"bitfield_bitrange","","Implements <code>BitRange</code> for a tuple struct (or \\\"newtype\\\").",null,null],[14,"bitfield","","Combines <code>bitfield_bitrange</code> and <code>bitfield_fields</code>.",null,null]],"p":[[8,"BitRange"],[8,"Bit"]]},\
"cortex_m":{"doc":"Low level access to Cortex-M processors","i":[[0,"asm","cortex_m","Miscellaneous assembly instructions",null,null],[5,"bkpt","cortex_m::asm","Puts the processor in Debug state. Debuggers can pick …",null,[[]]],[5,"delay","","Blocks the program for <em>at least</em> <code>cycles</code> CPU cycles.",null,[[]]],[5,"nop","","A no-operation. Useful to prevent delay loops from being …",null,[[]]],[5,"udf","","Generate an Undefined Instruction exception.",null,[[]]],[5,"wfe","","Wait For Event",null,[[]]],[5,"wfi","","Wait For Interrupt",null,[[]]],[5,"sev","","Send Event",null,[[]]],[5,"isb","","Instruction Synchronization Barrier",null,[[]]],[5,"dsb","","Data Synchronization Barrier",null,[[]]],[5,"dmb","","Data Memory Barrier",null,[[]]],[5,"semihosting_syscall","","Semihosting syscall.",null,[[]]],[5,"bootstrap","","Bootstrap.",null,[[]]],[5,"bootload","","Bootload.",null,[[]]],[0,"delay","cortex_m","A delay driver based on SysTick.",null,null],[3,"Delay","cortex_m::delay","System timer (SysTick) as a delay provider.",null,null],[11,"new","","Configures the system timer (SysTick) as a delay provider.",0,[[["syst",3]]]],[11,"free","","Releases the system timer (SysTick) resource.",0,[[],["syst",3]]],[0,"interrupt","cortex_m","Interrupts",null,null],[3,"CriticalSection","cortex_m::interrupt","Critical section token",null,null],[3,"Mutex","","A \\\"mutex\\\" based on critical sections",null,null],[8,"Nr","","Interrupt number",null,null],[10,"nr","","Returns the number associated with an interrupt",1,[[]]],[8,"InterruptNumber","","Trait for enums of external interrupt numbers.",null,null],[10,"number","","Return the interrupt number associated with this variant.",2,[[]]],[5,"disable","","Disables all interrupts",null,[[]]],[5,"enable","","Enables all the interrupts",null,[[]]],[5,"free","","Execute closure <code>f</code> in an interrupt-free context.",null,[[]]],[0,"itm","cortex_m","Instrumentation Trace Macrocell",null,null],[3,"Aligned","cortex_m::itm","A wrapper type that aligns its contents on a 4-Byte …",null,null],[12,"0","","",3,null],[5,"write_all","","Writes <code>buffer</code> to an ITM port.",null,[[["stim",3]]]],[5,"write_aligned","","Writes a 4-byte aligned <code>buffer</code> to an ITM port.",null,[[["aligned",3],["stim",3]]]],[5,"write_fmt","","Writes <code>fmt::Arguments</code> to the ITM <code>port</code>",null,[[["arguments",3],["stim",3]]]],[5,"write_str","","Writes a string to the ITM <code>port</code>",null,[[["stim",3]]]],[0,"peripheral","cortex_m","Core peripherals.",null,null],[0,"cbp","cortex_m::peripheral","Cache and branch predictor maintenance operations",null,null],[3,"RegisterBlock","cortex_m::peripheral::cbp","Register block",null,null],[12,"iciallu","","I-cache invalidate all to PoU",4,null],[12,"icimvau","","I-cache invalidate by MVA to PoU",4,null],[12,"dcimvac","","D-cache invalidate by MVA to PoC",4,null],[12,"dcisw","","D-cache invalidate by set-way",4,null],[12,"dccmvau","","D-cache clean by MVA to PoU",4,null],[12,"dccmvac","","D-cache clean by MVA to PoC",4,null],[12,"dccsw","","D-cache clean by set-way",4,null],[12,"dccimvac","","D-cache clean and invalidate by MVA to PoC",4,null],[12,"dccisw","","D-cache clean and invalidate by set-way",4,null],[12,"bpiall","","Branch predictor invalidate all",4,null],[0,"cpuid","cortex_m::peripheral","CPUID",null,null],[3,"RegisterBlock","cortex_m::peripheral::cpuid","Register block",null,null],[12,"base","","CPUID base",5,null],[12,"pfr","","Processor Feature (not present on Cortex-M0 variants)",5,null],[12,"dfr","","Debug Feature (not present on Cortex-M0 variants)",5,null],[12,"afr","","Auxiliary Feature (not present on Cortex-M0 variants)",5,null],[12,"mmfr","","Memory Model Feature (not present on Cortex-M0 variants)",5,null],[12,"isar","","Instruction Set Attribute (not present on Cortex-M0 …",5,null],[12,"clidr","","Cache Level ID (only present on Cortex-M7)",5,null],[12,"ctr","","Cache Type (only present on Cortex-M7)",5,null],[12,"ccsidr","","Cache Size ID (only present on Cortex-M7)",5,null],[12,"csselr","","Cache Size Selection (only present on Cortex-M7)",5,null],[4,"CsselrCacheType","","Type of cache to select on CSSELR writes.",null,null],[13,"DataOrUnified","","Select DCache or unified cache",6,null],[13,"Instruction","","Select ICache",6,null],[0,"dcb","cortex_m::peripheral","Debug Control Block",null,null],[3,"RegisterBlock","cortex_m::peripheral::dcb","Register block",null,null],[12,"dhcsr","","Debug Halting Control and Status",7,null],[12,"dcrsr","","Debug Core Register Selector",7,null],[12,"dcrdr","","Debug Core Register Data",7,null],[12,"demcr","","Debug Exception and Monitor Control",7,null],[0,"dwt","cortex_m::peripheral","Data Watchpoint and Trace unit",null,null],[3,"RegisterBlock","cortex_m::peripheral::dwt","Register block",null,null],[12,"ctrl","","Control",8,null],[12,"cyccnt","","Cycle Count",8,null],[12,"cpicnt","","CPI Count",8,null],[12,"exccnt","","Exception Overhead Count",8,null],[12,"sleepcnt","","Sleep Count",8,null],[12,"lsucnt","","LSU Count",8,null],[12,"foldcnt","","Folded-instruction Count",8,null],[12,"pcsr","","Program Counter Sample",8,null],[12,"c","","Comparators",8,null],[12,"lar","","Lock Access",8,null],[12,"lsr","","Lock Status",8,null],[3,"Comparator","","Comparator",null,null],[12,"comp","","Comparator",9,null],[12,"mask","","Comparator Mask",9,null],[12,"function","","Comparator Function",9,null],[0,"fpb","cortex_m::peripheral","Flash Patch and Breakpoint unit",null,null],[3,"RegisterBlock","cortex_m::peripheral::fpb","Register block",null,null],[12,"ctrl","","Control",10,null],[12,"remap","","Remap",10,null],[12,"comp","","Comparator",10,null],[12,"lar","","Lock Access",10,null],[12,"lsr","","Lock Status",10,null],[0,"fpu","cortex_m::peripheral","Floating Point Unit",null,null],[3,"RegisterBlock","cortex_m::peripheral::fpu","Register block",null,null],[12,"fpccr","","Floating Point Context Control",11,null],[12,"fpcar","","Floating Point Context Address",11,null],[12,"fpdscr","","Floating Point Default Status Control",11,null],[12,"mvfr","","Media and FP Feature",11,null],[0,"icb","cortex_m::peripheral","Implementation Control Block",null,null],[3,"RegisterBlock","cortex_m::peripheral::icb","Register block",null,null],[12,"ictr","","Interrupt Controller Type Register",12,null],[12,"actlr","","Auxiliary Control Register",12,null],[0,"itm","cortex_m::peripheral","Instrumentation Trace Macrocell",null,null],[3,"RegisterBlock","cortex_m::peripheral::itm","Register block",null,null],[12,"stim","","Stimulus Port",13,null],[12,"ter","","Trace Enable",13,null],[12,"tpr","","Trace Privilege",13,null],[12,"tcr","","Trace Control",13,null],[12,"lar","","Lock Access",13,null],[12,"lsr","","Lock Status",13,null],[3,"Stim","","Stimulus Port",null,null],[11,"write_u8","","Writes an <code>u8</code> payload into the stimulus port",14,[[]]],[11,"write_u16","","Writes an <code>u16</code> payload into the stimulus port",14,[[]]],[11,"write_u32","","Writes an <code>u32</code> payload into the stimulus port",14,[[]]],[11,"is_fifo_ready","","Returns <code>true</code> if the stimulus port is ready to accept more …",14,[[]]],[0,"mpu","cortex_m::peripheral","Memory Protection Unit",null,null],[3,"RegisterBlock","cortex_m::peripheral::mpu","Register block for ARMv7-M",null,null],[12,"_type","","Type",15,null],[12,"ctrl","","Control",15,null],[12,"rnr","","Region Number",15,null],[12,"rbar","","Region Base Address",15,null],[12,"rasr","","Region Attribute and Size",15,null],[12,"rbar_a1","","Alias 1 of RBAR",15,null],[12,"rasr_a1","","Alias 1 of RASR",15,null],[12,"rbar_a2","","Alias 2 of RBAR",15,null],[12,"rasr_a2","","Alias 2 of RASR",15,null],[12,"rbar_a3","","Alias 3 of RBAR",15,null],[12,"rasr_a3","","Alias 3 of RASR",15,null],[0,"nvic","cortex_m::peripheral","Nested Vector Interrupt Controller",null,null],[3,"RegisterBlock","cortex_m::peripheral::nvic","Register block",null,null],[12,"iser","","Interrupt Set-Enable",16,null],[12,"icer","","Interrupt Clear-Enable",16,null],[12,"ispr","","Interrupt Set-Pending",16,null],[12,"icpr","","Interrupt Clear-Pending",16,null],[12,"iabr","","Interrupt Active Bit (not present on Cortex-M0 variants)",16,null],[12,"ipr","","Interrupt Priority",16,null],[12,"stir","","Software Trigger Interrupt",16,null],[0,"scb","cortex_m::peripheral","System Control Block",null,null],[3,"RegisterBlock","cortex_m::peripheral::scb","Register block",null,null],[12,"icsr","","Interrupt Control and State",17,null],[12,"vtor","","Vector Table Offset (not present on Cortex-M0 variants)",17,null],[12,"aircr","","Application Interrupt and Reset Control",17,null],[12,"scr","","System Control",17,null],[12,"ccr","","Configuration and Control",17,null],[12,"shpr","","System Handler Priority (word accessible only on …",17,null],[12,"shcsr","","System Handler Control and State",17,null],[12,"cfsr","","Configurable Fault Status (not present on Cortex-M0 …",17,null],[12,"hfsr","","HardFault Status (not present on Cortex-M0 variants)",17,null],[12,"dfsr","","Debug Fault Status (not present on Cortex-M0 variants)",17,null],[12,"mmfar","","MemManage Fault Address (not present on Cortex-M0 …",17,null],[12,"bfar","","BusFault Address (not present on Cortex-M0 variants)",17,null],[12,"afsr","","Auxiliary Fault Status (not present on Cortex-M0 variants)",17,null],[12,"cpacr","","Coprocessor Access Control (not present on Cortex-M0 …",17,null],[4,"Exception","","Processor core exceptions (internal interrupts)",null,null],[13,"NonMaskableInt","","Non maskable interrupt",18,null],[13,"HardFault","","Hard fault interrupt",18,null],[13,"MemoryManagement","","Memory management interrupt (not present on Cortex-M0 …",18,null],[13,"BusFault","","Bus fault interrupt (not present on Cortex-M0 variants)",18,null],[13,"UsageFault","","Usage fault interrupt (not present on Cortex-M0 variants)",18,null],[13,"SecureFault","","Secure fault interrupt (only on ARMv8-M)",18,null],[13,"SVCall","","SV call interrupt",18,null],[13,"DebugMonitor","","Debug monitor interrupt (not present on Cortex-M0 …",18,null],[13,"PendSV","","Pend SV interrupt",18,null],[13,"SysTick","","System Tick interrupt",18,null],[11,"irqn","","Returns the IRQ number of this <code>Exception</code>",18,[[]]],[4,"VectActive","","Active exception number",null,null],[13,"ThreadMode","","Thread mode",19,null],[13,"Exception","","Processor core exception (internal interrupts)",19,null],[13,"Interrupt","","Device specific exception (external interrupts)",19,null],[12,"irqn","cortex_m::peripheral::scb::VectActive","Interrupt number. This number is always within half open …",20,null],[11,"from","cortex_m::peripheral::scb","Converts a <code>byte</code> into <code>VectActive</code>",19,[[],["option",4]]],[4,"SystemHandler","","System handlers, exceptions with configurable priority",null,null],[13,"MemoryManagement","","Memory management interrupt (not present on Cortex-M0 …",21,null],[13,"BusFault","","Bus fault interrupt (not present on Cortex-M0 variants)",21,null],[13,"UsageFault","","Usage fault interrupt (not present on Cortex-M0 variants)",21,null],[13,"SecureFault","","Secure fault interrupt (only on ARMv8-M)",21,null],[13,"SVCall","","SV call interrupt",21,null],[13,"DebugMonitor","","Debug monitor interrupt (not present on Cortex-M0 …",21,null],[13,"PendSV","","Pend SV interrupt",21,null],[13,"SysTick","","System Tick interrupt",21,null],[0,"syst","cortex_m::peripheral","SysTick: System Timer",null,null],[3,"RegisterBlock","cortex_m::peripheral::syst","Register block",null,null],[12,"csr","","Control and Status",22,null],[12,"rvr","","Reload Value",22,null],[12,"cvr","","Current Value",22,null],[12,"calib","","Calibration Value",22,null],[4,"SystClkSource","","SysTick clock source",null,null],[13,"Core","","Core-provided clock",23,null],[13,"External","","External reference clock",23,null],[0,"tpiu","cortex_m::peripheral","Trace Port Interface Unit;",null,null],[3,"RegisterBlock","cortex_m::peripheral::tpiu","Register block",null,null],[12,"sspsr","","Supported Parallel Port Sizes",24,null],[12,"cspsr","","Current Parallel Port Size",24,null],[12,"acpr","","Asynchronous Clock Prescaler",24,null],[12,"sppr","","Selected Pin Control",24,null],[12,"ffcr","","Formatter and Flush Control",24,null],[12,"lar","","Lock Access",24,null],[12,"lsr","","Lock Status",24,null],[12,"_type","","TPIU Type",24,null],[3,"Peripherals","cortex_m::peripheral","Core peripherals",null,null],[12,"CBP","","Cache and branch predictor maintenance operations. Not …",25,null],[12,"CPUID","","CPUID",25,null],[12,"DCB","","Debug Control Block",25,null],[12,"DWT","","Data Watchpoint and Trace unit",25,null],[12,"FPB","","Flash Patch and Breakpoint unit. Not available on Armv6-M.",25,null],[12,"FPU","","Floating Point Unit.",25,null],[12,"ICB","","Implementation Control Block.",25,null],[12,"ITM","","Instrumentation Trace Macrocell. Not available on Armv6-M …",25,null],[12,"MPU","","Memory Protection Unit",25,null],[12,"NVIC","","Nested Vector Interrupt Controller",25,null],[12,"SAU","","Security Attribution Unit",25,null],[12,"SCB","","System Control Block",25,null],[12,"SYST","","SysTick: System Timer",25,null],[12,"TPIU","","Trace Port Interface Unit. Not available on Armv6-M.",25,null],[11,"take","","Returns all the core peripherals <em>once</em>",25,[[],["option",4]]],[11,"steal","","Unchecked version of <code>Peripherals::take</code>",25,[[]]],[3,"CBP","","Cache and branch predictor maintenance operations",null,null],[18,"PTR","","Pointer to the register block",26,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",26,[[]]],[3,"CPUID","","CPUID",null,null],[18,"PTR","","Pointer to the register block",27,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",27,[[]]],[3,"DCB","","Debug Control Block",null,null],[18,"PTR","","Pointer to the register block",28,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",28,[[]]],[3,"DWT","","Data Watchpoint and Trace unit",null,null],[18,"PTR","","Pointer to the register block",29,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",29,[[]]],[3,"FPB","","Flash Patch and Breakpoint unit",null,null],[18,"PTR","","Pointer to the register block",30,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",30,[[]]],[3,"FPU","","Floating Point Unit",null,null],[18,"PTR","","Pointer to the register block",31,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",31,[[]]],[3,"ICB","","Implementation Control Block.",null,null],[18,"PTR","","Pointer to the register block",32,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",32,[[]]],[3,"ITM","","Instrumentation Trace Macrocell",null,null],[18,"PTR","","Pointer to the register block",33,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",33,[[]]],[3,"MPU","","Memory Protection Unit",null,null],[18,"PTR","","Pointer to the register block",34,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",34,[[]]],[3,"NVIC","","Nested Vector Interrupt Controller",null,null],[18,"PTR","","Pointer to the register block",35,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",35,[[]]],[3,"SAU","","Security Attribution Unit",null,null],[3,"SCB","","System Control Block",null,null],[18,"PTR","","Pointer to the register block",36,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",36,[[]]],[3,"SYST","","SysTick: System Timer",null,null],[18,"PTR","","Pointer to the register block",37,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",37,[[]]],[3,"TPIU","","Trace Port Interface Unit",null,null],[18,"PTR","","Pointer to the register block",38,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",38,[[]]],[0,"prelude","cortex_m","Prelude",null,null],[8,"_embedded_hal_blocking_delay_DelayMs","cortex_m::prelude","Millisecond delay",null,null],[10,"delay_ms","","Pauses execution for <code>ms</code> milliseconds",39,[[]]],[8,"_embedded_hal_blocking_delay_DelayUs","","Microsecond delay",null,null],[10,"delay_us","","Pauses execution for <code>us</code> microseconds",40,[[]]],[8,"_embedded_hal_blocking_i2c_Read","","Blocking read",null,null],[16,"Error","","Error type",41,null],[10,"read","","Reads enough bytes from slave with <code>address</code> to fill <code>buffer</code>",41,[[],["result",4]]],[8,"_embedded_hal_blocking_i2c_Write","","Blocking write",null,null],[16,"Error","","Error type",42,null],[10,"write","","Sends bytes to slave with address <code>addr</code>",42,[[],["result",4]]],[8,"_embedded_hal_blocking_i2c_WriteRead","","Blocking write + read",null,null],[16,"Error","","Error type",43,null],[10,"write_read","","Sends bytes to slave with address <code>addr</code> and then reads …",43,[[],["result",4]]],[8,"_embedded_hal_blocking_serial_Write","","Write half of a serial interface (blocking variant)",null,null],[16,"Error","","The type of error that can occur when writing",44,null],[10,"bwrite_all","","Writes a slice, blocking until everything has been written",44,[[],["result",4]]],[10,"bflush","","Block until the serial interface has sent all buffered …",44,[[],["result",4]]],[8,"_embedded_hal_blocking_spi_Transfer","","Blocking transfer",null,null],[16,"Error","","Error type",45,null],[10,"transfer","","Sends <code>words</code> to the slave. Returns the <code>words</code> received from …",45,[[],["result",4]]],[8,"_embedded_hal_blocking_spi_Write","","Blocking write",null,null],[16,"Error","","Error type",46,null],[10,"write","","Sends <code>words</code> to the slave, ignoring all the incoming words",46,[[],["result",4]]],[8,"_embedded_hal_digital_OutputPin","","Single digital push-pull output pin",null,null],[10,"set_low","","Drives the pin low",47,[[]]],[10,"set_high","","Drives the pin high",47,[[]]],[8,"_embedded_hal_serial_Read","","Read half of a serial interface",null,null],[16,"Error","","Read error",48,null],[10,"read","","Reads a single word from the serial interface",48,[[],[["error",4],["result",4]]]],[8,"_embedded_hal_serial_Write","","Write half of a serial interface",null,null],[16,"Error","","Write error",49,null],[10,"write","","Writes a single word to the serial interface",49,[[],[["error",4],["result",4]]]],[10,"flush","","Ensures that none of the previously written words are …",49,[[],[["error",4],["result",4]]]],[8,"_embedded_hal_spi_FullDuplex","","Full duplex (master mode)",null,null],[16,"Error","","An enumeration of SPI errors",50,null],[10,"read","","Reads the word stored in the shift register",50,[[],[["error",4],["result",4]]]],[10,"send","","Sends a word to the slave",50,[[],[["result",4],["error",4]]]],[8,"_embedded_hal_timer_CountDown","","A count down timer",null,null],[16,"Time","","The unit of time used by this timer",51,null],[10,"start","","Starts a new count down",51,[[]]],[10,"wait","","Non-blockingly \\\"waits\\\" until the count down finishes",51,[[],[["result",4],["error",4]]]],[8,"_embedded_hal_PwmPin","","A single PWM channel / pin",null,null],[16,"Duty","","Type for the <code>duty</code> methods",52,null],[10,"disable","","Disables a PWM <code>channel</code>",52,[[]]],[10,"enable","","Enables a PWM <code>channel</code>",52,[[]]],[10,"get_duty","","Returns the current duty cycle",52,[[]]],[10,"get_max_duty","","Returns the maximum duty cycle value",52,[[]]],[10,"set_duty","","Sets a new duty cycle",52,[[]]],[0,"register","cortex_m","Processor core registers",null,null],[0,"basepri","cortex_m::register","Base Priority Mask Register",null,null],[5,"read","cortex_m::register::basepri","Reads the CPU register",null,[[]]],[5,"write","","Writes to the CPU register",null,[[]]],[0,"basepri_max","cortex_m::register","Base Priority Mask Register (conditional write)",null,null],[5,"write","cortex_m::register::basepri_max","Writes to BASEPRI <em>if</em>",null,[[]]],[0,"control","cortex_m::register","Control register",null,null],[3,"Control","cortex_m::register::control","Control register",null,null],[11,"from_bits","","Creates a <code>Control</code> value from raw bits.",53,[[]]],[11,"bits","","Returns the contents of the register as raw bits",53,[[]]],[11,"npriv","","Thread mode privilege level",53,[[],["npriv",4]]],[11,"set_npriv","","Sets the thread mode privilege level value (nPRIV).",53,[[["npriv",4]]]],[11,"spsel","","Currently active stack pointer",53,[[],["spsel",4]]],[11,"set_spsel","","Sets the SPSEL value.",53,[[["spsel",4]]]],[11,"fpca","","Whether context floating-point is currently active",53,[[],["fpca",4]]],[11,"set_fpca","","Sets the FPCA value.",53,[[["fpca",4]]]],[4,"Npriv","","Thread mode privilege level",null,null],[13,"Privileged","","Privileged",54,null],[13,"Unprivileged","","Unprivileged",54,null],[11,"is_privileged","","Is in privileged thread mode?",54,[[]]],[11,"is_unprivileged","","Is in unprivileged thread mode?",54,[[]]],[4,"Spsel","","Currently active stack pointer",null,null],[13,"Msp","","MSP is the current stack pointer",55,null],[13,"Psp","","PSP is the current stack pointer",55,null],[11,"is_msp","","Is MSP the current stack pointer?",55,[[]]],[11,"is_psp","","Is PSP the current stack pointer?",55,[[]]],[4,"Fpca","","Whether context floating-point is currently active",null,null],[13,"Active","","Floating-point context active.",56,null],[13,"NotActive","","No floating-point context active",56,null],[11,"is_active","","Is a floating-point context active?",56,[[]]],[11,"is_not_active","","Is a floating-point context not active?",56,[[]]],[5,"read","","Reads the CPU register",null,[[],["control",3]]],[5,"write","","Writes to the CPU register.",null,[[["control",3]]]],[0,"faultmask","cortex_m::register","Fault Mask Register",null,null],[4,"Faultmask","cortex_m::register::faultmask","All exceptions are ...",null,null],[13,"Active","","Active",57,null],[13,"Inactive","","Inactive, expect for NMI",57,null],[11,"is_active","","All exceptions are active",57,[[]]],[11,"is_inactive","","All exceptions, except for NMI, are inactive",57,[[]]],[5,"read","","Reads the CPU register",null,[[],["faultmask",4]]],[0,"msp","cortex_m::register","Main Stack Pointer",null,null],[5,"read","cortex_m::register::msp","Reads the CPU register",null,[[]]],[5,"write","","Writes <code>bits</code> to the CPU register",null,[[]]],[0,"primask","cortex_m::register","Priority mask register",null,null],[4,"Primask","cortex_m::register::primask","All exceptions with configurable priority are ...",null,null],[13,"Active","","Active",58,null],[13,"Inactive","","Inactive",58,null],[11,"is_active","","All exceptions with configurable priority are active",58,[[]]],[11,"is_inactive","","All exceptions with configurable priority are inactive",58,[[]]],[5,"read","","Reads the CPU register",null,[[],["primask",4]]],[0,"psp","cortex_m::register","Process Stack Pointer",null,null],[5,"read","cortex_m::register::psp","Reads the CPU register",null,[[]]],[5,"write","","Writes <code>bits</code> to the CPU register",null,[[]]],[14,"iprint","cortex_m","Macro for sending a formatted string through an ITM …",null,null],[14,"iprintln","","Macro for sending a formatted string through an ITM …",null,null],[14,"singleton","","Macro to create a mutable reference to a statically …",null,null],[11,"from","cortex_m::delay","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","cortex_m::interrupt","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","cortex_m::itm","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::cbp","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::cpuid","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::dcb","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::dwt","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::fpb","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::fpu","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::icb","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::itm","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::mpu","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::nvic","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::scb","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::syst","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::tpiu","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","cortex_m::peripheral","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","cortex_m::register::control","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","cortex_m::register::faultmask","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","cortex_m::register::primask","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"write_str","cortex_m::prelude","",49,[[],[["result",4],["error",3]]]],[11,"deref","cortex_m::peripheral","",26,[[]]],[11,"deref","","",27,[[]]],[11,"deref","","",28,[[]]],[11,"deref","","",29,[[]]],[11,"deref","","",30,[[]]],[11,"deref","","",31,[[]]],[11,"deref","","",32,[[]]],[11,"deref","","",33,[[]]],[11,"deref","","",34,[[]]],[11,"deref","","",35,[[]]],[11,"deref","","",36,[[]]],[11,"deref","","",37,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",32,[[]]],[11,"deref_mut","","",33,[[]]],[11,"fmt","cortex_m::peripheral::cpuid","",6,[[["formatter",3]],["result",6]]],[11,"fmt","cortex_m::peripheral::scb","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","cortex_m::peripheral::syst","",23,[[["formatter",3]],["result",6]]],[11,"fmt","cortex_m::register::control","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","cortex_m::register::faultmask","",57,[[["formatter",3]],["result",6]]],[11,"fmt","cortex_m::register::primask","",58,[[["formatter",3]],["result",6]]],[11,"eq","cortex_m::peripheral::cpuid","",6,[[["csselrcachetype",4]]]],[11,"eq","cortex_m::peripheral::scb","",18,[[["exception",4]]]],[11,"eq","","",19,[[["vectactive",4]]]],[11,"ne","","",19,[[["vectactive",4]]]],[11,"eq","","",21,[[["systemhandler",4]]]],[11,"eq","cortex_m::peripheral::syst","",23,[[["systclksource",4]]]],[11,"eq","cortex_m::register::control","",54,[[["npriv",4]]]],[11,"eq","","",55,[[["spsel",4]]]],[11,"eq","","",56,[[["fpca",4]]]],[11,"eq","cortex_m::register::faultmask","",57,[[["faultmask",4]]]],[11,"eq","cortex_m::register::primask","",58,[[["primask",4]]]],[11,"clone","cortex_m::peripheral::cpuid","",6,[[],["csselrcachetype",4]]],[11,"clone","cortex_m::peripheral::scb","",18,[[],["exception",4]]],[11,"clone","","",19,[[],["vectactive",4]]],[11,"clone","","",21,[[],["systemhandler",4]]],[11,"clone","cortex_m::peripheral::syst","",23,[[],["systclksource",4]]],[11,"clone","cortex_m::register::control","",53,[[],["control",3]]],[11,"clone","","",54,[[],["npriv",4]]],[11,"clone","","",55,[[],["spsel",4]]],[11,"clone","","",56,[[],["fpca",4]]],[11,"clone","cortex_m::register::faultmask","",57,[[],["faultmask",4]]],[11,"clone","cortex_m::register::primask","",58,[[],["primask",4]]],[11,"delay_ms","cortex_m::delay","",0,[[]]],[11,"delay_ms","","",0,[[]]],[11,"delay_ms","","",0,[[]]],[11,"delay_ms","","",0,[[]]],[11,"delay_us","","",0,[[]]],[11,"delay_us","","",0,[[]]],[11,"delay_us","","",0,[[]]],[11,"delay_us","","",0,[[]]],[11,"new","cortex_m::interrupt","Creates a critical section token",59,[[],["criticalsection",3]]],[11,"new","","Creates a new mutex",60,[[],["mutex",3]]],[11,"borrow","","Borrows the data for the duration of the critical section",60,[[["criticalsection",3]]]],[11,"iciallu","cortex_m::peripheral","I-cache invalidate all to PoU",26,[[]]],[11,"icimvau","","I-cache invalidate by MVA to PoU",26,[[]]],[11,"dcimvac","","D-cache invalidate by MVA to PoC",26,[[]]],[11,"dcisw","","D-cache invalidate by set-way",26,[[]]],[11,"dccmvau","","D-cache clean by MVA to PoU",26,[[]]],[11,"dccmvac","","D-cache clean by MVA to PoC",26,[[]]],[11,"dccsw","","D-cache clean by set-way",26,[[]]],[11,"dccimvac","","D-cache clean and invalidate by MVA to PoC",26,[[]]],[11,"dccisw","","D-cache clean and invalidate by set-way",26,[[]]],[11,"bpiall","","Branch predictor invalidate all",26,[[]]],[11,"select_cache","","Selects the current CCSIDR",27,[[["csselrcachetype",4]]]],[11,"cache_num_sets_ways","","Returns the number of sets and ways in the selected cache",27,[[["csselrcachetype",4]]]],[11,"cache_dminline","","Returns log2 of the number of words in the smallest cache …",27,[[]]],[11,"cache_iminline","","Returns log2 of the number of words in the smallest cache …",27,[[]]],[11,"enable_trace","","Enables TRACE. This is for example required by the …",28,[[]]],[11,"disable_trace","","Disables TRACE. See <code>DCB::enable_trace()</code> for more details",28,[[]]],[11,"is_debugger_attached","","Is there a debugger attached? (see note)",28,[[]]],[11,"enable_cycle_counter","","Enables the cycle counter",29,[[]]],[11,"get_cycle_count","","Returns the current clock cycle count",29,[[]]],[11,"unlock","","Removes the software lock on the DWT",29,[[]]],[11,"request","","Request an IRQ in software",35,[[]]],[11,"mask","","Disables <code>interrupt</code>",35,[[]]],[11,"unmask","","Enables <code>interrupt</code>",35,[[]]],[11,"get_priority","","Returns the NVIC priority of <code>interrupt</code>",35,[[]]],[11,"is_active","","Is <code>interrupt</code> active or pre-empted and stacked",35,[[]]],[11,"is_enabled","","Checks if <code>interrupt</code> is enabled",35,[[]]],[11,"is_pending","","Checks if <code>interrupt</code> is pending",35,[[]]],[11,"pend","","Forces <code>interrupt</code> into pending state",35,[[]]],[11,"set_priority","","Sets the \\\"priority\\\" of <code>interrupt</code> to <code>prio</code>",35,[[]]],[11,"unpend","","Clears <code>interrupt</code>\'s pending state",35,[[]]],[11,"vect_active","","Returns the active exception number",36,[[],["vectactive",4]]],[11,"enable_icache","","Enables I-cache if currently disabled.",36,[[]]],[11,"disable_icache","","Disables I-cache if currently enabled.",36,[[]]],[11,"icache_enabled","","Returns whether the I-cache is currently enabled.",36,[[]]],[11,"invalidate_icache","","Invalidates the entire I-cache.",36,[[]]],[11,"enable_dcache","","Enables D-cache if currently disabled.",36,[[["cpuid",3]]]],[11,"disable_dcache","","Disables D-cache if currently enabled.",36,[[["cpuid",3]]]],[11,"dcache_enabled","","Returns whether the D-cache is currently enabled.",36,[[]]],[11,"clean_dcache","","Cleans the entire D-cache.",36,[[["cpuid",3]]]],[11,"clean_invalidate_dcache","","Cleans and invalidates the entire D-cache.",36,[[["cpuid",3]]]],[11,"invalidate_dcache_by_address","","Invalidates D-cache by address.",36,[[]]],[11,"invalidate_dcache_by_ref","","Invalidates an object from the D-cache.",36,[[]]],[11,"invalidate_dcache_by_slice","","Invalidates a slice from the D-cache.",36,[[]]],[11,"clean_dcache_by_address","","Cleans D-cache by address.",36,[[]]],[11,"clean_dcache_by_ref","","Cleans an object from the D-cache.",36,[[]]],[11,"clean_dcache_by_slice","","Cleans a slice from D-cache.",36,[[]]],[11,"clean_invalidate_dcache_by_address","","Cleans and invalidates D-cache by address.",36,[[]]],[11,"set_sleepdeep","","Set the SLEEPDEEP bit in the SCR register",36,[[]]],[11,"clear_sleepdeep","","Clear the SLEEPDEEP bit in the SCR register",36,[[]]],[11,"set_sleeponexit","","Set the SLEEPONEXIT bit in the SCR register",36,[[]]],[11,"clear_sleeponexit","","Clear the SLEEPONEXIT bit in the SCR register",36,[[]]],[11,"sys_reset","","Initiate a system reset request to reset the MCU",36,[[]]],[11,"set_pendsv","","Set the PENDSVSET bit in the ICSR register which will …",36,[[]]],[11,"is_pendsv_pending","","Check if PENDSVSET bit in the ICSR register is set …",36,[[]]],[11,"clear_pendsv","","Set the PENDSVCLR bit in the ICSR register which will …",36,[[]]],[11,"set_pendst","","Set the PENDSTSET bit in the ICSR register which will …",36,[[]]],[11,"is_pendst_pending","","Check if PENDSTSET bit in the ICSR register is set …",36,[[]]],[11,"clear_pendst","","Set the PENDSTCLR bit in the ICSR register which will …",36,[[]]],[11,"get_priority","","Returns the hardware priority of <code>system_handler</code>",36,[[["systemhandler",4]]]],[11,"set_priority","","Sets the hardware priority of <code>system_handler</code> to <code>prio</code>",36,[[["systemhandler",4]]]],[11,"enable","","Enable the exception",36,[[["exception",4]]]],[11,"disable","","Disable the exception",36,[[["exception",4]]]],[11,"is_enabled","","Check if an exception is enabled",36,[[["exception",4]]]],[11,"clear_current","","Clears current value to 0",37,[[]]],[11,"disable_counter","","Disables counter",37,[[]]],[11,"disable_interrupt","","Disables SysTick interrupt",37,[[]]],[11,"enable_counter","","Enables counter",37,[[]]],[11,"enable_interrupt","","Enables SysTick interrupt",37,[[]]],[11,"get_clock_source","","Gets clock source",37,[[],["systclksource",4]]],[11,"get_current","","Gets current value",37,[[]]],[11,"get_reload","","Gets reload value",37,[[]]],[11,"get_ticks_per_10ms","","Returns the reload value with which the counter would …",37,[[]]],[11,"has_reference_clock","","Checks if an external reference clock is available",37,[[]]],[11,"has_wrapped","","Checks if the counter wrapped (underflowed) since the …",37,[[]]],[11,"is_counter_enabled","","Checks if counter is enabled",37,[[]]],[11,"is_interrupt_enabled","","Checks if SysTick interrupt is enabled",37,[[]]],[11,"is_precise","","Checks if the calibration value is precise",37,[[]]],[11,"set_clock_source","","Sets clock source",37,[[["systclksource",4]]]],[11,"set_reload","","Sets reload value",37,[[]]]],"p":[[3,"Delay"],[8,"Nr"],[8,"InterruptNumber"],[3,"Aligned"],[3,"RegisterBlock"],[3,"RegisterBlock"],[4,"CsselrCacheType"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"Comparator"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"Stim"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"RegisterBlock"],[4,"Exception"],[4,"VectActive"],[13,"Interrupt"],[4,"SystemHandler"],[3,"RegisterBlock"],[4,"SystClkSource"],[3,"RegisterBlock"],[3,"Peripherals"],[3,"CBP"],[3,"CPUID"],[3,"DCB"],[3,"DWT"],[3,"FPB"],[3,"FPU"],[3,"ICB"],[3,"ITM"],[3,"MPU"],[3,"NVIC"],[3,"SCB"],[3,"SYST"],[3,"TPIU"],[8,"_embedded_hal_blocking_delay_DelayMs"],[8,"_embedded_hal_blocking_delay_DelayUs"],[8,"_embedded_hal_blocking_i2c_Read"],[8,"_embedded_hal_blocking_i2c_Write"],[8,"_embedded_hal_blocking_i2c_WriteRead"],[8,"_embedded_hal_blocking_serial_Write"],[8,"_embedded_hal_blocking_spi_Transfer"],[8,"_embedded_hal_blocking_spi_Write"],[8,"_embedded_hal_digital_OutputPin"],[8,"_embedded_hal_serial_Read"],[8,"_embedded_hal_serial_Write"],[8,"_embedded_hal_spi_FullDuplex"],[8,"_embedded_hal_timer_CountDown"],[8,"_embedded_hal_PwmPin"],[3,"Control"],[4,"Npriv"],[4,"Spsel"],[4,"Fpca"],[4,"Faultmask"],[4,"Primask"],[3,"CriticalSection"],[3,"Mutex"],[3,"SAU"]]},\
"embedded_hal":{"doc":"A Hardware Abstraction Layer (HAL) for embedded systems","i":[[0,"adc","embedded_hal","Analog-digital conversion traits",null,null],[0,"blocking","","Blocking API",null,null],[0,"delay","embedded_hal::blocking","Delays",null,null],[8,"DelayMs","embedded_hal::blocking::delay","Millisecond delay",null,null],[10,"delay_ms","","Pauses execution for <code>ms</code> milliseconds",0,[[]]],[8,"DelayUs","","Microsecond delay",null,null],[10,"delay_us","","Pauses execution for <code>us</code> microseconds",1,[[]]],[0,"i2c","embedded_hal::blocking","Blocking I2C API",null,null],[8,"Read","embedded_hal::blocking::i2c","Blocking read",null,null],[16,"Error","","Error type",2,null],[10,"read","","Reads enough bytes from slave with <code>address</code> to fill <code>buffer</code>",2,[[],["result",4]]],[8,"Write","","Blocking write",null,null],[16,"Error","","Error type",3,null],[10,"write","","Sends bytes to slave with address <code>addr</code>",3,[[],["result",4]]],[8,"WriteRead","","Blocking write + read",null,null],[16,"Error","","Error type",4,null],[10,"write_read","","Sends bytes to slave with address <code>addr</code> and then reads …",4,[[],["result",4]]],[0,"rng","embedded_hal::blocking","Blocking hardware random number generator",null,null],[0,"serial","","Blocking serial API",null,null],[0,"write","embedded_hal::blocking::serial","Blocking serial write",null,null],[8,"Default","embedded_hal::blocking::serial::write","Marker trait to opt into default blocking write …",null,null],[8,"Write","embedded_hal::blocking::serial","Write half of a serial interface (blocking variant)",null,null],[16,"Error","","The type of error that can occur when writing",5,null],[10,"bwrite_all","","Writes a slice, blocking until everything has been written",5,[[],["result",4]]],[10,"bflush","","Block until the serial interface has sent all buffered …",5,[[],["result",4]]],[0,"spi","embedded_hal::blocking","Blocking SPI API",null,null],[0,"transfer","embedded_hal::blocking::spi","Blocking transfer",null,null],[8,"Default","embedded_hal::blocking::spi::transfer","Default implementation of <code>blocking::spi::Transfer<W></code> for …",null,null],[0,"write","embedded_hal::blocking::spi","Blocking write",null,null],[8,"Default","embedded_hal::blocking::spi::write","Default implementation of <code>blocking::spi::Write<W></code> for …",null,null],[8,"Transfer","embedded_hal::blocking::spi","Blocking transfer",null,null],[16,"Error","","Error type",6,null],[10,"transfer","","Sends <code>words</code> to the slave. Returns the <code>words</code> received from …",6,[[],["result",4]]],[8,"Write","","Blocking write",null,null],[16,"Error","","Error type",7,null],[10,"write","","Sends <code>words</code> to the slave, ignoring all the incoming words",7,[[],["result",4]]],[0,"digital","embedded_hal","Digital I/O",null,null],[0,"v1","embedded_hal::digital","Digital I/O",null,null],[8,"OutputPin","embedded_hal::digital::v1","Single digital push-pull output pin",null,null],[10,"set_low","","Drives the pin low",8,[[]]],[10,"set_high","","Drives the pin high",8,[[]]],[0,"v2","embedded_hal::digital","Digital I/O",null,null],[8,"OutputPin","embedded_hal::digital::v2","Single digital push-pull output pin",null,null],[16,"Error","","Error type",9,null],[10,"set_low","","Drives the pin low",9,[[],["result",4]]],[10,"set_high","","Drives the pin high",9,[[],["result",4]]],[0,"v1_compat","embedded_hal::digital","v1 compatibility wrappers",null,null],[3,"OldOutputPin","embedded_hal::digital::v1_compat","Wrapper to allow fallible <code>v2::OutputPin</code> traits to be …",null,null],[11,"new","","Create a new OldOutputPin wrapper around a <code>v2::OutputPin</code>",10,[[]]],[0,"v2_compat","embedded_hal::digital","v2 compatibility shims",null,null],[0,"fmt","embedded_hal","Implementation of <code>core::fmt::Write</code> for the HAL\'s …",null,null],[0,"prelude","","The prelude is a collection of all the traits in this …",null,null],[0,"serial","","Serial interface",null,null],[8,"Read","embedded_hal::serial","Read half of a serial interface",null,null],[16,"Error","","Read error",11,null],[10,"read","","Reads a single word from the serial interface",11,[[],["result",6]]],[8,"Write","","Write half of a serial interface",null,null],[16,"Error","","Write error",12,null],[10,"write","","Writes a single word to the serial interface",12,[[],["result",6]]],[10,"flush","","Ensures that none of the previously written words are …",12,[[],["result",6]]],[0,"spi","embedded_hal","Serial Peripheral Interface",null,null],[8,"FullDuplex","embedded_hal::spi","Full duplex (master mode)",null,null],[16,"Error","","An enumeration of SPI errors",13,null],[10,"read","","Reads the word stored in the shift register",13,[[],["result",6]]],[10,"send","","Sends a word to the slave",13,[[],["result",6]]],[4,"Polarity","","Clock polarity",null,null],[13,"IdleLow","","Clock signal low when idle",14,null],[13,"IdleHigh","","Clock signal high when idle",14,null],[4,"Phase","","Clock phase",null,null],[13,"CaptureOnFirstTransition","","Data in \\\"captured\\\" on the first clock transition",15,null],[13,"CaptureOnSecondTransition","","Data in \\\"captured\\\" on the second clock transition",15,null],[3,"Mode","","SPI mode",null,null],[12,"polarity","","Clock polarity",16,null],[12,"phase","","Clock phase",16,null],[17,"MODE_0","","Helper for CPOL = 0, CPHA = 0",null,null],[17,"MODE_1","","Helper for CPOL = 0, CPHA = 1",null,null],[17,"MODE_2","","Helper for CPOL = 1, CPHA = 0",null,null],[17,"MODE_3","","Helper for CPOL = 1, CPHA = 1",null,null],[0,"timer","embedded_hal","Timers",null,null],[8,"CountDown","embedded_hal::timer","A count down timer",null,null],[16,"Time","","The unit of time used by this timer",17,null],[10,"start","","Starts a new count down",17,[[]]],[10,"wait","","Non-blockingly \\\"waits\\\" until the count down finishes",17,[[],[["void",4],["result",6]]]],[8,"Periodic","","Marker trait that indicates that a timer is periodic",null,null],[8,"Cancel","","Trait for cancelable countdowns.",null,null],[16,"Error","","Error returned when a countdown can\'t be canceled.",18,null],[10,"cancel","","Tries to cancel this countdown.",18,[[],["result",4]]],[0,"watchdog","embedded_hal","Traits for interactions with a processors watchdog timer.",null,null],[8,"PwmPin","","A single PWM channel / pin",null,null],[16,"Duty","","Type for the <code>duty</code> methods",19,null],[10,"disable","","Disables a PWM <code>channel</code>",19,[[]]],[10,"enable","","Enables a PWM <code>channel</code>",19,[[]]],[10,"get_duty","","Returns the current duty cycle",19,[[]]],[10,"get_max_duty","","Returns the maximum duty cycle value",19,[[]]],[10,"set_duty","","Sets a new duty cycle",19,[[]]],[11,"set_low","embedded_hal::digital::v1_compat","",10,[[],["result",4]]],[11,"set_high","","",10,[[],["result",4]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","embedded_hal::spi","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"set_low","embedded_hal::digital::v1_compat","",10,[[]]],[11,"set_high","","",10,[[]]],[11,"from","","",10,[[]]],[11,"eq","embedded_hal::spi","",14,[[["polarity",4]]]],[11,"eq","","",15,[[["phase",4]]]],[11,"eq","","",16,[[["mode",3]]]],[11,"ne","","",16,[[["mode",3]]]],[11,"write_str","embedded_hal::serial","",12,[[],["result",6]]],[11,"clone","embedded_hal::spi","",14,[[],["polarity",4]]],[11,"clone","","",15,[[],["phase",4]]],[11,"clone","","",16,[[],["mode",3]]]],"p":[[8,"DelayMs"],[8,"DelayUs"],[8,"Read"],[8,"Write"],[8,"WriteRead"],[8,"Write"],[8,"Transfer"],[8,"Write"],[8,"OutputPin"],[8,"OutputPin"],[3,"OldOutputPin"],[8,"Read"],[8,"Write"],[8,"FullDuplex"],[4,"Polarity"],[4,"Phase"],[3,"Mode"],[8,"CountDown"],[8,"Cancel"],[8,"PwmPin"]]},\
"nb":{"doc":"Minimal and reusable non-blocking I/O layer","i":[[14,"block","nb","Turns the non-blocking expression <code>$e</code> into a blocking …",null,null],[4,"Error","","A non-blocking error",null,null],[13,"Other","","A different kind of error",0,null],[13,"WouldBlock","","This operation requires blocking behavior to complete",0,null],[6,"Result","","A non-blocking result",null,null],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[],["error",4]]],[11,"partial_cmp","","",0,[[["error",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["error",4]]]],[11,"le","","",0,[[["error",4]]]],[11,"gt","","",0,[[["error",4]]]],[11,"ge","","",0,[[["error",4]]]],[11,"hash","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"eq","","",0,[[["error",4]]]],[11,"ne","","",0,[[["error",4]]]],[11,"cmp","","",0,[[["error",4]],["ordering",4]]],[11,"from","","",0,[[],["error",4]]],[11,"map","","Maps an <code>Error<E></code> to <code>Error<T></code> by applying a function to a …",0,[[],["error",4]]]],"p":[[4,"Error"]]},\
"rp2040_pac":{"doc":"Peripheral access API for RP2040 microcontrollers …","i":[[0,"adc","rp2040_pac","",null,null],[0,"fields","rp2040_pac::adc","",null,null],[3,"Cs","rp2040_pac::adc::fields","ADC Control and Status",null,null],[11,"to_bits","","",0,[[]]],[11,"from_bits","","",0,[[],["cs",3]]],[11,"rrobin","","Round-robin sampling. 1 bit per channel. Set all bits to …",0,[[]]],[11,"set_rrobin","","Round-robin sampling. 1 bit per channel. Set all bits to …",0,[[]]],[11,"ainsel","","Select analog mux input. Updated automatically in …",0,[[]]],[11,"set_ainsel","","Select analog mux input. Updated automatically in …",0,[[]]],[11,"err_sticky","","Some past ADC conversion encountered an error. Write 1 to …",0,[[]]],[11,"set_err_sticky","","Some past ADC conversion encountered an error. Write 1 to …",0,[[]]],[11,"err","","The most recent ADC conversion encountered an error; …",0,[[]]],[11,"set_err","","The most recent ADC conversion encountered an error; …",0,[[]]],[11,"ready","","1 if the ADC is ready to start a new conversion. Implies …",0,[[]]],[11,"set_ready","","1 if the ADC is ready to start a new conversion. Implies …",0,[[]]],[11,"start_many","","Continuously perform conversions whilst this bit is 1. A …",0,[[]]],[11,"set_start_many","","Continuously perform conversions whilst this bit is 1. A …",0,[[]]],[11,"start_once","","Start a single conversion. Self-clearing. Ignored if …",0,[[]]],[11,"set_start_once","","Start a single conversion. Self-clearing. Ignored if …",0,[[]]],[11,"ts_en","","Power on temperature sensor. 1 - enabled. 0 - disabled.",0,[[]]],[11,"set_ts_en","","Power on temperature sensor. 1 - enabled. 0 - disabled.",0,[[]]],[11,"en","","Power on ADC and enable its clock. 1 - enabled. 0 - …",0,[[]]],[11,"set_en","","Power on ADC and enable its clock. 1 - enabled. 0 - …",0,[[]]],[3,"Inte","","Interrupt Enable",null,null],[11,"to_bits","","",1,[[]]],[11,"from_bits","","",1,[[],["inte",3]]],[11,"fifo","","Triggered when the sample FIFO reaches a certain level. …",1,[[]]],[11,"set_fifo","","Triggered when the sample FIFO reaches a certain level. …",1,[[]]],[3,"Ints","","Interrupt status after masking & forcing",null,null],[11,"to_bits","","",2,[[]]],[11,"from_bits","","",2,[[],["ints",3]]],[11,"fifo","","Triggered when the sample FIFO reaches a certain level. …",2,[[]]],[11,"set_fifo","","Triggered when the sample FIFO reaches a certain level. …",2,[[]]],[3,"Intf","","Interrupt Force",null,null],[11,"to_bits","","",3,[[]]],[11,"from_bits","","",3,[[],["intf",3]]],[11,"fifo","","Triggered when the sample FIFO reaches a certain level. …",3,[[]]],[11,"set_fifo","","Triggered when the sample FIFO reaches a certain level. …",3,[[]]],[3,"Fcs","","FIFO control and status",null,null],[11,"to_bits","","",4,[[]]],[11,"from_bits","","",4,[[],["fcs",3]]],[11,"thresh","","DREQ/IRQ asserted when level >= threshold",4,[[]]],[11,"set_thresh","","DREQ/IRQ asserted when level >= threshold",4,[[]]],[11,"level","","The number of conversion results currently waiting in the …",4,[[]]],[11,"set_level","","The number of conversion results currently waiting in the …",4,[[]]],[11,"over","","1 if the FIFO has been overflowed. Write 1 to clear.",4,[[]]],[11,"set_over","","1 if the FIFO has been overflowed. Write 1 to clear.",4,[[]]],[11,"under","","1 if the FIFO has been underflowed. Write 1 to clear.",4,[[]]],[11,"set_under","","1 if the FIFO has been underflowed. Write 1 to clear.",4,[[]]],[11,"full","","",4,[[]]],[11,"set_full","","",4,[[]]],[11,"empty","","",4,[[]]],[11,"set_empty","","",4,[[]]],[11,"dreq_en","","If 1: assert DMA requests when FIFO contains data",4,[[]]],[11,"set_dreq_en","","If 1: assert DMA requests when FIFO contains data",4,[[]]],[11,"err","","If 1: conversion error bit appears in the FIFO alongside …",4,[[]]],[11,"set_err","","If 1: conversion error bit appears in the FIFO alongside …",4,[[]]],[11,"shift","","If 1: FIFO results are right-shifted to be one byte in …",4,[[]]],[11,"set_shift","","If 1: FIFO results are right-shifted to be one byte in …",4,[[]]],[11,"en","","If 1: write result to the FIFO after each conversion.",4,[[]]],[11,"set_en","","If 1: write result to the FIFO after each conversion.",4,[[]]],[3,"Intr","","Raw Interrupts",null,null],[11,"to_bits","","",5,[[]]],[11,"from_bits","","",5,[[],["intr",3]]],[11,"fifo","","Triggered when the sample FIFO reaches a certain level. …",5,[[]]],[11,"set_fifo","","Triggered when the sample FIFO reaches a certain level. …",5,[[]]],[3,"Result","","Result of most recent ADC conversion",null,null],[11,"to_bits","","",6,[[]]],[11,"from_bits","","",6,[[],["result",3]]],[11,"result","","",6,[[]]],[11,"set_result","","",6,[[]]],[3,"Div","","Clock divider. If non-zero, CS_START_MANY will start …",null,null],[11,"to_bits","","",7,[[]]],[11,"from_bits","","",7,[[],["div",3]]],[11,"int","","Integer part of clock divisor.",7,[[]]],[11,"set_int","","Integer part of clock divisor.",7,[[]]],[11,"frac","","Fractional part of clock divisor. First-order delta-sigma.",7,[[]]],[11,"set_frac","","Fractional part of clock divisor. First-order delta-sigma.",7,[[]]],[3,"Fifo","","Conversion result FIFO",null,null],[11,"to_bits","","",8,[[]]],[11,"from_bits","","",8,[[],["fifo",3]]],[11,"err","","1 if this particular sample experienced a conversion …",8,[[]]],[11,"set_err","","1 if this particular sample experienced a conversion …",8,[[]]],[11,"val","","",8,[[]]],[11,"set_val","","",8,[[]]],[3,"Adc","rp2040_pac::adc","Control and data interface to SAR ADC",null,null],[11,"from_ptr","","",9,[[]]],[11,"cs","","ADC Control and Status",9,[[],[["reg",3],["rw",3],["cs",3]]]],[11,"result","","Result of most recent ADC conversion",9,[[],[["reg",3],["result",3],["rw",3]]]],[11,"fcs","","FIFO control and status",9,[[],[["reg",3],["rw",3],["fcs",3]]]],[11,"fifo","","Conversion result FIFO",9,[[],[["reg",3],["fifo",3],["rw",3]]]],[11,"div","","Clock divider. If non-zero, CS_START_MANY will start …",9,[[],[["reg",3],["div",3],["rw",3]]]],[11,"intr","","Raw Interrupts",9,[[],[["rw",3],["intr",3],["reg",3]]]],[11,"inte","","Interrupt Enable",9,[[],[["rw",3],["inte",3],["reg",3]]]],[11,"intf","","Interrupt Force",9,[[],[["rw",3],["intf",3],["reg",3]]]],[11,"ints","","Interrupt status after masking & forcing",9,[[],[["reg",3],["ints",3],["rw",3]]]],[0,"busctrl","rp2040_pac","",null,null],[0,"fields","rp2040_pac::busctrl","",null,null],[3,"Perfsel1","rp2040_pac::busctrl::fields","Bus fabric performance event select for PERFCTR1",null,null],[11,"to_bits","","",10,[[]]],[11,"from_bits","","",10,[[],["perfsel1",3]]],[11,"perfsel1","","Select a performance event for PERFCTR1",10,[[]]],[11,"set_perfsel1","","Select a performance event for PERFCTR1",10,[[]]],[3,"Perfsel3","","Bus fabric performance event select for PERFCTR3",null,null],[11,"to_bits","","",11,[[]]],[11,"from_bits","","",11,[[],["perfsel3",3]]],[11,"perfsel3","","Select a performance event for PERFCTR3",11,[[]]],[11,"set_perfsel3","","Select a performance event for PERFCTR3",11,[[]]],[3,"Perfctr3","","Bus fabric performance counter 3",null,null],[11,"to_bits","","",12,[[]]],[11,"from_bits","","",12,[[],["perfctr3",3]]],[11,"perfctr3","","Busfabric saturating performance counter 3 Count some …",12,[[]]],[11,"set_perfctr3","","Busfabric saturating performance counter 3 Count some …",12,[[]]],[3,"Perfsel2","","Bus fabric performance event select for PERFCTR2",null,null],[11,"to_bits","","",13,[[]]],[11,"from_bits","","",13,[[],["perfsel2",3]]],[11,"perfsel2","","Select a performance event for PERFCTR2",13,[[]]],[11,"set_perfsel2","","Select a performance event for PERFCTR2",13,[[]]],[3,"Perfctr2","","Bus fabric performance counter 2",null,null],[11,"to_bits","","",14,[[]]],[11,"from_bits","","",14,[[],["perfctr2",3]]],[11,"perfctr2","","Busfabric saturating performance counter 2 Count some …",14,[[]]],[11,"set_perfctr2","","Busfabric saturating performance counter 2 Count some …",14,[[]]],[3,"Perfctr0","","Bus fabric performance counter 0",null,null],[11,"to_bits","","",15,[[]]],[11,"from_bits","","",15,[[],["perfctr0",3]]],[11,"perfctr0","","Busfabric saturating performance counter 0 Count some …",15,[[]]],[11,"set_perfctr0","","Busfabric saturating performance counter 0 Count some …",15,[[]]],[3,"Perfctr1","","Bus fabric performance counter 1",null,null],[11,"to_bits","","",16,[[]]],[11,"from_bits","","",16,[[],["perfctr1",3]]],[11,"perfctr1","","Busfabric saturating performance counter 1 Count some …",16,[[]]],[11,"set_perfctr1","","Busfabric saturating performance counter 1 Count some …",16,[[]]],[3,"Perfsel0","","Bus fabric performance event select for PERFCTR0",null,null],[11,"to_bits","","",17,[[]]],[11,"from_bits","","",17,[[],["perfsel0",3]]],[11,"perfsel0","","Select a performance event for PERFCTR0",17,[[]]],[11,"set_perfsel0","","Select a performance event for PERFCTR0",17,[[]]],[3,"BusPriorityAck","","Bus priority acknowledge",null,null],[11,"to_bits","","",18,[[]]],[11,"from_bits","","",18,[[],["buspriorityack",3]]],[11,"bus_priority_ack","","Goes to 1 once all arbiters have registered the new …",18,[[]]],[11,"set_bus_priority_ack","","Goes to 1 once all arbiters have registered the new …",18,[[]]],[3,"BusPriority","","Set the priority of each master for bus arbitration.",null,null],[11,"to_bits","","",19,[[]]],[11,"from_bits","","",19,[[],["buspriority",3]]],[11,"dma_w","","0 - low priority, 1 - high priority",19,[[]]],[11,"set_dma_w","","0 - low priority, 1 - high priority",19,[[]]],[11,"dma_r","","0 - low priority, 1 - high priority",19,[[]]],[11,"set_dma_r","","0 - low priority, 1 - high priority",19,[[]]],[11,"proc1","","0 - low priority, 1 - high priority",19,[[]]],[11,"set_proc1","","0 - low priority, 1 - high priority",19,[[]]],[11,"proc0","","0 - low priority, 1 - high priority",19,[[]]],[11,"set_proc0","","0 - low priority, 1 - high priority",19,[[]]],[3,"Busctrl","rp2040_pac::busctrl","Register block for busfabric control signals and …",null,null],[11,"from_ptr","","",20,[[]]],[11,"bus_priority","","Set the priority of each master for bus arbitration.",20,[[],[["buspriority",3],["reg",3],["rw",3]]]],[11,"bus_priority_ack","","Bus priority acknowledge",20,[[],[["rw",3],["buspriorityack",3],["reg",3]]]],[11,"perfctr0","","Bus fabric performance counter 0",20,[[],[["perfctr0",3],["reg",3],["rw",3]]]],[11,"perfsel0","","Bus fabric performance event select for PERFCTR0",20,[[],[["rw",3],["reg",3],["perfsel0",3]]]],[11,"perfctr1","","Bus fabric performance counter 1",20,[[],[["perfctr1",3],["reg",3],["rw",3]]]],[11,"perfsel1","","Bus fabric performance event select for PERFCTR1",20,[[],[["reg",3],["perfsel1",3],["rw",3]]]],[11,"perfctr2","","Bus fabric performance counter 2",20,[[],[["rw",3],["reg",3],["perfctr2",3]]]],[11,"perfsel2","","Bus fabric performance event select for PERFCTR2",20,[[],[["reg",3],["perfsel2",3],["rw",3]]]],[11,"perfctr3","","Bus fabric performance counter 3",20,[[],[["perfctr3",3],["rw",3],["reg",3]]]],[11,"perfsel3","","Bus fabric performance event select for PERFCTR3",20,[[],[["rw",3],["reg",3],["perfsel3",3]]]],[0,"clocks","rp2040_pac","",null,null],[0,"fields","rp2040_pac::clocks","",null,null],[3,"ClkGpout0Div","rp2040_pac::clocks::fields","Clock divisor, can be changed on-the-fly",null,null],[11,"to_bits","","",21,[[]]],[11,"from_bits","","",21,[[],["clkgpout0div",3]]],[11,"int","","Integer component of the divisor, 0 -> divide by 2^16",21,[[]]],[11,"set_int","","Integer component of the divisor, 0 -> divide by 2^16",21,[[]]],[11,"frac","","Fractional component of the divisor",21,[[]]],[11,"set_frac","","Fractional component of the divisor",21,[[]]],[3,"ClkRefDiv","","Clock divisor, can be changed on-the-fly",null,null],[11,"to_bits","","",22,[[]]],[11,"from_bits","","",22,[[],["clkrefdiv",3]]],[11,"int","","Integer component of the divisor, 0 -> divide by 2^16",22,[[]]],[11,"set_int","","Integer component of the divisor, 0 -> divide by 2^16",22,[[]]],[3,"ClkAdcCtrl","","Clock control, can be changed on-the-fly (except for …",null,null],[11,"to_bits","","",23,[[]]],[11,"from_bits","","",23,[[],["clkadcctrl",3]]],[11,"nudge","","An edge on this signal shifts the phase of the output by …",23,[[]]],[11,"set_nudge","","An edge on this signal shifts the phase of the output by …",23,[[]]],[11,"phase","","This delays the enable signal by up to 3 cycles of the …",23,[[]]],[11,"set_phase","","This delays the enable signal by up to 3 cycles of the …",23,[[]]],[11,"enable","","Starts and stops the clock generator cleanly",23,[[]]],[11,"set_enable","","Starts and stops the clock generator cleanly",23,[[]]],[11,"kill","","Asynchronously kills the clock generator",23,[[]]],[11,"set_kill","","Asynchronously kills the clock generator",23,[[]]],[11,"auxsrc","","Selects the auxiliary clock source, will glitch when …",23,[[],["clkadcctrlauxsrc",3]]],[11,"set_auxsrc","","Selects the auxiliary clock source, will glitch when …",23,[[["clkadcctrlauxsrc",3]]]],[3,"Intr","","Raw Interrupts",null,null],[11,"to_bits","","",24,[[]]],[11,"from_bits","","",24,[[],["intr",3]]],[11,"clk_sys_resus","","",24,[[]]],[11,"set_clk_sys_resus","","",24,[[]]],[3,"ClkSysResusStatus","","",null,null],[11,"to_bits","","",25,[[]]],[11,"from_bits","","",25,[[],["clksysresusstatus",3]]],[11,"resussed","","Clock has been resuscitated, correct the error then send …",25,[[]]],[11,"set_resussed","","Clock has been resuscitated, correct the error then send …",25,[[]]],[3,"WakeEn0","","enable clock in wake mode",null,null],[11,"to_bits","","",26,[[]]],[11,"from_bits","","",26,[[],["wakeen0",3]]],[11,"clk_sys_sram3","","",26,[[]]],[11,"set_clk_sys_sram3","","",26,[[]]],[11,"clk_sys_sram2","","",26,[[]]],[11,"set_clk_sys_sram2","","",26,[[]]],[11,"clk_sys_sram1","","",26,[[]]],[11,"set_clk_sys_sram1","","",26,[[]]],[11,"clk_sys_sram0","","",26,[[]]],[11,"set_clk_sys_sram0","","",26,[[]]],[11,"clk_sys_spi1","","",26,[[]]],[11,"set_clk_sys_spi1","","",26,[[]]],[11,"clk_peri_spi1","","",26,[[]]],[11,"set_clk_peri_spi1","","",26,[[]]],[11,"clk_sys_spi0","","",26,[[]]],[11,"set_clk_sys_spi0","","",26,[[]]],[11,"clk_peri_spi0","","",26,[[]]],[11,"set_clk_peri_spi0","","",26,[[]]],[11,"clk_sys_sio","","",26,[[]]],[11,"set_clk_sys_sio","","",26,[[]]],[11,"clk_sys_rtc","","",26,[[]]],[11,"set_clk_sys_rtc","","",26,[[]]],[11,"clk_rtc_rtc","","",26,[[]]],[11,"set_clk_rtc_rtc","","",26,[[]]],[11,"clk_sys_rosc","","",26,[[]]],[11,"set_clk_sys_rosc","","",26,[[]]],[11,"clk_sys_rom","","",26,[[]]],[11,"set_clk_sys_rom","","",26,[[]]],[11,"clk_sys_resets","","",26,[[]]],[11,"set_clk_sys_resets","","",26,[[]]],[11,"clk_sys_pwm","","",26,[[]]],[11,"set_clk_sys_pwm","","",26,[[]]],[11,"clk_sys_psm","","",26,[[]]],[11,"set_clk_sys_psm","","",26,[[]]],[11,"clk_sys_pll_usb","","",26,[[]]],[11,"set_clk_sys_pll_usb","","",26,[[]]],[11,"clk_sys_pll_sys","","",26,[[]]],[11,"set_clk_sys_pll_sys","","",26,[[]]],[11,"clk_sys_pio1","","",26,[[]]],[11,"set_clk_sys_pio1","","",26,[[]]],[11,"clk_sys_pio0","","",26,[[]]],[11,"set_clk_sys_pio0","","",26,[[]]],[11,"clk_sys_pads","","",26,[[]]],[11,"set_clk_sys_pads","","",26,[[]]],[11,"clk_sys_vreg_and_chip_reset","","",26,[[]]],[11,"set_clk_sys_vreg_and_chip_reset","","",26,[[]]],[11,"clk_sys_jtag","","",26,[[]]],[11,"set_clk_sys_jtag","","",26,[[]]],[11,"clk_sys_io","","",26,[[]]],[11,"set_clk_sys_io","","",26,[[]]],[11,"clk_sys_i2c1","","",26,[[]]],[11,"set_clk_sys_i2c1","","",26,[[]]],[11,"clk_sys_i2c0","","",26,[[]]],[11,"set_clk_sys_i2c0","","",26,[[]]],[11,"clk_sys_dma","","",26,[[]]],[11,"set_clk_sys_dma","","",26,[[]]],[11,"clk_sys_busfabric","","",26,[[]]],[11,"set_clk_sys_busfabric","","",26,[[]]],[11,"clk_sys_busctrl","","",26,[[]]],[11,"set_clk_sys_busctrl","","",26,[[]]],[11,"clk_sys_adc","","",26,[[]]],[11,"set_clk_sys_adc","","",26,[[]]],[11,"clk_adc_adc","","",26,[[]]],[11,"set_clk_adc_adc","","",26,[[]]],[11,"clk_sys_clocks","","",26,[[]]],[11,"set_clk_sys_clocks","","",26,[[]]],[3,"ClkGpout3Ctrl","","Clock control, can be changed on-the-fly (except for …",null,null],[11,"to_bits","","",27,[[]]],[11,"from_bits","","",27,[[],["clkgpout3ctrl",3]]],[11,"nudge","","An edge on this signal shifts the phase of the output by …",27,[[]]],[11,"set_nudge","","An edge on this signal shifts the phase of the output by …",27,[[]]],[11,"phase","","This delays the enable signal by up to 3 cycles of the …",27,[[]]],[11,"set_phase","","This delays the enable signal by up to 3 cycles of the …",27,[[]]],[11,"dc50","","Enables duty cycle correction for odd divisors",27,[[]]],[11,"set_dc50","","Enables duty cycle correction for odd divisors",27,[[]]],[11,"enable","","Starts and stops the clock generator cleanly",27,[[]]],[11,"set_enable","","Starts and stops the clock generator cleanly",27,[[]]],[11,"kill","","Asynchronously kills the clock generator",27,[[]]],[11,"set_kill","","Asynchronously kills the clock generator",27,[[]]],[11,"auxsrc","","Selects the auxiliary clock source, will glitch when …",27,[[],["clkgpout3ctrlauxsrc",3]]],[11,"set_auxsrc","","Selects the auxiliary clock source, will glitch when …",27,[[["clkgpout3ctrlauxsrc",3]]]],[3,"ClkAdcDiv","","Clock divisor, can be changed on-the-fly",null,null],[11,"to_bits","","",28,[[]]],[11,"from_bits","","",28,[[],["clkadcdiv",3]]],[11,"int","","Integer component of the divisor, 0 -> divide by 2^16",28,[[]]],[11,"set_int","","Integer component of the divisor, 0 -> divide by 2^16",28,[[]]],[3,"ClkSysDiv","","Clock divisor, can be changed on-the-fly",null,null],[11,"to_bits","","",29,[[]]],[11,"from_bits","","",29,[[],["clksysdiv",3]]],[11,"int","","Integer component of the divisor, 0 -> divide by 2^16",29,[[]]],[11,"set_int","","Integer component of the divisor, 0 -> divide by 2^16",29,[[]]],[11,"frac","","Fractional component of the divisor",29,[[]]],[11,"set_frac","","Fractional component of the divisor",29,[[]]],[3,"Fc0Interval","","The test interval is 0.98us * 2<strong>interval, but let\'s call …",null,null],[11,"to_bits","","",30,[[]]],[11,"from_bits","","",30,[[],["fc0interval",3]]],[11,"fc0_interval","","",30,[[]]],[11,"set_fc0_interval","","",30,[[]]],[3,"ClkSysResusCtrl","","",null,null],[11,"to_bits","","",31,[[]]],[11,"from_bits","","",31,[[],["clksysresusctrl",3]]],[11,"clear","","For clearing the resus after the fault that triggered it …",31,[[]]],[11,"set_clear","","For clearing the resus after the fault that triggered it …",31,[[]]],[11,"frce","","Force a resus, for test purposes only",31,[[]]],[11,"set_frce","","Force a resus, for test purposes only",31,[[]]],[11,"enable","","Enable resus",31,[[]]],[11,"set_enable","","Enable resus",31,[[]]],[11,"timeout","","This is expressed as a number of clk_ref cycles and must …",31,[[]]],[11,"set_timeout","","This is expressed as a number of clk_ref cycles and must …",31,[[]]],[3,"SleepEn0","","enable clock in sleep mode",null,null],[11,"to_bits","","",32,[[]]],[11,"from_bits","","",32,[[],["sleepen0",3]]],[11,"clk_sys_sram3","","",32,[[]]],[11,"set_clk_sys_sram3","","",32,[[]]],[11,"clk_sys_sram2","","",32,[[]]],[11,"set_clk_sys_sram2","","",32,[[]]],[11,"clk_sys_sram1","","",32,[[]]],[11,"set_clk_sys_sram1","","",32,[[]]],[11,"clk_sys_sram0","","",32,[[]]],[11,"set_clk_sys_sram0","","",32,[[]]],[11,"clk_sys_spi1","","",32,[[]]],[11,"set_clk_sys_spi1","","",32,[[]]],[11,"clk_peri_spi1","","",32,[[]]],[11,"set_clk_peri_spi1","","",32,[[]]],[11,"clk_sys_spi0","","",32,[[]]],[11,"set_clk_sys_spi0","","",32,[[]]],[11,"clk_peri_spi0","","",32,[[]]],[11,"set_clk_peri_spi0","","",32,[[]]],[11,"clk_sys_sio","","",32,[[]]],[11,"set_clk_sys_sio","","",32,[[]]],[11,"clk_sys_rtc","","",32,[[]]],[11,"set_clk_sys_rtc","","",32,[[]]],[11,"clk_rtc_rtc","","",32,[[]]],[11,"set_clk_rtc_rtc","","",32,[[]]],[11,"clk_sys_rosc","","",32,[[]]],[11,"set_clk_sys_rosc","","",32,[[]]],[11,"clk_sys_rom","","",32,[[]]],[11,"set_clk_sys_rom","","",32,[[]]],[11,"clk_sys_resets","","",32,[[]]],[11,"set_clk_sys_resets","","",32,[[]]],[11,"clk_sys_pwm","","",32,[[]]],[11,"set_clk_sys_pwm","","",32,[[]]],[11,"clk_sys_psm","","",32,[[]]],[11,"set_clk_sys_psm","","",32,[[]]],[11,"clk_sys_pll_usb","","",32,[[]]],[11,"set_clk_sys_pll_usb","","",32,[[]]],[11,"clk_sys_pll_sys","","",32,[[]]],[11,"set_clk_sys_pll_sys","","",32,[[]]],[11,"clk_sys_pio1","","",32,[[]]],[11,"set_clk_sys_pio1","","",32,[[]]],[11,"clk_sys_pio0","","",32,[[]]],[11,"set_clk_sys_pio0","","",32,[[]]],[11,"clk_sys_pads","","",32,[[]]],[11,"set_clk_sys_pads","","",32,[[]]],[11,"clk_sys_vreg_and_chip_reset","","",32,[[]]],[11,"set_clk_sys_vreg_and_chip_reset","","",32,[[]]],[11,"clk_sys_jtag","","",32,[[]]],[11,"set_clk_sys_jtag","","",32,[[]]],[11,"clk_sys_io","","",32,[[]]],[11,"set_clk_sys_io","","",32,[[]]],[11,"clk_sys_i2c1","","",32,[[]]],[11,"set_clk_sys_i2c1","","",32,[[]]],[11,"clk_sys_i2c0","","",32,[[]]],[11,"set_clk_sys_i2c0","","",32,[[]]],[11,"clk_sys_dma","","",32,[[]]],[11,"set_clk_sys_dma","","",32,[[]]],[11,"clk_sys_busfabric","","",32,[[]]],[11,"set_clk_sys_busfabric","","",32,[[]]],[11,"clk_sys_busctrl","","",32,[[]]],[11,"set_clk_sys_busctrl","","",32,[[]]],[11,"clk_sys_adc","","",32,[[]]],[11,"set_clk_sys_adc","","",32,[[]]],[11,"clk_adc_adc","","",32,[[]]],[11,"set_clk_adc_adc","","",32,[[]]],[11,"clk_sys_clocks","","",32,[[]]],[11,"set_clk_sys_clocks","","",32,[[]]],[3,"ClkPeriCtrl","","Clock control, can be changed on-the-fly (except for …",null,null],[11,"to_bits","","",33,[[]]],[11,"from_bits","","",33,[[],["clkperictrl",3]]],[11,"enable","","Starts and stops the clock generator cleanly",33,[[]]],[11,"set_enable","","Starts and stops the clock generator cleanly",33,[[]]],[11,"kill","","Asynchronously kills the clock generator",33,[[]]],[11,"set_kill","","Asynchronously kills the clock generator",33,[[]]],[11,"auxsrc","","Selects the auxiliary clock source, will glitch when …",33,[[],["clkperictrlauxsrc",3]]],[11,"set_auxsrc","","Selects the auxiliary clock source, will glitch when …",33,[[["clkperictrlauxsrc",3]]]],[3,"ClkSysCtrl","","Clock control, can be changed on-the-fly (except for …",null,null],[11,"to_bits","","",34,[[]]],[11,"from_bits","","",34,[[],["clksysctrl",3]]],[11,"auxsrc","","Selects the auxiliary clock source, will glitch when …",34,[[],["clksysctrlauxsrc",3]]],[11,"set_auxsrc","","Selects the auxiliary clock source, will glitch when …",34,[[["clksysctrlauxsrc",3]]]],[11,"src","","Selects the clock source glitchlessly, can be changed …",34,[[],["clksysctrlsrc",3]]],[11,"set_src","","Selects the clock source glitchlessly, can be changed …",34,[[["clksysctrlsrc",3]]]],[3,"ClkRtcCtrl","","Clock control, can be changed on-the-fly (except for …",null,null],[11,"to_bits","","",35,[[]]],[11,"from_bits","","",35,[[],["clkrtcctrl",3]]],[11,"nudge","","An edge on this signal shifts the phase of the output by …",35,[[]]],[11,"set_nudge","","An edge on this signal shifts the phase of the output by …",35,[[]]],[11,"phase","","This delays the enable signal by up to 3 cycles of the …",35,[[]]],[11,"set_phase","","This delays the enable signal by up to 3 cycles of the …",35,[[]]],[11,"enable","","Starts and stops the clock generator cleanly",35,[[]]],[11,"set_enable","","Starts and stops the clock generator cleanly",35,[[]]],[11,"kill","","Asynchronously kills the clock generator",35,[[]]],[11,"set_kill","","Asynchronously kills the clock generator",35,[[]]],[11,"auxsrc","","Selects the auxiliary clock source, will glitch when …",35,[[],["clkrtcctrlauxsrc",3]]],[11,"set_auxsrc","","Selects the auxiliary clock source, will glitch when …",35,[[["clkrtcctrlauxsrc",3]]]],[3,"Enabled1","","indicates the state of the clock enable",null,null],[11,"to_bits","","",36,[[]]],[11,"from_bits","","",36,[[],["enabled1",3]]],[11,"clk_sys_xosc","","",36,[[]]],[11,"set_clk_sys_xosc","","",36,[[]]],[11,"clk_sys_xip","","",36,[[]]],[11,"set_clk_sys_xip","","",36,[[]]],[11,"clk_sys_watchdog","","",36,[[]]],[11,"set_clk_sys_watchdog","","",36,[[]]],[11,"clk_usb_usbctrl","","",36,[[]]],[11,"set_clk_usb_usbctrl","","",36,[[]]],[11,"clk_sys_usbctrl","","",36,[[]]],[11,"set_clk_sys_usbctrl","","",36,[[]]],[11,"clk_sys_uart1","","",36,[[]]],[11,"set_clk_sys_uart1","","",36,[[]]],[11,"clk_peri_uart1","","",36,[[]]],[11,"set_clk_peri_uart1","","",36,[[]]],[11,"clk_sys_uart0","","",36,[[]]],[11,"set_clk_sys_uart0","","",36,[[]]],[11,"clk_peri_uart0","","",36,[[]]],[11,"set_clk_peri_uart0","","",36,[[]]],[11,"clk_sys_timer","","",36,[[]]],[11,"set_clk_sys_timer","","",36,[[]]],[11,"clk_sys_tbman","","",36,[[]]],[11,"set_clk_sys_tbman","","",36,[[]]],[11,"clk_sys_sysinfo","","",36,[[]]],[11,"set_clk_sys_sysinfo","","",36,[[]]],[11,"clk_sys_syscfg","","",36,[[]]],[11,"set_clk_sys_syscfg","","",36,[[]]],[11,"clk_sys_sram5","","",36,[[]]],[11,"set_clk_sys_sram5","","",36,[[]]],[11,"clk_sys_sram4","","",36,[[]]],[11,"set_clk_sys_sram4","","",36,[[]]],[3,"ClkGpout3Div","","Clock divisor, can be changed on-the-fly",null,null],[11,"to_bits","","",37,[[]]],[11,"from_bits","","",37,[[],["clkgpout3div",3]]],[11,"int","","Integer component of the divisor, 0 -> divide by 2^16",37,[[]]],[11,"set_int","","Integer component of the divisor, 0 -> divide by 2^16",37,[[]]],[11,"frac","","Fractional component of the divisor",37,[[]]],[11,"set_frac","","Fractional component of the divisor",37,[[]]],[3,"WakeEn1","","enable clock in wake mode",null,null],[11,"to_bits","","",38,[[]]],[11,"from_bits","","",38,[[],["wakeen1",3]]],[11,"clk_sys_xosc","","",38,[[]]],[11,"set_clk_sys_xosc","","",38,[[]]],[11,"clk_sys_xip","","",38,[[]]],[11,"set_clk_sys_xip","","",38,[[]]],[11,"clk_sys_watchdog","","",38,[[]]],[11,"set_clk_sys_watchdog","","",38,[[]]],[11,"clk_usb_usbctrl","","",38,[[]]],[11,"set_clk_usb_usbctrl","","",38,[[]]],[11,"clk_sys_usbctrl","","",38,[[]]],[11,"set_clk_sys_usbctrl","","",38,[[]]],[11,"clk_sys_uart1","","",38,[[]]],[11,"set_clk_sys_uart1","","",38,[[]]],[11,"clk_peri_uart1","","",38,[[]]],[11,"set_clk_peri_uart1","","",38,[[]]],[11,"clk_sys_uart0","","",38,[[]]],[11,"set_clk_sys_uart0","","",38,[[]]],[11,"clk_peri_uart0","","",38,[[]]],[11,"set_clk_peri_uart0","","",38,[[]]],[11,"clk_sys_timer","","",38,[[]]],[11,"set_clk_sys_timer","","",38,[[]]],[11,"clk_sys_tbman","","",38,[[]]],[11,"set_clk_sys_tbman","","",38,[[]]],[11,"clk_sys_sysinfo","","",38,[[]]],[11,"set_clk_sys_sysinfo","","",38,[[]]],[11,"clk_sys_syscfg","","",38,[[]]],[11,"set_clk_sys_syscfg","","",38,[[]]],[11,"clk_sys_sram5","","",38,[[]]],[11,"set_clk_sys_sram5","","",38,[[]]],[11,"clk_sys_sram4","","",38,[[]]],[11,"set_clk_sys_sram4","","",38,[[]]],[3,"ClkRefCtrl","","Clock control, can be changed on-the-fly (except for …",null,null],[11,"to_bits","","",39,[[]]],[11,"from_bits","","",39,[[],["clkrefctrl",3]]],[11,"auxsrc","","Selects the auxiliary clock source, will glitch when …",39,[[],["clkrefctrlauxsrc",3]]],[11,"set_auxsrc","","Selects the auxiliary clock source, will glitch when …",39,[[["clkrefctrlauxsrc",3]]]],[11,"src","","Selects the clock source glitchlessly, can be changed …",39,[[],["clkrefctrlsrc",3]]],[11,"set_src","","Selects the clock source glitchlessly, can be changed …",39,[[["clkrefctrlsrc",3]]]],[3,"ClkGpout1Ctrl","","Clock control, can be changed on-the-fly (except for …",null,null],[11,"to_bits","","",40,[[]]],[11,"from_bits","","",40,[[],["clkgpout1ctrl",3]]],[11,"nudge","","An edge on this signal shifts the phase of the output by …",40,[[]]],[11,"set_nudge","","An edge on this signal shifts the phase of the output by …",40,[[]]],[11,"phase","","This delays the enable signal by up to 3 cycles of the …",40,[[]]],[11,"set_phase","","This delays the enable signal by up to 3 cycles of the …",40,[[]]],[11,"dc50","","Enables duty cycle correction for odd divisors",40,[[]]],[11,"set_dc50","","Enables duty cycle correction for odd divisors",40,[[]]],[11,"enable","","Starts and stops the clock generator cleanly",40,[[]]],[11,"set_enable","","Starts and stops the clock generator cleanly",40,[[]]],[11,"kill","","Asynchronously kills the clock generator",40,[[]]],[11,"set_kill","","Asynchronously kills the clock generator",40,[[]]],[11,"auxsrc","","Selects the auxiliary clock source, will glitch when …",40,[[],["clkgpout1ctrlauxsrc",3]]],[11,"set_auxsrc","","Selects the auxiliary clock source, will glitch when …",40,[[["clkgpout1ctrlauxsrc",3]]]],[3,"Fc0Status","","Frequency counter status",null,null],[11,"to_bits","","",41,[[]]],[11,"from_bits","","",41,[[],["fc0status",3]]],[11,"died","","Test clock stopped during test",41,[[]]],[11,"set_died","","Test clock stopped during test",41,[[]]],[11,"fast","","Test clock faster than expected, only valid when …",41,[[]]],[11,"set_fast","","Test clock faster than expected, only valid when …",41,[[]]],[11,"slow","","Test clock slower than expected, only valid when …",41,[[]]],[11,"set_slow","","Test clock slower than expected, only valid when …",41,[[]]],[11,"fail","","Test failed",41,[[]]],[11,"set_fail","","Test failed",41,[[]]],[11,"waiting","","Waiting for test clock to start",41,[[]]],[11,"set_waiting","","Waiting for test clock to start",41,[[]]],[11,"running","","Test running",41,[[]]],[11,"set_running","","Test running",41,[[]]],[11,"done","","Test complete",41,[[]]],[11,"set_done","","Test complete",41,[[]]],[11,"pass","","Test passed",41,[[]]],[11,"set_pass","","Test passed",41,[[]]],[3,"Fc0MinKhz","","Minimum pass frequency in kHz. This is optional. Set to 0 …",null,null],[11,"to_bits","","",42,[[]]],[11,"from_bits","","",42,[[],["fc0minkhz",3]]],[11,"fc0_min_khz","","",42,[[]]],[11,"set_fc0_min_khz","","",42,[[]]],[3,"ClkGpout0Ctrl","","Clock control, can be changed on-the-fly (except for …",null,null],[11,"to_bits","","",43,[[]]],[11,"from_bits","","",43,[[],["clkgpout0ctrl",3]]],[11,"nudge","","An edge on this signal shifts the phase of the output by …",43,[[]]],[11,"set_nudge","","An edge on this signal shifts the phase of the output by …",43,[[]]],[11,"phase","","This delays the enable signal by up to 3 cycles of the …",43,[[]]],[11,"set_phase","","This delays the enable signal by up to 3 cycles of the …",43,[[]]],[11,"dc50","","Enables duty cycle correction for odd divisors",43,[[]]],[11,"set_dc50","","Enables duty cycle correction for odd divisors",43,[[]]],[11,"enable","","Starts and stops the clock generator cleanly",43,[[]]],[11,"set_enable","","Starts and stops the clock generator cleanly",43,[[]]],[11,"kill","","Asynchronously kills the clock generator",43,[[]]],[11,"set_kill","","Asynchronously kills the clock generator",43,[[]]],[11,"auxsrc","","Selects the auxiliary clock source, will glitch when …",43,[[],["clkgpout0ctrlauxsrc",3]]],[11,"set_auxsrc","","Selects the auxiliary clock source, will glitch when …",43,[[["clkgpout0ctrlauxsrc",3]]]],[3,"Ints","","Interrupt status after masking & forcing",null,null],[11,"to_bits","","",44,[[]]],[11,"from_bits","","",44,[[],["ints",3]]],[11,"clk_sys_resus","","",44,[[]]],[11,"set_clk_sys_resus","","",44,[[]]],[3,"ClkGpout1Div","","Clock divisor, can be changed on-the-fly",null,null],[11,"to_bits","","",45,[[]]],[11,"from_bits","","",45,[[],["clkgpout1div",3]]],[11,"int","","Integer component of the divisor, 0 -> divide by 2^16",45,[[]]],[11,"set_int","","Integer component of the divisor, 0 -> divide by 2^16",45,[[]]],[11,"frac","","Fractional component of the divisor",45,[[]]],[11,"set_frac","","Fractional component of the divisor",45,[[]]],[3,"Enabled0","","indicates the state of the clock enable",null,null],[11,"to_bits","","",46,[[]]],[11,"from_bits","","",46,[[],["enabled0",3]]],[11,"clk_sys_sram3","","",46,[[]]],[11,"set_clk_sys_sram3","","",46,[[]]],[11,"clk_sys_sram2","","",46,[[]]],[11,"set_clk_sys_sram2","","",46,[[]]],[11,"clk_sys_sram1","","",46,[[]]],[11,"set_clk_sys_sram1","","",46,[[]]],[11,"clk_sys_sram0","","",46,[[]]],[11,"set_clk_sys_sram0","","",46,[[]]],[11,"clk_sys_spi1","","",46,[[]]],[11,"set_clk_sys_spi1","","",46,[[]]],[11,"clk_peri_spi1","","",46,[[]]],[11,"set_clk_peri_spi1","","",46,[[]]],[11,"clk_sys_spi0","","",46,[[]]],[11,"set_clk_sys_spi0","","",46,[[]]],[11,"clk_peri_spi0","","",46,[[]]],[11,"set_clk_peri_spi0","","",46,[[]]],[11,"clk_sys_sio","","",46,[[]]],[11,"set_clk_sys_sio","","",46,[[]]],[11,"clk_sys_rtc","","",46,[[]]],[11,"set_clk_sys_rtc","","",46,[[]]],[11,"clk_rtc_rtc","","",46,[[]]],[11,"set_clk_rtc_rtc","","",46,[[]]],[11,"clk_sys_rosc","","",46,[[]]],[11,"set_clk_sys_rosc","","",46,[[]]],[11,"clk_sys_rom","","",46,[[]]],[11,"set_clk_sys_rom","","",46,[[]]],[11,"clk_sys_resets","","",46,[[]]],[11,"set_clk_sys_resets","","",46,[[]]],[11,"clk_sys_pwm","","",46,[[]]],[11,"set_clk_sys_pwm","","",46,[[]]],[11,"clk_sys_psm","","",46,[[]]],[11,"set_clk_sys_psm","","",46,[[]]],[11,"clk_sys_pll_usb","","",46,[[]]],[11,"set_clk_sys_pll_usb","","",46,[[]]],[11,"clk_sys_pll_sys","","",46,[[]]],[11,"set_clk_sys_pll_sys","","",46,[[]]],[11,"clk_sys_pio1","","",46,[[]]],[11,"set_clk_sys_pio1","","",46,[[]]],[11,"clk_sys_pio0","","",46,[[]]],[11,"set_clk_sys_pio0","","",46,[[]]],[11,"clk_sys_pads","","",46,[[]]],[11,"set_clk_sys_pads","","",46,[[]]],[11,"clk_sys_vreg_and_chip_reset","","",46,[[]]],[11,"set_clk_sys_vreg_and_chip_reset","","",46,[[]]],[11,"clk_sys_jtag","","",46,[[]]],[11,"set_clk_sys_jtag","","",46,[[]]],[11,"clk_sys_io","","",46,[[]]],[11,"set_clk_sys_io","","",46,[[]]],[11,"clk_sys_i2c1","","",46,[[]]],[11,"set_clk_sys_i2c1","","",46,[[]]],[11,"clk_sys_i2c0","","",46,[[]]],[11,"set_clk_sys_i2c0","","",46,[[]]],[11,"clk_sys_dma","","",46,[[]]],[11,"set_clk_sys_dma","","",46,[[]]],[11,"clk_sys_busfabric","","",46,[[]]],[11,"set_clk_sys_busfabric","","",46,[[]]],[11,"clk_sys_busctrl","","",46,[[]]],[11,"set_clk_sys_busctrl","","",46,[[]]],[11,"clk_sys_adc","","",46,[[]]],[11,"set_clk_sys_adc","","",46,[[]]],[11,"clk_adc_adc","","",46,[[]]],[11,"set_clk_adc_adc","","",46,[[]]],[11,"clk_sys_clocks","","",46,[[]]],[11,"set_clk_sys_clocks","","",46,[[]]],[3,"ClkGpout2Ctrl","","Clock control, can be changed on-the-fly (except for …",null,null],[11,"to_bits","","",47,[[]]],[11,"from_bits","","",47,[[],["clkgpout2ctrl",3]]],[11,"nudge","","An edge on this signal shifts the phase of the output by …",47,[[]]],[11,"set_nudge","","An edge on this signal shifts the phase of the output by …",47,[[]]],[11,"phase","","This delays the enable signal by up to 3 cycles of the …",47,[[]]],[11,"set_phase","","This delays the enable signal by up to 3 cycles of the …",47,[[]]],[11,"dc50","","Enables duty cycle correction for odd divisors",47,[[]]],[11,"set_dc50","","Enables duty cycle correction for odd divisors",47,[[]]],[11,"enable","","Starts and stops the clock generator cleanly",47,[[]]],[11,"set_enable","","Starts and stops the clock generator cleanly",47,[[]]],[11,"kill","","Asynchronously kills the clock generator",47,[[]]],[11,"set_kill","","Asynchronously kills the clock generator",47,[[]]],[11,"auxsrc","","Selects the auxiliary clock source, will glitch when …",47,[[],["clkgpout2ctrlauxsrc",3]]],[11,"set_auxsrc","","Selects the auxiliary clock source, will glitch when …",47,[[["clkgpout2ctrlauxsrc",3]]]],[3,"Fc0Result","","Result of frequency measurement, only valid when …",null,null],[11,"to_bits","","",48,[[]]],[11,"from_bits","","",48,[[],["fc0result",3]]],[11,"khz","","",48,[[]]],[11,"set_khz","","",48,[[]]],[11,"frac","","",48,[[]]],[11,"set_frac","","",48,[[]]],[3,"Fc0Src","","Clock sent to frequency counter, set to 0 when not …",null,null],[11,"to_bits","","",49,[[]]],[11,"from_bits","","",49,[[],["fc0src",3]]],[11,"fc0_src","","",49,[[],["fc0srcfc0src",3]]],[11,"set_fc0_src","","",49,[[["fc0srcfc0src",3]]]],[3,"Fc0Delay","","Delays the start of frequency counting to allow the mux …",null,null],[11,"to_bits","","",50,[[]]],[11,"from_bits","","",50,[[],["fc0delay",3]]],[11,"fc0_delay","","",50,[[]]],[11,"set_fc0_delay","","",50,[[]]],[3,"ClkRtcDiv","","Clock divisor, can be changed on-the-fly",null,null],[11,"to_bits","","",51,[[]]],[11,"from_bits","","",51,[[],["clkrtcdiv",3]]],[11,"int","","Integer component of the divisor, 0 -> divide by 2^16",51,[[]]],[11,"set_int","","Integer component of the divisor, 0 -> divide by 2^16",51,[[]]],[11,"frac","","Fractional component of the divisor",51,[[]]],[11,"set_frac","","Fractional component of the divisor",51,[[]]],[3,"ClkUsbDiv","","Clock divisor, can be changed on-the-fly",null,null],[11,"to_bits","","",52,[[]]],[11,"from_bits","","",52,[[],["clkusbdiv",3]]],[11,"int","","Integer component of the divisor, 0 -> divide by 2^16",52,[[]]],[11,"set_int","","Integer component of the divisor, 0 -> divide by 2^16",52,[[]]],[3,"Inte","","Interrupt Enable",null,null],[11,"to_bits","","",53,[[]]],[11,"from_bits","","",53,[[],["inte",3]]],[11,"clk_sys_resus","","",53,[[]]],[11,"set_clk_sys_resus","","",53,[[]]],[3,"Fc0RefKhz","","Reference clock frequency in kHz",null,null],[11,"to_bits","","",54,[[]]],[11,"from_bits","","",54,[[],["fc0refkhz",3]]],[11,"fc0_ref_khz","","",54,[[]]],[11,"set_fc0_ref_khz","","",54,[[]]],[3,"Fc0MaxKhz","","Maximum pass frequency in kHz. This is optional. Set to …",null,null],[11,"to_bits","","",55,[[]]],[11,"from_bits","","",55,[[],["fc0maxkhz",3]]],[11,"fc0_max_khz","","",55,[[]]],[11,"set_fc0_max_khz","","",55,[[]]],[3,"Intf","","Interrupt Force",null,null],[11,"to_bits","","",56,[[]]],[11,"from_bits","","",56,[[],["intf",3]]],[11,"clk_sys_resus","","",56,[[]]],[11,"set_clk_sys_resus","","",56,[[]]],[3,"SleepEn1","","enable clock in sleep mode",null,null],[11,"to_bits","","",57,[[]]],[11,"from_bits","","",57,[[],["sleepen1",3]]],[11,"clk_sys_xosc","","",57,[[]]],[11,"set_clk_sys_xosc","","",57,[[]]],[11,"clk_sys_xip","","",57,[[]]],[11,"set_clk_sys_xip","","",57,[[]]],[11,"clk_sys_watchdog","","",57,[[]]],[11,"set_clk_sys_watchdog","","",57,[[]]],[11,"clk_usb_usbctrl","","",57,[[]]],[11,"set_clk_usb_usbctrl","","",57,[[]]],[11,"clk_sys_usbctrl","","",57,[[]]],[11,"set_clk_sys_usbctrl","","",57,[[]]],[11,"clk_sys_uart1","","",57,[[]]],[11,"set_clk_sys_uart1","","",57,[[]]],[11,"clk_peri_uart1","","",57,[[]]],[11,"set_clk_peri_uart1","","",57,[[]]],[11,"clk_sys_uart0","","",57,[[]]],[11,"set_clk_sys_uart0","","",57,[[]]],[11,"clk_peri_uart0","","",57,[[]]],[11,"set_clk_peri_uart0","","",57,[[]]],[11,"clk_sys_timer","","",57,[[]]],[11,"set_clk_sys_timer","","",57,[[]]],[11,"clk_sys_tbman","","",57,[[]]],[11,"set_clk_sys_tbman","","",57,[[]]],[11,"clk_sys_sysinfo","","",57,[[]]],[11,"set_clk_sys_sysinfo","","",57,[[]]],[11,"clk_sys_syscfg","","",57,[[]]],[11,"set_clk_sys_syscfg","","",57,[[]]],[11,"clk_sys_sram5","","",57,[[]]],[11,"set_clk_sys_sram5","","",57,[[]]],[11,"clk_sys_sram4","","",57,[[]]],[11,"set_clk_sys_sram4","","",57,[[]]],[3,"ClkGpout2Div","","Clock divisor, can be changed on-the-fly",null,null],[11,"to_bits","","",58,[[]]],[11,"from_bits","","",58,[[],["clkgpout2div",3]]],[11,"int","","Integer component of the divisor, 0 -> divide by 2^16",58,[[]]],[11,"set_int","","Integer component of the divisor, 0 -> divide by 2^16",58,[[]]],[11,"frac","","Fractional component of the divisor",58,[[]]],[11,"set_frac","","Fractional component of the divisor",58,[[]]],[3,"ClkUsbCtrl","","Clock control, can be changed on-the-fly (except for …",null,null],[11,"to_bits","","",59,[[]]],[11,"from_bits","","",59,[[],["clkusbctrl",3]]],[11,"nudge","","An edge on this signal shifts the phase of the output by …",59,[[]]],[11,"set_nudge","","An edge on this signal shifts the phase of the output by …",59,[[]]],[11,"phase","","This delays the enable signal by up to 3 cycles of the …",59,[[]]],[11,"set_phase","","This delays the enable signal by up to 3 cycles of the …",59,[[]]],[11,"enable","","Starts and stops the clock generator cleanly",59,[[]]],[11,"set_enable","","Starts and stops the clock generator cleanly",59,[[]]],[11,"kill","","Asynchronously kills the clock generator",59,[[]]],[11,"set_kill","","Asynchronously kills the clock generator",59,[[]]],[11,"auxsrc","","Selects the auxiliary clock source, will glitch when …",59,[[],["clkusbctrlauxsrc",3]]],[11,"set_auxsrc","","Selects the auxiliary clock source, will glitch when …",59,[[["clkusbctrlauxsrc",3]]]],[0,"values","rp2040_pac::clocks","",null,null],[3,"ClkGpout2CtrlAuxsrc","rp2040_pac::clocks::values","Clock control, can be changed on-the-fly (except for …",null,null],[11,"to_bits","","",60,[[]]],[11,"from_bits","","",60,[[],["clkgpout2ctrlauxsrc",3]]],[18,"CLKSRC_PLL_SYS","","",60,null],[18,"CLKSRC_GPIN0","","",60,null],[18,"CLKSRC_GPIN1","","",60,null],[18,"CLKSRC_PLL_USB","","",60,null],[18,"ROSC_CLKSRC_PH","","",60,null],[18,"XOSC_CLKSRC","","",60,null],[18,"CLK_SYS","","",60,null],[18,"CLK_USB","","",60,null],[18,"CLK_ADC","","",60,null],[18,"CLK_RTC","","",60,null],[18,"CLK_REF","","",60,null],[3,"ClkGpout0CtrlAuxsrc","","Clock control, can be changed on-the-fly (except for …",null,null],[11,"to_bits","","",61,[[]]],[11,"from_bits","","",61,[[],["clkgpout0ctrlauxsrc",3]]],[18,"CLKSRC_PLL_SYS","","",61,null],[18,"CLKSRC_GPIN0","","",61,null],[18,"CLKSRC_GPIN1","","",61,null],[18,"CLKSRC_PLL_USB","","",61,null],[18,"ROSC_CLKSRC","","",61,null],[18,"XOSC_CLKSRC","","",61,null],[18,"CLK_SYS","","",61,null],[18,"CLK_USB","","",61,null],[18,"CLK_ADC","","",61,null],[18,"CLK_RTC","","",61,null],[18,"CLK_REF","","",61,null],[3,"ClkGpout1CtrlAuxsrc","","Clock control, can be changed on-the-fly (except for …",null,null],[11,"to_bits","","",62,[[]]],[11,"from_bits","","",62,[[],["clkgpout1ctrlauxsrc",3]]],[18,"CLKSRC_PLL_SYS","","",62,null],[18,"CLKSRC_GPIN0","","",62,null],[18,"CLKSRC_GPIN1","","",62,null],[18,"CLKSRC_PLL_USB","","",62,null],[18,"ROSC_CLKSRC","","",62,null],[18,"XOSC_CLKSRC","","",62,null],[18,"CLK_SYS","","",62,null],[18,"CLK_USB","","",62,null],[18,"CLK_ADC","","",62,null],[18,"CLK_RTC","","",62,null],[18,"CLK_REF","","",62,null],[3,"ClkPeriCtrlAuxsrc","","Clock control, can be changed on-the-fly (except for …",null,null],[11,"to_bits","","",63,[[]]],[11,"from_bits","","",63,[[],["clkperictrlauxsrc",3]]],[18,"CLK_SYS","","",63,null],[18,"CLKSRC_PLL_SYS","","",63,null],[18,"CLKSRC_PLL_USB","","",63,null],[18,"ROSC_CLKSRC_PH","","",63,null],[18,"XOSC_CLKSRC","","",63,null],[18,"CLKSRC_GPIN0","","",63,null],[18,"CLKSRC_GPIN1","","",63,null],[3,"ClkSysCtrlSrc","","Clock control, can be changed on-the-fly (except for …",null,null],[11,"to_bits","","",64,[[]]],[11,"from_bits","","",64,[[],["clksysctrlsrc",3]]],[18,"CLK_REF","","",64,null],[18,"CLKSRC_CLK_SYS_AUX","","",64,null],[3,"ClkAdcCtrlAuxsrc","","Clock control, can be changed on-the-fly (except for …",null,null],[11,"to_bits","","",65,[[]]],[11,"from_bits","","",65,[[],["clkadcctrlauxsrc",3]]],[18,"CLKSRC_PLL_USB","","",65,null],[18,"CLKSRC_PLL_SYS","","",65,null],[18,"ROSC_CLKSRC_PH","","",65,null],[18,"XOSC_CLKSRC","","",65,null],[18,"CLKSRC_GPIN0","","",65,null],[18,"CLKSRC_GPIN1","","",65,null],[3,"ClkRefCtrlSrc","","Clock control, can be changed on-the-fly (except for …",null,null],[11,"to_bits","","",66,[[]]],[11,"from_bits","","",66,[[],["clkrefctrlsrc",3]]],[18,"ROSC_CLKSRC_PH","","",66,null],[18,"CLKSRC_CLK_REF_AUX","","",66,null],[18,"XOSC_CLKSRC","","",66,null],[3,"ClkGpout3CtrlAuxsrc","","Clock control, can be changed on-the-fly (except for …",null,null],[11,"to_bits","","",67,[[]]],[11,"from_bits","","",67,[[],["clkgpout3ctrlauxsrc",3]]],[18,"CLKSRC_PLL_SYS","","",67,null],[18,"CLKSRC_GPIN0","","",67,null],[18,"CLKSRC_GPIN1","","",67,null],[18,"CLKSRC_PLL_USB","","",67,null],[18,"ROSC_CLKSRC_PH","","",67,null],[18,"XOSC_CLKSRC","","",67,null],[18,"CLK_SYS","","",67,null],[18,"CLK_USB","","",67,null],[18,"CLK_ADC","","",67,null],[18,"CLK_RTC","","",67,null],[18,"CLK_REF","","",67,null],[3,"ClkRefCtrlAuxsrc","","Clock control, can be changed on-the-fly (except for …",null,null],[11,"to_bits","","",68,[[]]],[11,"from_bits","","",68,[[],["clkrefctrlauxsrc",3]]],[18,"CLKSRC_PLL_USB","","",68,null],[18,"CLKSRC_GPIN0","","",68,null],[18,"CLKSRC_GPIN1","","",68,null],[3,"ClkSysCtrlAuxsrc","","Clock control, can be changed on-the-fly (except for …",null,null],[11,"to_bits","","",69,[[]]],[11,"from_bits","","",69,[[],["clksysctrlauxsrc",3]]],[18,"CLKSRC_PLL_SYS","","",69,null],[18,"CLKSRC_PLL_USB","","",69,null],[18,"ROSC_CLKSRC","","",69,null],[18,"XOSC_CLKSRC","","",69,null],[18,"CLKSRC_GPIN0","","",69,null],[18,"CLKSRC_GPIN1","","",69,null],[3,"ClkUsbCtrlAuxsrc","","Clock control, can be changed on-the-fly (except for …",null,null],[11,"to_bits","","",70,[[]]],[11,"from_bits","","",70,[[],["clkusbctrlauxsrc",3]]],[18,"CLKSRC_PLL_USB","","",70,null],[18,"CLKSRC_PLL_SYS","","",70,null],[18,"ROSC_CLKSRC_PH","","",70,null],[18,"XOSC_CLKSRC","","",70,null],[18,"CLKSRC_GPIN0","","",70,null],[18,"CLKSRC_GPIN1","","",70,null],[3,"Fc0SrcFc0Src","","Clock sent to frequency counter, set to 0 when not …",null,null],[11,"to_bits","","",71,[[]]],[11,"from_bits","","",71,[[],["fc0srcfc0src",3]]],[18,"NULL","","",71,null],[18,"PLL_SYS_CLKSRC_PRIMARY","","",71,null],[18,"PLL_USB_CLKSRC_PRIMARY","","",71,null],[18,"ROSC_CLKSRC","","",71,null],[18,"ROSC_CLKSRC_PH","","",71,null],[18,"XOSC_CLKSRC","","",71,null],[18,"CLKSRC_GPIN0","","",71,null],[18,"CLKSRC_GPIN1","","",71,null],[18,"CLK_REF","","",71,null],[18,"CLK_SYS","","",71,null],[18,"CLK_PERI","","",71,null],[18,"CLK_USB","","",71,null],[18,"CLK_ADC","","",71,null],[18,"CLK_RTC","","",71,null],[3,"ClkRtcCtrlAuxsrc","","Clock control, can be changed on-the-fly (except for …",null,null],[11,"to_bits","","",72,[[]]],[11,"from_bits","","",72,[[],["clkrtcctrlauxsrc",3]]],[18,"CLKSRC_PLL_USB","","",72,null],[18,"CLKSRC_PLL_SYS","","",72,null],[18,"ROSC_CLKSRC_PH","","",72,null],[18,"XOSC_CLKSRC","","",72,null],[18,"CLKSRC_GPIN0","","",72,null],[18,"CLKSRC_GPIN1","","",72,null],[3,"Clocks","rp2040_pac::clocks","",null,null],[11,"from_ptr","","",73,[[]]],[11,"clk_gpout0_ctrl","","Clock control, can be changed on-the-fly (except for …",73,[[],[["clkgpout0ctrl",3],["rw",3],["reg",3]]]],[11,"clk_gpout0_div","","Clock divisor, can be changed on-the-fly",73,[[],[["clkgpout0div",3],["rw",3],["reg",3]]]],[11,"clk_gpout0_selected","","Indicates which src is currently selected (one-hot)",73,[[],[["r",3],["reg",3]]]],[11,"clk_gpout1_ctrl","","Clock control, can be changed on-the-fly (except for …",73,[[],[["clkgpout1ctrl",3],["rw",3],["reg",3]]]],[11,"clk_gpout1_div","","Clock divisor, can be changed on-the-fly",73,[[],[["reg",3],["rw",3],["clkgpout1div",3]]]],[11,"clk_gpout1_selected","","Indicates which src is currently selected (one-hot)",73,[[],[["r",3],["reg",3]]]],[11,"clk_gpout2_ctrl","","Clock control, can be changed on-the-fly (except for …",73,[[],[["clkgpout2ctrl",3],["rw",3],["reg",3]]]],[11,"clk_gpout2_div","","Clock divisor, can be changed on-the-fly",73,[[],[["reg",3],["clkgpout2div",3],["rw",3]]]],[11,"clk_gpout2_selected","","Indicates which src is currently selected (one-hot)",73,[[],[["r",3],["reg",3]]]],[11,"clk_gpout3_ctrl","","Clock control, can be changed on-the-fly (except for …",73,[[],[["clkgpout3ctrl",3],["reg",3],["rw",3]]]],[11,"clk_gpout3_div","","Clock divisor, can be changed on-the-fly",73,[[],[["reg",3],["rw",3],["clkgpout3div",3]]]],[11,"clk_gpout3_selected","","Indicates which src is currently selected (one-hot)",73,[[],[["r",3],["reg",3]]]],[11,"clk_ref_ctrl","","Clock control, can be changed on-the-fly (except for …",73,[[],[["clkrefctrl",3],["reg",3],["rw",3]]]],[11,"clk_ref_div","","Clock divisor, can be changed on-the-fly",73,[[],[["reg",3],["clkrefdiv",3],["rw",3]]]],[11,"clk_ref_selected","","Indicates which src is currently selected (one-hot)",73,[[],[["r",3],["reg",3]]]],[11,"clk_sys_ctrl","","Clock control, can be changed on-the-fly (except for …",73,[[],[["reg",3],["clksysctrl",3],["rw",3]]]],[11,"clk_sys_div","","Clock divisor, can be changed on-the-fly",73,[[],[["reg",3],["clksysdiv",3],["rw",3]]]],[11,"clk_sys_selected","","Indicates which src is currently selected (one-hot)",73,[[],[["r",3],["reg",3]]]],[11,"clk_peri_ctrl","","Clock control, can be changed on-the-fly (except for …",73,[[],[["reg",3],["clkperictrl",3],["rw",3]]]],[11,"clk_peri_selected","","Indicates which src is currently selected (one-hot)",73,[[],[["r",3],["reg",3]]]],[11,"clk_usb_ctrl","","Clock control, can be changed on-the-fly (except for …",73,[[],[["clkusbctrl",3],["reg",3],["rw",3]]]],[11,"clk_usb_div","","Clock divisor, can be changed on-the-fly",73,[[],[["reg",3],["rw",3],["clkusbdiv",3]]]],[11,"clk_usb_selected","","Indicates which src is currently selected (one-hot)",73,[[],[["r",3],["reg",3]]]],[11,"clk_adc_ctrl","","Clock control, can be changed on-the-fly (except for …",73,[[],[["reg",3],["clkadcctrl",3],["rw",3]]]],[11,"clk_adc_div","","Clock divisor, can be changed on-the-fly",73,[[],[["clkadcdiv",3],["reg",3],["rw",3]]]],[11,"clk_adc_selected","","Indicates which src is currently selected (one-hot)",73,[[],[["r",3],["reg",3]]]],[11,"clk_rtc_ctrl","","Clock control, can be changed on-the-fly (except for …",73,[[],[["rw",3],["clkrtcctrl",3],["reg",3]]]],[11,"clk_rtc_div","","Clock divisor, can be changed on-the-fly",73,[[],[["rw",3],["clkrtcdiv",3],["reg",3]]]],[11,"clk_rtc_selected","","Indicates which src is currently selected (one-hot)",73,[[],[["r",3],["reg",3]]]],[11,"clk_sys_resus_ctrl","","",73,[[],[["rw",3],["clksysresusctrl",3],["reg",3]]]],[11,"clk_sys_resus_status","","",73,[[],[["clksysresusstatus",3],["reg",3],["rw",3]]]],[11,"fc0_ref_khz","","Reference clock frequency in kHz",73,[[],[["reg",3],["fc0refkhz",3],["rw",3]]]],[11,"fc0_min_khz","","Minimum pass frequency in kHz. This is optional. Set to 0 …",73,[[],[["reg",3],["fc0minkhz",3],["rw",3]]]],[11,"fc0_max_khz","","Maximum pass frequency in kHz. This is optional. Set to …",73,[[],[["fc0maxkhz",3],["reg",3],["rw",3]]]],[11,"fc0_delay","","Delays the start of frequency counting to allow the mux …",73,[[],[["reg",3],["rw",3],["fc0delay",3]]]],[11,"fc0_interval","","The test interval is 0.98us * 2<strong>interval, but let\'s call …",73,[[],[["reg",3],["rw",3],["fc0interval",3]]]],[11,"fc0_src","","Clock sent to frequency counter, set to 0 when not …",73,[[],[["fc0src",3],["rw",3],["reg",3]]]],[11,"fc0_status","","Frequency counter status",73,[[],[["reg",3],["fc0status",3],["rw",3]]]],[11,"fc0_result","","Result of frequency measurement, only valid when …",73,[[],[["fc0result",3],["rw",3],["reg",3]]]],[11,"wake_en0","","enable clock in wake mode",73,[[],[["reg",3],["wakeen0",3],["rw",3]]]],[11,"wake_en1","","enable clock in wake mode",73,[[],[["reg",3],["wakeen1",3],["rw",3]]]],[11,"sleep_en0","","enable clock in sleep mode",73,[[],[["reg",3],["rw",3],["sleepen0",3]]]],[11,"sleep_en1","","enable clock in sleep mode",73,[[],[["rw",3],["reg",3],["sleepen1",3]]]],[11,"enabled0","","indicates the state of the clock enable",73,[[],[["rw",3],["enabled0",3],["reg",3]]]],[11,"enabled1","","indicates the state of the clock enable",73,[[],[["reg",3],["enabled1",3],["rw",3]]]],[11,"intr","","Raw Interrupts",73,[[],[["reg",3],["intr",3],["rw",3]]]],[11,"inte","","Interrupt Enable",73,[[],[["reg",3],["inte",3],["rw",3]]]],[11,"intf","","Interrupt Force",73,[[],[["intf",3],["rw",3],["reg",3]]]],[11,"ints","","Interrupt status after masking & forcing",73,[[],[["ints",3],["reg",3],["rw",3]]]],[0,"dma","rp2040_pac","",null,null],[0,"fields","rp2040_pac::dma","",null,null],[3,"Ch8DbgCtdreq","rp2040_pac::dma::fields","Read: get channel DREQ counter (i.e. how many accesses …",null,null],[11,"to_bits","","",74,[[]]],[11,"from_bits","","",74,[[],["ch8dbgctdreq",3]]],[11,"ch8_dbg_ctdreq","","",74,[[]]],[11,"set_ch8_dbg_ctdreq","","",74,[[]]],[3,"Ch10DbgCtdreq","","Read: get channel DREQ counter (i.e. how many accesses …",null,null],[11,"to_bits","","",75,[[]]],[11,"from_bits","","",75,[[],["ch10dbgctdreq",3]]],[11,"ch10_dbg_ctdreq","","",75,[[]]],[11,"set_ch10_dbg_ctdreq","","",75,[[]]],[3,"Ch11CtrlTrig","","DMA Channel 11 Control and Status",null,null],[11,"to_bits","","",76,[[]]],[11,"from_bits","","",76,[[],["ch11ctrltrig",3]]],[11,"ahb_error","","Logical OR of the READ_ERROR and WRITE_ERROR flags. The …",76,[[]]],[11,"set_ahb_error","","Logical OR of the READ_ERROR and WRITE_ERROR flags. The …",76,[[]]],[11,"read_error","","If 1, the channel received a read bus error. Write one to …",76,[[]]],[11,"set_read_error","","If 1, the channel received a read bus error. Write one to …",76,[[]]],[11,"write_error","","If 1, the channel received a write bus error. Write one …",76,[[]]],[11,"set_write_error","","If 1, the channel received a write bus error. Write one …",76,[[]]],[11,"busy","","This flag goes high when the channel starts a new …",76,[[]]],[11,"set_busy","","This flag goes high when the channel starts a new …",76,[[]]],[11,"sniff_en","","If 1, this channel\'s data transfers are visible to the …",76,[[]]],[11,"set_sniff_en","","If 1, this channel\'s data transfers are visible to the …",76,[[]]],[11,"bswap","","Apply byte-swap transformation to DMA data. For byte …",76,[[]]],[11,"set_bswap","","Apply byte-swap transformation to DMA data. For byte …",76,[[]]],[11,"irq_quiet","","In QUIET mode, the channel does not generate IRQs at the …",76,[[]]],[11,"set_irq_quiet","","In QUIET mode, the channel does not generate IRQs at the …",76,[[]]],[11,"treq_sel","","Select a Transfer Request signal. The channel uses the …",76,[[],["treqsel",3]]],[11,"set_treq_sel","","Select a Transfer Request signal. The channel uses the …",76,[[["treqsel",3]]]],[11,"chain_to","","When this channel completes, it will trigger the channel …",76,[[]]],[11,"set_chain_to","","When this channel completes, it will trigger the channel …",76,[[]]],[11,"ring_sel","","Select whether RING_SIZE applies to read or write …",76,[[]]],[11,"set_ring_sel","","Select whether RING_SIZE applies to read or write …",76,[[]]],[11,"ring_size","","Size of address wrap region. If 0, don\'t wrap. For values …",76,[[]]],[11,"set_ring_size","","Size of address wrap region. If 0, don\'t wrap. For values …",76,[[]]],[11,"incr_write","","If 1, the write address increments with each transfer. If …",76,[[]]],[11,"set_incr_write","","If 1, the write address increments with each transfer. If …",76,[[]]],[11,"incr_read","","If 1, the read address increments with each transfer. If …",76,[[]]],[11,"set_incr_read","","If 1, the read address increments with each transfer. If …",76,[[]]],[11,"data_size","","Set the size of each bus transfer (byte/halfword/word). …",76,[[],["datasize",3]]],[11,"set_data_size","","Set the size of each bus transfer (byte/halfword/word). …",76,[[["datasize",3]]]],[11,"high_priority","","HIGH_PRIORITY gives a channel preferential treatment in …",76,[[]]],[11,"set_high_priority","","HIGH_PRIORITY gives a channel preferential treatment in …",76,[[]]],[11,"en","","DMA Channel Enable. When 1, the channel will respond to …",76,[[]]],[11,"set_en","","DMA Channel Enable. When 1, the channel will respond to …",76,[[]]],[3,"NChannels","","The number of channels this DMA instance is equipped …",null,null],[11,"to_bits","","",77,[[]]],[11,"from_bits","","",77,[[],["nchannels",3]]],[11,"n_channels","","",77,[[]]],[11,"set_n_channels","","",77,[[]]],[3,"Ch3DbgCtdreq","","Read: get channel DREQ counter (i.e. how many accesses …",null,null],[11,"to_bits","","",78,[[]]],[11,"from_bits","","",78,[[],["ch3dbgctdreq",3]]],[11,"ch3_dbg_ctdreq","","",78,[[]]],[11,"set_ch3_dbg_ctdreq","","",78,[[]]],[3,"Intf1","","Force Interrupts for IRQ 1",null,null],[11,"to_bits","","",79,[[]]],[11,"from_bits","","",79,[[],["intf1",3]]],[11,"intf1","","Write 1s to force the corresponding bits in INTE0. The …",79,[[]]],[11,"set_intf1","","Write 1s to force the corresponding bits in INTE0. The …",79,[[]]],[3,"Ch1DbgCtdreq","","Read: get channel DREQ counter (i.e. how many accesses …",null,null],[11,"to_bits","","",80,[[]]],[11,"from_bits","","",80,[[],["ch1dbgctdreq",3]]],[11,"ch1_dbg_ctdreq","","",80,[[]]],[11,"set_ch1_dbg_ctdreq","","",80,[[]]],[3,"Ints0","","Interrupt Status for IRQ 0",null,null],[11,"to_bits","","",81,[[]]],[11,"from_bits","","",81,[[],["ints0",3]]],[11,"ints0","","Indicates active channel interrupt requests which are …",81,[[]]],[11,"set_ints0","","Indicates active channel interrupt requests which are …",81,[[]]],[3,"Ch2DbgCtdreq","","Read: get channel DREQ counter (i.e. how many accesses …",null,null],[11,"to_bits","","",82,[[]]],[11,"from_bits","","",82,[[],["ch2dbgctdreq",3]]],[11,"ch2_dbg_ctdreq","","",82,[[]]],[11,"set_ch2_dbg_ctdreq","","",82,[[]]],[3,"Ch1CtrlTrig","","DMA Channel 1 Control and Status",null,null],[11,"to_bits","","",83,[[]]],[11,"from_bits","","",83,[[],["ch1ctrltrig",3]]],[11,"ahb_error","","Logical OR of the READ_ERROR and WRITE_ERROR flags. The …",83,[[]]],[11,"set_ahb_error","","Logical OR of the READ_ERROR and WRITE_ERROR flags. The …",83,[[]]],[11,"read_error","","If 1, the channel received a read bus error. Write one to …",83,[[]]],[11,"set_read_error","","If 1, the channel received a read bus error. Write one to …",83,[[]]],[11,"write_error","","If 1, the channel received a write bus error. Write one …",83,[[]]],[11,"set_write_error","","If 1, the channel received a write bus error. Write one …",83,[[]]],[11,"busy","","This flag goes high when the channel starts a new …",83,[[]]],[11,"set_busy","","This flag goes high when the channel starts a new …",83,[[]]],[11,"sniff_en","","If 1, this channel\'s data transfers are visible to the …",83,[[]]],[11,"set_sniff_en","","If 1, this channel\'s data transfers are visible to the …",83,[[]]],[11,"bswap","","Apply byte-swap transformation to DMA data. For byte …",83,[[]]],[11,"set_bswap","","Apply byte-swap transformation to DMA data. For byte …",83,[[]]],[11,"irq_quiet","","In QUIET mode, the channel does not generate IRQs at the …",83,[[]]],[11,"set_irq_quiet","","In QUIET mode, the channel does not generate IRQs at the …",83,[[]]],[11,"treq_sel","","Select a Transfer Request signal. The channel uses the …",83,[[],["treqsel",3]]],[11,"set_treq_sel","","Select a Transfer Request signal. The channel uses the …",83,[[["treqsel",3]]]],[11,"chain_to","","When this channel completes, it will trigger the channel …",83,[[]]],[11,"set_chain_to","","When this channel completes, it will trigger the channel …",83,[[]]],[11,"ring_sel","","Select whether RING_SIZE applies to read or write …",83,[[]]],[11,"set_ring_sel","","Select whether RING_SIZE applies to read or write …",83,[[]]],[11,"ring_size","","Size of address wrap region. If 0, don\'t wrap. For values …",83,[[]]],[11,"set_ring_size","","Size of address wrap region. If 0, don\'t wrap. For values …",83,[[]]],[11,"incr_write","","If 1, the write address increments with each transfer. If …",83,[[]]],[11,"set_incr_write","","If 1, the write address increments with each transfer. If …",83,[[]]],[11,"incr_read","","If 1, the read address increments with each transfer. If …",83,[[]]],[11,"set_incr_read","","If 1, the read address increments with each transfer. If …",83,[[]]],[11,"data_size","","Set the size of each bus transfer (byte/halfword/word). …",83,[[],["datasize",3]]],[11,"set_data_size","","Set the size of each bus transfer (byte/halfword/word). …",83,[[["datasize",3]]]],[11,"high_priority","","HIGH_PRIORITY gives a channel preferential treatment in …",83,[[]]],[11,"set_high_priority","","HIGH_PRIORITY gives a channel preferential treatment in …",83,[[]]],[11,"en","","DMA Channel Enable. When 1, the channel will respond to …",83,[[]]],[11,"set_en","","DMA Channel Enable. When 1, the channel will respond to …",83,[[]]],[3,"ChanAbort","","Abort an in-progress transfer sequence on one or more …",null,null],[11,"to_bits","","",84,[[]]],[11,"from_bits","","",84,[[],["chanabort",3]]],[11,"chan_abort","","Each bit corresponds to a channel. Writing a 1 aborts …",84,[[]]],[11,"set_chan_abort","","Each bit corresponds to a channel. Writing a 1 aborts …",84,[[]]],[3,"Ch0CtrlTrig","","DMA Channel 0 Control and Status",null,null],[11,"to_bits","","",85,[[]]],[11,"from_bits","","",85,[[],["ch0ctrltrig",3]]],[11,"ahb_error","","Logical OR of the READ_ERROR and WRITE_ERROR flags. The …",85,[[]]],[11,"set_ahb_error","","Logical OR of the READ_ERROR and WRITE_ERROR flags. The …",85,[[]]],[11,"read_error","","If 1, the channel received a read bus error. Write one to …",85,[[]]],[11,"set_read_error","","If 1, the channel received a read bus error. Write one to …",85,[[]]],[11,"write_error","","If 1, the channel received a write bus error. Write one …",85,[[]]],[11,"set_write_error","","If 1, the channel received a write bus error. Write one …",85,[[]]],[11,"busy","","This flag goes high when the channel starts a new …",85,[[]]],[11,"set_busy","","This flag goes high when the channel starts a new …",85,[[]]],[11,"sniff_en","","If 1, this channel\'s data transfers are visible to the …",85,[[]]],[11,"set_sniff_en","","If 1, this channel\'s data transfers are visible to the …",85,[[]]],[11,"bswap","","Apply byte-swap transformation to DMA data. For byte …",85,[[]]],[11,"set_bswap","","Apply byte-swap transformation to DMA data. For byte …",85,[[]]],[11,"irq_quiet","","In QUIET mode, the channel does not generate IRQs at the …",85,[[]]],[11,"set_irq_quiet","","In QUIET mode, the channel does not generate IRQs at the …",85,[[]]],[11,"treq_sel","","Select a Transfer Request signal. The channel uses the …",85,[[],["treqsel",3]]],[11,"set_treq_sel","","Select a Transfer Request signal. The channel uses the …",85,[[["treqsel",3]]]],[11,"chain_to","","When this channel completes, it will trigger the channel …",85,[[]]],[11,"set_chain_to","","When this channel completes, it will trigger the channel …",85,[[]]],[11,"ring_sel","","Select whether RING_SIZE applies to read or write …",85,[[]]],[11,"set_ring_sel","","Select whether RING_SIZE applies to read or write …",85,[[]]],[11,"ring_size","","Size of address wrap region. If 0, don\'t wrap. For values …",85,[[]]],[11,"set_ring_size","","Size of address wrap region. If 0, don\'t wrap. For values …",85,[[]]],[11,"incr_write","","If 1, the write address increments with each transfer. If …",85,[[]]],[11,"set_incr_write","","If 1, the write address increments with each transfer. If …",85,[[]]],[11,"incr_read","","If 1, the read address increments with each transfer. If …",85,[[]]],[11,"set_incr_read","","If 1, the read address increments with each transfer. If …",85,[[]]],[11,"data_size","","Set the size of each bus transfer (byte/halfword/word). …",85,[[],["datasize",3]]],[11,"set_data_size","","Set the size of each bus transfer (byte/halfword/word). …",85,[[["datasize",3]]]],[11,"high_priority","","HIGH_PRIORITY gives a channel preferential treatment in …",85,[[]]],[11,"set_high_priority","","HIGH_PRIORITY gives a channel preferential treatment in …",85,[[]]],[11,"en","","DMA Channel Enable. When 1, the channel will respond to …",85,[[]]],[11,"set_en","","DMA Channel Enable. When 1, the channel will respond to …",85,[[]]],[3,"Ch4DbgCtdreq","","Read: get channel DREQ counter (i.e. how many accesses …",null,null],[11,"to_bits","","",86,[[]]],[11,"from_bits","","",86,[[],["ch4dbgctdreq",3]]],[11,"ch4_dbg_ctdreq","","",86,[[]]],[11,"set_ch4_dbg_ctdreq","","",86,[[]]],[3,"Ch7CtrlTrig","","DMA Channel 7 Control and Status",null,null],[11,"to_bits","","",87,[[]]],[11,"from_bits","","",87,[[],["ch7ctrltrig",3]]],[11,"ahb_error","","Logical OR of the READ_ERROR and WRITE_ERROR flags. The …",87,[[]]],[11,"set_ahb_error","","Logical OR of the READ_ERROR and WRITE_ERROR flags. The …",87,[[]]],[11,"read_error","","If 1, the channel received a read bus error. Write one to …",87,[[]]],[11,"set_read_error","","If 1, the channel received a read bus error. Write one to …",87,[[]]],[11,"write_error","","If 1, the channel received a write bus error. Write one …",87,[[]]],[11,"set_write_error","","If 1, the channel received a write bus error. Write one …",87,[[]]],[11,"busy","","This flag goes high when the channel starts a new …",87,[[]]],[11,"set_busy","","This flag goes high when the channel starts a new …",87,[[]]],[11,"sniff_en","","If 1, this channel\'s data transfers are visible to the …",87,[[]]],[11,"set_sniff_en","","If 1, this channel\'s data transfers are visible to the …",87,[[]]],[11,"bswap","","Apply byte-swap transformation to DMA data. For byte …",87,[[]]],[11,"set_bswap","","Apply byte-swap transformation to DMA data. For byte …",87,[[]]],[11,"irq_quiet","","In QUIET mode, the channel does not generate IRQs at the …",87,[[]]],[11,"set_irq_quiet","","In QUIET mode, the channel does not generate IRQs at the …",87,[[]]],[11,"treq_sel","","Select a Transfer Request signal. The channel uses the …",87,[[],["treqsel",3]]],[11,"set_treq_sel","","Select a Transfer Request signal. The channel uses the …",87,[[["treqsel",3]]]],[11,"chain_to","","When this channel completes, it will trigger the channel …",87,[[]]],[11,"set_chain_to","","When this channel completes, it will trigger the channel …",87,[[]]],[11,"ring_sel","","Select whether RING_SIZE applies to read or write …",87,[[]]],[11,"set_ring_sel","","Select whether RING_SIZE applies to read or write …",87,[[]]],[11,"ring_size","","Size of address wrap region. If 0, don\'t wrap. For values …",87,[[]]],[11,"set_ring_size","","Size of address wrap region. If 0, don\'t wrap. For values …",87,[[]]],[11,"incr_write","","If 1, the write address increments with each transfer. If …",87,[[]]],[11,"set_incr_write","","If 1, the write address increments with each transfer. If …",87,[[]]],[11,"incr_read","","If 1, the read address increments with each transfer. If …",87,[[]]],[11,"set_incr_read","","If 1, the read address increments with each transfer. If …",87,[[]]],[11,"data_size","","Set the size of each bus transfer (byte/halfword/word). …",87,[[],["datasize",3]]],[11,"set_data_size","","Set the size of each bus transfer (byte/halfword/word). …",87,[[["datasize",3]]]],[11,"high_priority","","HIGH_PRIORITY gives a channel preferential treatment in …",87,[[]]],[11,"set_high_priority","","HIGH_PRIORITY gives a channel preferential treatment in …",87,[[]]],[11,"en","","DMA Channel Enable. When 1, the channel will respond to …",87,[[]]],[11,"set_en","","DMA Channel Enable. When 1, the channel will respond to …",87,[[]]],[3,"Inte0","","Interrupt Enables for IRQ 0",null,null],[11,"to_bits","","",88,[[]]],[11,"from_bits","","",88,[[],["inte0",3]]],[11,"inte0","","Set bit n to pass interrupts from channel n to DMA IRQ 0.",88,[[]]],[11,"set_inte0","","Set bit n to pass interrupts from channel n to DMA IRQ 0.",88,[[]]],[3,"Ch9DbgCtdreq","","Read: get channel DREQ counter (i.e. how many accesses …",null,null],[11,"to_bits","","",89,[[]]],[11,"from_bits","","",89,[[],["ch9dbgctdreq",3]]],[11,"ch9_dbg_ctdreq","","",89,[[]]],[11,"set_ch9_dbg_ctdreq","","",89,[[]]],[3,"FifoLevels","","Debug RAF, WAF, TDF levels",null,null],[11,"to_bits","","",90,[[]]],[11,"from_bits","","",90,[[],["fifolevels",3]]],[11,"raf_lvl","","Current Read-Address-FIFO fill level",90,[[]]],[11,"set_raf_lvl","","Current Read-Address-FIFO fill level",90,[[]]],[11,"waf_lvl","","Current Write-Address-FIFO fill level",90,[[]]],[11,"set_waf_lvl","","Current Write-Address-FIFO fill level",90,[[]]],[11,"tdf_lvl","","Current Transfer-Data-FIFO fill level",90,[[]]],[11,"set_tdf_lvl","","Current Transfer-Data-FIFO fill level",90,[[]]],[3,"Ch10CtrlTrig","","DMA Channel 10 Control and Status",null,null],[11,"to_bits","","",91,[[]]],[11,"from_bits","","",91,[[],["ch10ctrltrig",3]]],[11,"ahb_error","","Logical OR of the READ_ERROR and WRITE_ERROR flags. The …",91,[[]]],[11,"set_ahb_error","","Logical OR of the READ_ERROR and WRITE_ERROR flags. The …",91,[[]]],[11,"read_error","","If 1, the channel received a read bus error. Write one to …",91,[[]]],[11,"set_read_error","","If 1, the channel received a read bus error. Write one to …",91,[[]]],[11,"write_error","","If 1, the channel received a write bus error. Write one …",91,[[]]],[11,"set_write_error","","If 1, the channel received a write bus error. Write one …",91,[[]]],[11,"busy","","This flag goes high when the channel starts a new …",91,[[]]],[11,"set_busy","","This flag goes high when the channel starts a new …",91,[[]]],[11,"sniff_en","","If 1, this channel\'s data transfers are visible to the …",91,[[]]],[11,"set_sniff_en","","If 1, this channel\'s data transfers are visible to the …",91,[[]]],[11,"bswap","","Apply byte-swap transformation to DMA data. For byte …",91,[[]]],[11,"set_bswap","","Apply byte-swap transformation to DMA data. For byte …",91,[[]]],[11,"irq_quiet","","In QUIET mode, the channel does not generate IRQs at the …",91,[[]]],[11,"set_irq_quiet","","In QUIET mode, the channel does not generate IRQs at the …",91,[[]]],[11,"treq_sel","","Select a Transfer Request signal. The channel uses the …",91,[[],["treqsel",3]]],[11,"set_treq_sel","","Select a Transfer Request signal. The channel uses the …",91,[[["treqsel",3]]]],[11,"chain_to","","When this channel completes, it will trigger the channel …",91,[[]]],[11,"set_chain_to","","When this channel completes, it will trigger the channel …",91,[[]]],[11,"ring_sel","","Select whether RING_SIZE applies to read or write …",91,[[]]],[11,"set_ring_sel","","Select whether RING_SIZE applies to read or write …",91,[[]]],[11,"ring_size","","Size of address wrap region. If 0, don\'t wrap. For values …",91,[[]]],[11,"set_ring_size","","Size of address wrap region. If 0, don\'t wrap. For values …",91,[[]]],[11,"incr_write","","If 1, the write address increments with each transfer. If …",91,[[]]],[11,"set_incr_write","","If 1, the write address increments with each transfer. If …",91,[[]]],[11,"incr_read","","If 1, the read address increments with each transfer. If …",91,[[]]],[11,"set_incr_read","","If 1, the read address increments with each transfer. If …",91,[[]]],[11,"data_size","","Set the size of each bus transfer (byte/halfword/word). …",91,[[],["datasize",3]]],[11,"set_data_size","","Set the size of each bus transfer (byte/halfword/word). …",91,[[["datasize",3]]]],[11,"high_priority","","HIGH_PRIORITY gives a channel preferential treatment in …",91,[[]]],[11,"set_high_priority","","HIGH_PRIORITY gives a channel preferential treatment in …",91,[[]]],[11,"en","","DMA Channel Enable. When 1, the channel will respond to …",91,[[]]],[11,"set_en","","DMA Channel Enable. When 1, the channel will respond to …",91,[[]]],[3,"Ch6CtrlTrig","","DMA Channel 6 Control and Status",null,null],[11,"to_bits","","",92,[[]]],[11,"from_bits","","",92,[[],["ch6ctrltrig",3]]],[11,"ahb_error","","Logical OR of the READ_ERROR and WRITE_ERROR flags. The …",92,[[]]],[11,"set_ahb_error","","Logical OR of the READ_ERROR and WRITE_ERROR flags. The …",92,[[]]],[11,"read_error","","If 1, the channel received a read bus error. Write one to …",92,[[]]],[11,"set_read_error","","If 1, the channel received a read bus error. Write one to …",92,[[]]],[11,"write_error","","If 1, the channel received a write bus error. Write one …",92,[[]]],[11,"set_write_error","","If 1, the channel received a write bus error. Write one …",92,[[]]],[11,"busy","","This flag goes high when the channel starts a new …",92,[[]]],[11,"set_busy","","This flag goes high when the channel starts a new …",92,[[]]],[11,"sniff_en","","If 1, this channel\'s data transfers are visible to the …",92,[[]]],[11,"set_sniff_en","","If 1, this channel\'s data transfers are visible to the …",92,[[]]],[11,"bswap","","Apply byte-swap transformation to DMA data. For byte …",92,[[]]],[11,"set_bswap","","Apply byte-swap transformation to DMA data. For byte …",92,[[]]],[11,"irq_quiet","","In QUIET mode, the channel does not generate IRQs at the …",92,[[]]],[11,"set_irq_quiet","","In QUIET mode, the channel does not generate IRQs at the …",92,[[]]],[11,"treq_sel","","Select a Transfer Request signal. The channel uses the …",92,[[],["treqsel",3]]],[11,"set_treq_sel","","Select a Transfer Request signal. The channel uses the …",92,[[["treqsel",3]]]],[11,"chain_to","","When this channel completes, it will trigger the channel …",92,[[]]],[11,"set_chain_to","","When this channel completes, it will trigger the channel …",92,[[]]],[11,"ring_sel","","Select whether RING_SIZE applies to read or write …",92,[[]]],[11,"set_ring_sel","","Select whether RING_SIZE applies to read or write …",92,[[]]],[11,"ring_size","","Size of address wrap region. If 0, don\'t wrap. For values …",92,[[]]],[11,"set_ring_size","","Size of address wrap region. If 0, don\'t wrap. For values …",92,[[]]],[11,"incr_write","","If 1, the write address increments with each transfer. If …",92,[[]]],[11,"set_incr_write","","If 1, the write address increments with each transfer. If …",92,[[]]],[11,"incr_read","","If 1, the read address increments with each transfer. If …",92,[[]]],[11,"set_incr_read","","If 1, the read address increments with each transfer. If …",92,[[]]],[11,"data_size","","Set the size of each bus transfer (byte/halfword/word). …",92,[[],["datasize",3]]],[11,"set_data_size","","Set the size of each bus transfer (byte/halfword/word). …",92,[[["datasize",3]]]],[11,"high_priority","","HIGH_PRIORITY gives a channel preferential treatment in …",92,[[]]],[11,"set_high_priority","","HIGH_PRIORITY gives a channel preferential treatment in …",92,[[]]],[11,"en","","DMA Channel Enable. When 1, the channel will respond to …",92,[[]]],[11,"set_en","","DMA Channel Enable. When 1, the channel will respond to …",92,[[]]],[3,"Ch3CtrlTrig","","DMA Channel 3 Control and Status",null,null],[11,"to_bits","","",93,[[]]],[11,"from_bits","","",93,[[],["ch3ctrltrig",3]]],[11,"ahb_error","","Logical OR of the READ_ERROR and WRITE_ERROR flags. The …",93,[[]]],[11,"set_ahb_error","","Logical OR of the READ_ERROR and WRITE_ERROR flags. The …",93,[[]]],[11,"read_error","","If 1, the channel received a read bus error. Write one to …",93,[[]]],[11,"set_read_error","","If 1, the channel received a read bus error. Write one to …",93,[[]]],[11,"write_error","","If 1, the channel received a write bus error. Write one …",93,[[]]],[11,"set_write_error","","If 1, the channel received a write bus error. Write one …",93,[[]]],[11,"busy","","This flag goes high when the channel starts a new …",93,[[]]],[11,"set_busy","","This flag goes high when the channel starts a new …",93,[[]]],[11,"sniff_en","","If 1, this channel\'s data transfers are visible to the …",93,[[]]],[11,"set_sniff_en","","If 1, this channel\'s data transfers are visible to the …",93,[[]]],[11,"bswap","","Apply byte-swap transformation to DMA data. For byte …",93,[[]]],[11,"set_bswap","","Apply byte-swap transformation to DMA data. For byte …",93,[[]]],[11,"irq_quiet","","In QUIET mode, the channel does not generate IRQs at the …",93,[[]]],[11,"set_irq_quiet","","In QUIET mode, the channel does not generate IRQs at the …",93,[[]]],[11,"treq_sel","","Select a Transfer Request signal. The channel uses the …",93,[[],["treqsel",3]]],[11,"set_treq_sel","","Select a Transfer Request signal. The channel uses the …",93,[[["treqsel",3]]]],[11,"chain_to","","When this channel completes, it will trigger the channel …",93,[[]]],[11,"set_chain_to","","When this channel completes, it will trigger the channel …",93,[[]]],[11,"ring_sel","","Select whether RING_SIZE applies to read or write …",93,[[]]],[11,"set_ring_sel","","Select whether RING_SIZE applies to read or write …",93,[[]]],[11,"ring_size","","Size of address wrap region. If 0, don\'t wrap. For values …",93,[[]]],[11,"set_ring_size","","Size of address wrap region. If 0, don\'t wrap. For values …",93,[[]]],[11,"incr_write","","If 1, the write address increments with each transfer. If …",93,[[]]],[11,"set_incr_write","","If 1, the write address increments with each transfer. If …",93,[[]]],[11,"incr_read","","If 1, the read address increments with each transfer. If …",93,[[]]],[11,"set_incr_read","","If 1, the read address increments with each transfer. If …",93,[[]]],[11,"data_size","","Set the size of each bus transfer (byte/halfword/word). …",93,[[],["datasize",3]]],[11,"set_data_size","","Set the size of each bus transfer (byte/halfword/word). …",93,[[["datasize",3]]]],[11,"high_priority","","HIGH_PRIORITY gives a channel preferential treatment in …",93,[[]]],[11,"set_high_priority","","HIGH_PRIORITY gives a channel preferential treatment in …",93,[[]]],[11,"en","","DMA Channel Enable. When 1, the channel will respond to …",93,[[]]],[11,"set_en","","DMA Channel Enable. When 1, the channel will respond to …",93,[[]]],[3,"Ch5CtrlTrig","","DMA Channel 5 Control and Status",null,null],[11,"to_bits","","",94,[[]]],[11,"from_bits","","",94,[[],["ch5ctrltrig",3]]],[11,"ahb_error","","Logical OR of the READ_ERROR and WRITE_ERROR flags. The …",94,[[]]],[11,"set_ahb_error","","Logical OR of the READ_ERROR and WRITE_ERROR flags. The …",94,[[]]],[11,"read_error","","If 1, the channel received a read bus error. Write one to …",94,[[]]],[11,"set_read_error","","If 1, the channel received a read bus error. Write one to …",94,[[]]],[11,"write_error","","If 1, the channel received a write bus error. Write one …",94,[[]]],[11,"set_write_error","","If 1, the channel received a write bus error. Write one …",94,[[]]],[11,"busy","","This flag goes high when the channel starts a new …",94,[[]]],[11,"set_busy","","This flag goes high when the channel starts a new …",94,[[]]],[11,"sniff_en","","If 1, this channel\'s data transfers are visible to the …",94,[[]]],[11,"set_sniff_en","","If 1, this channel\'s data transfers are visible to the …",94,[[]]],[11,"bswap","","Apply byte-swap transformation to DMA data. For byte …",94,[[]]],[11,"set_bswap","","Apply byte-swap transformation to DMA data. For byte …",94,[[]]],[11,"irq_quiet","","In QUIET mode, the channel does not generate IRQs at the …",94,[[]]],[11,"set_irq_quiet","","In QUIET mode, the channel does not generate IRQs at the …",94,[[]]],[11,"treq_sel","","Select a Transfer Request signal. The channel uses the …",94,[[],["treqsel",3]]],[11,"set_treq_sel","","Select a Transfer Request signal. The channel uses the …",94,[[["treqsel",3]]]],[11,"chain_to","","When this channel completes, it will trigger the channel …",94,[[]]],[11,"set_chain_to","","When this channel completes, it will trigger the channel …",94,[[]]],[11,"ring_sel","","Select whether RING_SIZE applies to read or write …",94,[[]]],[11,"set_ring_sel","","Select whether RING_SIZE applies to read or write …",94,[[]]],[11,"ring_size","","Size of address wrap region. If 0, don\'t wrap. For values …",94,[[]]],[11,"set_ring_size","","Size of address wrap region. If 0, don\'t wrap. For values …",94,[[]]],[11,"incr_write","","If 1, the write address increments with each transfer. If …",94,[[]]],[11,"set_incr_write","","If 1, the write address increments with each transfer. If …",94,[[]]],[11,"incr_read","","If 1, the read address increments with each transfer. If …",94,[[]]],[11,"set_incr_read","","If 1, the read address increments with each transfer. If …",94,[[]]],[11,"data_size","","Set the size of each bus transfer (byte/halfword/word). …",94,[[],["datasize",3]]],[11,"set_data_size","","Set the size of each bus transfer (byte/halfword/word). …",94,[[["datasize",3]]]],[11,"high_priority","","HIGH_PRIORITY gives a channel preferential treatment in …",94,[[]]],[11,"set_high_priority","","HIGH_PRIORITY gives a channel preferential treatment in …",94,[[]]],[11,"en","","DMA Channel Enable. When 1, the channel will respond to …",94,[[]]],[11,"set_en","","DMA Channel Enable. When 1, the channel will respond to …",94,[[]]],[3,"Ch9CtrlTrig","","DMA Channel 9 Control and Status",null,null],[11,"to_bits","","",95,[[]]],[11,"from_bits","","",95,[[],["ch9ctrltrig",3]]],[11,"ahb_error","","Logical OR of the READ_ERROR and WRITE_ERROR flags. The …",95,[[]]],[11,"set_ahb_error","","Logical OR of the READ_ERROR and WRITE_ERROR flags. The …",95,[[]]],[11,"read_error","","If 1, the channel received a read bus error. Write one to …",95,[[]]],[11,"set_read_error","","If 1, the channel received a read bus error. Write one to …",95,[[]]],[11,"write_error","","If 1, the channel received a write bus error. Write one …",95,[[]]],[11,"set_write_error","","If 1, the channel received a write bus error. Write one …",95,[[]]],[11,"busy","","This flag goes high when the channel starts a new …",95,[[]]],[11,"set_busy","","This flag goes high when the channel starts a new …",95,[[]]],[11,"sniff_en","","If 1, this channel\'s data transfers are visible to the …",95,[[]]],[11,"set_sniff_en","","If 1, this channel\'s data transfers are visible to the …",95,[[]]],[11,"bswap","","Apply byte-swap transformation to DMA data. For byte …",95,[[]]],[11,"set_bswap","","Apply byte-swap transformation to DMA data. For byte …",95,[[]]],[11,"irq_quiet","","In QUIET mode, the channel does not generate IRQs at the …",95,[[]]],[11,"set_irq_quiet","","In QUIET mode, the channel does not generate IRQs at the …",95,[[]]],[11,"treq_sel","","Select a Transfer Request signal. The channel uses the …",95,[[],["treqsel",3]]],[11,"set_treq_sel","","Select a Transfer Request signal. The channel uses the …",95,[[["treqsel",3]]]],[11,"chain_to","","When this channel completes, it will trigger the channel …",95,[[]]],[11,"set_chain_to","","When this channel completes, it will trigger the channel …",95,[[]]],[11,"ring_sel","","Select whether RING_SIZE applies to read or write …",95,[[]]],[11,"set_ring_sel","","Select whether RING_SIZE applies to read or write …",95,[[]]],[11,"ring_size","","Size of address wrap region. If 0, don\'t wrap. For values …",95,[[]]],[11,"set_ring_size","","Size of address wrap region. If 0, don\'t wrap. For values …",95,[[]]],[11,"incr_write","","If 1, the write address increments with each transfer. If …",95,[[]]],[11,"set_incr_write","","If 1, the write address increments with each transfer. If …",95,[[]]],[11,"incr_read","","If 1, the read address increments with each transfer. If …",95,[[]]],[11,"set_incr_read","","If 1, the read address increments with each transfer. If …",95,[[]]],[11,"data_size","","Set the size of each bus transfer (byte/halfword/word). …",95,[[],["datasize",3]]],[11,"set_data_size","","Set the size of each bus transfer (byte/halfword/word). …",95,[[["datasize",3]]]],[11,"high_priority","","HIGH_PRIORITY gives a channel preferential treatment in …",95,[[]]],[11,"set_high_priority","","HIGH_PRIORITY gives a channel preferential treatment in …",95,[[]]],[11,"en","","DMA Channel Enable. When 1, the channel will respond to …",95,[[]]],[11,"set_en","","DMA Channel Enable. When 1, the channel will respond to …",95,[[]]],[3,"Ch5DbgCtdreq","","Read: get channel DREQ counter (i.e. how many accesses …",null,null],[11,"to_bits","","",96,[[]]],[11,"from_bits","","",96,[[],["ch5dbgctdreq",3]]],[11,"ch5_dbg_ctdreq","","",96,[[]]],[11,"set_ch5_dbg_ctdreq","","",96,[[]]],[3,"Timer1","","Pacing (X/Y) Fractional Timer The pacing timer produces …",null,null],[11,"to_bits","","",97,[[]]],[11,"from_bits","","",97,[[],["timer1",3]]],[11,"x","","Pacing Timer Dividend. Specifies the X value for the …",97,[[]]],[11,"set_x","","Pacing Timer Dividend. Specifies the X value for the …",97,[[]]],[11,"y","","Pacing Timer Divisor. Specifies the Y value for the (X/Y) …",97,[[]]],[11,"set_y","","Pacing Timer Divisor. Specifies the Y value for the (X/Y) …",97,[[]]],[3,"Ch11DbgCtdreq","","Read: get channel DREQ counter (i.e. how many accesses …",null,null],[11,"to_bits","","",98,[[]]],[11,"from_bits","","",98,[[],["ch11dbgctdreq",3]]],[11,"ch11_dbg_ctdreq","","",98,[[]]],[11,"set_ch11_dbg_ctdreq","","",98,[[]]],[3,"Ch2CtrlTrig","","DMA Channel 2 Control and Status",null,null],[11,"to_bits","","",99,[[]]],[11,"from_bits","","",99,[[],["ch2ctrltrig",3]]],[11,"ahb_error","","Logical OR of the READ_ERROR and WRITE_ERROR flags. The …",99,[[]]],[11,"set_ahb_error","","Logical OR of the READ_ERROR and WRITE_ERROR flags. The …",99,[[]]],[11,"read_error","","If 1, the channel received a read bus error. Write one to …",99,[[]]],[11,"set_read_error","","If 1, the channel received a read bus error. Write one to …",99,[[]]],[11,"write_error","","If 1, the channel received a write bus error. Write one …",99,[[]]],[11,"set_write_error","","If 1, the channel received a write bus error. Write one …",99,[[]]],[11,"busy","","This flag goes high when the channel starts a new …",99,[[]]],[11,"set_busy","","This flag goes high when the channel starts a new …",99,[[]]],[11,"sniff_en","","If 1, this channel\'s data transfers are visible to the …",99,[[]]],[11,"set_sniff_en","","If 1, this channel\'s data transfers are visible to the …",99,[[]]],[11,"bswap","","Apply byte-swap transformation to DMA data. For byte …",99,[[]]],[11,"set_bswap","","Apply byte-swap transformation to DMA data. For byte …",99,[[]]],[11,"irq_quiet","","In QUIET mode, the channel does not generate IRQs at the …",99,[[]]],[11,"set_irq_quiet","","In QUIET mode, the channel does not generate IRQs at the …",99,[[]]],[11,"treq_sel","","Select a Transfer Request signal. The channel uses the …",99,[[],["treqsel",3]]],[11,"set_treq_sel","","Select a Transfer Request signal. The channel uses the …",99,[[["treqsel",3]]]],[11,"chain_to","","When this channel completes, it will trigger the channel …",99,[[]]],[11,"set_chain_to","","When this channel completes, it will trigger the channel …",99,[[]]],[11,"ring_sel","","Select whether RING_SIZE applies to read or write …",99,[[]]],[11,"set_ring_sel","","Select whether RING_SIZE applies to read or write …",99,[[]]],[11,"ring_size","","Size of address wrap region. If 0, don\'t wrap. For values …",99,[[]]],[11,"set_ring_size","","Size of address wrap region. If 0, don\'t wrap. For values …",99,[[]]],[11,"incr_write","","If 1, the write address increments with each transfer. If …",99,[[]]],[11,"set_incr_write","","If 1, the write address increments with each transfer. If …",99,[[]]],[11,"incr_read","","If 1, the read address increments with each transfer. If …",99,[[]]],[11,"set_incr_read","","If 1, the read address increments with each transfer. If …",99,[[]]],[11,"data_size","","Set the size of each bus transfer (byte/halfword/word). …",99,[[],["datasize",3]]],[11,"set_data_size","","Set the size of each bus transfer (byte/halfword/word). …",99,[[["datasize",3]]]],[11,"high_priority","","HIGH_PRIORITY gives a channel preferential treatment in …",99,[[]]],[11,"set_high_priority","","HIGH_PRIORITY gives a channel preferential treatment in …",99,[[]]],[11,"en","","DMA Channel Enable. When 1, the channel will respond to …",99,[[]]],[11,"set_en","","DMA Channel Enable. When 1, the channel will respond to …",99,[[]]],[3,"Ch0DbgCtdreq","","Read: get channel DREQ counter (i.e. how many accesses …",null,null],[11,"to_bits","","",100,[[]]],[11,"from_bits","","",100,[[],["ch0dbgctdreq",3]]],[11,"ch0_dbg_ctdreq","","",100,[[]]],[11,"set_ch0_dbg_ctdreq","","",100,[[]]],[3,"Timer0","","Pacing (X/Y) Fractional Timer The pacing timer produces …",null,null],[11,"to_bits","","",101,[[]]],[11,"from_bits","","",101,[[],["timer0",3]]],[11,"x","","Pacing Timer Dividend. Specifies the X value for the …",101,[[]]],[11,"set_x","","Pacing Timer Dividend. Specifies the X value for the …",101,[[]]],[11,"y","","Pacing Timer Divisor. Specifies the Y value for the (X/Y) …",101,[[]]],[11,"set_y","","Pacing Timer Divisor. Specifies the Y value for the (X/Y) …",101,[[]]],[3,"Intf0","","Force Interrupts",null,null],[11,"to_bits","","",102,[[]]],[11,"from_bits","","",102,[[],["intf0",3]]],[11,"intf0","","Write 1s to force the corresponding bits in INTE0. The …",102,[[]]],[11,"set_intf0","","Write 1s to force the corresponding bits in INTE0. The …",102,[[]]],[3,"Ch6DbgCtdreq","","Read: get channel DREQ counter (i.e. how many accesses …",null,null],[11,"to_bits","","",103,[[]]],[11,"from_bits","","",103,[[],["ch6dbgctdreq",3]]],[11,"ch6_dbg_ctdreq","","",103,[[]]],[11,"set_ch6_dbg_ctdreq","","",103,[[]]],[3,"Ch8CtrlTrig","","DMA Channel 8 Control and Status",null,null],[11,"to_bits","","",104,[[]]],[11,"from_bits","","",104,[[],["ch8ctrltrig",3]]],[11,"ahb_error","","Logical OR of the READ_ERROR and WRITE_ERROR flags. The …",104,[[]]],[11,"set_ahb_error","","Logical OR of the READ_ERROR and WRITE_ERROR flags. The …",104,[[]]],[11,"read_error","","If 1, the channel received a read bus error. Write one to …",104,[[]]],[11,"set_read_error","","If 1, the channel received a read bus error. Write one to …",104,[[]]],[11,"write_error","","If 1, the channel received a write bus error. Write one …",104,[[]]],[11,"set_write_error","","If 1, the channel received a write bus error. Write one …",104,[[]]],[11,"busy","","This flag goes high when the channel starts a new …",104,[[]]],[11,"set_busy","","This flag goes high when the channel starts a new …",104,[[]]],[11,"sniff_en","","If 1, this channel\'s data transfers are visible to the …",104,[[]]],[11,"set_sniff_en","","If 1, this channel\'s data transfers are visible to the …",104,[[]]],[11,"bswap","","Apply byte-swap transformation to DMA data. For byte …",104,[[]]],[11,"set_bswap","","Apply byte-swap transformation to DMA data. For byte …",104,[[]]],[11,"irq_quiet","","In QUIET mode, the channel does not generate IRQs at the …",104,[[]]],[11,"set_irq_quiet","","In QUIET mode, the channel does not generate IRQs at the …",104,[[]]],[11,"treq_sel","","Select a Transfer Request signal. The channel uses the …",104,[[],["treqsel",3]]],[11,"set_treq_sel","","Select a Transfer Request signal. The channel uses the …",104,[[["treqsel",3]]]],[11,"chain_to","","When this channel completes, it will trigger the channel …",104,[[]]],[11,"set_chain_to","","When this channel completes, it will trigger the channel …",104,[[]]],[11,"ring_sel","","Select whether RING_SIZE applies to read or write …",104,[[]]],[11,"set_ring_sel","","Select whether RING_SIZE applies to read or write …",104,[[]]],[11,"ring_size","","Size of address wrap region. If 0, don\'t wrap. For values …",104,[[]]],[11,"set_ring_size","","Size of address wrap region. If 0, don\'t wrap. For values …",104,[[]]],[11,"incr_write","","If 1, the write address increments with each transfer. If …",104,[[]]],[11,"set_incr_write","","If 1, the write address increments with each transfer. If …",104,[[]]],[11,"incr_read","","If 1, the read address increments with each transfer. If …",104,[[]]],[11,"set_incr_read","","If 1, the read address increments with each transfer. If …",104,[[]]],[11,"data_size","","Set the size of each bus transfer (byte/halfword/word). …",104,[[],["datasize",3]]],[11,"set_data_size","","Set the size of each bus transfer (byte/halfword/word). …",104,[[["datasize",3]]]],[11,"high_priority","","HIGH_PRIORITY gives a channel preferential treatment in …",104,[[]]],[11,"set_high_priority","","HIGH_PRIORITY gives a channel preferential treatment in …",104,[[]]],[11,"en","","DMA Channel Enable. When 1, the channel will respond to …",104,[[]]],[11,"set_en","","DMA Channel Enable. When 1, the channel will respond to …",104,[[]]],[3,"Inte1","","Interrupt Enables for IRQ 1",null,null],[11,"to_bits","","",105,[[]]],[11,"from_bits","","",105,[[],["inte1",3]]],[11,"inte1","","Set bit n to pass interrupts from channel n to DMA IRQ 1.",105,[[]]],[11,"set_inte1","","Set bit n to pass interrupts from channel n to DMA IRQ 1.",105,[[]]],[3,"Ch7DbgCtdreq","","Read: get channel DREQ counter (i.e. how many accesses …",null,null],[11,"to_bits","","",106,[[]]],[11,"from_bits","","",106,[[],["ch7dbgctdreq",3]]],[11,"ch7_dbg_ctdreq","","",106,[[]]],[11,"set_ch7_dbg_ctdreq","","",106,[[]]],[3,"Ints1","","Interrupt Status (masked) for IRQ 1",null,null],[11,"to_bits","","",107,[[]]],[11,"from_bits","","",107,[[],["ints1",3]]],[11,"ints1","","Indicates active channel interrupt requests which are …",107,[[]]],[11,"set_ints1","","Indicates active channel interrupt requests which are …",107,[[]]],[3,"SniffCtrl","","Sniffer Control",null,null],[11,"to_bits","","",108,[[]]],[11,"from_bits","","",108,[[],["sniffctrl",3]]],[11,"out_inv","","If set, the result appears inverted (bitwise complement) …",108,[[]]],[11,"set_out_inv","","If set, the result appears inverted (bitwise complement) …",108,[[]]],[11,"out_rev","","If set, the result appears bit-reversed when read. This …",108,[[]]],[11,"set_out_rev","","If set, the result appears bit-reversed when read. This …",108,[[]]],[11,"bswap","","Locally perform a byte reverse on the sniffed data, …",108,[[]]],[11,"set_bswap","","Locally perform a byte reverse on the sniffed data, …",108,[[]]],[11,"calc","","",108,[[],["sniffctrlcalc",3]]],[11,"set_calc","","",108,[[["sniffctrlcalc",3]]]],[11,"dmach","","DMA channel for Sniffer to observe",108,[[]]],[11,"set_dmach","","DMA channel for Sniffer to observe",108,[[]]],[11,"en","","Enable sniffer",108,[[]]],[11,"set_en","","Enable sniffer",108,[[]]],[3,"Ch4CtrlTrig","","DMA Channel 4 Control and Status",null,null],[11,"to_bits","","",109,[[]]],[11,"from_bits","","",109,[[],["ch4ctrltrig",3]]],[11,"ahb_error","","Logical OR of the READ_ERROR and WRITE_ERROR flags. The …",109,[[]]],[11,"set_ahb_error","","Logical OR of the READ_ERROR and WRITE_ERROR flags. The …",109,[[]]],[11,"read_error","","If 1, the channel received a read bus error. Write one to …",109,[[]]],[11,"set_read_error","","If 1, the channel received a read bus error. Write one to …",109,[[]]],[11,"write_error","","If 1, the channel received a write bus error. Write one …",109,[[]]],[11,"set_write_error","","If 1, the channel received a write bus error. Write one …",109,[[]]],[11,"busy","","This flag goes high when the channel starts a new …",109,[[]]],[11,"set_busy","","This flag goes high when the channel starts a new …",109,[[]]],[11,"sniff_en","","If 1, this channel\'s data transfers are visible to the …",109,[[]]],[11,"set_sniff_en","","If 1, this channel\'s data transfers are visible to the …",109,[[]]],[11,"bswap","","Apply byte-swap transformation to DMA data. For byte …",109,[[]]],[11,"set_bswap","","Apply byte-swap transformation to DMA data. For byte …",109,[[]]],[11,"irq_quiet","","In QUIET mode, the channel does not generate IRQs at the …",109,[[]]],[11,"set_irq_quiet","","In QUIET mode, the channel does not generate IRQs at the …",109,[[]]],[11,"treq_sel","","Select a Transfer Request signal. The channel uses the …",109,[[],["treqsel",3]]],[11,"set_treq_sel","","Select a Transfer Request signal. The channel uses the …",109,[[["treqsel",3]]]],[11,"chain_to","","When this channel completes, it will trigger the channel …",109,[[]]],[11,"set_chain_to","","When this channel completes, it will trigger the channel …",109,[[]]],[11,"ring_sel","","Select whether RING_SIZE applies to read or write …",109,[[]]],[11,"set_ring_sel","","Select whether RING_SIZE applies to read or write …",109,[[]]],[11,"ring_size","","Size of address wrap region. If 0, don\'t wrap. For values …",109,[[]]],[11,"set_ring_size","","Size of address wrap region. If 0, don\'t wrap. For values …",109,[[]]],[11,"incr_write","","If 1, the write address increments with each transfer. If …",109,[[]]],[11,"set_incr_write","","If 1, the write address increments with each transfer. If …",109,[[]]],[11,"incr_read","","If 1, the read address increments with each transfer. If …",109,[[]]],[11,"set_incr_read","","If 1, the read address increments with each transfer. If …",109,[[]]],[11,"data_size","","Set the size of each bus transfer (byte/halfword/word). …",109,[[],["datasize",3]]],[11,"set_data_size","","Set the size of each bus transfer (byte/halfword/word). …",109,[[["datasize",3]]]],[11,"high_priority","","HIGH_PRIORITY gives a channel preferential treatment in …",109,[[]]],[11,"set_high_priority","","HIGH_PRIORITY gives a channel preferential treatment in …",109,[[]]],[11,"en","","DMA Channel Enable. When 1, the channel will respond to …",109,[[]]],[11,"set_en","","DMA Channel Enable. When 1, the channel will respond to …",109,[[]]],[3,"Intr","","Interrupt Status (raw)",null,null],[11,"to_bits","","",110,[[]]],[11,"from_bits","","",110,[[],["intr",3]]],[11,"intr","","Raw interrupt status for DMA Channels 0..15. Bit n …",110,[[]]],[11,"set_intr","","Raw interrupt status for DMA Channels 0..15. Bit n …",110,[[]]],[3,"MultiChanTrigger","","Trigger one or more channels simultaneously",null,null],[11,"to_bits","","",111,[[]]],[11,"from_bits","","",111,[[],["multichantrigger",3]]],[11,"multi_chan_trigger","","Each bit in this register corresponds to a DMA channel. …",111,[[]]],[11,"set_multi_chan_trigger","","Each bit in this register corresponds to a DMA channel. …",111,[[]]],[0,"values","rp2040_pac::dma","",null,null],[3,"DataSize","rp2040_pac::dma::values","DMA Channel 5 Control and Status",null,null],[11,"to_bits","","",112,[[]]],[11,"from_bits","","",112,[[],["datasize",3]]],[18,"SIZE_BYTE","","",112,null],[18,"SIZE_HALFWORD","","",112,null],[18,"SIZE_WORD","","",112,null],[3,"SniffCtrlCalc","","Sniffer Control",null,null],[11,"to_bits","","",113,[[]]],[11,"from_bits","","",113,[[],["sniffctrlcalc",3]]],[18,"CRC32","","Calculate a CRC-32 (IEEE802.3 polynomial)",113,null],[18,"CRC32R","","Calculate a CRC-32 (IEEE802.3 polynomial) with bit …",113,null],[18,"CRC16","","Calculate a CRC-16-CCITT",113,null],[18,"CRC16R","","Calculate a CRC-16-CCITT with bit reversed data",113,null],[18,"EVEN","","XOR reduction over all data. == 1 if the total 1 …",113,null],[18,"SUM","","Calculate a simple 32-bit checksum (addition with a 32 …",113,null],[3,"TreqSel","","DMA Channel 3 Control and Status",null,null],[11,"to_bits","","",114,[[]]],[11,"from_bits","","",114,[[],["treqsel",3]]],[18,"TIMER0","","Select Timer 0 as TREQ",114,null],[18,"TIMER1","","Select Timer 1 as TREQ",114,null],[18,"TIMER2","","Select Timer 2 as TREQ (Optional)",114,null],[18,"TIMER3","","Select Timer 3 as TREQ (Optional)",114,null],[18,"PERMANENT","","Permanent request, for unpaced transfers.",114,null],[3,"Dma","rp2040_pac::dma","DMA with separate read and write masters",null,null],[11,"from_ptr","","",115,[[]]],[11,"ch0_read_addr","","DMA Channel 0 Read Address pointer This register updates …",115,[[],[["reg",3],["rw",3]]]],[11,"ch0_write_addr","","DMA Channel 0 Write Address pointer This register updates …",115,[[],[["reg",3],["rw",3]]]],[11,"ch0_trans_count","","DMA Channel 0 Transfer Count Program the number of bus …",115,[[],[["reg",3],["rw",3]]]],[11,"ch0_ctrl_trig","","DMA Channel 0 Control and Status",115,[[],[["rw",3],["ch0ctrltrig",3],["reg",3]]]],[11,"ch0_al1_ctrl","","Alias for channel 0 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch0_al1_read_addr","","Alias for channel 0 READ_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch0_al1_write_addr","","Alias for channel 0 WRITE_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch0_al1_trans_count_trig","","Alias for channel 0 TRANS_COUNT register This is a …",115,[[],[["r",3],["reg",3]]]],[11,"ch0_al2_ctrl","","Alias for channel 0 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch0_al2_trans_count","","Alias for channel 0 TRANS_COUNT register",115,[[],[["r",3],["reg",3]]]],[11,"ch0_al2_read_addr","","Alias for channel 0 READ_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch0_al2_write_addr_trig","","Alias for channel 0 WRITE_ADDR register This is a trigger …",115,[[],[["r",3],["reg",3]]]],[11,"ch0_al3_ctrl","","Alias for channel 0 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch0_al3_write_addr","","Alias for channel 0 WRITE_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch0_al3_trans_count","","Alias for channel 0 TRANS_COUNT register",115,[[],[["r",3],["reg",3]]]],[11,"ch0_al3_read_addr_trig","","Alias for channel 0 READ_ADDR register This is a trigger …",115,[[],[["r",3],["reg",3]]]],[11,"ch1_read_addr","","DMA Channel 1 Read Address pointer This register updates …",115,[[],[["reg",3],["rw",3]]]],[11,"ch1_write_addr","","DMA Channel 1 Write Address pointer This register updates …",115,[[],[["reg",3],["rw",3]]]],[11,"ch1_trans_count","","DMA Channel 1 Transfer Count Program the number of bus …",115,[[],[["reg",3],["rw",3]]]],[11,"ch1_ctrl_trig","","DMA Channel 1 Control and Status",115,[[],[["ch1ctrltrig",3],["reg",3],["rw",3]]]],[11,"ch1_al1_ctrl","","Alias for channel 1 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch1_al1_read_addr","","Alias for channel 1 READ_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch1_al1_write_addr","","Alias for channel 1 WRITE_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch1_al1_trans_count_trig","","Alias for channel 1 TRANS_COUNT register This is a …",115,[[],[["r",3],["reg",3]]]],[11,"ch1_al2_ctrl","","Alias for channel 1 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch1_al2_trans_count","","Alias for channel 1 TRANS_COUNT register",115,[[],[["r",3],["reg",3]]]],[11,"ch1_al2_read_addr","","Alias for channel 1 READ_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch1_al2_write_addr_trig","","Alias for channel 1 WRITE_ADDR register This is a trigger …",115,[[],[["r",3],["reg",3]]]],[11,"ch1_al3_ctrl","","Alias for channel 1 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch1_al3_write_addr","","Alias for channel 1 WRITE_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch1_al3_trans_count","","Alias for channel 1 TRANS_COUNT register",115,[[],[["r",3],["reg",3]]]],[11,"ch1_al3_read_addr_trig","","Alias for channel 1 READ_ADDR register This is a trigger …",115,[[],[["r",3],["reg",3]]]],[11,"ch2_read_addr","","DMA Channel 2 Read Address pointer This register updates …",115,[[],[["reg",3],["rw",3]]]],[11,"ch2_write_addr","","DMA Channel 2 Write Address pointer This register updates …",115,[[],[["reg",3],["rw",3]]]],[11,"ch2_trans_count","","DMA Channel 2 Transfer Count Program the number of bus …",115,[[],[["reg",3],["rw",3]]]],[11,"ch2_ctrl_trig","","DMA Channel 2 Control and Status",115,[[],[["rw",3],["reg",3],["ch2ctrltrig",3]]]],[11,"ch2_al1_ctrl","","Alias for channel 2 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch2_al1_read_addr","","Alias for channel 2 READ_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch2_al1_write_addr","","Alias for channel 2 WRITE_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch2_al1_trans_count_trig","","Alias for channel 2 TRANS_COUNT register This is a …",115,[[],[["r",3],["reg",3]]]],[11,"ch2_al2_ctrl","","Alias for channel 2 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch2_al2_trans_count","","Alias for channel 2 TRANS_COUNT register",115,[[],[["r",3],["reg",3]]]],[11,"ch2_al2_read_addr","","Alias for channel 2 READ_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch2_al2_write_addr_trig","","Alias for channel 2 WRITE_ADDR register This is a trigger …",115,[[],[["r",3],["reg",3]]]],[11,"ch2_al3_ctrl","","Alias for channel 2 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch2_al3_write_addr","","Alias for channel 2 WRITE_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch2_al3_trans_count","","Alias for channel 2 TRANS_COUNT register",115,[[],[["r",3],["reg",3]]]],[11,"ch2_al3_read_addr_trig","","Alias for channel 2 READ_ADDR register This is a trigger …",115,[[],[["r",3],["reg",3]]]],[11,"ch3_read_addr","","DMA Channel 3 Read Address pointer This register updates …",115,[[],[["reg",3],["rw",3]]]],[11,"ch3_write_addr","","DMA Channel 3 Write Address pointer This register updates …",115,[[],[["reg",3],["rw",3]]]],[11,"ch3_trans_count","","DMA Channel 3 Transfer Count Program the number of bus …",115,[[],[["reg",3],["rw",3]]]],[11,"ch3_ctrl_trig","","DMA Channel 3 Control and Status",115,[[],[["reg",3],["rw",3],["ch3ctrltrig",3]]]],[11,"ch3_al1_ctrl","","Alias for channel 3 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch3_al1_read_addr","","Alias for channel 3 READ_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch3_al1_write_addr","","Alias for channel 3 WRITE_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch3_al1_trans_count_trig","","Alias for channel 3 TRANS_COUNT register This is a …",115,[[],[["r",3],["reg",3]]]],[11,"ch3_al2_ctrl","","Alias for channel 3 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch3_al2_trans_count","","Alias for channel 3 TRANS_COUNT register",115,[[],[["r",3],["reg",3]]]],[11,"ch3_al2_read_addr","","Alias for channel 3 READ_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch3_al2_write_addr_trig","","Alias for channel 3 WRITE_ADDR register This is a trigger …",115,[[],[["r",3],["reg",3]]]],[11,"ch3_al3_ctrl","","Alias for channel 3 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch3_al3_write_addr","","Alias for channel 3 WRITE_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch3_al3_trans_count","","Alias for channel 3 TRANS_COUNT register",115,[[],[["r",3],["reg",3]]]],[11,"ch3_al3_read_addr_trig","","Alias for channel 3 READ_ADDR register This is a trigger …",115,[[],[["r",3],["reg",3]]]],[11,"ch4_read_addr","","DMA Channel 4 Read Address pointer This register updates …",115,[[],[["reg",3],["rw",3]]]],[11,"ch4_write_addr","","DMA Channel 4 Write Address pointer This register updates …",115,[[],[["reg",3],["rw",3]]]],[11,"ch4_trans_count","","DMA Channel 4 Transfer Count Program the number of bus …",115,[[],[["reg",3],["rw",3]]]],[11,"ch4_ctrl_trig","","DMA Channel 4 Control and Status",115,[[],[["rw",3],["ch4ctrltrig",3],["reg",3]]]],[11,"ch4_al1_ctrl","","Alias for channel 4 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch4_al1_read_addr","","Alias for channel 4 READ_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch4_al1_write_addr","","Alias for channel 4 WRITE_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch4_al1_trans_count_trig","","Alias for channel 4 TRANS_COUNT register This is a …",115,[[],[["r",3],["reg",3]]]],[11,"ch4_al2_ctrl","","Alias for channel 4 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch4_al2_trans_count","","Alias for channel 4 TRANS_COUNT register",115,[[],[["r",3],["reg",3]]]],[11,"ch4_al2_read_addr","","Alias for channel 4 READ_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch4_al2_write_addr_trig","","Alias for channel 4 WRITE_ADDR register This is a trigger …",115,[[],[["r",3],["reg",3]]]],[11,"ch4_al3_ctrl","","Alias for channel 4 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch4_al3_write_addr","","Alias for channel 4 WRITE_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch4_al3_trans_count","","Alias for channel 4 TRANS_COUNT register",115,[[],[["r",3],["reg",3]]]],[11,"ch4_al3_read_addr_trig","","Alias for channel 4 READ_ADDR register This is a trigger …",115,[[],[["r",3],["reg",3]]]],[11,"ch5_read_addr","","DMA Channel 5 Read Address pointer This register updates …",115,[[],[["reg",3],["rw",3]]]],[11,"ch5_write_addr","","DMA Channel 5 Write Address pointer This register updates …",115,[[],[["reg",3],["rw",3]]]],[11,"ch5_trans_count","","DMA Channel 5 Transfer Count Program the number of bus …",115,[[],[["reg",3],["rw",3]]]],[11,"ch5_ctrl_trig","","DMA Channel 5 Control and Status",115,[[],[["reg",3],["ch5ctrltrig",3],["rw",3]]]],[11,"ch5_al1_ctrl","","Alias for channel 5 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch5_al1_read_addr","","Alias for channel 5 READ_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch5_al1_write_addr","","Alias for channel 5 WRITE_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch5_al1_trans_count_trig","","Alias for channel 5 TRANS_COUNT register This is a …",115,[[],[["r",3],["reg",3]]]],[11,"ch5_al2_ctrl","","Alias for channel 5 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch5_al2_trans_count","","Alias for channel 5 TRANS_COUNT register",115,[[],[["r",3],["reg",3]]]],[11,"ch5_al2_read_addr","","Alias for channel 5 READ_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch5_al2_write_addr_trig","","Alias for channel 5 WRITE_ADDR register This is a trigger …",115,[[],[["r",3],["reg",3]]]],[11,"ch5_al3_ctrl","","Alias for channel 5 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch5_al3_write_addr","","Alias for channel 5 WRITE_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch5_al3_trans_count","","Alias for channel 5 TRANS_COUNT register",115,[[],[["r",3],["reg",3]]]],[11,"ch5_al3_read_addr_trig","","Alias for channel 5 READ_ADDR register This is a trigger …",115,[[],[["r",3],["reg",3]]]],[11,"ch6_read_addr","","DMA Channel 6 Read Address pointer This register updates …",115,[[],[["reg",3],["rw",3]]]],[11,"ch6_write_addr","","DMA Channel 6 Write Address pointer This register updates …",115,[[],[["reg",3],["rw",3]]]],[11,"ch6_trans_count","","DMA Channel 6 Transfer Count Program the number of bus …",115,[[],[["reg",3],["rw",3]]]],[11,"ch6_ctrl_trig","","DMA Channel 6 Control and Status",115,[[],[["ch6ctrltrig",3],["rw",3],["reg",3]]]],[11,"ch6_al1_ctrl","","Alias for channel 6 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch6_al1_read_addr","","Alias for channel 6 READ_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch6_al1_write_addr","","Alias for channel 6 WRITE_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch6_al1_trans_count_trig","","Alias for channel 6 TRANS_COUNT register This is a …",115,[[],[["r",3],["reg",3]]]],[11,"ch6_al2_ctrl","","Alias for channel 6 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch6_al2_trans_count","","Alias for channel 6 TRANS_COUNT register",115,[[],[["r",3],["reg",3]]]],[11,"ch6_al2_read_addr","","Alias for channel 6 READ_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch6_al2_write_addr_trig","","Alias for channel 6 WRITE_ADDR register This is a trigger …",115,[[],[["r",3],["reg",3]]]],[11,"ch6_al3_ctrl","","Alias for channel 6 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch6_al3_write_addr","","Alias for channel 6 WRITE_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch6_al3_trans_count","","Alias for channel 6 TRANS_COUNT register",115,[[],[["r",3],["reg",3]]]],[11,"ch6_al3_read_addr_trig","","Alias for channel 6 READ_ADDR register This is a trigger …",115,[[],[["r",3],["reg",3]]]],[11,"ch7_read_addr","","DMA Channel 7 Read Address pointer This register updates …",115,[[],[["reg",3],["rw",3]]]],[11,"ch7_write_addr","","DMA Channel 7 Write Address pointer This register updates …",115,[[],[["reg",3],["rw",3]]]],[11,"ch7_trans_count","","DMA Channel 7 Transfer Count Program the number of bus …",115,[[],[["reg",3],["rw",3]]]],[11,"ch7_ctrl_trig","","DMA Channel 7 Control and Status",115,[[],[["ch7ctrltrig",3],["rw",3],["reg",3]]]],[11,"ch7_al1_ctrl","","Alias for channel 7 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch7_al1_read_addr","","Alias for channel 7 READ_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch7_al1_write_addr","","Alias for channel 7 WRITE_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch7_al1_trans_count_trig","","Alias for channel 7 TRANS_COUNT register This is a …",115,[[],[["r",3],["reg",3]]]],[11,"ch7_al2_ctrl","","Alias for channel 7 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch7_al2_trans_count","","Alias for channel 7 TRANS_COUNT register",115,[[],[["r",3],["reg",3]]]],[11,"ch7_al2_read_addr","","Alias for channel 7 READ_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch7_al2_write_addr_trig","","Alias for channel 7 WRITE_ADDR register This is a trigger …",115,[[],[["r",3],["reg",3]]]],[11,"ch7_al3_ctrl","","Alias for channel 7 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch7_al3_write_addr","","Alias for channel 7 WRITE_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch7_al3_trans_count","","Alias for channel 7 TRANS_COUNT register",115,[[],[["r",3],["reg",3]]]],[11,"ch7_al3_read_addr_trig","","Alias for channel 7 READ_ADDR register This is a trigger …",115,[[],[["r",3],["reg",3]]]],[11,"ch8_read_addr","","DMA Channel 8 Read Address pointer This register updates …",115,[[],[["reg",3],["rw",3]]]],[11,"ch8_write_addr","","DMA Channel 8 Write Address pointer This register updates …",115,[[],[["reg",3],["rw",3]]]],[11,"ch8_trans_count","","DMA Channel 8 Transfer Count Program the number of bus …",115,[[],[["reg",3],["rw",3]]]],[11,"ch8_ctrl_trig","","DMA Channel 8 Control and Status",115,[[],[["reg",3],["rw",3],["ch8ctrltrig",3]]]],[11,"ch8_al1_ctrl","","Alias for channel 8 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch8_al1_read_addr","","Alias for channel 8 READ_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch8_al1_write_addr","","Alias for channel 8 WRITE_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch8_al1_trans_count_trig","","Alias for channel 8 TRANS_COUNT register This is a …",115,[[],[["r",3],["reg",3]]]],[11,"ch8_al2_ctrl","","Alias for channel 8 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch8_al2_trans_count","","Alias for channel 8 TRANS_COUNT register",115,[[],[["r",3],["reg",3]]]],[11,"ch8_al2_read_addr","","Alias for channel 8 READ_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch8_al2_write_addr_trig","","Alias for channel 8 WRITE_ADDR register This is a trigger …",115,[[],[["r",3],["reg",3]]]],[11,"ch8_al3_ctrl","","Alias for channel 8 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch8_al3_write_addr","","Alias for channel 8 WRITE_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch8_al3_trans_count","","Alias for channel 8 TRANS_COUNT register",115,[[],[["r",3],["reg",3]]]],[11,"ch8_al3_read_addr_trig","","Alias for channel 8 READ_ADDR register This is a trigger …",115,[[],[["r",3],["reg",3]]]],[11,"ch9_read_addr","","DMA Channel 9 Read Address pointer This register updates …",115,[[],[["reg",3],["rw",3]]]],[11,"ch9_write_addr","","DMA Channel 9 Write Address pointer This register updates …",115,[[],[["reg",3],["rw",3]]]],[11,"ch9_trans_count","","DMA Channel 9 Transfer Count Program the number of bus …",115,[[],[["reg",3],["rw",3]]]],[11,"ch9_ctrl_trig","","DMA Channel 9 Control and Status",115,[[],[["ch9ctrltrig",3],["reg",3],["rw",3]]]],[11,"ch9_al1_ctrl","","Alias for channel 9 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch9_al1_read_addr","","Alias for channel 9 READ_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch9_al1_write_addr","","Alias for channel 9 WRITE_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch9_al1_trans_count_trig","","Alias for channel 9 TRANS_COUNT register This is a …",115,[[],[["r",3],["reg",3]]]],[11,"ch9_al2_ctrl","","Alias for channel 9 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch9_al2_trans_count","","Alias for channel 9 TRANS_COUNT register",115,[[],[["r",3],["reg",3]]]],[11,"ch9_al2_read_addr","","Alias for channel 9 READ_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch9_al2_write_addr_trig","","Alias for channel 9 WRITE_ADDR register This is a trigger …",115,[[],[["r",3],["reg",3]]]],[11,"ch9_al3_ctrl","","Alias for channel 9 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch9_al3_write_addr","","Alias for channel 9 WRITE_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch9_al3_trans_count","","Alias for channel 9 TRANS_COUNT register",115,[[],[["r",3],["reg",3]]]],[11,"ch9_al3_read_addr_trig","","Alias for channel 9 READ_ADDR register This is a trigger …",115,[[],[["r",3],["reg",3]]]],[11,"ch10_read_addr","","DMA Channel 10 Read Address pointer This register updates …",115,[[],[["reg",3],["rw",3]]]],[11,"ch10_write_addr","","DMA Channel 10 Write Address pointer This register …",115,[[],[["reg",3],["rw",3]]]],[11,"ch10_trans_count","","DMA Channel 10 Transfer Count Program the number of bus …",115,[[],[["reg",3],["rw",3]]]],[11,"ch10_ctrl_trig","","DMA Channel 10 Control and Status",115,[[],[["ch10ctrltrig",3],["reg",3],["rw",3]]]],[11,"ch10_al1_ctrl","","Alias for channel 10 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch10_al1_read_addr","","Alias for channel 10 READ_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch10_al1_write_addr","","Alias for channel 10 WRITE_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch10_al1_trans_count_trig","","Alias for channel 10 TRANS_COUNT register This is a …",115,[[],[["r",3],["reg",3]]]],[11,"ch10_al2_ctrl","","Alias for channel 10 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch10_al2_trans_count","","Alias for channel 10 TRANS_COUNT register",115,[[],[["r",3],["reg",3]]]],[11,"ch10_al2_read_addr","","Alias for channel 10 READ_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch10_al2_write_addr_trig","","Alias for channel 10 WRITE_ADDR register This is a …",115,[[],[["r",3],["reg",3]]]],[11,"ch10_al3_ctrl","","Alias for channel 10 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch10_al3_write_addr","","Alias for channel 10 WRITE_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch10_al3_trans_count","","Alias for channel 10 TRANS_COUNT register",115,[[],[["r",3],["reg",3]]]],[11,"ch10_al3_read_addr_trig","","Alias for channel 10 READ_ADDR register This is a trigger …",115,[[],[["r",3],["reg",3]]]],[11,"ch11_read_addr","","DMA Channel 11 Read Address pointer This register updates …",115,[[],[["reg",3],["rw",3]]]],[11,"ch11_write_addr","","DMA Channel 11 Write Address pointer This register …",115,[[],[["reg",3],["rw",3]]]],[11,"ch11_trans_count","","DMA Channel 11 Transfer Count Program the number of bus …",115,[[],[["reg",3],["rw",3]]]],[11,"ch11_ctrl_trig","","DMA Channel 11 Control and Status",115,[[],[["ch11ctrltrig",3],["rw",3],["reg",3]]]],[11,"ch11_al1_ctrl","","Alias for channel 11 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch11_al1_read_addr","","Alias for channel 11 READ_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch11_al1_write_addr","","Alias for channel 11 WRITE_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch11_al1_trans_count_trig","","Alias for channel 11 TRANS_COUNT register This is a …",115,[[],[["r",3],["reg",3]]]],[11,"ch11_al2_ctrl","","Alias for channel 11 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch11_al2_trans_count","","Alias for channel 11 TRANS_COUNT register",115,[[],[["r",3],["reg",3]]]],[11,"ch11_al2_read_addr","","Alias for channel 11 READ_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch11_al2_write_addr_trig","","Alias for channel 11 WRITE_ADDR register This is a …",115,[[],[["r",3],["reg",3]]]],[11,"ch11_al3_ctrl","","Alias for channel 11 CTRL register",115,[[],[["r",3],["reg",3]]]],[11,"ch11_al3_write_addr","","Alias for channel 11 WRITE_ADDR register",115,[[],[["r",3],["reg",3]]]],[11,"ch11_al3_trans_count","","Alias for channel 11 TRANS_COUNT register",115,[[],[["r",3],["reg",3]]]],[11,"ch11_al3_read_addr_trig","","Alias for channel 11 READ_ADDR register This is a trigger …",115,[[],[["r",3],["reg",3]]]],[11,"intr","","Interrupt Status (raw)",115,[[],[["intr",3],["rw",3],["reg",3]]]],[11,"inte0","","Interrupt Enables for IRQ 0",115,[[],[["inte0",3],["reg",3],["rw",3]]]],[11,"intf0","","Force Interrupts",115,[[],[["intf0",3],["reg",3],["rw",3]]]],[11,"ints0","","Interrupt Status for IRQ 0",115,[[],[["reg",3],["ints0",3],["rw",3]]]],[11,"inte1","","Interrupt Enables for IRQ 1",115,[[],[["rw",3],["reg",3],["inte1",3]]]],[11,"intf1","","Force Interrupts for IRQ 1",115,[[],[["rw",3],["reg",3],["intf1",3]]]],[11,"ints1","","Interrupt Status (masked) for IRQ 1",115,[[],[["ints1",3],["reg",3],["rw",3]]]],[11,"timer0","","Pacing (X/Y) Fractional Timer The pacing timer produces …",115,[[],[["reg",3],["timer0",3],["rw",3]]]],[11,"timer1","","Pacing (X/Y) Fractional Timer The pacing timer produces …",115,[[],[["timer1",3],["reg",3],["rw",3]]]],[11,"multi_chan_trigger","","Trigger one or more channels simultaneously",115,[[],[["multichantrigger",3],["rw",3],["reg",3]]]],[11,"sniff_ctrl","","Sniffer Control",115,[[],[["sniffctrl",3],["reg",3],["rw",3]]]],[11,"sniff_data","","Data accumulator for sniff hardware Write an initial seed …",115,[[],[["reg",3],["rw",3]]]],[11,"fifo_levels","","Debug RAF, WAF, TDF levels",115,[[],[["reg",3],["fifolevels",3],["rw",3]]]],[11,"chan_abort","","Abort an in-progress transfer sequence on one or more …",115,[[],[["reg",3],["chanabort",3],["rw",3]]]],[11,"n_channels","","The number of channels this DMA instance is equipped …",115,[[],[["reg",3],["nchannels",3],["rw",3]]]],[11,"ch0_dbg_ctdreq","","Read: get channel DREQ counter (i.e. how many accesses …",115,[[],[["reg",3],["ch0dbgctdreq",3],["rw",3]]]],[11,"ch0_dbg_tcr","","Read to get channel TRANS_COUNT reload value, i.e. the …",115,[[],[["r",3],["reg",3]]]],[11,"ch1_dbg_ctdreq","","Read: get channel DREQ counter (i.e. how many accesses …",115,[[],[["ch1dbgctdreq",3],["reg",3],["rw",3]]]],[11,"ch1_dbg_tcr","","Read to get channel TRANS_COUNT reload value, i.e. the …",115,[[],[["r",3],["reg",3]]]],[11,"ch2_dbg_ctdreq","","Read: get channel DREQ counter (i.e. how many accesses …",115,[[],[["ch2dbgctdreq",3],["rw",3],["reg",3]]]],[11,"ch2_dbg_tcr","","Read to get channel TRANS_COUNT reload value, i.e. the …",115,[[],[["r",3],["reg",3]]]],[11,"ch3_dbg_ctdreq","","Read: get channel DREQ counter (i.e. how many accesses …",115,[[],[["ch3dbgctdreq",3],["reg",3],["rw",3]]]],[11,"ch3_dbg_tcr","","Read to get channel TRANS_COUNT reload value, i.e. the …",115,[[],[["r",3],["reg",3]]]],[11,"ch4_dbg_ctdreq","","Read: get channel DREQ counter (i.e. how many accesses …",115,[[],[["rw",3],["reg",3],["ch4dbgctdreq",3]]]],[11,"ch4_dbg_tcr","","Read to get channel TRANS_COUNT reload value, i.e. the …",115,[[],[["r",3],["reg",3]]]],[11,"ch5_dbg_ctdreq","","Read: get channel DREQ counter (i.e. how many accesses …",115,[[],[["reg",3],["ch5dbgctdreq",3],["rw",3]]]],[11,"ch5_dbg_tcr","","Read to get channel TRANS_COUNT reload value, i.e. the …",115,[[],[["r",3],["reg",3]]]],[11,"ch6_dbg_ctdreq","","Read: get channel DREQ counter (i.e. how many accesses …",115,[[],[["reg",3],["rw",3],["ch6dbgctdreq",3]]]],[11,"ch6_dbg_tcr","","Read to get channel TRANS_COUNT reload value, i.e. the …",115,[[],[["r",3],["reg",3]]]],[11,"ch7_dbg_ctdreq","","Read: get channel DREQ counter (i.e. how many accesses …",115,[[],[["rw",3],["ch7dbgctdreq",3],["reg",3]]]],[11,"ch7_dbg_tcr","","Read to get channel TRANS_COUNT reload value, i.e. the …",115,[[],[["r",3],["reg",3]]]],[11,"ch8_dbg_ctdreq","","Read: get channel DREQ counter (i.e. how many accesses …",115,[[],[["reg",3],["rw",3],["ch8dbgctdreq",3]]]],[11,"ch8_dbg_tcr","","Read to get channel TRANS_COUNT reload value, i.e. the …",115,[[],[["r",3],["reg",3]]]],[11,"ch9_dbg_ctdreq","","Read: get channel DREQ counter (i.e. how many accesses …",115,[[],[["reg",3],["ch9dbgctdreq",3],["rw",3]]]],[11,"ch9_dbg_tcr","","Read to get channel TRANS_COUNT reload value, i.e. the …",115,[[],[["r",3],["reg",3]]]],[11,"ch10_dbg_ctdreq","","Read: get channel DREQ counter (i.e. how many accesses …",115,[[],[["ch10dbgctdreq",3],["reg",3],["rw",3]]]],[11,"ch10_dbg_tcr","","Read to get channel TRANS_COUNT reload value, i.e. the …",115,[[],[["r",3],["reg",3]]]],[11,"ch11_dbg_ctdreq","","Read: get channel DREQ counter (i.e. how many accesses …",115,[[],[["ch11dbgctdreq",3],["rw",3],["reg",3]]]],[11,"ch11_dbg_tcr","","Read to get channel TRANS_COUNT reload value, i.e. the …",115,[[],[["r",3],["reg",3]]]],[0,"generic","rp2040_pac","",null,null],[3,"RW","rp2040_pac::generic","",null,null],[3,"R","","",null,null],[3,"W","","",null,null],[8,"Access","","",null,null],[8,"Read","","",null,null],[8,"Write","","",null,null],[3,"Reg","","",null,null],[11,"ptr","","",116,[[]]],[11,"default","","",116,[[]]],[11,"read","","",116,[[]]],[11,"write_value","","",116,[[]]],[11,"write","","",116,[[]]],[11,"reset","","",116,[[]]],[11,"modify","","",116,[[]]],[0,"i2c0","rp2040_pac","",null,null],[0,"fields","rp2040_pac::i2c0","",null,null],[3,"IcAckGeneralCall","rp2040_pac::i2c0::fields","I2C ACK General Call Register The register controls …",null,null],[11,"to_bits","","",117,[[]]],[11,"from_bits","","",117,[[],["icackgeneralcall",3]]],[11,"ack_gen_call","","ACK General Call. When set to 1, DW_apb_i2c responds with …",117,[[],["icackgeneralcallackgencall",3]]],[11,"set_ack_gen_call","","ACK General Call. When set to 1, DW_apb_i2c responds with …",117,[[["icackgeneralcallackgencall",3]]]],[3,"IcSdaSetup","","I2C SDA Setup Register This register controls the amount …",null,null],[11,"to_bits","","",118,[[]]],[11,"from_bits","","",118,[[],["icsdasetup",3]]],[11,"sda_setup","","SDA Setup. It is recommended that if the required delay …",118,[[]]],[11,"set_sda_setup","","SDA Setup. It is recommended that if the required delay …",118,[[]]],[3,"IcStatus","","I2C Status Register This is a read-only register used to …",null,null],[11,"to_bits","","",119,[[]]],[11,"from_bits","","",119,[[],["icstatus",3]]],[11,"slv_activity","","Slave FSM Activity Status. When the Slave Finite State …",119,[[],["icstatusslvactivity",3]]],[11,"set_slv_activity","","Slave FSM Activity Status. When the Slave Finite State …",119,[[["icstatusslvactivity",3]]]],[11,"mst_activity","","Master FSM Activity Status. When the Master Finite State …",119,[[],["icstatusmstactivity",3]]],[11,"set_mst_activity","","Master FSM Activity Status. When the Master Finite State …",119,[[["icstatusmstactivity",3]]]],[11,"rff","","Receive FIFO Completely Full. When the receive FIFO is …",119,[[],["icstatusrff",3]]],[11,"set_rff","","Receive FIFO Completely Full. When the receive FIFO is …",119,[[["icstatusrff",3]]]],[11,"rfne","","Receive FIFO Not Empty. This bit is set when the receive …",119,[[],["icstatusrfne",3]]],[11,"set_rfne","","Receive FIFO Not Empty. This bit is set when the receive …",119,[[["icstatusrfne",3]]]],[11,"tfe","","Transmit FIFO Completely Empty. When the transmit FIFO is …",119,[[],["icstatustfe",3]]],[11,"set_tfe","","Transmit FIFO Completely Empty. When the transmit FIFO is …",119,[[["icstatustfe",3]]]],[11,"tfnf","","Transmit FIFO Not Full. Set when the transmit FIFO …",119,[[],["icstatustfnf",3]]],[11,"set_tfnf","","Transmit FIFO Not Full. Set when the transmit FIFO …",119,[[["icstatustfnf",3]]]],[11,"activity","","I2C Activity Status. Reset value: 0x0",119,[[],["icstatusactivity",3]]],[11,"set_activity","","I2C Activity Status. Reset value: 0x0",119,[[["icstatusactivity",3]]]],[3,"IcSar","","I2C Slave Address Register",null,null],[11,"to_bits","","",120,[[]]],[11,"from_bits","","",120,[[],["icsar",3]]],[11,"ic_sar","","The IC_SAR holds the slave address when the I2C is …",120,[[]]],[11,"set_ic_sar","","The IC_SAR holds the slave address when the I2C is …",120,[[]]],[3,"IcDmaTdlr","","DMA Transmit Data Level Register",null,null],[11,"to_bits","","",121,[[]]],[11,"from_bits","","",121,[[],["icdmatdlr",3]]],[11,"dmatdl","","Transmit Data Level. This bit field controls the level at …",121,[[]]],[11,"set_dmatdl","","Transmit Data Level. This bit field controls the level at …",121,[[]]],[3,"IcClrIntr","","Clear Combined and Individual Interrupt Register",null,null],[11,"to_bits","","",122,[[]]],[11,"from_bits","","",122,[[],["icclrintr",3]]],[11,"clr_intr","","Read this register to clear the combined interrupt, all …",122,[[]]],[11,"set_clr_intr","","Read this register to clear the combined interrupt, all …",122,[[]]],[3,"IcCon","","I2C Control Register. This register can be written only …",null,null],[11,"to_bits","","",123,[[]]],[11,"from_bits","","",123,[[],["iccon",3]]],[11,"stop_det_if_master_active","","Master issues the STOP_DET interrupt irrespective of …",123,[[]]],[11,"set_stop_det_if_master_active","","Master issues the STOP_DET interrupt irrespective of …",123,[[]]],[11,"rx_fifo_full_hld_ctrl","","This bit controls whether DW_apb_i2c should hold the bus …",123,[[],["icconrxfifofullhldctrl",3]]],[11,"set_rx_fifo_full_hld_ctrl","","This bit controls whether DW_apb_i2c should hold the bus …",123,[[["icconrxfifofullhldctrl",3]]]],[11,"tx_empty_ctrl","","This bit controls the generation of the TX_EMPTY …",123,[[],["iccontxemptyctrl",3]]],[11,"set_tx_empty_ctrl","","This bit controls the generation of the TX_EMPTY …",123,[[["iccontxemptyctrl",3]]]],[11,"stop_det_ifaddressed","","In slave mode: - 1\'b1: issues the STOP_DET interrupt only …",123,[[],["icconstopdetifaddressed",3]]],[11,"set_stop_det_ifaddressed","","In slave mode: - 1\'b1: issues the STOP_DET interrupt only …",123,[[["icconstopdetifaddressed",3]]]],[11,"ic_slave_disable","","This bit controls whether I2C has its slave disabled, …",123,[[],["icconicslavedisable",3]]],[11,"set_ic_slave_disable","","This bit controls whether I2C has its slave disabled, …",123,[[["icconicslavedisable",3]]]],[11,"ic_restart_en","","Determines whether RESTART conditions may be sent when …",123,[[],["icconicrestarten",3]]],[11,"set_ic_restart_en","","Determines whether RESTART conditions may be sent when …",123,[[["icconicrestarten",3]]]],[11,"ic_10bitaddr_master","","Controls whether the DW_apb_i2c starts its transfers in …",123,[[],["icconic10bitaddrmaster",3]]],[11,"set_ic_10bitaddr_master","","Controls whether the DW_apb_i2c starts its transfers in …",123,[[["icconic10bitaddrmaster",3]]]],[11,"ic_10bitaddr_slave","","When acting as a slave, this bit controls whether the …",123,[[],["icconic10bitaddrslave",3]]],[11,"set_ic_10bitaddr_slave","","When acting as a slave, this bit controls whether the …",123,[[["icconic10bitaddrslave",3]]]],[11,"speed","","These bits control at which speed the DW_apb_i2c …",123,[[],["icconspeed",3]]],[11,"set_speed","","These bits control at which speed the DW_apb_i2c …",123,[[["icconspeed",3]]]],[11,"master_mode","","This bit controls whether the DW_apb_i2c master is …",123,[[],["icconmastermode",3]]],[11,"set_master_mode","","This bit controls whether the DW_apb_i2c master is …",123,[[["icconmastermode",3]]]],[3,"IcTxAbrtSource","","I2C Transmit Abort Source Register This register has 32 …",null,null],[11,"to_bits","","",124,[[]]],[11,"from_bits","","",124,[[],["ictxabrtsource",3]]],[11,"tx_flush_cnt","","This field indicates the number of Tx FIFO Data Commands …",124,[[]]],[11,"set_tx_flush_cnt","","This field indicates the number of Tx FIFO Data Commands …",124,[[]]],[11,"abrt_user_abrt","","This is a master-mode-only bit. Master has detected the …",124,[[],["ictxabrtsourceabrtuserabrt",3]]],[11,"set_abrt_user_abrt","","This is a master-mode-only bit. Master has detected the …",124,[[["ictxabrtsourceabrtuserabrt",3]]]],[11,"abrt_slvrd_intx","","1: When the processor side responds to a slave mode …",124,[[],["ictxabrtsourceabrtslvrdintx",3]]],[11,"set_abrt_slvrd_intx","","1: When the processor side responds to a slave mode …",124,[[["ictxabrtsourceabrtslvrdintx",3]]]],[11,"abrt_slv_arblost","","This field indicates that a Slave has lost the bus while …",124,[[],["ictxabrtsourceabrtslvarblost",3]]],[11,"set_abrt_slv_arblost","","This field indicates that a Slave has lost the bus while …",124,[[["ictxabrtsourceabrtslvarblost",3]]]],[11,"abrt_slvflush_txfifo","","This field specifies that the Slave has received a read …",124,[[],["ictxabrtsourceabrtslvflushtxfifo",3]]],[11,"set_abrt_slvflush_txfifo","","This field specifies that the Slave has received a read …",124,[[["ictxabrtsourceabrtslvflushtxfifo",3]]]],[11,"arb_lost","","This field specifies that the Master has lost …",124,[[],["ictxabrtsourcearblost",3]]],[11,"set_arb_lost","","This field specifies that the Master has lost …",124,[[["ictxabrtsourcearblost",3]]]],[11,"abrt_master_dis","","This field indicates that the User tries to initiate a …",124,[[],["ictxabrtsourceabrtmasterdis",3]]],[11,"set_abrt_master_dis","","This field indicates that the User tries to initiate a …",124,[[["ictxabrtsourceabrtmasterdis",3]]]],[11,"abrt_10b_rd_norstrt","","This field indicates that the restart is disabled …",124,[[],["ictxabrtsourceabrt10brdnorstrt",3]]],[11,"set_abrt_10b_rd_norstrt","","This field indicates that the restart is disabled …",124,[[["ictxabrtsourceabrt10brdnorstrt",3]]]],[11,"abrt_sbyte_norstrt","","To clear Bit 9, the source of the ABRT_SBYTE_NORSTRT must …",124,[[],["ictxabrtsourceabrtsbytenorstrt",3]]],[11,"set_abrt_sbyte_norstrt","","To clear Bit 9, the source of the ABRT_SBYTE_NORSTRT must …",124,[[["ictxabrtsourceabrtsbytenorstrt",3]]]],[11,"abrt_hs_norstrt","","This field indicates that the restart is disabled …",124,[[],["ictxabrtsourceabrthsnorstrt",3]]],[11,"set_abrt_hs_norstrt","","This field indicates that the restart is disabled …",124,[[["ictxabrtsourceabrthsnorstrt",3]]]],[11,"abrt_sbyte_ackdet","","This field indicates that the Master has sent a START …",124,[[],["ictxabrtsourceabrtsbyteackdet",3]]],[11,"set_abrt_sbyte_ackdet","","This field indicates that the Master has sent a START …",124,[[["ictxabrtsourceabrtsbyteackdet",3]]]],[11,"abrt_hs_ackdet","","This field indicates that the Master is in High Speed …",124,[[],["ictxabrtsourceabrthsackdet",3]]],[11,"set_abrt_hs_ackdet","","This field indicates that the Master is in High Speed …",124,[[["ictxabrtsourceabrthsackdet",3]]]],[11,"abrt_gcall_read","","This field indicates that DW_apb_i2c in the master mode …",124,[[],["ictxabrtsourceabrtgcallread",3]]],[11,"set_abrt_gcall_read","","This field indicates that DW_apb_i2c in the master mode …",124,[[["ictxabrtsourceabrtgcallread",3]]]],[11,"abrt_gcall_noack","","This field indicates that DW_apb_i2c in master mode has …",124,[[],["ictxabrtsourceabrtgcallnoack",3]]],[11,"set_abrt_gcall_noack","","This field indicates that DW_apb_i2c in master mode has …",124,[[["ictxabrtsourceabrtgcallnoack",3]]]],[11,"abrt_txdata_noack","","This field indicates the master-mode only bit. When the …",124,[[],["ictxabrtsourceabrttxdatanoack",3]]],[11,"set_abrt_txdata_noack","","This field indicates the master-mode only bit. When the …",124,[[["ictxabrtsourceabrttxdatanoack",3]]]],[11,"abrt_10addr2_noack","","This field indicates that the Master is in 10-bit address …",124,[[],["ictxabrtsourceabrt10addr2noack",3]]],[11,"set_abrt_10addr2_noack","","This field indicates that the Master is in 10-bit address …",124,[[["ictxabrtsourceabrt10addr2noack",3]]]],[11,"abrt_10addr1_noack","","This field indicates that the Master is in 10-bit address …",124,[[],["ictxabrtsourceabrt10addr1noack",3]]],[11,"set_abrt_10addr1_noack","","This field indicates that the Master is in 10-bit address …",124,[[["ictxabrtsourceabrt10addr1noack",3]]]],[11,"abrt_7b_addr_noack","","This field indicates that the Master is in 7-bit …",124,[[],["ictxabrtsourceabrt7baddrnoack",3]]],[11,"set_abrt_7b_addr_noack","","This field indicates that the Master is in 7-bit …",124,[[["ictxabrtsourceabrt7baddrnoack",3]]]],[3,"IcEnableStatus","","I2C Enable Status Register The register is used to report …",null,null],[11,"to_bits","","",125,[[]]],[11,"from_bits","","",125,[[],["icenablestatus",3]]],[11,"slv_rx_data_lost","","Slave Received Data Lost. This bit indicates if a …",125,[[],["icenablestatusslvrxdatalost",3]]],[11,"set_slv_rx_data_lost","","Slave Received Data Lost. This bit indicates if a …",125,[[["icenablestatusslvrxdatalost",3]]]],[11,"slv_disabled_while_busy","","Slave Disabled While Busy (Transmit, Receive). This bit …",125,[[],["icenablestatusslvdisabledwhilebusy",3]]],[11,"set_slv_disabled_while_busy","","Slave Disabled While Busy (Transmit, Receive). This bit …",125,[[["icenablestatusslvdisabledwhilebusy",3]]]],[11,"ic_en","","ic_en Status. This bit always reflects the value driven …",125,[[],["icenablestatusicen",3]]],[11,"set_ic_en","","ic_en Status. This bit always reflects the value driven …",125,[[["icenablestatusicen",3]]]],[3,"IcTxflr","","I2C Transmit FIFO Level Register This register contains …",null,null],[11,"to_bits","","",126,[[]]],[11,"from_bits","","",126,[[],["ictxflr",3]]],[11,"txflr","","Transmit FIFO Level. Contains the number of valid data …",126,[[]]],[11,"set_txflr","","Transmit FIFO Level. Contains the number of valid data …",126,[[]]],[3,"IcClrRxDone","","Clear RX_DONE Interrupt Register",null,null],[11,"to_bits","","",127,[[]]],[11,"from_bits","","",127,[[],["icclrrxdone",3]]],[11,"clr_rx_done","","Read this register to clear the RX_DONE interrupt (bit 7) …",127,[[]]],[11,"set_clr_rx_done","","Read this register to clear the RX_DONE interrupt (bit 7) …",127,[[]]],[3,"IcRxflr","","I2C Receive FIFO Level Register This register contains …",null,null],[11,"to_bits","","",128,[[]]],[11,"from_bits","","",128,[[],["icrxflr",3]]],[11,"rxflr","","Receive FIFO Level. Contains the number of valid data …",128,[[]]],[11,"set_rxflr","","Receive FIFO Level. Contains the number of valid data …",128,[[]]],[3,"IcClrRxUnder","","Clear RX_UNDER Interrupt Register",null,null],[11,"to_bits","","",129,[[]]],[11,"from_bits","","",129,[[],["icclrrxunder",3]]],[11,"clr_rx_under","","Read this register to clear the RX_UNDER interrupt (bit …",129,[[]]],[11,"set_clr_rx_under","","Read this register to clear the RX_UNDER interrupt (bit …",129,[[]]],[3,"IcClrTxAbrt","","Clear TX_ABRT Interrupt Register",null,null],[11,"to_bits","","",130,[[]]],[11,"from_bits","","",130,[[],["icclrtxabrt",3]]],[11,"clr_tx_abrt","","Read this register to clear the TX_ABRT interrupt (bit 6) …",130,[[]]],[11,"set_clr_tx_abrt","","Read this register to clear the TX_ABRT interrupt (bit 6) …",130,[[]]],[3,"IcDmaCr","","DMA Control Register The register is used to enable the …",null,null],[11,"to_bits","","",131,[[]]],[11,"from_bits","","",131,[[],["icdmacr",3]]],[11,"tdmae","","Transmit DMA Enable. This bit enables/disables the …",131,[[],["icdmacrtdmae",3]]],[11,"set_tdmae","","Transmit DMA Enable. This bit enables/disables the …",131,[[["icdmacrtdmae",3]]]],[11,"rdmae","","Receive DMA Enable. This bit enables/disables the receive …",131,[[],["icdmacrrdmae",3]]],[11,"set_rdmae","","Receive DMA Enable. This bit enables/disables the receive …",131,[[["icdmacrrdmae",3]]]],[3,"IcEnable","","I2C Enable Register",null,null],[11,"to_bits","","",132,[[]]],[11,"from_bits","","",132,[[],["icenable",3]]],[11,"tx_cmd_block","","In Master mode: - 1\'b1: Blocks the transmission of data …",132,[[],["icenabletxcmdblock",3]]],[11,"set_tx_cmd_block","","In Master mode: - 1\'b1: Blocks the transmission of data …",132,[[["icenabletxcmdblock",3]]]],[11,"abort","","When set, the controller initiates the transfer abort. - …",132,[[],["icenableabort",3]]],[11,"set_abort","","When set, the controller initiates the transfer abort. - …",132,[[["icenableabort",3]]]],[11,"enable","","Controls whether the DW_apb_i2c is enabled. - 0: Disables …",132,[[],["icenableenable",3]]],[11,"set_enable","","Controls whether the DW_apb_i2c is enabled. - 0: Disables …",132,[[["icenableenable",3]]]],[3,"IcRawIntrStat","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[11,"to_bits","","",133,[[]]],[11,"from_bits","","",133,[[],["icrawintrstat",3]]],[11,"master_on_hold","","Indicates whether master is holding the bus and TX FIFO …",133,[[],["icrawintrstatmasteronhold",3]]],[11,"set_master_on_hold","","Indicates whether master is holding the bus and TX FIFO …",133,[[["icrawintrstatmasteronhold",3]]]],[11,"restart_det","","Indicates whether a RESTART condition has occurred on the …",133,[[],["icrawintrstatrestartdet",3]]],[11,"set_restart_det","","Indicates whether a RESTART condition has occurred on the …",133,[[["icrawintrstatrestartdet",3]]]],[11,"gen_call","","Set only when a General Call address is received and it …",133,[[],["icrawintrstatgencall",3]]],[11,"set_gen_call","","Set only when a General Call address is received and it …",133,[[["icrawintrstatgencall",3]]]],[11,"start_det","","Indicates whether a START or RESTART condition has …",133,[[],["icrawintrstatstartdet",3]]],[11,"set_start_det","","Indicates whether a START or RESTART condition has …",133,[[["icrawintrstatstartdet",3]]]],[11,"stop_det","","Indicates whether a STOP condition has occurred on the …",133,[[],["icrawintrstatstopdet",3]]],[11,"set_stop_det","","Indicates whether a STOP condition has occurred on the …",133,[[["icrawintrstatstopdet",3]]]],[11,"activity","","This bit captures DW_apb_i2c activity and stays set until …",133,[[],["icrawintrstatactivity",3]]],[11,"set_activity","","This bit captures DW_apb_i2c activity and stays set until …",133,[[["icrawintrstatactivity",3]]]],[11,"rx_done","","When the DW_apb_i2c is acting as a slave-transmitter, …",133,[[],["icrawintrstatrxdone",3]]],[11,"set_rx_done","","When the DW_apb_i2c is acting as a slave-transmitter, …",133,[[["icrawintrstatrxdone",3]]]],[11,"tx_abrt","","This bit indicates if DW_apb_i2c, as an I2C transmitter, …",133,[[],["icrawintrstattxabrt",3]]],[11,"set_tx_abrt","","This bit indicates if DW_apb_i2c, as an I2C transmitter, …",133,[[["icrawintrstattxabrt",3]]]],[11,"rd_req","","This bit is set to 1 when DW_apb_i2c is acting as a slave …",133,[[],["icrawintrstatrdreq",3]]],[11,"set_rd_req","","This bit is set to 1 when DW_apb_i2c is acting as a slave …",133,[[["icrawintrstatrdreq",3]]]],[11,"tx_empty","","The behavior of the TX_EMPTY interrupt status differs …",133,[[],["icrawintrstattxempty",3]]],[11,"set_tx_empty","","The behavior of the TX_EMPTY interrupt status differs …",133,[[["icrawintrstattxempty",3]]]],[11,"tx_over","","Set during transmit if the transmit buffer is filled to …",133,[[],["icrawintrstattxover",3]]],[11,"set_tx_over","","Set during transmit if the transmit buffer is filled to …",133,[[["icrawintrstattxover",3]]]],[11,"rx_full","","Set when the receive buffer reaches or goes above the …",133,[[],["icrawintrstatrxfull",3]]],[11,"set_rx_full","","Set when the receive buffer reaches or goes above the …",133,[[["icrawintrstatrxfull",3]]]],[11,"rx_over","","Set if the receive buffer is completely filled to …",133,[[],["icrawintrstatrxover",3]]],[11,"set_rx_over","","Set if the receive buffer is completely filled to …",133,[[["icrawintrstatrxover",3]]]],[11,"rx_under","","Set if the processor attempts to read the receive buffer …",133,[[],["icrawintrstatrxunder",3]]],[11,"set_rx_under","","Set if the processor attempts to read the receive buffer …",133,[[["icrawintrstatrxunder",3]]]],[3,"IcDmaRdlr","","I2C Receive Data Level Register",null,null],[11,"to_bits","","",134,[[]]],[11,"from_bits","","",134,[[],["icdmardlr",3]]],[11,"dmardl","","Receive Data Level. This bit field controls the level at …",134,[[]]],[11,"set_dmardl","","Receive Data Level. This bit field controls the level at …",134,[[]]],[3,"IcCompType","","I2C Component Type Register",null,null],[11,"to_bits","","",135,[[]]],[11,"from_bits","","",135,[[],["iccomptype",3]]],[11,"ic_comp_type","","Designware Component Type number = 0x44_57_01_40. This …",135,[[]]],[11,"set_ic_comp_type","","Designware Component Type number = 0x44_57_01_40. This …",135,[[]]],[3,"IcClrStopDet","","Clear STOP_DET Interrupt Register",null,null],[11,"to_bits","","",136,[[]]],[11,"from_bits","","",136,[[],["icclrstopdet",3]]],[11,"clr_stop_det","","Read this register to clear the STOP_DET interrupt (bit …",136,[[]]],[11,"set_clr_stop_det","","Read this register to clear the STOP_DET interrupt (bit …",136,[[]]],[3,"IcClrStartDet","","Clear START_DET Interrupt Register",null,null],[11,"to_bits","","",137,[[]]],[11,"from_bits","","",137,[[],["icclrstartdet",3]]],[11,"clr_start_det","","Read this register to clear the START_DET interrupt (bit …",137,[[]]],[11,"set_clr_start_det","","Read this register to clear the START_DET interrupt (bit …",137,[[]]],[3,"IcClrRestartDet","","Clear RESTART_DET Interrupt Register",null,null],[11,"to_bits","","",138,[[]]],[11,"from_bits","","",138,[[],["icclrrestartdet",3]]],[11,"clr_restart_det","","Read this register to clear the RESTART_DET interrupt …",138,[[]]],[11,"set_clr_restart_det","","Read this register to clear the RESTART_DET interrupt …",138,[[]]],[3,"IcFsSclHcnt","","Fast Mode or Fast Mode Plus I2C Clock SCL High Count …",null,null],[11,"to_bits","","",139,[[]]],[11,"from_bits","","",139,[[],["icfssclhcnt",3]]],[11,"ic_fs_scl_hcnt","","This register must be set before any I2C bus transaction …",139,[[]]],[11,"set_ic_fs_scl_hcnt","","This register must be set before any I2C bus transaction …",139,[[]]],[3,"IcClrRxOver","","Clear RX_OVER Interrupt Register",null,null],[11,"to_bits","","",140,[[]]],[11,"from_bits","","",140,[[],["icclrrxover",3]]],[11,"clr_rx_over","","Read this register to clear the RX_OVER interrupt (bit 1) …",140,[[]]],[11,"set_clr_rx_over","","Read this register to clear the RX_OVER interrupt (bit 1) …",140,[[]]],[3,"IcSsSclLcnt","","Standard Speed I2C Clock SCL Low Count Register",null,null],[11,"to_bits","","",141,[[]]],[11,"from_bits","","",141,[[],["icssscllcnt",3]]],[11,"ic_ss_scl_lcnt","","This register must be set before any I2C bus transaction …",141,[[]]],[11,"set_ic_ss_scl_lcnt","","This register must be set before any I2C bus transaction …",141,[[]]],[3,"IcFsSpklen","","I2C SS, FS or FM+ spike suppression limit This register …",null,null],[11,"to_bits","","",142,[[]]],[11,"from_bits","","",142,[[],["icfsspklen",3]]],[11,"ic_fs_spklen","","This register must be set before any I2C bus transaction …",142,[[]]],[11,"set_ic_fs_spklen","","This register must be set before any I2C bus transaction …",142,[[]]],[3,"IcDataCmd","","I2C Rx/Tx Data Buffer and Command Register; this is the …",null,null],[11,"to_bits","","",143,[[]]],[11,"from_bits","","",143,[[],["icdatacmd",3]]],[11,"first_data_byte","","Indicates the first data byte received after the address …",143,[[],["icdatacmdfirstdatabyte",3]]],[11,"set_first_data_byte","","Indicates the first data byte received after the address …",143,[[["icdatacmdfirstdatabyte",3]]]],[11,"restart","","This bit controls whether a RESTART is issued before the …",143,[[],["icdatacmdrestart",3]]],[11,"set_restart","","This bit controls whether a RESTART is issued before the …",143,[[["icdatacmdrestart",3]]]],[11,"stop","","This bit controls whether a STOP is issued after the byte …",143,[[],["icdatacmdstop",3]]],[11,"set_stop","","This bit controls whether a STOP is issued after the byte …",143,[[["icdatacmdstop",3]]]],[11,"cmd","","This bit controls whether a read or a write is performed. …",143,[[],["icdatacmdcmd",3]]],[11,"set_cmd","","This bit controls whether a read or a write is performed. …",143,[[["icdatacmdcmd",3]]]],[11,"dat","","This register contains the data to be transmitted or …",143,[[]]],[11,"set_dat","","This register contains the data to be transmitted or …",143,[[]]],[3,"IcTxTl","","I2C Transmit FIFO Threshold Register",null,null],[11,"to_bits","","",144,[[]]],[11,"from_bits","","",144,[[],["ictxtl",3]]],[11,"tx_tl","","Transmit FIFO Threshold Level. Controls the level of …",144,[[]]],[11,"set_tx_tl","","Transmit FIFO Threshold Level. Controls the level of …",144,[[]]],[3,"IcIntrStat","","I2C Interrupt Status Register Each bit in this register …",null,null],[11,"to_bits","","",145,[[]]],[11,"from_bits","","",145,[[],["icintrstat",3]]],[11,"r_master_on_hold","","See IC_RAW_INTR_STAT for a detailed description of …",145,[[],["icintrstatrmasteronhold",3]]],[11,"set_r_master_on_hold","","See IC_RAW_INTR_STAT for a detailed description of …",145,[[["icintrstatrmasteronhold",3]]]],[11,"r_restart_det","","See IC_RAW_INTR_STAT for a detailed description of …",145,[[],["icintrstatrrestartdet",3]]],[11,"set_r_restart_det","","See IC_RAW_INTR_STAT for a detailed description of …",145,[[["icintrstatrrestartdet",3]]]],[11,"r_gen_call","","See IC_RAW_INTR_STAT for a detailed description of …",145,[[],["icintrstatrgencall",3]]],[11,"set_r_gen_call","","See IC_RAW_INTR_STAT for a detailed description of …",145,[[["icintrstatrgencall",3]]]],[11,"r_start_det","","See IC_RAW_INTR_STAT for a detailed description of …",145,[[],["icintrstatrstartdet",3]]],[11,"set_r_start_det","","See IC_RAW_INTR_STAT for a detailed description of …",145,[[["icintrstatrstartdet",3]]]],[11,"r_stop_det","","See IC_RAW_INTR_STAT for a detailed description of …",145,[[],["icintrstatrstopdet",3]]],[11,"set_r_stop_det","","See IC_RAW_INTR_STAT for a detailed description of …",145,[[["icintrstatrstopdet",3]]]],[11,"r_activity","","See IC_RAW_INTR_STAT for a detailed description of …",145,[[],["icintrstatractivity",3]]],[11,"set_r_activity","","See IC_RAW_INTR_STAT for a detailed description of …",145,[[["icintrstatractivity",3]]]],[11,"r_rx_done","","See IC_RAW_INTR_STAT for a detailed description of …",145,[[],["icintrstatrrxdone",3]]],[11,"set_r_rx_done","","See IC_RAW_INTR_STAT for a detailed description of …",145,[[["icintrstatrrxdone",3]]]],[11,"r_tx_abrt","","See IC_RAW_INTR_STAT for a detailed description of …",145,[[],["icintrstatrtxabrt",3]]],[11,"set_r_tx_abrt","","See IC_RAW_INTR_STAT for a detailed description of …",145,[[["icintrstatrtxabrt",3]]]],[11,"r_rd_req","","See IC_RAW_INTR_STAT for a detailed description of …",145,[[],["icintrstatrrdreq",3]]],[11,"set_r_rd_req","","See IC_RAW_INTR_STAT for a detailed description of …",145,[[["icintrstatrrdreq",3]]]],[11,"r_tx_empty","","See IC_RAW_INTR_STAT for a detailed description of …",145,[[],["icintrstatrtxempty",3]]],[11,"set_r_tx_empty","","See IC_RAW_INTR_STAT for a detailed description of …",145,[[["icintrstatrtxempty",3]]]],[11,"r_tx_over","","See IC_RAW_INTR_STAT for a detailed description of …",145,[[],["icintrstatrtxover",3]]],[11,"set_r_tx_over","","See IC_RAW_INTR_STAT for a detailed description of …",145,[[["icintrstatrtxover",3]]]],[11,"r_rx_full","","See IC_RAW_INTR_STAT for a detailed description of …",145,[[],["icintrstatrrxfull",3]]],[11,"set_r_rx_full","","See IC_RAW_INTR_STAT for a detailed description of …",145,[[["icintrstatrrxfull",3]]]],[11,"r_rx_over","","See IC_RAW_INTR_STAT for a detailed description of …",145,[[],["icintrstatrrxover",3]]],[11,"set_r_rx_over","","See IC_RAW_INTR_STAT for a detailed description of …",145,[[["icintrstatrrxover",3]]]],[11,"r_rx_under","","See IC_RAW_INTR_STAT for a detailed description of …",145,[[],["icintrstatrrxunder",3]]],[11,"set_r_rx_under","","See IC_RAW_INTR_STAT for a detailed description of …",145,[[["icintrstatrrxunder",3]]]],[3,"IcTar","","I2C Target Address Register This register is 12 bits …",null,null],[11,"to_bits","","",146,[[]]],[11,"from_bits","","",146,[[],["ictar",3]]],[11,"special","","This bit indicates whether software performs a Device-ID …",146,[[],["ictarspecial",3]]],[11,"set_special","","This bit indicates whether software performs a Device-ID …",146,[[["ictarspecial",3]]]],[11,"gc_or_start","","If bit 11 (SPECIAL) is set to 1 and bit 13(Device-ID) is …",146,[[],["ictargcorstart",3]]],[11,"set_gc_or_start","","If bit 11 (SPECIAL) is set to 1 and bit 13(Device-ID) is …",146,[[["ictargcorstart",3]]]],[11,"ic_tar","","This is the target address for any master transaction. …",146,[[]]],[11,"set_ic_tar","","This is the target address for any master transaction. …",146,[[]]],[3,"IcSlvDataNackOnly","","Generate Slave Data NACK Register The register is used to …",null,null],[11,"to_bits","","",147,[[]]],[11,"from_bits","","",147,[[],["icslvdatanackonly",3]]],[11,"nack","","Generate NACK. This NACK generation only occurs when …",147,[[],["icslvdatanackonlynack",3]]],[11,"set_nack","","Generate NACK. This NACK generation only occurs when …",147,[[["icslvdatanackonlynack",3]]]],[3,"IcSsSclHcnt","","Standard Speed I2C Clock SCL High Count Register",null,null],[11,"to_bits","","",148,[[]]],[11,"from_bits","","",148,[[],["icsssclhcnt",3]]],[11,"ic_ss_scl_hcnt","","This register must be set before any I2C bus transaction …",148,[[]]],[11,"set_ic_ss_scl_hcnt","","This register must be set before any I2C bus transaction …",148,[[]]],[3,"IcIntrMask","","I2C Interrupt Mask Register. These bits mask their …",null,null],[11,"to_bits","","",149,[[]]],[11,"from_bits","","",149,[[],["icintrmask",3]]],[11,"m_master_on_hold_read_only","","This M_MASTER_ON_HOLD_read_only bit masks the …",149,[[],["icintrmaskmmasteronholdreadonly",3]]],[11,"set_m_master_on_hold_read_only","","This M_MASTER_ON_HOLD_read_only bit masks the …",149,[[["icintrmaskmmasteronholdreadonly",3]]]],[11,"m_restart_det","","This bit masks the R_RESTART_DET interrupt in …",149,[[],["icintrmaskmrestartdet",3]]],[11,"set_m_restart_det","","This bit masks the R_RESTART_DET interrupt in …",149,[[["icintrmaskmrestartdet",3]]]],[11,"m_gen_call","","This bit masks the R_GEN_CALL interrupt in IC_INTR_STAT …",149,[[],["icintrmaskmgencall",3]]],[11,"set_m_gen_call","","This bit masks the R_GEN_CALL interrupt in IC_INTR_STAT …",149,[[["icintrmaskmgencall",3]]]],[11,"m_start_det","","This bit masks the R_START_DET interrupt in IC_INTR_STAT …",149,[[],["icintrmaskmstartdet",3]]],[11,"set_m_start_det","","This bit masks the R_START_DET interrupt in IC_INTR_STAT …",149,[[["icintrmaskmstartdet",3]]]],[11,"m_stop_det","","This bit masks the R_STOP_DET interrupt in IC_INTR_STAT …",149,[[],["icintrmaskmstopdet",3]]],[11,"set_m_stop_det","","This bit masks the R_STOP_DET interrupt in IC_INTR_STAT …",149,[[["icintrmaskmstopdet",3]]]],[11,"m_activity","","This bit masks the R_ACTIVITY interrupt in IC_INTR_STAT …",149,[[],["icintrmaskmactivity",3]]],[11,"set_m_activity","","This bit masks the R_ACTIVITY interrupt in IC_INTR_STAT …",149,[[["icintrmaskmactivity",3]]]],[11,"m_rx_done","","This bit masks the R_RX_DONE interrupt in IC_INTR_STAT …",149,[[],["icintrmaskmrxdone",3]]],[11,"set_m_rx_done","","This bit masks the R_RX_DONE interrupt in IC_INTR_STAT …",149,[[["icintrmaskmrxdone",3]]]],[11,"m_tx_abrt","","This bit masks the R_TX_ABRT interrupt in IC_INTR_STAT …",149,[[],["icintrmaskmtxabrt",3]]],[11,"set_m_tx_abrt","","This bit masks the R_TX_ABRT interrupt in IC_INTR_STAT …",149,[[["icintrmaskmtxabrt",3]]]],[11,"m_rd_req","","This bit masks the R_RD_REQ interrupt in IC_INTR_STAT …",149,[[],["icintrmaskmrdreq",3]]],[11,"set_m_rd_req","","This bit masks the R_RD_REQ interrupt in IC_INTR_STAT …",149,[[["icintrmaskmrdreq",3]]]],[11,"m_tx_empty","","This bit masks the R_TX_EMPTY interrupt in IC_INTR_STAT …",149,[[],["icintrmaskmtxempty",3]]],[11,"set_m_tx_empty","","This bit masks the R_TX_EMPTY interrupt in IC_INTR_STAT …",149,[[["icintrmaskmtxempty",3]]]],[11,"m_tx_over","","This bit masks the R_TX_OVER interrupt in IC_INTR_STAT …",149,[[],["icintrmaskmtxover",3]]],[11,"set_m_tx_over","","This bit masks the R_TX_OVER interrupt in IC_INTR_STAT …",149,[[["icintrmaskmtxover",3]]]],[11,"m_rx_full","","This bit masks the R_RX_FULL interrupt in IC_INTR_STAT …",149,[[],["icintrmaskmrxfull",3]]],[11,"set_m_rx_full","","This bit masks the R_RX_FULL interrupt in IC_INTR_STAT …",149,[[["icintrmaskmrxfull",3]]]],[11,"m_rx_over","","This bit masks the R_RX_OVER interrupt in IC_INTR_STAT …",149,[[],["icintrmaskmrxover",3]]],[11,"set_m_rx_over","","This bit masks the R_RX_OVER interrupt in IC_INTR_STAT …",149,[[["icintrmaskmrxover",3]]]],[11,"m_rx_under","","This bit masks the R_RX_UNDER interrupt in IC_INTR_STAT …",149,[[],["icintrmaskmrxunder",3]]],[11,"set_m_rx_under","","This bit masks the R_RX_UNDER interrupt in IC_INTR_STAT …",149,[[["icintrmaskmrxunder",3]]]],[3,"IcClrRdReq","","Clear RD_REQ Interrupt Register",null,null],[11,"to_bits","","",150,[[]]],[11,"from_bits","","",150,[[],["icclrrdreq",3]]],[11,"clr_rd_req","","Read this register to clear the RD_REQ interrupt (bit 5) …",150,[[]]],[11,"set_clr_rd_req","","Read this register to clear the RD_REQ interrupt (bit 5) …",150,[[]]],[3,"IcCompVersion","","I2C Component Version Register",null,null],[11,"to_bits","","",151,[[]]],[11,"from_bits","","",151,[[],["iccompversion",3]]],[11,"ic_comp_version","","",151,[[]]],[11,"set_ic_comp_version","","",151,[[]]],[3,"IcFsSclLcnt","","Fast Mode or Fast Mode Plus I2C Clock SCL Low Count …",null,null],[11,"to_bits","","",152,[[]]],[11,"from_bits","","",152,[[],["icfsscllcnt",3]]],[11,"ic_fs_scl_lcnt","","This register must be set before any I2C bus transaction …",152,[[]]],[11,"set_ic_fs_scl_lcnt","","This register must be set before any I2C bus transaction …",152,[[]]],[3,"IcClrGenCall","","Clear GEN_CALL Interrupt Register",null,null],[11,"to_bits","","",153,[[]]],[11,"from_bits","","",153,[[],["icclrgencall",3]]],[11,"clr_gen_call","","Read this register to clear the GEN_CALL interrupt (bit …",153,[[]]],[11,"set_clr_gen_call","","Read this register to clear the GEN_CALL interrupt (bit …",153,[[]]],[3,"IcSdaHold","","I2C SDA Hold Time Length Register The bits [15:0] of this …",null,null],[11,"to_bits","","",154,[[]]],[11,"from_bits","","",154,[[],["icsdahold",3]]],[11,"ic_sda_rx_hold","","Sets the required SDA hold time in units of ic_clk …",154,[[]]],[11,"set_ic_sda_rx_hold","","Sets the required SDA hold time in units of ic_clk …",154,[[]]],[11,"ic_sda_tx_hold","","Sets the required SDA hold time in units of ic_clk …",154,[[]]],[11,"set_ic_sda_tx_hold","","Sets the required SDA hold time in units of ic_clk …",154,[[]]],[3,"IcRxTl","","I2C Receive FIFO Threshold Register",null,null],[11,"to_bits","","",155,[[]]],[11,"from_bits","","",155,[[],["icrxtl",3]]],[11,"rx_tl","","Receive FIFO Threshold Level. Controls the level of …",155,[[]]],[11,"set_rx_tl","","Receive FIFO Threshold Level. Controls the level of …",155,[[]]],[3,"IcCompParam1","","Component Parameter Register 1 Note This register is not …",null,null],[11,"to_bits","","",156,[[]]],[11,"from_bits","","",156,[[],["iccompparam1",3]]],[11,"tx_buffer_depth","","TX Buffer Depth = 16",156,[[]]],[11,"set_tx_buffer_depth","","TX Buffer Depth = 16",156,[[]]],[11,"rx_buffer_depth","","RX Buffer Depth = 16",156,[[]]],[11,"set_rx_buffer_depth","","RX Buffer Depth = 16",156,[[]]],[11,"add_encoded_params","","Encoded parameters not visible",156,[[]]],[11,"set_add_encoded_params","","Encoded parameters not visible",156,[[]]],[11,"has_dma","","DMA handshaking signals are enabled",156,[[]]],[11,"set_has_dma","","DMA handshaking signals are enabled",156,[[]]],[11,"intr_io","","COMBINED Interrupt outputs",156,[[]]],[11,"set_intr_io","","COMBINED Interrupt outputs",156,[[]]],[11,"hc_count_values","","Programmable count values for each mode.",156,[[]]],[11,"set_hc_count_values","","Programmable count values for each mode.",156,[[]]],[11,"max_speed_mode","","MAX SPEED MODE = FAST MODE",156,[[]]],[11,"set_max_speed_mode","","MAX SPEED MODE = FAST MODE",156,[[]]],[11,"apb_data_width","","APB data bus width is 32 bits",156,[[]]],[11,"set_apb_data_width","","APB data bus width is 32 bits",156,[[]]],[3,"IcClrActivity","","Clear ACTIVITY Interrupt Register",null,null],[11,"to_bits","","",157,[[]]],[11,"from_bits","","",157,[[],["icclractivity",3]]],[11,"clr_activity","","Reading this register clears the ACTIVITY interrupt if …",157,[[]]],[11,"set_clr_activity","","Reading this register clears the ACTIVITY interrupt if …",157,[[]]],[3,"IcClrTxOver","","Clear TX_OVER Interrupt Register",null,null],[11,"to_bits","","",158,[[]]],[11,"from_bits","","",158,[[],["icclrtxover",3]]],[11,"clr_tx_over","","Read this register to clear the TX_OVER interrupt (bit 3) …",158,[[]]],[11,"set_clr_tx_over","","Read this register to clear the TX_OVER interrupt (bit 3) …",158,[[]]],[0,"values","rp2040_pac::i2c0","",null,null],[3,"IcIntrStatRStartDet","rp2040_pac::i2c0::values","I2C Interrupt Status Register Each bit in this register …",null,null],[11,"to_bits","","",159,[[]]],[11,"from_bits","","",159,[[],["icintrstatrstartdet",3]]],[18,"INACTIVE","","R_START_DET interrupt is inactive",159,null],[18,"ACTIVE","","R_START_DET interrupt is active",159,null],[3,"IcConIc10bitaddrMaster","","I2C Control Register. This register can be written only …",null,null],[11,"to_bits","","",160,[[]]],[11,"from_bits","","",160,[[],["icconic10bitaddrmaster",3]]],[18,"ADDR_7BITS","","Master 7Bit addressing mode",160,null],[18,"ADDR_10BITS","","Master 10Bit addressing mode",160,null],[3,"IcRawIntrStatRxFull","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[11,"to_bits","","",161,[[]]],[11,"from_bits","","",161,[[],["icrawintrstatrxfull",3]]],[18,"INACTIVE","","RX_FULL interrupt is inactive",161,null],[18,"ACTIVE","","RX_FULL interrupt is active",161,null],[3,"IcAckGeneralCallAckGenCall","","I2C ACK General Call Register The register controls …",null,null],[11,"to_bits","","",162,[[]]],[11,"from_bits","","",162,[[],["icackgeneralcallackgencall",3]]],[18,"DISABLED","","Generate NACK for a General Call",162,null],[18,"ENABLED","","Generate ACK for a General Call",162,null],[3,"IcStatusRfne","","I2C Status Register This is a read-only register used to …",null,null],[11,"to_bits","","",163,[[]]],[11,"from_bits","","",163,[[],["icstatusrfne",3]]],[18,"EMPTY","","Rx FIFO is empty",163,null],[18,"NOT_EMPTY","","Rx FIFO not empty",163,null],[3,"IcIntrMaskMGenCall","","I2C Interrupt Mask Register. These bits mask their …",null,null],[11,"to_bits","","",164,[[]]],[11,"from_bits","","",164,[[],["icintrmaskmgencall",3]]],[18,"ENABLED","","GEN_CALL interrupt is masked",164,null],[18,"DISABLED","","GEN_CALL interrupt is unmasked",164,null],[3,"IcConIcRestartEn","","I2C Control Register. This register can be written only …",null,null],[11,"to_bits","","",165,[[]]],[11,"from_bits","","",165,[[],["icconicrestarten",3]]],[18,"DISABLED","","Master restart disabled",165,null],[18,"ENABLED","","Master restart enabled",165,null],[3,"IcDataCmdCmd","","I2C Rx/Tx Data Buffer and Command Register; this is the …",null,null],[11,"to_bits","","",166,[[]]],[11,"from_bits","","",166,[[],["icdatacmdcmd",3]]],[18,"WRITE","","Master Write Command",166,null],[18,"READ","","Master Read Command",166,null],[3,"IcEnableStatusSlvDisabledWhileBusy","","I2C Enable Status Register The register is used to report …",null,null],[11,"to_bits","","",167,[[]]],[11,"from_bits","","",167,[[],["icenablestatusslvdisabledwhilebusy",3]]],[18,"INACTIVE","","Slave is disabled when it is idle",167,null],[18,"ACTIVE","","Slave is disabled when it is active",167,null],[3,"IcTxAbrtSourceAbrtSlvArblost","","I2C Transmit Abort Source Register This register has 32 …",null,null],[11,"to_bits","","",168,[[]]],[11,"from_bits","","",168,[[],["ictxabrtsourceabrtslvarblost",3]]],[18,"ABRT_SLV_ARBLOST_VOID","","Slave lost arbitration to remote master- scenario not …",168,null],[18,"ABRT_SLV_ARBLOST_GENERATED","","Slave lost arbitration to remote master",168,null],[3,"IcTxAbrtSourceAbrtSbyteAckdet","","I2C Transmit Abort Source Register This register has 32 …",null,null],[11,"to_bits","","",169,[[]]],[11,"from_bits","","",169,[[],["ictxabrtsourceabrtsbyteackdet",3]]],[18,"ABRT_SBYTE_ACKDET_VOID","","ACK detected for START byte- scenario not present",169,null],[18,"ABRT_SBYTE_ACKDET_GENERATED","","ACK detected for START byte",169,null],[3,"IcIntrStatRActivity","","I2C Interrupt Status Register Each bit in this register …",null,null],[11,"to_bits","","",170,[[]]],[11,"from_bits","","",170,[[],["icintrstatractivity",3]]],[18,"INACTIVE","","R_ACTIVITY interrupt is inactive",170,null],[18,"ACTIVE","","R_ACTIVITY interrupt is active",170,null],[3,"IcTarSpecial","","I2C Target Address Register This register is 12 bits …",null,null],[11,"to_bits","","",171,[[]]],[11,"from_bits","","",171,[[],["ictarspecial",3]]],[18,"DISABLED","","Disables programming of GENERAL_CALL or START_BYTE …",171,null],[18,"ENABLED","","Enables programming of GENERAL_CALL or START_BYTE …",171,null],[3,"IcTxAbrtSourceAbrtHsAckdet","","I2C Transmit Abort Source Register This register has 32 …",null,null],[11,"to_bits","","",172,[[]]],[11,"from_bits","","",172,[[],["ictxabrtsourceabrthsackdet",3]]],[18,"ABRT_HS_ACK_VOID","","HS Master code ACKed in HS Mode- scenario not present",172,null],[18,"ABRT_HS_ACK_GENERATED","","HS Master code ACKed in HS Mode",172,null],[3,"IcEnableTxCmdBlock","","I2C Enable Register",null,null],[11,"to_bits","","",173,[[]]],[11,"from_bits","","",173,[[],["icenabletxcmdblock",3]]],[18,"NOT_BLOCKED","","Tx Command execution not blocked",173,null],[18,"BLOCKED","","Tx Command execution blocked",173,null],[3,"IcRawIntrStatRestartDet","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[11,"to_bits","","",174,[[]]],[11,"from_bits","","",174,[[],["icrawintrstatrestartdet",3]]],[18,"INACTIVE","","RESTART_DET interrupt is inactive",174,null],[18,"ACTIVE","","RESTART_DET interrupt is active",174,null],[3,"IcRawIntrStatActivity","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[11,"to_bits","","",175,[[]]],[11,"from_bits","","",175,[[],["icrawintrstatactivity",3]]],[18,"INACTIVE","","RAW_INTR_ACTIVITY interrupt is inactive",175,null],[18,"ACTIVE","","RAW_INTR_ACTIVITY interrupt is active",175,null],[3,"IcTxAbrtSourceAbrtSlvflushTxfifo","","I2C Transmit Abort Source Register This register has 32 …",null,null],[11,"to_bits","","",176,[[]]],[11,"from_bits","","",176,[[],["ictxabrtsourceabrtslvflushtxfifo",3]]],[18,"ABRT_SLVFLUSH_TXFIFO_VOID","","Slave flushes existing data in TX-FIFO upon getting read …",176,null],[18,"ABRT_SLVFLUSH_TXFIFO_GENERATED","","Slave flushes existing data in TX-FIFO upon getting read …",176,null],[3,"IcTxAbrtSourceAbrt10bRdNorstrt","","I2C Transmit Abort Source Register This register has 32 …",null,null],[11,"to_bits","","",177,[[]]],[11,"from_bits","","",177,[[],["ictxabrtsourceabrt10brdnorstrt",3]]],[18,"ABRT_10B_RD_VOID","","Master not trying to read in 10Bit addressing mode when …",177,null],[18,"ABRT_10B_RD_GENERATED","","Master trying to read in 10Bit addressing mode when …",177,null],[3,"IcConTxEmptyCtrl","","I2C Control Register. This register can be written only …",null,null],[11,"to_bits","","",178,[[]]],[11,"from_bits","","",178,[[],["iccontxemptyctrl",3]]],[18,"DISABLED","","Default behaviour of TX_EMPTY interrupt",178,null],[18,"ENABLED","","Controlled generation of TX_EMPTY interrupt",178,null],[3,"IcIntrStatRGenCall","","I2C Interrupt Status Register Each bit in this register …",null,null],[11,"to_bits","","",179,[[]]],[11,"from_bits","","",179,[[],["icintrstatrgencall",3]]],[18,"INACTIVE","","R_GEN_CALL interrupt is inactive",179,null],[18,"ACTIVE","","R_GEN_CALL interrupt is active",179,null],[3,"IcDmaCrTdmae","","DMA Control Register The register is used to enable the …",null,null],[11,"to_bits","","",180,[[]]],[11,"from_bits","","",180,[[],["icdmacrtdmae",3]]],[18,"DISABLED","","transmit FIFO DMA channel disabled",180,null],[18,"ENABLED","","Transmit FIFO DMA channel enabled",180,null],[3,"IcDmaCrRdmae","","DMA Control Register The register is used to enable the …",null,null],[11,"to_bits","","",181,[[]]],[11,"from_bits","","",181,[[],["icdmacrrdmae",3]]],[18,"DISABLED","","Receive FIFO DMA channel disabled",181,null],[18,"ENABLED","","Receive FIFO DMA channel enabled",181,null],[3,"IcRawIntrStatTxEmpty","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[11,"to_bits","","",182,[[]]],[11,"from_bits","","",182,[[],["icrawintrstattxempty",3]]],[18,"INACTIVE","","TX_EMPTY interrupt is inactive",182,null],[18,"ACTIVE","","TX_EMPTY interrupt is active",182,null],[3,"IcConMasterMode","","I2C Control Register. This register can be written only …",null,null],[11,"to_bits","","",183,[[]]],[11,"from_bits","","",183,[[],["icconmastermode",3]]],[18,"DISABLED","","Master mode is disabled",183,null],[18,"ENABLED","","Master mode is enabled",183,null],[3,"IcTxAbrtSourceAbrt10addr2Noack","","I2C Transmit Abort Source Register This register has 32 …",null,null],[11,"to_bits","","",184,[[]]],[11,"from_bits","","",184,[[],["ictxabrtsourceabrt10addr2noack",3]]],[18,"INACTIVE","","This abort is not generated",184,null],[18,"ACTIVE","","Byte 2 of 10Bit Address not ACKed by any slave",184,null],[3,"IcIntrStatRTxEmpty","","I2C Interrupt Status Register Each bit in this register …",null,null],[11,"to_bits","","",185,[[]]],[11,"from_bits","","",185,[[],["icintrstatrtxempty",3]]],[18,"INACTIVE","","R_TX_EMPTY interrupt is inactive",185,null],[18,"ACTIVE","","R_TX_EMPTY interrupt is active",185,null],[3,"IcIntrMaskMRxOver","","I2C Interrupt Mask Register. These bits mask their …",null,null],[11,"to_bits","","",186,[[]]],[11,"from_bits","","",186,[[],["icintrmaskmrxover",3]]],[18,"ENABLED","","RX_OVER interrupt is masked",186,null],[18,"DISABLED","","RX_OVER interrupt is unmasked",186,null],[3,"IcTxAbrtSourceAbrtMasterDis","","I2C Transmit Abort Source Register This register has 32 …",null,null],[11,"to_bits","","",187,[[]]],[11,"from_bits","","",187,[[],["ictxabrtsourceabrtmasterdis",3]]],[18,"ABRT_MASTER_DIS_VOID","","User initiating master operation when MASTER disabled- …",187,null],[18,"ABRT_MASTER_DIS_GENERATED","","User initiating master operation when MASTER disabled",187,null],[3,"IcStatusMstActivity","","I2C Status Register This is a read-only register used to …",null,null],[11,"to_bits","","",188,[[]]],[11,"from_bits","","",188,[[],["icstatusmstactivity",3]]],[18,"IDLE","","Master is idle",188,null],[18,"ACTIVE","","Master not idle",188,null],[3,"IcIntrMaskMRxDone","","I2C Interrupt Mask Register. These bits mask their …",null,null],[11,"to_bits","","",189,[[]]],[11,"from_bits","","",189,[[],["icintrmaskmrxdone",3]]],[18,"ENABLED","","RX_DONE interrupt is masked",189,null],[18,"DISABLED","","RX_DONE interrupt is unmasked",189,null],[3,"IcTxAbrtSourceAbrtSlvrdIntx","","I2C Transmit Abort Source Register This register has 32 …",null,null],[11,"to_bits","","",190,[[]]],[11,"from_bits","","",190,[[],["ictxabrtsourceabrtslvrdintx",3]]],[18,"ABRT_SLVRD_INTX_VOID","","Slave trying to transmit to remote master in read mode- …",190,null],[18,"ABRT_SLVRD_INTX_GENERATED","","Slave trying to transmit to remote master in read mode",190,null],[3,"IcIntrStatRRxUnder","","I2C Interrupt Status Register Each bit in this register …",null,null],[11,"to_bits","","",191,[[]]],[11,"from_bits","","",191,[[],["icintrstatrrxunder",3]]],[18,"INACTIVE","","RX_UNDER interrupt is inactive",191,null],[18,"ACTIVE","","RX_UNDER interrupt is active",191,null],[3,"IcEnableAbort","","I2C Enable Register",null,null],[11,"to_bits","","",192,[[]]],[11,"from_bits","","",192,[[],["icenableabort",3]]],[18,"DISABLE","","ABORT operation not in progress",192,null],[18,"ENABLED","","ABORT operation in progress",192,null],[3,"IcIntrStatRRestartDet","","I2C Interrupt Status Register Each bit in this register …",null,null],[11,"to_bits","","",193,[[]]],[11,"from_bits","","",193,[[],["icintrstatrrestartdet",3]]],[18,"INACTIVE","","R_RESTART_DET interrupt is inactive",193,null],[18,"ACTIVE","","R_RESTART_DET interrupt is active",193,null],[3,"IcIntrStatRRxDone","","I2C Interrupt Status Register Each bit in this register …",null,null],[11,"to_bits","","",194,[[]]],[11,"from_bits","","",194,[[],["icintrstatrrxdone",3]]],[18,"INACTIVE","","R_RX_DONE interrupt is inactive",194,null],[18,"ACTIVE","","R_RX_DONE interrupt is active",194,null],[3,"IcTxAbrtSourceAbrt7bAddrNoack","","I2C Transmit Abort Source Register This register has 32 …",null,null],[11,"to_bits","","",195,[[]]],[11,"from_bits","","",195,[[],["ictxabrtsourceabrt7baddrnoack",3]]],[18,"INACTIVE","","This abort is not generated",195,null],[18,"ACTIVE","","This abort is generated because of NOACK for 7-bit address",195,null],[3,"IcStatusRff","","I2C Status Register This is a read-only register used to …",null,null],[11,"to_bits","","",196,[[]]],[11,"from_bits","","",196,[[],["icstatusrff",3]]],[18,"NOT_FULL","","Rx FIFO not full",196,null],[18,"FULL","","Rx FIFO is full",196,null],[3,"IcIntrMaskMTxAbrt","","I2C Interrupt Mask Register. These bits mask their …",null,null],[11,"to_bits","","",197,[[]]],[11,"from_bits","","",197,[[],["icintrmaskmtxabrt",3]]],[18,"ENABLED","","TX_ABORT interrupt is masked",197,null],[18,"DISABLED","","TX_ABORT interrupt is unmasked",197,null],[3,"IcIntrStatRTxAbrt","","I2C Interrupt Status Register Each bit in this register …",null,null],[11,"to_bits","","",198,[[]]],[11,"from_bits","","",198,[[],["icintrstatrtxabrt",3]]],[18,"INACTIVE","","R_TX_ABRT interrupt is inactive",198,null],[18,"ACTIVE","","R_TX_ABRT interrupt is active",198,null],[3,"IcIntrMaskMRxUnder","","I2C Interrupt Mask Register. These bits mask their …",null,null],[11,"to_bits","","",199,[[]]],[11,"from_bits","","",199,[[],["icintrmaskmrxunder",3]]],[18,"ENABLED","","RX_UNDER interrupt is masked",199,null],[18,"DISABLED","","RX_UNDER interrupt is unmasked",199,null],[3,"IcRawIntrStatStopDet","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[11,"to_bits","","",200,[[]]],[11,"from_bits","","",200,[[],["icrawintrstatstopdet",3]]],[18,"INACTIVE","","STOP_DET interrupt is inactive",200,null],[18,"ACTIVE","","STOP_DET interrupt is active",200,null],[3,"IcEnableStatusSlvRxDataLost","","I2C Enable Status Register The register is used to report …",null,null],[11,"to_bits","","",201,[[]]],[11,"from_bits","","",201,[[],["icenablestatusslvrxdatalost",3]]],[18,"INACTIVE","","Slave RX Data is not lost",201,null],[18,"ACTIVE","","Slave RX Data is lost",201,null],[3,"IcTxAbrtSourceAbrtGcallRead","","I2C Transmit Abort Source Register This register has 32 …",null,null],[11,"to_bits","","",202,[[]]],[11,"from_bits","","",202,[[],["ictxabrtsourceabrtgcallread",3]]],[18,"ABRT_GCALL_READ_VOID","","GCALL is followed by read from bus-scenario not present",202,null],[18,"ABRT_GCALL_READ_GENERATED","","GCALL is followed by read from bus",202,null],[3,"IcIntrMaskMTxEmpty","","I2C Interrupt Mask Register. These bits mask their …",null,null],[11,"to_bits","","",203,[[]]],[11,"from_bits","","",203,[[],["icintrmaskmtxempty",3]]],[18,"ENABLED","","TX_EMPTY interrupt is masked",203,null],[18,"DISABLED","","TX_EMPTY interrupt is unmasked",203,null],[3,"IcTxAbrtSourceAbrtSbyteNorstrt","","I2C Transmit Abort Source Register This register has 32 …",null,null],[11,"to_bits","","",204,[[]]],[11,"from_bits","","",204,[[],["ictxabrtsourceabrtsbytenorstrt",3]]],[18,"ABRT_SBYTE_NORSTRT_VOID","","User trying to send START byte when RESTART disabled- …",204,null],[18,"ABRT_SBYTE_NORSTRT_GENERATED","","User trying to send START byte when RESTART disabled",204,null],[3,"IcEnableEnable","","I2C Enable Register",null,null],[11,"to_bits","","",205,[[]]],[11,"from_bits","","",205,[[],["icenableenable",3]]],[18,"DISABLED","","I2C is disabled",205,null],[18,"ENABLED","","I2C is enabled",205,null],[3,"IcTxAbrtSourceAbrtUserAbrt","","I2C Transmit Abort Source Register This register has 32 …",null,null],[11,"to_bits","","",206,[[]]],[11,"from_bits","","",206,[[],["ictxabrtsourceabrtuserabrt",3]]],[18,"ABRT_USER_ABRT_VOID","","Transfer abort detected by master- scenario not present",206,null],[18,"ABRT_USER_ABRT_GENERATED","","Transfer abort detected by master",206,null],[3,"IcIntrMaskMRdReq","","I2C Interrupt Mask Register. These bits mask their …",null,null],[11,"to_bits","","",207,[[]]],[11,"from_bits","","",207,[[],["icintrmaskmrdreq",3]]],[18,"ENABLED","","RD_REQ interrupt is masked",207,null],[18,"DISABLED","","RD_REQ interrupt is unmasked",207,null],[3,"IcIntrMaskMRestartDet","","I2C Interrupt Mask Register. These bits mask their …",null,null],[11,"to_bits","","",208,[[]]],[11,"from_bits","","",208,[[],["icintrmaskmrestartdet",3]]],[18,"ENABLED","","RESTART_DET interrupt is masked",208,null],[18,"DISABLED","","RESTART_DET interrupt is unmasked",208,null],[3,"IcRawIntrStatRdReq","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[11,"to_bits","","",209,[[]]],[11,"from_bits","","",209,[[],["icrawintrstatrdreq",3]]],[18,"INACTIVE","","RD_REQ interrupt is inactive",209,null],[18,"ACTIVE","","RD_REQ interrupt is active",209,null],[3,"IcTarGcOrStart","","I2C Target Address Register This register is 12 bits …",null,null],[11,"to_bits","","",210,[[]]],[11,"from_bits","","",210,[[],["ictargcorstart",3]]],[18,"GENERAL_CALL","","GENERAL_CALL byte transmission",210,null],[18,"START_BYTE","","START byte transmission",210,null],[3,"IcIntrMaskMMasterOnHoldReadOnly","","I2C Interrupt Mask Register. These bits mask their …",null,null],[11,"to_bits","","",211,[[]]],[11,"from_bits","","",211,[[],["icintrmaskmmasteronholdreadonly",3]]],[18,"ENABLED","","MASTER_ON_HOLD interrupt is masked",211,null],[18,"DISABLED","","MASTER_ON_HOLD interrupt is unmasked",211,null],[3,"IcTxAbrtSourceAbrtHsNorstrt","","I2C Transmit Abort Source Register This register has 32 …",null,null],[11,"to_bits","","",212,[[]]],[11,"from_bits","","",212,[[],["ictxabrtsourceabrthsnorstrt",3]]],[18,"ABRT_HS_NORSTRT_VOID","","User trying to switch Master to HS mode when RESTART …",212,null],[18,"ABRT_HS_NORSTRT_GENERATED","","User trying to switch Master to HS mode when RESTART …",212,null],[3,"IcStatusActivity","","I2C Status Register This is a read-only register used to …",null,null],[11,"to_bits","","",213,[[]]],[11,"from_bits","","",213,[[],["icstatusactivity",3]]],[18,"INACTIVE","","I2C is idle",213,null],[18,"ACTIVE","","I2C is active",213,null],[3,"IcTxAbrtSourceAbrtGcallNoack","","I2C Transmit Abort Source Register This register has 32 …",null,null],[11,"to_bits","","",214,[[]]],[11,"from_bits","","",214,[[],["ictxabrtsourceabrtgcallnoack",3]]],[18,"ABRT_GCALL_NOACK_VOID","","GCALL not ACKed by any slave-scenario not present",214,null],[18,"ABRT_GCALL_NOACK_GENERATED","","GCALL not ACKed by any slave",214,null],[3,"IcConStopDetIfaddressed","","I2C Control Register. This register can be written only …",null,null],[11,"to_bits","","",215,[[]]],[11,"from_bits","","",215,[[],["icconstopdetifaddressed",3]]],[18,"DISABLED","","slave issues STOP_DET intr always",215,null],[18,"ENABLED","","slave issues STOP_DET intr only if addressed",215,null],[3,"IcStatusTfe","","I2C Status Register This is a read-only register used to …",null,null],[11,"to_bits","","",216,[[]]],[11,"from_bits","","",216,[[],["icstatustfe",3]]],[18,"NON_EMPTY","","Tx FIFO not empty",216,null],[18,"EMPTY","","Tx FIFO is empty",216,null],[3,"IcRawIntrStatRxOver","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[11,"to_bits","","",217,[[]]],[11,"from_bits","","",217,[[],["icrawintrstatrxover",3]]],[18,"INACTIVE","","RX_OVER interrupt is inactive",217,null],[18,"ACTIVE","","RX_OVER interrupt is active",217,null],[3,"IcIntrStatRTxOver","","I2C Interrupt Status Register Each bit in this register …",null,null],[11,"to_bits","","",218,[[]]],[11,"from_bits","","",218,[[],["icintrstatrtxover",3]]],[18,"INACTIVE","","R_TX_OVER interrupt is inactive",218,null],[18,"ACTIVE","","R_TX_OVER interrupt is active",218,null],[3,"IcStatusSlvActivity","","I2C Status Register This is a read-only register used to …",null,null],[11,"to_bits","","",219,[[]]],[11,"from_bits","","",219,[[],["icstatusslvactivity",3]]],[18,"IDLE","","Slave is idle",219,null],[18,"ACTIVE","","Slave not idle",219,null],[3,"IcRawIntrStatStartDet","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[11,"to_bits","","",220,[[]]],[11,"from_bits","","",220,[[],["icrawintrstatstartdet",3]]],[18,"INACTIVE","","START_DET interrupt is inactive",220,null],[18,"ACTIVE","","START_DET interrupt is active",220,null],[3,"IcRawIntrStatTxAbrt","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[11,"to_bits","","",221,[[]]],[11,"from_bits","","",221,[[],["icrawintrstattxabrt",3]]],[18,"INACTIVE","","TX_ABRT interrupt is inactive",221,null],[18,"ACTIVE","","TX_ABRT interrupt is active",221,null],[3,"IcDataCmdRestart","","I2C Rx/Tx Data Buffer and Command Register; this is the …",null,null],[11,"to_bits","","",222,[[]]],[11,"from_bits","","",222,[[],["icdatacmdrestart",3]]],[18,"DISABLE","","Don\'t Issue RESTART before this command",222,null],[18,"ENABLE","","Issue RESTART before this command",222,null],[3,"IcTxAbrtSourceArbLost","","I2C Transmit Abort Source Register This register has 32 …",null,null],[11,"to_bits","","",223,[[]]],[11,"from_bits","","",223,[[],["ictxabrtsourcearblost",3]]],[18,"ABRT_LOST_VOID","","Master or Slave-Transmitter lost arbitration- scenario …",223,null],[18,"ABRT_LOST_GENERATED","","Master or Slave-Transmitter lost arbitration",223,null],[3,"IcStatusTfnf","","I2C Status Register This is a read-only register used to …",null,null],[11,"to_bits","","",224,[[]]],[11,"from_bits","","",224,[[],["icstatustfnf",3]]],[18,"FULL","","Tx FIFO is full",224,null],[18,"NOT_FULL","","Tx FIFO not full",224,null],[3,"IcIntrStatRMasterOnHold","","I2C Interrupt Status Register Each bit in this register …",null,null],[11,"to_bits","","",225,[[]]],[11,"from_bits","","",225,[[],["icintrstatrmasteronhold",3]]],[18,"INACTIVE","","R_MASTER_ON_HOLD interrupt is inactive",225,null],[18,"ACTIVE","","R_MASTER_ON_HOLD interrupt is active",225,null],[3,"IcRawIntrStatRxDone","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[11,"to_bits","","",226,[[]]],[11,"from_bits","","",226,[[],["icrawintrstatrxdone",3]]],[18,"INACTIVE","","RX_DONE interrupt is inactive",226,null],[18,"ACTIVE","","RX_DONE interrupt is active",226,null],[3,"IcRawIntrStatRxUnder","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[11,"to_bits","","",227,[[]]],[11,"from_bits","","",227,[[],["icrawintrstatrxunder",3]]],[18,"INACTIVE","","RX_UNDER interrupt is inactive",227,null],[18,"ACTIVE","","RX_UNDER interrupt is active",227,null],[3,"IcTxAbrtSourceAbrtTxdataNoack","","I2C Transmit Abort Source Register This register has 32 …",null,null],[11,"to_bits","","",228,[[]]],[11,"from_bits","","",228,[[],["ictxabrtsourceabrttxdatanoack",3]]],[18,"ABRT_TXDATA_NOACK_VOID","","Transmitted data non-ACKed by addressed slave-scenario …",228,null],[18,"ABRT_TXDATA_NOACK_GENERATED","","Transmitted data not ACKed by addressed slave",228,null],[3,"IcSlvDataNackOnlyNack","","Generate Slave Data NACK Register The register is used to …",null,null],[11,"to_bits","","",229,[[]]],[11,"from_bits","","",229,[[],["icslvdatanackonlynack",3]]],[18,"DISABLED","","Slave receiver generates NACK normally",229,null],[18,"ENABLED","","Slave receiver generates NACK upon data reception only",229,null],[3,"IcConSpeed","","I2C Control Register. This register can be written only …",null,null],[11,"to_bits","","",230,[[]]],[11,"from_bits","","",230,[[],["icconspeed",3]]],[18,"STANDARD","","Standard Speed mode of operation",230,null],[18,"FAST","","Fast or Fast Plus mode of operation",230,null],[18,"HIGH","","High Speed mode of operation",230,null],[3,"IcDataCmdFirstDataByte","","I2C Rx/Tx Data Buffer and Command Register; this is the …",null,null],[11,"to_bits","","",231,[[]]],[11,"from_bits","","",231,[[],["icdatacmdfirstdatabyte",3]]],[18,"INACTIVE","","Sequential data byte received",231,null],[18,"ACTIVE","","Non sequential data byte received",231,null],[3,"IcIntrStatRStopDet","","I2C Interrupt Status Register Each bit in this register …",null,null],[11,"to_bits","","",232,[[]]],[11,"from_bits","","",232,[[],["icintrstatrstopdet",3]]],[18,"INACTIVE","","R_STOP_DET interrupt is inactive",232,null],[18,"ACTIVE","","R_STOP_DET interrupt is active",232,null],[3,"IcEnableStatusIcEn","","I2C Enable Status Register The register is used to report …",null,null],[11,"to_bits","","",233,[[]]],[11,"from_bits","","",233,[[],["icenablestatusicen",3]]],[18,"DISABLED","","I2C disabled",233,null],[18,"ENABLED","","I2C enabled",233,null],[3,"IcIntrStatRRdReq","","I2C Interrupt Status Register Each bit in this register …",null,null],[11,"to_bits","","",234,[[]]],[11,"from_bits","","",234,[[],["icintrstatrrdreq",3]]],[18,"INACTIVE","","R_RD_REQ interrupt is inactive",234,null],[18,"ACTIVE","","R_RD_REQ interrupt is active",234,null],[3,"IcIntrStatRRxFull","","I2C Interrupt Status Register Each bit in this register …",null,null],[11,"to_bits","","",235,[[]]],[11,"from_bits","","",235,[[],["icintrstatrrxfull",3]]],[18,"INACTIVE","","R_RX_FULL interrupt is inactive",235,null],[18,"ACTIVE","","R_RX_FULL interrupt is active",235,null],[3,"IcIntrMaskMStartDet","","I2C Interrupt Mask Register. These bits mask their …",null,null],[11,"to_bits","","",236,[[]]],[11,"from_bits","","",236,[[],["icintrmaskmstartdet",3]]],[18,"ENABLED","","START_DET interrupt is masked",236,null],[18,"DISABLED","","START_DET interrupt is unmasked",236,null],[3,"IcConRxFifoFullHldCtrl","","I2C Control Register. This register can be written only …",null,null],[11,"to_bits","","",237,[[]]],[11,"from_bits","","",237,[[],["icconrxfifofullhldctrl",3]]],[18,"DISABLED","","Overflow when RX_FIFO is full",237,null],[18,"ENABLED","","Hold bus when RX_FIFO is full",237,null],[3,"IcConIc10bitaddrSlave","","I2C Control Register. This register can be written only …",null,null],[11,"to_bits","","",238,[[]]],[11,"from_bits","","",238,[[],["icconic10bitaddrslave",3]]],[18,"ADDR_7BITS","","Slave 7Bit addressing",238,null],[18,"ADDR_10BITS","","Slave 10Bit addressing",238,null],[3,"IcIntrMaskMStopDet","","I2C Interrupt Mask Register. These bits mask their …",null,null],[11,"to_bits","","",239,[[]]],[11,"from_bits","","",239,[[],["icintrmaskmstopdet",3]]],[18,"ENABLED","","STOP_DET interrupt is masked",239,null],[18,"DISABLED","","STOP_DET interrupt is unmasked",239,null],[3,"IcIntrMaskMActivity","","I2C Interrupt Mask Register. These bits mask their …",null,null],[11,"to_bits","","",240,[[]]],[11,"from_bits","","",240,[[],["icintrmaskmactivity",3]]],[18,"ENABLED","","ACTIVITY interrupt is masked",240,null],[18,"DISABLED","","ACTIVITY interrupt is unmasked",240,null],[3,"IcDataCmdStop","","I2C Rx/Tx Data Buffer and Command Register; this is the …",null,null],[11,"to_bits","","",241,[[]]],[11,"from_bits","","",241,[[],["icdatacmdstop",3]]],[18,"DISABLE","","Don\'t Issue STOP after this command",241,null],[18,"ENABLE","","Issue STOP after this command",241,null],[3,"IcIntrMaskMTxOver","","I2C Interrupt Mask Register. These bits mask their …",null,null],[11,"to_bits","","",242,[[]]],[11,"from_bits","","",242,[[],["icintrmaskmtxover",3]]],[18,"ENABLED","","TX_OVER interrupt is masked",242,null],[18,"DISABLED","","TX_OVER interrupt is unmasked",242,null],[3,"IcIntrMaskMRxFull","","I2C Interrupt Mask Register. These bits mask their …",null,null],[11,"to_bits","","",243,[[]]],[11,"from_bits","","",243,[[],["icintrmaskmrxfull",3]]],[18,"ENABLED","","RX_FULL interrupt is masked",243,null],[18,"DISABLED","","RX_FULL interrupt is unmasked",243,null],[3,"IcRawIntrStatGenCall","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[11,"to_bits","","",244,[[]]],[11,"from_bits","","",244,[[],["icrawintrstatgencall",3]]],[18,"INACTIVE","","GEN_CALL interrupt is inactive",244,null],[18,"ACTIVE","","GEN_CALL interrupt is active",244,null],[3,"IcTxAbrtSourceAbrt10addr1Noack","","I2C Transmit Abort Source Register This register has 32 …",null,null],[11,"to_bits","","",245,[[]]],[11,"from_bits","","",245,[[],["ictxabrtsourceabrt10addr1noack",3]]],[18,"INACTIVE","","This abort is not generated",245,null],[18,"ACTIVE","","Byte 1 of 10Bit Address not ACKed by any slave",245,null],[3,"IcConIcSlaveDisable","","I2C Control Register. This register can be written only …",null,null],[11,"to_bits","","",246,[[]]],[11,"from_bits","","",246,[[],["icconicslavedisable",3]]],[18,"SLAVE_ENABLED","","Slave mode is enabled",246,null],[18,"SLAVE_DISABLED","","Slave mode is disabled",246,null],[3,"IcRawIntrStatMasterOnHold","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[11,"to_bits","","",247,[[]]],[11,"from_bits","","",247,[[],["icrawintrstatmasteronhold",3]]],[18,"INACTIVE","","MASTER_ON_HOLD interrupt is inactive",247,null],[18,"ACTIVE","","MASTER_ON_HOLD interrupt is active",247,null],[3,"IcRawIntrStatTxOver","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",null,null],[11,"to_bits","","",248,[[]]],[11,"from_bits","","",248,[[],["icrawintrstattxover",3]]],[18,"INACTIVE","","TX_OVER interrupt is inactive",248,null],[18,"ACTIVE","","TX_OVER interrupt is active",248,null],[3,"IcIntrStatRRxOver","","I2C Interrupt Status Register Each bit in this register …",null,null],[11,"to_bits","","",249,[[]]],[11,"from_bits","","",249,[[],["icintrstatrrxover",3]]],[18,"INACTIVE","","R_RX_OVER interrupt is inactive",249,null],[18,"ACTIVE","","R_RX_OVER interrupt is active",249,null],[3,"I2c0","rp2040_pac::i2c0","DW_apb_i2c address block",null,null],[11,"from_ptr","","",250,[[]]],[11,"ic_con","","I2C Control Register. This register can be written only …",250,[[],[["iccon",3],["reg",3],["rw",3]]]],[11,"ic_tar","","I2C Target Address Register This register is 12 bits …",250,[[],[["ictar",3],["reg",3],["rw",3]]]],[11,"ic_sar","","I2C Slave Address Register",250,[[],[["reg",3],["rw",3],["icsar",3]]]],[11,"ic_data_cmd","","I2C Rx/Tx Data Buffer and Command Register; this is the …",250,[[],[["rw",3],["reg",3],["icdatacmd",3]]]],[11,"ic_ss_scl_hcnt","","Standard Speed I2C Clock SCL High Count Register",250,[[],[["reg",3],["icsssclhcnt",3],["rw",3]]]],[11,"ic_ss_scl_lcnt","","Standard Speed I2C Clock SCL Low Count Register",250,[[],[["reg",3],["icssscllcnt",3],["rw",3]]]],[11,"ic_fs_scl_hcnt","","Fast Mode or Fast Mode Plus I2C Clock SCL High Count …",250,[[],[["icfssclhcnt",3],["rw",3],["reg",3]]]],[11,"ic_fs_scl_lcnt","","Fast Mode or Fast Mode Plus I2C Clock SCL Low Count …",250,[[],[["reg",3],["rw",3],["icfsscllcnt",3]]]],[11,"ic_intr_stat","","I2C Interrupt Status Register Each bit in this register …",250,[[],[["rw",3],["reg",3],["icintrstat",3]]]],[11,"ic_intr_mask","","I2C Interrupt Mask Register. These bits mask their …",250,[[],[["reg",3],["icintrmask",3],["rw",3]]]],[11,"ic_raw_intr_stat","","I2C Raw Interrupt Status Register Unlike the IC_INTR_STAT …",250,[[],[["icrawintrstat",3],["reg",3],["rw",3]]]],[11,"ic_rx_tl","","I2C Receive FIFO Threshold Register",250,[[],[["reg",3],["icrxtl",3],["rw",3]]]],[11,"ic_tx_tl","","I2C Transmit FIFO Threshold Register",250,[[],[["ictxtl",3],["rw",3],["reg",3]]]],[11,"ic_clr_intr","","Clear Combined and Individual Interrupt Register",250,[[],[["icclrintr",3],["rw",3],["reg",3]]]],[11,"ic_clr_rx_under","","Clear RX_UNDER Interrupt Register",250,[[],[["rw",3],["reg",3],["icclrrxunder",3]]]],[11,"ic_clr_rx_over","","Clear RX_OVER Interrupt Register",250,[[],[["icclrrxover",3],["reg",3],["rw",3]]]],[11,"ic_clr_tx_over","","Clear TX_OVER Interrupt Register",250,[[],[["reg",3],["icclrtxover",3],["rw",3]]]],[11,"ic_clr_rd_req","","Clear RD_REQ Interrupt Register",250,[[],[["rw",3],["icclrrdreq",3],["reg",3]]]],[11,"ic_clr_tx_abrt","","Clear TX_ABRT Interrupt Register",250,[[],[["icclrtxabrt",3],["rw",3],["reg",3]]]],[11,"ic_clr_rx_done","","Clear RX_DONE Interrupt Register",250,[[],[["icclrrxdone",3],["reg",3],["rw",3]]]],[11,"ic_clr_activity","","Clear ACTIVITY Interrupt Register",250,[[],[["reg",3],["icclractivity",3],["rw",3]]]],[11,"ic_clr_stop_det","","Clear STOP_DET Interrupt Register",250,[[],[["reg",3],["rw",3],["icclrstopdet",3]]]],[11,"ic_clr_start_det","","Clear START_DET Interrupt Register",250,[[],[["reg",3],["rw",3],["icclrstartdet",3]]]],[11,"ic_clr_gen_call","","Clear GEN_CALL Interrupt Register",250,[[],[["icclrgencall",3],["rw",3],["reg",3]]]],[11,"ic_enable","","I2C Enable Register",250,[[],[["reg",3],["icenable",3],["rw",3]]]],[11,"ic_status","","I2C Status Register This is a read-only register used to …",250,[[],[["reg",3],["icstatus",3],["rw",3]]]],[11,"ic_txflr","","I2C Transmit FIFO Level Register This register contains …",250,[[],[["rw",3],["ictxflr",3],["reg",3]]]],[11,"ic_rxflr","","I2C Receive FIFO Level Register This register contains …",250,[[],[["icrxflr",3],["rw",3],["reg",3]]]],[11,"ic_sda_hold","","I2C SDA Hold Time Length Register The bits [15:0] of this …",250,[[],[["icsdahold",3],["rw",3],["reg",3]]]],[11,"ic_tx_abrt_source","","I2C Transmit Abort Source Register This register has 32 …",250,[[],[["rw",3],["ictxabrtsource",3],["reg",3]]]],[11,"ic_slv_data_nack_only","","Generate Slave Data NACK Register The register is used to …",250,[[],[["reg",3],["icslvdatanackonly",3],["rw",3]]]],[11,"ic_dma_cr","","DMA Control Register The register is used to enable the …",250,[[],[["reg",3],["rw",3],["icdmacr",3]]]],[11,"ic_dma_tdlr","","DMA Transmit Data Level Register",250,[[],[["reg",3],["icdmatdlr",3],["rw",3]]]],[11,"ic_dma_rdlr","","I2C Receive Data Level Register",250,[[],[["reg",3],["icdmardlr",3],["rw",3]]]],[11,"ic_sda_setup","","I2C SDA Setup Register This register controls the amount …",250,[[],[["icsdasetup",3],["reg",3],["rw",3]]]],[11,"ic_ack_general_call","","I2C ACK General Call Register The register controls …",250,[[],[["icackgeneralcall",3],["reg",3],["rw",3]]]],[11,"ic_enable_status","","I2C Enable Status Register The register is used to report …",250,[[],[["icenablestatus",3],["reg",3],["rw",3]]]],[11,"ic_fs_spklen","","I2C SS, FS or FM+ spike suppression limit This register …",250,[[],[["icfsspklen",3],["rw",3],["reg",3]]]],[11,"ic_clr_restart_det","","Clear RESTART_DET Interrupt Register",250,[[],[["reg",3],["icclrrestartdet",3],["rw",3]]]],[11,"ic_comp_param_1","","Component Parameter Register 1 Note This register is not …",250,[[],[["rw",3],["iccompparam1",3],["reg",3]]]],[11,"ic_comp_version","","I2C Component Version Register",250,[[],[["rw",3],["reg",3],["iccompversion",3]]]],[11,"ic_comp_type","","I2C Component Type Register",250,[[],[["rw",3],["iccomptype",3],["reg",3]]]],[0,"io","rp2040_pac","",null,null],[0,"values","rp2040_pac::io","",null,null],[3,"Irqover","rp2040_pac::io::values","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",251,[[]]],[11,"from_bits","","",251,[[],["irqover",3]]],[18,"NORMAL","","don\'t invert the interrupt",251,null],[18,"INVERT","","invert the interrupt",251,null],[18,"LOW","","drive interrupt low",251,null],[18,"HIGH","","drive interrupt high",251,null],[3,"Outover","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",252,[[]]],[11,"from_bits","","",252,[[],["outover",3]]],[18,"NORMAL","","drive output from peripheral signal selected by funcsel",252,null],[18,"INVERT","","drive output from inverse of peripheral signal selected …",252,null],[18,"LOW","","drive output low",252,null],[18,"HIGH","","drive output high",252,null],[3,"Oeover","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",253,[[]]],[11,"from_bits","","",253,[[],["oeover",3]]],[18,"NORMAL","","drive output enable from peripheral signal selected by …",253,null],[18,"INVERT","","drive output enable from inverse of peripheral signal …",253,null],[18,"DISABLE","","disable output",253,null],[18,"ENABLE","","enable output",253,null],[3,"Inover","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",254,[[]]],[11,"from_bits","","",254,[[],["inover",3]]],[18,"NORMAL","","don\'t invert the peri input",254,null],[18,"INVERT","","invert the peri input",254,null],[18,"LOW","","drive peri input low",254,null],[18,"HIGH","","drive peri input high",254,null],[0,"io_bank0","rp2040_pac","",null,null],[0,"fields","rp2040_pac::io_bank0","",null,null],[3,"Gpio28Status","rp2040_pac::io_bank0::fields","GPIO status",null,null],[11,"to_bits","","",255,[[]]],[11,"from_bits","","",255,[[],["gpio28status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",255,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",255,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",255,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",255,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",255,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",255,[[]]],[11,"infrompad","","input signal from pad, before override is applied",255,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",255,[[]]],[11,"oetopad","","output enable to pad after register override is applied",255,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",255,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",255,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",255,[[]]],[11,"outtopad","","output signal to pad after register override is applied",255,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",255,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",255,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",255,[[]]],[3,"Gpio23Status","","GPIO status",null,null],[11,"to_bits","","",256,[[]]],[11,"from_bits","","",256,[[],["gpio23status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",256,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",256,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",256,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",256,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",256,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",256,[[]]],[11,"infrompad","","input signal from pad, before override is applied",256,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",256,[[]]],[11,"oetopad","","output enable to pad after register override is applied",256,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",256,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",256,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",256,[[]]],[11,"outtopad","","output signal to pad after register override is applied",256,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",256,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",256,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",256,[[]]],[3,"Gpio15Status","","GPIO status",null,null],[11,"to_bits","","",257,[[]]],[11,"from_bits","","",257,[[],["gpio15status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",257,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",257,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",257,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",257,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",257,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",257,[[]]],[11,"infrompad","","input signal from pad, before override is applied",257,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",257,[[]]],[11,"oetopad","","output enable to pad after register override is applied",257,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",257,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",257,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",257,[[]]],[11,"outtopad","","output signal to pad after register override is applied",257,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",257,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",257,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",257,[[]]],[3,"Proc0Ints3","","Interrupt status after masking & forcing for proc0",null,null],[11,"to_bits","","",258,[[]]],[11,"from_bits","","",258,[[],["proc0ints3",3]]],[11,"gpio29_edge_high","","",258,[[]]],[11,"set_gpio29_edge_high","","",258,[[]]],[11,"gpio29_edge_low","","",258,[[]]],[11,"set_gpio29_edge_low","","",258,[[]]],[11,"gpio29_level_high","","",258,[[]]],[11,"set_gpio29_level_high","","",258,[[]]],[11,"gpio29_level_low","","",258,[[]]],[11,"set_gpio29_level_low","","",258,[[]]],[11,"gpio28_edge_high","","",258,[[]]],[11,"set_gpio28_edge_high","","",258,[[]]],[11,"gpio28_edge_low","","",258,[[]]],[11,"set_gpio28_edge_low","","",258,[[]]],[11,"gpio28_level_high","","",258,[[]]],[11,"set_gpio28_level_high","","",258,[[]]],[11,"gpio28_level_low","","",258,[[]]],[11,"set_gpio28_level_low","","",258,[[]]],[11,"gpio27_edge_high","","",258,[[]]],[11,"set_gpio27_edge_high","","",258,[[]]],[11,"gpio27_edge_low","","",258,[[]]],[11,"set_gpio27_edge_low","","",258,[[]]],[11,"gpio27_level_high","","",258,[[]]],[11,"set_gpio27_level_high","","",258,[[]]],[11,"gpio27_level_low","","",258,[[]]],[11,"set_gpio27_level_low","","",258,[[]]],[11,"gpio26_edge_high","","",258,[[]]],[11,"set_gpio26_edge_high","","",258,[[]]],[11,"gpio26_edge_low","","",258,[[]]],[11,"set_gpio26_edge_low","","",258,[[]]],[11,"gpio26_level_high","","",258,[[]]],[11,"set_gpio26_level_high","","",258,[[]]],[11,"gpio26_level_low","","",258,[[]]],[11,"set_gpio26_level_low","","",258,[[]]],[11,"gpio25_edge_high","","",258,[[]]],[11,"set_gpio25_edge_high","","",258,[[]]],[11,"gpio25_edge_low","","",258,[[]]],[11,"set_gpio25_edge_low","","",258,[[]]],[11,"gpio25_level_high","","",258,[[]]],[11,"set_gpio25_level_high","","",258,[[]]],[11,"gpio25_level_low","","",258,[[]]],[11,"set_gpio25_level_low","","",258,[[]]],[11,"gpio24_edge_high","","",258,[[]]],[11,"set_gpio24_edge_high","","",258,[[]]],[11,"gpio24_edge_low","","",258,[[]]],[11,"set_gpio24_edge_low","","",258,[[]]],[11,"gpio24_level_high","","",258,[[]]],[11,"set_gpio24_level_high","","",258,[[]]],[11,"gpio24_level_low","","",258,[[]]],[11,"set_gpio24_level_low","","",258,[[]]],[3,"DormantWakeIntf1","","Interrupt Force for dormant_wake",null,null],[11,"to_bits","","",259,[[]]],[11,"from_bits","","",259,[[],["dormantwakeintf1",3]]],[11,"gpio15_edge_high","","",259,[[]]],[11,"set_gpio15_edge_high","","",259,[[]]],[11,"gpio15_edge_low","","",259,[[]]],[11,"set_gpio15_edge_low","","",259,[[]]],[11,"gpio15_level_high","","",259,[[]]],[11,"set_gpio15_level_high","","",259,[[]]],[11,"gpio15_level_low","","",259,[[]]],[11,"set_gpio15_level_low","","",259,[[]]],[11,"gpio14_edge_high","","",259,[[]]],[11,"set_gpio14_edge_high","","",259,[[]]],[11,"gpio14_edge_low","","",259,[[]]],[11,"set_gpio14_edge_low","","",259,[[]]],[11,"gpio14_level_high","","",259,[[]]],[11,"set_gpio14_level_high","","",259,[[]]],[11,"gpio14_level_low","","",259,[[]]],[11,"set_gpio14_level_low","","",259,[[]]],[11,"gpio13_edge_high","","",259,[[]]],[11,"set_gpio13_edge_high","","",259,[[]]],[11,"gpio13_edge_low","","",259,[[]]],[11,"set_gpio13_edge_low","","",259,[[]]],[11,"gpio13_level_high","","",259,[[]]],[11,"set_gpio13_level_high","","",259,[[]]],[11,"gpio13_level_low","","",259,[[]]],[11,"set_gpio13_level_low","","",259,[[]]],[11,"gpio12_edge_high","","",259,[[]]],[11,"set_gpio12_edge_high","","",259,[[]]],[11,"gpio12_edge_low","","",259,[[]]],[11,"set_gpio12_edge_low","","",259,[[]]],[11,"gpio12_level_high","","",259,[[]]],[11,"set_gpio12_level_high","","",259,[[]]],[11,"gpio12_level_low","","",259,[[]]],[11,"set_gpio12_level_low","","",259,[[]]],[11,"gpio11_edge_high","","",259,[[]]],[11,"set_gpio11_edge_high","","",259,[[]]],[11,"gpio11_edge_low","","",259,[[]]],[11,"set_gpio11_edge_low","","",259,[[]]],[11,"gpio11_level_high","","",259,[[]]],[11,"set_gpio11_level_high","","",259,[[]]],[11,"gpio11_level_low","","",259,[[]]],[11,"set_gpio11_level_low","","",259,[[]]],[11,"gpio10_edge_high","","",259,[[]]],[11,"set_gpio10_edge_high","","",259,[[]]],[11,"gpio10_edge_low","","",259,[[]]],[11,"set_gpio10_edge_low","","",259,[[]]],[11,"gpio10_level_high","","",259,[[]]],[11,"set_gpio10_level_high","","",259,[[]]],[11,"gpio10_level_low","","",259,[[]]],[11,"set_gpio10_level_low","","",259,[[]]],[11,"gpio9_edge_high","","",259,[[]]],[11,"set_gpio9_edge_high","","",259,[[]]],[11,"gpio9_edge_low","","",259,[[]]],[11,"set_gpio9_edge_low","","",259,[[]]],[11,"gpio9_level_high","","",259,[[]]],[11,"set_gpio9_level_high","","",259,[[]]],[11,"gpio9_level_low","","",259,[[]]],[11,"set_gpio9_level_low","","",259,[[]]],[11,"gpio8_edge_high","","",259,[[]]],[11,"set_gpio8_edge_high","","",259,[[]]],[11,"gpio8_edge_low","","",259,[[]]],[11,"set_gpio8_edge_low","","",259,[[]]],[11,"gpio8_level_high","","",259,[[]]],[11,"set_gpio8_level_high","","",259,[[]]],[11,"gpio8_level_low","","",259,[[]]],[11,"set_gpio8_level_low","","",259,[[]]],[3,"DormantWakeInts3","","Interrupt status after masking & forcing for dormant_wake",null,null],[11,"to_bits","","",260,[[]]],[11,"from_bits","","",260,[[],["dormantwakeints3",3]]],[11,"gpio29_edge_high","","",260,[[]]],[11,"set_gpio29_edge_high","","",260,[[]]],[11,"gpio29_edge_low","","",260,[[]]],[11,"set_gpio29_edge_low","","",260,[[]]],[11,"gpio29_level_high","","",260,[[]]],[11,"set_gpio29_level_high","","",260,[[]]],[11,"gpio29_level_low","","",260,[[]]],[11,"set_gpio29_level_low","","",260,[[]]],[11,"gpio28_edge_high","","",260,[[]]],[11,"set_gpio28_edge_high","","",260,[[]]],[11,"gpio28_edge_low","","",260,[[]]],[11,"set_gpio28_edge_low","","",260,[[]]],[11,"gpio28_level_high","","",260,[[]]],[11,"set_gpio28_level_high","","",260,[[]]],[11,"gpio28_level_low","","",260,[[]]],[11,"set_gpio28_level_low","","",260,[[]]],[11,"gpio27_edge_high","","",260,[[]]],[11,"set_gpio27_edge_high","","",260,[[]]],[11,"gpio27_edge_low","","",260,[[]]],[11,"set_gpio27_edge_low","","",260,[[]]],[11,"gpio27_level_high","","",260,[[]]],[11,"set_gpio27_level_high","","",260,[[]]],[11,"gpio27_level_low","","",260,[[]]],[11,"set_gpio27_level_low","","",260,[[]]],[11,"gpio26_edge_high","","",260,[[]]],[11,"set_gpio26_edge_high","","",260,[[]]],[11,"gpio26_edge_low","","",260,[[]]],[11,"set_gpio26_edge_low","","",260,[[]]],[11,"gpio26_level_high","","",260,[[]]],[11,"set_gpio26_level_high","","",260,[[]]],[11,"gpio26_level_low","","",260,[[]]],[11,"set_gpio26_level_low","","",260,[[]]],[11,"gpio25_edge_high","","",260,[[]]],[11,"set_gpio25_edge_high","","",260,[[]]],[11,"gpio25_edge_low","","",260,[[]]],[11,"set_gpio25_edge_low","","",260,[[]]],[11,"gpio25_level_high","","",260,[[]]],[11,"set_gpio25_level_high","","",260,[[]]],[11,"gpio25_level_low","","",260,[[]]],[11,"set_gpio25_level_low","","",260,[[]]],[11,"gpio24_edge_high","","",260,[[]]],[11,"set_gpio24_edge_high","","",260,[[]]],[11,"gpio24_edge_low","","",260,[[]]],[11,"set_gpio24_edge_low","","",260,[[]]],[11,"gpio24_level_high","","",260,[[]]],[11,"set_gpio24_level_high","","",260,[[]]],[11,"gpio24_level_low","","",260,[[]]],[11,"set_gpio24_level_low","","",260,[[]]],[3,"Proc0Ints2","","Interrupt status after masking & forcing for proc0",null,null],[11,"to_bits","","",261,[[]]],[11,"from_bits","","",261,[[],["proc0ints2",3]]],[11,"gpio23_edge_high","","",261,[[]]],[11,"set_gpio23_edge_high","","",261,[[]]],[11,"gpio23_edge_low","","",261,[[]]],[11,"set_gpio23_edge_low","","",261,[[]]],[11,"gpio23_level_high","","",261,[[]]],[11,"set_gpio23_level_high","","",261,[[]]],[11,"gpio23_level_low","","",261,[[]]],[11,"set_gpio23_level_low","","",261,[[]]],[11,"gpio22_edge_high","","",261,[[]]],[11,"set_gpio22_edge_high","","",261,[[]]],[11,"gpio22_edge_low","","",261,[[]]],[11,"set_gpio22_edge_low","","",261,[[]]],[11,"gpio22_level_high","","",261,[[]]],[11,"set_gpio22_level_high","","",261,[[]]],[11,"gpio22_level_low","","",261,[[]]],[11,"set_gpio22_level_low","","",261,[[]]],[11,"gpio21_edge_high","","",261,[[]]],[11,"set_gpio21_edge_high","","",261,[[]]],[11,"gpio21_edge_low","","",261,[[]]],[11,"set_gpio21_edge_low","","",261,[[]]],[11,"gpio21_level_high","","",261,[[]]],[11,"set_gpio21_level_high","","",261,[[]]],[11,"gpio21_level_low","","",261,[[]]],[11,"set_gpio21_level_low","","",261,[[]]],[11,"gpio20_edge_high","","",261,[[]]],[11,"set_gpio20_edge_high","","",261,[[]]],[11,"gpio20_edge_low","","",261,[[]]],[11,"set_gpio20_edge_low","","",261,[[]]],[11,"gpio20_level_high","","",261,[[]]],[11,"set_gpio20_level_high","","",261,[[]]],[11,"gpio20_level_low","","",261,[[]]],[11,"set_gpio20_level_low","","",261,[[]]],[11,"gpio19_edge_high","","",261,[[]]],[11,"set_gpio19_edge_high","","",261,[[]]],[11,"gpio19_edge_low","","",261,[[]]],[11,"set_gpio19_edge_low","","",261,[[]]],[11,"gpio19_level_high","","",261,[[]]],[11,"set_gpio19_level_high","","",261,[[]]],[11,"gpio19_level_low","","",261,[[]]],[11,"set_gpio19_level_low","","",261,[[]]],[11,"gpio18_edge_high","","",261,[[]]],[11,"set_gpio18_edge_high","","",261,[[]]],[11,"gpio18_edge_low","","",261,[[]]],[11,"set_gpio18_edge_low","","",261,[[]]],[11,"gpio18_level_high","","",261,[[]]],[11,"set_gpio18_level_high","","",261,[[]]],[11,"gpio18_level_low","","",261,[[]]],[11,"set_gpio18_level_low","","",261,[[]]],[11,"gpio17_edge_high","","",261,[[]]],[11,"set_gpio17_edge_high","","",261,[[]]],[11,"gpio17_edge_low","","",261,[[]]],[11,"set_gpio17_edge_low","","",261,[[]]],[11,"gpio17_level_high","","",261,[[]]],[11,"set_gpio17_level_high","","",261,[[]]],[11,"gpio17_level_low","","",261,[[]]],[11,"set_gpio17_level_low","","",261,[[]]],[11,"gpio16_edge_high","","",261,[[]]],[11,"set_gpio16_edge_high","","",261,[[]]],[11,"gpio16_edge_low","","",261,[[]]],[11,"set_gpio16_edge_low","","",261,[[]]],[11,"gpio16_level_high","","",261,[[]]],[11,"set_gpio16_level_high","","",261,[[]]],[11,"gpio16_level_low","","",261,[[]]],[11,"set_gpio16_level_low","","",261,[[]]],[3,"Gpio2Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",262,[[]]],[11,"from_bits","","",262,[[],["gpio2ctrl",3]]],[11,"irqover","","",262,[[],["irqover",3]]],[11,"set_irqover","","",262,[[["irqover",3]]]],[11,"inover","","",262,[[],["inover",3]]],[11,"set_inover","","",262,[[["inover",3]]]],[11,"oeover","","",262,[[],["oeover",3]]],[11,"set_oeover","","",262,[[["oeover",3]]]],[11,"outover","","",262,[[],["outover",3]]],[11,"set_outover","","",262,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",262,[[],["gpio2ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",262,[[["gpio2ctrlfuncsel",3]]]],[3,"Gpio7Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",263,[[]]],[11,"from_bits","","",263,[[],["gpio7ctrl",3]]],[11,"irqover","","",263,[[],["irqover",3]]],[11,"set_irqover","","",263,[[["irqover",3]]]],[11,"inover","","",263,[[],["inover",3]]],[11,"set_inover","","",263,[[["inover",3]]]],[11,"oeover","","",263,[[],["oeover",3]]],[11,"set_oeover","","",263,[[["oeover",3]]]],[11,"outover","","",263,[[],["outover",3]]],[11,"set_outover","","",263,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",263,[[],["gpio7ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",263,[[["gpio7ctrlfuncsel",3]]]],[3,"Gpio22Status","","GPIO status",null,null],[11,"to_bits","","",264,[[]]],[11,"from_bits","","",264,[[],["gpio22status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",264,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",264,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",264,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",264,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",264,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",264,[[]]],[11,"infrompad","","input signal from pad, before override is applied",264,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",264,[[]]],[11,"oetopad","","output enable to pad after register override is applied",264,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",264,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",264,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",264,[[]]],[11,"outtopad","","output signal to pad after register override is applied",264,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",264,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",264,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",264,[[]]],[3,"Gpio21Status","","GPIO status",null,null],[11,"to_bits","","",265,[[]]],[11,"from_bits","","",265,[[],["gpio21status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",265,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",265,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",265,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",265,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",265,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",265,[[]]],[11,"infrompad","","input signal from pad, before override is applied",265,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",265,[[]]],[11,"oetopad","","output enable to pad after register override is applied",265,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",265,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",265,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",265,[[]]],[11,"outtopad","","output signal to pad after register override is applied",265,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",265,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",265,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",265,[[]]],[3,"Gpio22Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",266,[[]]],[11,"from_bits","","",266,[[],["gpio22ctrl",3]]],[11,"irqover","","",266,[[],["irqover",3]]],[11,"set_irqover","","",266,[[["irqover",3]]]],[11,"inover","","",266,[[],["inover",3]]],[11,"set_inover","","",266,[[["inover",3]]]],[11,"oeover","","",266,[[],["oeover",3]]],[11,"set_oeover","","",266,[[["oeover",3]]]],[11,"outover","","",266,[[],["outover",3]]],[11,"set_outover","","",266,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",266,[[],["gpio22ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",266,[[["gpio22ctrlfuncsel",3]]]],[3,"Gpio29Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",267,[[]]],[11,"from_bits","","",267,[[],["gpio29ctrl",3]]],[11,"irqover","","",267,[[],["irqover",3]]],[11,"set_irqover","","",267,[[["irqover",3]]]],[11,"inover","","",267,[[],["inover",3]]],[11,"set_inover","","",267,[[["inover",3]]]],[11,"oeover","","",267,[[],["oeover",3]]],[11,"set_oeover","","",267,[[["oeover",3]]]],[11,"outover","","",267,[[],["outover",3]]],[11,"set_outover","","",267,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",267,[[],["gpio29ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",267,[[["gpio29ctrlfuncsel",3]]]],[3,"Proc0Inte3","","Interrupt Enable for proc0",null,null],[11,"to_bits","","",268,[[]]],[11,"from_bits","","",268,[[],["proc0inte3",3]]],[11,"gpio29_edge_high","","",268,[[]]],[11,"set_gpio29_edge_high","","",268,[[]]],[11,"gpio29_edge_low","","",268,[[]]],[11,"set_gpio29_edge_low","","",268,[[]]],[11,"gpio29_level_high","","",268,[[]]],[11,"set_gpio29_level_high","","",268,[[]]],[11,"gpio29_level_low","","",268,[[]]],[11,"set_gpio29_level_low","","",268,[[]]],[11,"gpio28_edge_high","","",268,[[]]],[11,"set_gpio28_edge_high","","",268,[[]]],[11,"gpio28_edge_low","","",268,[[]]],[11,"set_gpio28_edge_low","","",268,[[]]],[11,"gpio28_level_high","","",268,[[]]],[11,"set_gpio28_level_high","","",268,[[]]],[11,"gpio28_level_low","","",268,[[]]],[11,"set_gpio28_level_low","","",268,[[]]],[11,"gpio27_edge_high","","",268,[[]]],[11,"set_gpio27_edge_high","","",268,[[]]],[11,"gpio27_edge_low","","",268,[[]]],[11,"set_gpio27_edge_low","","",268,[[]]],[11,"gpio27_level_high","","",268,[[]]],[11,"set_gpio27_level_high","","",268,[[]]],[11,"gpio27_level_low","","",268,[[]]],[11,"set_gpio27_level_low","","",268,[[]]],[11,"gpio26_edge_high","","",268,[[]]],[11,"set_gpio26_edge_high","","",268,[[]]],[11,"gpio26_edge_low","","",268,[[]]],[11,"set_gpio26_edge_low","","",268,[[]]],[11,"gpio26_level_high","","",268,[[]]],[11,"set_gpio26_level_high","","",268,[[]]],[11,"gpio26_level_low","","",268,[[]]],[11,"set_gpio26_level_low","","",268,[[]]],[11,"gpio25_edge_high","","",268,[[]]],[11,"set_gpio25_edge_high","","",268,[[]]],[11,"gpio25_edge_low","","",268,[[]]],[11,"set_gpio25_edge_low","","",268,[[]]],[11,"gpio25_level_high","","",268,[[]]],[11,"set_gpio25_level_high","","",268,[[]]],[11,"gpio25_level_low","","",268,[[]]],[11,"set_gpio25_level_low","","",268,[[]]],[11,"gpio24_edge_high","","",268,[[]]],[11,"set_gpio24_edge_high","","",268,[[]]],[11,"gpio24_edge_low","","",268,[[]]],[11,"set_gpio24_edge_low","","",268,[[]]],[11,"gpio24_level_high","","",268,[[]]],[11,"set_gpio24_level_high","","",268,[[]]],[11,"gpio24_level_low","","",268,[[]]],[11,"set_gpio24_level_low","","",268,[[]]],[3,"DormantWakeInte0","","Interrupt Enable for dormant_wake",null,null],[11,"to_bits","","",269,[[]]],[11,"from_bits","","",269,[[],["dormantwakeinte0",3]]],[11,"gpio7_edge_high","","",269,[[]]],[11,"set_gpio7_edge_high","","",269,[[]]],[11,"gpio7_edge_low","","",269,[[]]],[11,"set_gpio7_edge_low","","",269,[[]]],[11,"gpio7_level_high","","",269,[[]]],[11,"set_gpio7_level_high","","",269,[[]]],[11,"gpio7_level_low","","",269,[[]]],[11,"set_gpio7_level_low","","",269,[[]]],[11,"gpio6_edge_high","","",269,[[]]],[11,"set_gpio6_edge_high","","",269,[[]]],[11,"gpio6_edge_low","","",269,[[]]],[11,"set_gpio6_edge_low","","",269,[[]]],[11,"gpio6_level_high","","",269,[[]]],[11,"set_gpio6_level_high","","",269,[[]]],[11,"gpio6_level_low","","",269,[[]]],[11,"set_gpio6_level_low","","",269,[[]]],[11,"gpio5_edge_high","","",269,[[]]],[11,"set_gpio5_edge_high","","",269,[[]]],[11,"gpio5_edge_low","","",269,[[]]],[11,"set_gpio5_edge_low","","",269,[[]]],[11,"gpio5_level_high","","",269,[[]]],[11,"set_gpio5_level_high","","",269,[[]]],[11,"gpio5_level_low","","",269,[[]]],[11,"set_gpio5_level_low","","",269,[[]]],[11,"gpio4_edge_high","","",269,[[]]],[11,"set_gpio4_edge_high","","",269,[[]]],[11,"gpio4_edge_low","","",269,[[]]],[11,"set_gpio4_edge_low","","",269,[[]]],[11,"gpio4_level_high","","",269,[[]]],[11,"set_gpio4_level_high","","",269,[[]]],[11,"gpio4_level_low","","",269,[[]]],[11,"set_gpio4_level_low","","",269,[[]]],[11,"gpio3_edge_high","","",269,[[]]],[11,"set_gpio3_edge_high","","",269,[[]]],[11,"gpio3_edge_low","","",269,[[]]],[11,"set_gpio3_edge_low","","",269,[[]]],[11,"gpio3_level_high","","",269,[[]]],[11,"set_gpio3_level_high","","",269,[[]]],[11,"gpio3_level_low","","",269,[[]]],[11,"set_gpio3_level_low","","",269,[[]]],[11,"gpio2_edge_high","","",269,[[]]],[11,"set_gpio2_edge_high","","",269,[[]]],[11,"gpio2_edge_low","","",269,[[]]],[11,"set_gpio2_edge_low","","",269,[[]]],[11,"gpio2_level_high","","",269,[[]]],[11,"set_gpio2_level_high","","",269,[[]]],[11,"gpio2_level_low","","",269,[[]]],[11,"set_gpio2_level_low","","",269,[[]]],[11,"gpio1_edge_high","","",269,[[]]],[11,"set_gpio1_edge_high","","",269,[[]]],[11,"gpio1_edge_low","","",269,[[]]],[11,"set_gpio1_edge_low","","",269,[[]]],[11,"gpio1_level_high","","",269,[[]]],[11,"set_gpio1_level_high","","",269,[[]]],[11,"gpio1_level_low","","",269,[[]]],[11,"set_gpio1_level_low","","",269,[[]]],[11,"gpio0_edge_high","","",269,[[]]],[11,"set_gpio0_edge_high","","",269,[[]]],[11,"gpio0_edge_low","","",269,[[]]],[11,"set_gpio0_edge_low","","",269,[[]]],[11,"gpio0_level_high","","",269,[[]]],[11,"set_gpio0_level_high","","",269,[[]]],[11,"gpio0_level_low","","",269,[[]]],[11,"set_gpio0_level_low","","",269,[[]]],[3,"Gpio10Status","","GPIO status",null,null],[11,"to_bits","","",270,[[]]],[11,"from_bits","","",270,[[],["gpio10status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",270,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",270,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",270,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",270,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",270,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",270,[[]]],[11,"infrompad","","input signal from pad, before override is applied",270,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",270,[[]]],[11,"oetopad","","output enable to pad after register override is applied",270,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",270,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",270,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",270,[[]]],[11,"outtopad","","output signal to pad after register override is applied",270,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",270,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",270,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",270,[[]]],[3,"Proc1Intf0","","Interrupt Force for proc1",null,null],[11,"to_bits","","",271,[[]]],[11,"from_bits","","",271,[[],["proc1intf0",3]]],[11,"gpio7_edge_high","","",271,[[]]],[11,"set_gpio7_edge_high","","",271,[[]]],[11,"gpio7_edge_low","","",271,[[]]],[11,"set_gpio7_edge_low","","",271,[[]]],[11,"gpio7_level_high","","",271,[[]]],[11,"set_gpio7_level_high","","",271,[[]]],[11,"gpio7_level_low","","",271,[[]]],[11,"set_gpio7_level_low","","",271,[[]]],[11,"gpio6_edge_high","","",271,[[]]],[11,"set_gpio6_edge_high","","",271,[[]]],[11,"gpio6_edge_low","","",271,[[]]],[11,"set_gpio6_edge_low","","",271,[[]]],[11,"gpio6_level_high","","",271,[[]]],[11,"set_gpio6_level_high","","",271,[[]]],[11,"gpio6_level_low","","",271,[[]]],[11,"set_gpio6_level_low","","",271,[[]]],[11,"gpio5_edge_high","","",271,[[]]],[11,"set_gpio5_edge_high","","",271,[[]]],[11,"gpio5_edge_low","","",271,[[]]],[11,"set_gpio5_edge_low","","",271,[[]]],[11,"gpio5_level_high","","",271,[[]]],[11,"set_gpio5_level_high","","",271,[[]]],[11,"gpio5_level_low","","",271,[[]]],[11,"set_gpio5_level_low","","",271,[[]]],[11,"gpio4_edge_high","","",271,[[]]],[11,"set_gpio4_edge_high","","",271,[[]]],[11,"gpio4_edge_low","","",271,[[]]],[11,"set_gpio4_edge_low","","",271,[[]]],[11,"gpio4_level_high","","",271,[[]]],[11,"set_gpio4_level_high","","",271,[[]]],[11,"gpio4_level_low","","",271,[[]]],[11,"set_gpio4_level_low","","",271,[[]]],[11,"gpio3_edge_high","","",271,[[]]],[11,"set_gpio3_edge_high","","",271,[[]]],[11,"gpio3_edge_low","","",271,[[]]],[11,"set_gpio3_edge_low","","",271,[[]]],[11,"gpio3_level_high","","",271,[[]]],[11,"set_gpio3_level_high","","",271,[[]]],[11,"gpio3_level_low","","",271,[[]]],[11,"set_gpio3_level_low","","",271,[[]]],[11,"gpio2_edge_high","","",271,[[]]],[11,"set_gpio2_edge_high","","",271,[[]]],[11,"gpio2_edge_low","","",271,[[]]],[11,"set_gpio2_edge_low","","",271,[[]]],[11,"gpio2_level_high","","",271,[[]]],[11,"set_gpio2_level_high","","",271,[[]]],[11,"gpio2_level_low","","",271,[[]]],[11,"set_gpio2_level_low","","",271,[[]]],[11,"gpio1_edge_high","","",271,[[]]],[11,"set_gpio1_edge_high","","",271,[[]]],[11,"gpio1_edge_low","","",271,[[]]],[11,"set_gpio1_edge_low","","",271,[[]]],[11,"gpio1_level_high","","",271,[[]]],[11,"set_gpio1_level_high","","",271,[[]]],[11,"gpio1_level_low","","",271,[[]]],[11,"set_gpio1_level_low","","",271,[[]]],[11,"gpio0_edge_high","","",271,[[]]],[11,"set_gpio0_edge_high","","",271,[[]]],[11,"gpio0_edge_low","","",271,[[]]],[11,"set_gpio0_edge_low","","",271,[[]]],[11,"gpio0_level_high","","",271,[[]]],[11,"set_gpio0_level_high","","",271,[[]]],[11,"gpio0_level_low","","",271,[[]]],[11,"set_gpio0_level_low","","",271,[[]]],[3,"Gpio16Status","","GPIO status",null,null],[11,"to_bits","","",272,[[]]],[11,"from_bits","","",272,[[],["gpio16status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",272,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",272,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",272,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",272,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",272,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",272,[[]]],[11,"infrompad","","input signal from pad, before override is applied",272,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",272,[[]]],[11,"oetopad","","output enable to pad after register override is applied",272,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",272,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",272,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",272,[[]]],[11,"outtopad","","output signal to pad after register override is applied",272,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",272,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",272,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",272,[[]]],[3,"DormantWakeInte1","","Interrupt Enable for dormant_wake",null,null],[11,"to_bits","","",273,[[]]],[11,"from_bits","","",273,[[],["dormantwakeinte1",3]]],[11,"gpio15_edge_high","","",273,[[]]],[11,"set_gpio15_edge_high","","",273,[[]]],[11,"gpio15_edge_low","","",273,[[]]],[11,"set_gpio15_edge_low","","",273,[[]]],[11,"gpio15_level_high","","",273,[[]]],[11,"set_gpio15_level_high","","",273,[[]]],[11,"gpio15_level_low","","",273,[[]]],[11,"set_gpio15_level_low","","",273,[[]]],[11,"gpio14_edge_high","","",273,[[]]],[11,"set_gpio14_edge_high","","",273,[[]]],[11,"gpio14_edge_low","","",273,[[]]],[11,"set_gpio14_edge_low","","",273,[[]]],[11,"gpio14_level_high","","",273,[[]]],[11,"set_gpio14_level_high","","",273,[[]]],[11,"gpio14_level_low","","",273,[[]]],[11,"set_gpio14_level_low","","",273,[[]]],[11,"gpio13_edge_high","","",273,[[]]],[11,"set_gpio13_edge_high","","",273,[[]]],[11,"gpio13_edge_low","","",273,[[]]],[11,"set_gpio13_edge_low","","",273,[[]]],[11,"gpio13_level_high","","",273,[[]]],[11,"set_gpio13_level_high","","",273,[[]]],[11,"gpio13_level_low","","",273,[[]]],[11,"set_gpio13_level_low","","",273,[[]]],[11,"gpio12_edge_high","","",273,[[]]],[11,"set_gpio12_edge_high","","",273,[[]]],[11,"gpio12_edge_low","","",273,[[]]],[11,"set_gpio12_edge_low","","",273,[[]]],[11,"gpio12_level_high","","",273,[[]]],[11,"set_gpio12_level_high","","",273,[[]]],[11,"gpio12_level_low","","",273,[[]]],[11,"set_gpio12_level_low","","",273,[[]]],[11,"gpio11_edge_high","","",273,[[]]],[11,"set_gpio11_edge_high","","",273,[[]]],[11,"gpio11_edge_low","","",273,[[]]],[11,"set_gpio11_edge_low","","",273,[[]]],[11,"gpio11_level_high","","",273,[[]]],[11,"set_gpio11_level_high","","",273,[[]]],[11,"gpio11_level_low","","",273,[[]]],[11,"set_gpio11_level_low","","",273,[[]]],[11,"gpio10_edge_high","","",273,[[]]],[11,"set_gpio10_edge_high","","",273,[[]]],[11,"gpio10_edge_low","","",273,[[]]],[11,"set_gpio10_edge_low","","",273,[[]]],[11,"gpio10_level_high","","",273,[[]]],[11,"set_gpio10_level_high","","",273,[[]]],[11,"gpio10_level_low","","",273,[[]]],[11,"set_gpio10_level_low","","",273,[[]]],[11,"gpio9_edge_high","","",273,[[]]],[11,"set_gpio9_edge_high","","",273,[[]]],[11,"gpio9_edge_low","","",273,[[]]],[11,"set_gpio9_edge_low","","",273,[[]]],[11,"gpio9_level_high","","",273,[[]]],[11,"set_gpio9_level_high","","",273,[[]]],[11,"gpio9_level_low","","",273,[[]]],[11,"set_gpio9_level_low","","",273,[[]]],[11,"gpio8_edge_high","","",273,[[]]],[11,"set_gpio8_edge_high","","",273,[[]]],[11,"gpio8_edge_low","","",273,[[]]],[11,"set_gpio8_edge_low","","",273,[[]]],[11,"gpio8_level_high","","",273,[[]]],[11,"set_gpio8_level_high","","",273,[[]]],[11,"gpio8_level_low","","",273,[[]]],[11,"set_gpio8_level_low","","",273,[[]]],[3,"Gpio26Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",274,[[]]],[11,"from_bits","","",274,[[],["gpio26ctrl",3]]],[11,"irqover","","",274,[[],["irqover",3]]],[11,"set_irqover","","",274,[[["irqover",3]]]],[11,"inover","","",274,[[],["inover",3]]],[11,"set_inover","","",274,[[["inover",3]]]],[11,"oeover","","",274,[[],["oeover",3]]],[11,"set_oeover","","",274,[[["oeover",3]]]],[11,"outover","","",274,[[],["outover",3]]],[11,"set_outover","","",274,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",274,[[],["gpio26ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",274,[[["gpio26ctrlfuncsel",3]]]],[3,"Proc1Ints2","","Interrupt status after masking & forcing for proc1",null,null],[11,"to_bits","","",275,[[]]],[11,"from_bits","","",275,[[],["proc1ints2",3]]],[11,"gpio23_edge_high","","",275,[[]]],[11,"set_gpio23_edge_high","","",275,[[]]],[11,"gpio23_edge_low","","",275,[[]]],[11,"set_gpio23_edge_low","","",275,[[]]],[11,"gpio23_level_high","","",275,[[]]],[11,"set_gpio23_level_high","","",275,[[]]],[11,"gpio23_level_low","","",275,[[]]],[11,"set_gpio23_level_low","","",275,[[]]],[11,"gpio22_edge_high","","",275,[[]]],[11,"set_gpio22_edge_high","","",275,[[]]],[11,"gpio22_edge_low","","",275,[[]]],[11,"set_gpio22_edge_low","","",275,[[]]],[11,"gpio22_level_high","","",275,[[]]],[11,"set_gpio22_level_high","","",275,[[]]],[11,"gpio22_level_low","","",275,[[]]],[11,"set_gpio22_level_low","","",275,[[]]],[11,"gpio21_edge_high","","",275,[[]]],[11,"set_gpio21_edge_high","","",275,[[]]],[11,"gpio21_edge_low","","",275,[[]]],[11,"set_gpio21_edge_low","","",275,[[]]],[11,"gpio21_level_high","","",275,[[]]],[11,"set_gpio21_level_high","","",275,[[]]],[11,"gpio21_level_low","","",275,[[]]],[11,"set_gpio21_level_low","","",275,[[]]],[11,"gpio20_edge_high","","",275,[[]]],[11,"set_gpio20_edge_high","","",275,[[]]],[11,"gpio20_edge_low","","",275,[[]]],[11,"set_gpio20_edge_low","","",275,[[]]],[11,"gpio20_level_high","","",275,[[]]],[11,"set_gpio20_level_high","","",275,[[]]],[11,"gpio20_level_low","","",275,[[]]],[11,"set_gpio20_level_low","","",275,[[]]],[11,"gpio19_edge_high","","",275,[[]]],[11,"set_gpio19_edge_high","","",275,[[]]],[11,"gpio19_edge_low","","",275,[[]]],[11,"set_gpio19_edge_low","","",275,[[]]],[11,"gpio19_level_high","","",275,[[]]],[11,"set_gpio19_level_high","","",275,[[]]],[11,"gpio19_level_low","","",275,[[]]],[11,"set_gpio19_level_low","","",275,[[]]],[11,"gpio18_edge_high","","",275,[[]]],[11,"set_gpio18_edge_high","","",275,[[]]],[11,"gpio18_edge_low","","",275,[[]]],[11,"set_gpio18_edge_low","","",275,[[]]],[11,"gpio18_level_high","","",275,[[]]],[11,"set_gpio18_level_high","","",275,[[]]],[11,"gpio18_level_low","","",275,[[]]],[11,"set_gpio18_level_low","","",275,[[]]],[11,"gpio17_edge_high","","",275,[[]]],[11,"set_gpio17_edge_high","","",275,[[]]],[11,"gpio17_edge_low","","",275,[[]]],[11,"set_gpio17_edge_low","","",275,[[]]],[11,"gpio17_level_high","","",275,[[]]],[11,"set_gpio17_level_high","","",275,[[]]],[11,"gpio17_level_low","","",275,[[]]],[11,"set_gpio17_level_low","","",275,[[]]],[11,"gpio16_edge_high","","",275,[[]]],[11,"set_gpio16_edge_high","","",275,[[]]],[11,"gpio16_edge_low","","",275,[[]]],[11,"set_gpio16_edge_low","","",275,[[]]],[11,"gpio16_level_high","","",275,[[]]],[11,"set_gpio16_level_high","","",275,[[]]],[11,"gpio16_level_low","","",275,[[]]],[11,"set_gpio16_level_low","","",275,[[]]],[3,"Proc1Inte1","","Interrupt Enable for proc1",null,null],[11,"to_bits","","",276,[[]]],[11,"from_bits","","",276,[[],["proc1inte1",3]]],[11,"gpio15_edge_high","","",276,[[]]],[11,"set_gpio15_edge_high","","",276,[[]]],[11,"gpio15_edge_low","","",276,[[]]],[11,"set_gpio15_edge_low","","",276,[[]]],[11,"gpio15_level_high","","",276,[[]]],[11,"set_gpio15_level_high","","",276,[[]]],[11,"gpio15_level_low","","",276,[[]]],[11,"set_gpio15_level_low","","",276,[[]]],[11,"gpio14_edge_high","","",276,[[]]],[11,"set_gpio14_edge_high","","",276,[[]]],[11,"gpio14_edge_low","","",276,[[]]],[11,"set_gpio14_edge_low","","",276,[[]]],[11,"gpio14_level_high","","",276,[[]]],[11,"set_gpio14_level_high","","",276,[[]]],[11,"gpio14_level_low","","",276,[[]]],[11,"set_gpio14_level_low","","",276,[[]]],[11,"gpio13_edge_high","","",276,[[]]],[11,"set_gpio13_edge_high","","",276,[[]]],[11,"gpio13_edge_low","","",276,[[]]],[11,"set_gpio13_edge_low","","",276,[[]]],[11,"gpio13_level_high","","",276,[[]]],[11,"set_gpio13_level_high","","",276,[[]]],[11,"gpio13_level_low","","",276,[[]]],[11,"set_gpio13_level_low","","",276,[[]]],[11,"gpio12_edge_high","","",276,[[]]],[11,"set_gpio12_edge_high","","",276,[[]]],[11,"gpio12_edge_low","","",276,[[]]],[11,"set_gpio12_edge_low","","",276,[[]]],[11,"gpio12_level_high","","",276,[[]]],[11,"set_gpio12_level_high","","",276,[[]]],[11,"gpio12_level_low","","",276,[[]]],[11,"set_gpio12_level_low","","",276,[[]]],[11,"gpio11_edge_high","","",276,[[]]],[11,"set_gpio11_edge_high","","",276,[[]]],[11,"gpio11_edge_low","","",276,[[]]],[11,"set_gpio11_edge_low","","",276,[[]]],[11,"gpio11_level_high","","",276,[[]]],[11,"set_gpio11_level_high","","",276,[[]]],[11,"gpio11_level_low","","",276,[[]]],[11,"set_gpio11_level_low","","",276,[[]]],[11,"gpio10_edge_high","","",276,[[]]],[11,"set_gpio10_edge_high","","",276,[[]]],[11,"gpio10_edge_low","","",276,[[]]],[11,"set_gpio10_edge_low","","",276,[[]]],[11,"gpio10_level_high","","",276,[[]]],[11,"set_gpio10_level_high","","",276,[[]]],[11,"gpio10_level_low","","",276,[[]]],[11,"set_gpio10_level_low","","",276,[[]]],[11,"gpio9_edge_high","","",276,[[]]],[11,"set_gpio9_edge_high","","",276,[[]]],[11,"gpio9_edge_low","","",276,[[]]],[11,"set_gpio9_edge_low","","",276,[[]]],[11,"gpio9_level_high","","",276,[[]]],[11,"set_gpio9_level_high","","",276,[[]]],[11,"gpio9_level_low","","",276,[[]]],[11,"set_gpio9_level_low","","",276,[[]]],[11,"gpio8_edge_high","","",276,[[]]],[11,"set_gpio8_edge_high","","",276,[[]]],[11,"gpio8_edge_low","","",276,[[]]],[11,"set_gpio8_edge_low","","",276,[[]]],[11,"gpio8_level_high","","",276,[[]]],[11,"set_gpio8_level_high","","",276,[[]]],[11,"gpio8_level_low","","",276,[[]]],[11,"set_gpio8_level_low","","",276,[[]]],[3,"Proc1Inte2","","Interrupt Enable for proc1",null,null],[11,"to_bits","","",277,[[]]],[11,"from_bits","","",277,[[],["proc1inte2",3]]],[11,"gpio23_edge_high","","",277,[[]]],[11,"set_gpio23_edge_high","","",277,[[]]],[11,"gpio23_edge_low","","",277,[[]]],[11,"set_gpio23_edge_low","","",277,[[]]],[11,"gpio23_level_high","","",277,[[]]],[11,"set_gpio23_level_high","","",277,[[]]],[11,"gpio23_level_low","","",277,[[]]],[11,"set_gpio23_level_low","","",277,[[]]],[11,"gpio22_edge_high","","",277,[[]]],[11,"set_gpio22_edge_high","","",277,[[]]],[11,"gpio22_edge_low","","",277,[[]]],[11,"set_gpio22_edge_low","","",277,[[]]],[11,"gpio22_level_high","","",277,[[]]],[11,"set_gpio22_level_high","","",277,[[]]],[11,"gpio22_level_low","","",277,[[]]],[11,"set_gpio22_level_low","","",277,[[]]],[11,"gpio21_edge_high","","",277,[[]]],[11,"set_gpio21_edge_high","","",277,[[]]],[11,"gpio21_edge_low","","",277,[[]]],[11,"set_gpio21_edge_low","","",277,[[]]],[11,"gpio21_level_high","","",277,[[]]],[11,"set_gpio21_level_high","","",277,[[]]],[11,"gpio21_level_low","","",277,[[]]],[11,"set_gpio21_level_low","","",277,[[]]],[11,"gpio20_edge_high","","",277,[[]]],[11,"set_gpio20_edge_high","","",277,[[]]],[11,"gpio20_edge_low","","",277,[[]]],[11,"set_gpio20_edge_low","","",277,[[]]],[11,"gpio20_level_high","","",277,[[]]],[11,"set_gpio20_level_high","","",277,[[]]],[11,"gpio20_level_low","","",277,[[]]],[11,"set_gpio20_level_low","","",277,[[]]],[11,"gpio19_edge_high","","",277,[[]]],[11,"set_gpio19_edge_high","","",277,[[]]],[11,"gpio19_edge_low","","",277,[[]]],[11,"set_gpio19_edge_low","","",277,[[]]],[11,"gpio19_level_high","","",277,[[]]],[11,"set_gpio19_level_high","","",277,[[]]],[11,"gpio19_level_low","","",277,[[]]],[11,"set_gpio19_level_low","","",277,[[]]],[11,"gpio18_edge_high","","",277,[[]]],[11,"set_gpio18_edge_high","","",277,[[]]],[11,"gpio18_edge_low","","",277,[[]]],[11,"set_gpio18_edge_low","","",277,[[]]],[11,"gpio18_level_high","","",277,[[]]],[11,"set_gpio18_level_high","","",277,[[]]],[11,"gpio18_level_low","","",277,[[]]],[11,"set_gpio18_level_low","","",277,[[]]],[11,"gpio17_edge_high","","",277,[[]]],[11,"set_gpio17_edge_high","","",277,[[]]],[11,"gpio17_edge_low","","",277,[[]]],[11,"set_gpio17_edge_low","","",277,[[]]],[11,"gpio17_level_high","","",277,[[]]],[11,"set_gpio17_level_high","","",277,[[]]],[11,"gpio17_level_low","","",277,[[]]],[11,"set_gpio17_level_low","","",277,[[]]],[11,"gpio16_edge_high","","",277,[[]]],[11,"set_gpio16_edge_high","","",277,[[]]],[11,"gpio16_edge_low","","",277,[[]]],[11,"set_gpio16_edge_low","","",277,[[]]],[11,"gpio16_level_high","","",277,[[]]],[11,"set_gpio16_level_high","","",277,[[]]],[11,"gpio16_level_low","","",277,[[]]],[11,"set_gpio16_level_low","","",277,[[]]],[3,"Proc0Inte2","","Interrupt Enable for proc0",null,null],[11,"to_bits","","",278,[[]]],[11,"from_bits","","",278,[[],["proc0inte2",3]]],[11,"gpio23_edge_high","","",278,[[]]],[11,"set_gpio23_edge_high","","",278,[[]]],[11,"gpio23_edge_low","","",278,[[]]],[11,"set_gpio23_edge_low","","",278,[[]]],[11,"gpio23_level_high","","",278,[[]]],[11,"set_gpio23_level_high","","",278,[[]]],[11,"gpio23_level_low","","",278,[[]]],[11,"set_gpio23_level_low","","",278,[[]]],[11,"gpio22_edge_high","","",278,[[]]],[11,"set_gpio22_edge_high","","",278,[[]]],[11,"gpio22_edge_low","","",278,[[]]],[11,"set_gpio22_edge_low","","",278,[[]]],[11,"gpio22_level_high","","",278,[[]]],[11,"set_gpio22_level_high","","",278,[[]]],[11,"gpio22_level_low","","",278,[[]]],[11,"set_gpio22_level_low","","",278,[[]]],[11,"gpio21_edge_high","","",278,[[]]],[11,"set_gpio21_edge_high","","",278,[[]]],[11,"gpio21_edge_low","","",278,[[]]],[11,"set_gpio21_edge_low","","",278,[[]]],[11,"gpio21_level_high","","",278,[[]]],[11,"set_gpio21_level_high","","",278,[[]]],[11,"gpio21_level_low","","",278,[[]]],[11,"set_gpio21_level_low","","",278,[[]]],[11,"gpio20_edge_high","","",278,[[]]],[11,"set_gpio20_edge_high","","",278,[[]]],[11,"gpio20_edge_low","","",278,[[]]],[11,"set_gpio20_edge_low","","",278,[[]]],[11,"gpio20_level_high","","",278,[[]]],[11,"set_gpio20_level_high","","",278,[[]]],[11,"gpio20_level_low","","",278,[[]]],[11,"set_gpio20_level_low","","",278,[[]]],[11,"gpio19_edge_high","","",278,[[]]],[11,"set_gpio19_edge_high","","",278,[[]]],[11,"gpio19_edge_low","","",278,[[]]],[11,"set_gpio19_edge_low","","",278,[[]]],[11,"gpio19_level_high","","",278,[[]]],[11,"set_gpio19_level_high","","",278,[[]]],[11,"gpio19_level_low","","",278,[[]]],[11,"set_gpio19_level_low","","",278,[[]]],[11,"gpio18_edge_high","","",278,[[]]],[11,"set_gpio18_edge_high","","",278,[[]]],[11,"gpio18_edge_low","","",278,[[]]],[11,"set_gpio18_edge_low","","",278,[[]]],[11,"gpio18_level_high","","",278,[[]]],[11,"set_gpio18_level_high","","",278,[[]]],[11,"gpio18_level_low","","",278,[[]]],[11,"set_gpio18_level_low","","",278,[[]]],[11,"gpio17_edge_high","","",278,[[]]],[11,"set_gpio17_edge_high","","",278,[[]]],[11,"gpio17_edge_low","","",278,[[]]],[11,"set_gpio17_edge_low","","",278,[[]]],[11,"gpio17_level_high","","",278,[[]]],[11,"set_gpio17_level_high","","",278,[[]]],[11,"gpio17_level_low","","",278,[[]]],[11,"set_gpio17_level_low","","",278,[[]]],[11,"gpio16_edge_high","","",278,[[]]],[11,"set_gpio16_edge_high","","",278,[[]]],[11,"gpio16_edge_low","","",278,[[]]],[11,"set_gpio16_edge_low","","",278,[[]]],[11,"gpio16_level_high","","",278,[[]]],[11,"set_gpio16_level_high","","",278,[[]]],[11,"gpio16_level_low","","",278,[[]]],[11,"set_gpio16_level_low","","",278,[[]]],[3,"Gpio18Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",279,[[]]],[11,"from_bits","","",279,[[],["gpio18ctrl",3]]],[11,"irqover","","",279,[[],["irqover",3]]],[11,"set_irqover","","",279,[[["irqover",3]]]],[11,"inover","","",279,[[],["inover",3]]],[11,"set_inover","","",279,[[["inover",3]]]],[11,"oeover","","",279,[[],["oeover",3]]],[11,"set_oeover","","",279,[[["oeover",3]]]],[11,"outover","","",279,[[],["outover",3]]],[11,"set_outover","","",279,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",279,[[],["gpio18ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",279,[[["gpio18ctrlfuncsel",3]]]],[3,"DormantWakeInte3","","Interrupt Enable for dormant_wake",null,null],[11,"to_bits","","",280,[[]]],[11,"from_bits","","",280,[[],["dormantwakeinte3",3]]],[11,"gpio29_edge_high","","",280,[[]]],[11,"set_gpio29_edge_high","","",280,[[]]],[11,"gpio29_edge_low","","",280,[[]]],[11,"set_gpio29_edge_low","","",280,[[]]],[11,"gpio29_level_high","","",280,[[]]],[11,"set_gpio29_level_high","","",280,[[]]],[11,"gpio29_level_low","","",280,[[]]],[11,"set_gpio29_level_low","","",280,[[]]],[11,"gpio28_edge_high","","",280,[[]]],[11,"set_gpio28_edge_high","","",280,[[]]],[11,"gpio28_edge_low","","",280,[[]]],[11,"set_gpio28_edge_low","","",280,[[]]],[11,"gpio28_level_high","","",280,[[]]],[11,"set_gpio28_level_high","","",280,[[]]],[11,"gpio28_level_low","","",280,[[]]],[11,"set_gpio28_level_low","","",280,[[]]],[11,"gpio27_edge_high","","",280,[[]]],[11,"set_gpio27_edge_high","","",280,[[]]],[11,"gpio27_edge_low","","",280,[[]]],[11,"set_gpio27_edge_low","","",280,[[]]],[11,"gpio27_level_high","","",280,[[]]],[11,"set_gpio27_level_high","","",280,[[]]],[11,"gpio27_level_low","","",280,[[]]],[11,"set_gpio27_level_low","","",280,[[]]],[11,"gpio26_edge_high","","",280,[[]]],[11,"set_gpio26_edge_high","","",280,[[]]],[11,"gpio26_edge_low","","",280,[[]]],[11,"set_gpio26_edge_low","","",280,[[]]],[11,"gpio26_level_high","","",280,[[]]],[11,"set_gpio26_level_high","","",280,[[]]],[11,"gpio26_level_low","","",280,[[]]],[11,"set_gpio26_level_low","","",280,[[]]],[11,"gpio25_edge_high","","",280,[[]]],[11,"set_gpio25_edge_high","","",280,[[]]],[11,"gpio25_edge_low","","",280,[[]]],[11,"set_gpio25_edge_low","","",280,[[]]],[11,"gpio25_level_high","","",280,[[]]],[11,"set_gpio25_level_high","","",280,[[]]],[11,"gpio25_level_low","","",280,[[]]],[11,"set_gpio25_level_low","","",280,[[]]],[11,"gpio24_edge_high","","",280,[[]]],[11,"set_gpio24_edge_high","","",280,[[]]],[11,"gpio24_edge_low","","",280,[[]]],[11,"set_gpio24_edge_low","","",280,[[]]],[11,"gpio24_level_high","","",280,[[]]],[11,"set_gpio24_level_high","","",280,[[]]],[11,"gpio24_level_low","","",280,[[]]],[11,"set_gpio24_level_low","","",280,[[]]],[3,"Gpio8Status","","GPIO status",null,null],[11,"to_bits","","",281,[[]]],[11,"from_bits","","",281,[[],["gpio8status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",281,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",281,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",281,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",281,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",281,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",281,[[]]],[11,"infrompad","","input signal from pad, before override is applied",281,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",281,[[]]],[11,"oetopad","","output enable to pad after register override is applied",281,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",281,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",281,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",281,[[]]],[11,"outtopad","","output signal to pad after register override is applied",281,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",281,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",281,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",281,[[]]],[3,"Gpio24Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",282,[[]]],[11,"from_bits","","",282,[[],["gpio24ctrl",3]]],[11,"irqover","","",282,[[],["irqover",3]]],[11,"set_irqover","","",282,[[["irqover",3]]]],[11,"inover","","",282,[[],["inover",3]]],[11,"set_inover","","",282,[[["inover",3]]]],[11,"oeover","","",282,[[],["oeover",3]]],[11,"set_oeover","","",282,[[["oeover",3]]]],[11,"outover","","",282,[[],["outover",3]]],[11,"set_outover","","",282,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",282,[[],["gpio24ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",282,[[["gpio24ctrlfuncsel",3]]]],[3,"Proc1Intf3","","Interrupt Force for proc1",null,null],[11,"to_bits","","",283,[[]]],[11,"from_bits","","",283,[[],["proc1intf3",3]]],[11,"gpio29_edge_high","","",283,[[]]],[11,"set_gpio29_edge_high","","",283,[[]]],[11,"gpio29_edge_low","","",283,[[]]],[11,"set_gpio29_edge_low","","",283,[[]]],[11,"gpio29_level_high","","",283,[[]]],[11,"set_gpio29_level_high","","",283,[[]]],[11,"gpio29_level_low","","",283,[[]]],[11,"set_gpio29_level_low","","",283,[[]]],[11,"gpio28_edge_high","","",283,[[]]],[11,"set_gpio28_edge_high","","",283,[[]]],[11,"gpio28_edge_low","","",283,[[]]],[11,"set_gpio28_edge_low","","",283,[[]]],[11,"gpio28_level_high","","",283,[[]]],[11,"set_gpio28_level_high","","",283,[[]]],[11,"gpio28_level_low","","",283,[[]]],[11,"set_gpio28_level_low","","",283,[[]]],[11,"gpio27_edge_high","","",283,[[]]],[11,"set_gpio27_edge_high","","",283,[[]]],[11,"gpio27_edge_low","","",283,[[]]],[11,"set_gpio27_edge_low","","",283,[[]]],[11,"gpio27_level_high","","",283,[[]]],[11,"set_gpio27_level_high","","",283,[[]]],[11,"gpio27_level_low","","",283,[[]]],[11,"set_gpio27_level_low","","",283,[[]]],[11,"gpio26_edge_high","","",283,[[]]],[11,"set_gpio26_edge_high","","",283,[[]]],[11,"gpio26_edge_low","","",283,[[]]],[11,"set_gpio26_edge_low","","",283,[[]]],[11,"gpio26_level_high","","",283,[[]]],[11,"set_gpio26_level_high","","",283,[[]]],[11,"gpio26_level_low","","",283,[[]]],[11,"set_gpio26_level_low","","",283,[[]]],[11,"gpio25_edge_high","","",283,[[]]],[11,"set_gpio25_edge_high","","",283,[[]]],[11,"gpio25_edge_low","","",283,[[]]],[11,"set_gpio25_edge_low","","",283,[[]]],[11,"gpio25_level_high","","",283,[[]]],[11,"set_gpio25_level_high","","",283,[[]]],[11,"gpio25_level_low","","",283,[[]]],[11,"set_gpio25_level_low","","",283,[[]]],[11,"gpio24_edge_high","","",283,[[]]],[11,"set_gpio24_edge_high","","",283,[[]]],[11,"gpio24_edge_low","","",283,[[]]],[11,"set_gpio24_edge_low","","",283,[[]]],[11,"gpio24_level_high","","",283,[[]]],[11,"set_gpio24_level_high","","",283,[[]]],[11,"gpio24_level_low","","",283,[[]]],[11,"set_gpio24_level_low","","",283,[[]]],[3,"Gpio5Status","","GPIO status",null,null],[11,"to_bits","","",284,[[]]],[11,"from_bits","","",284,[[],["gpio5status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",284,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",284,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",284,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",284,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",284,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",284,[[]]],[11,"infrompad","","input signal from pad, before override is applied",284,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",284,[[]]],[11,"oetopad","","output enable to pad after register override is applied",284,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",284,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",284,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",284,[[]]],[11,"outtopad","","output signal to pad after register override is applied",284,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",284,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",284,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",284,[[]]],[3,"Gpio0Status","","GPIO status",null,null],[11,"to_bits","","",285,[[]]],[11,"from_bits","","",285,[[],["gpio0status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",285,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",285,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",285,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",285,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",285,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",285,[[]]],[11,"infrompad","","input signal from pad, before override is applied",285,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",285,[[]]],[11,"oetopad","","output enable to pad after register override is applied",285,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",285,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",285,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",285,[[]]],[11,"outtopad","","output signal to pad after register override is applied",285,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",285,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",285,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",285,[[]]],[3,"Gpio1Status","","GPIO status",null,null],[11,"to_bits","","",286,[[]]],[11,"from_bits","","",286,[[],["gpio1status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",286,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",286,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",286,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",286,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",286,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",286,[[]]],[11,"infrompad","","input signal from pad, before override is applied",286,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",286,[[]]],[11,"oetopad","","output enable to pad after register override is applied",286,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",286,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",286,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",286,[[]]],[11,"outtopad","","output signal to pad after register override is applied",286,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",286,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",286,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",286,[[]]],[3,"Proc1Ints1","","Interrupt status after masking & forcing for proc1",null,null],[11,"to_bits","","",287,[[]]],[11,"from_bits","","",287,[[],["proc1ints1",3]]],[11,"gpio15_edge_high","","",287,[[]]],[11,"set_gpio15_edge_high","","",287,[[]]],[11,"gpio15_edge_low","","",287,[[]]],[11,"set_gpio15_edge_low","","",287,[[]]],[11,"gpio15_level_high","","",287,[[]]],[11,"set_gpio15_level_high","","",287,[[]]],[11,"gpio15_level_low","","",287,[[]]],[11,"set_gpio15_level_low","","",287,[[]]],[11,"gpio14_edge_high","","",287,[[]]],[11,"set_gpio14_edge_high","","",287,[[]]],[11,"gpio14_edge_low","","",287,[[]]],[11,"set_gpio14_edge_low","","",287,[[]]],[11,"gpio14_level_high","","",287,[[]]],[11,"set_gpio14_level_high","","",287,[[]]],[11,"gpio14_level_low","","",287,[[]]],[11,"set_gpio14_level_low","","",287,[[]]],[11,"gpio13_edge_high","","",287,[[]]],[11,"set_gpio13_edge_high","","",287,[[]]],[11,"gpio13_edge_low","","",287,[[]]],[11,"set_gpio13_edge_low","","",287,[[]]],[11,"gpio13_level_high","","",287,[[]]],[11,"set_gpio13_level_high","","",287,[[]]],[11,"gpio13_level_low","","",287,[[]]],[11,"set_gpio13_level_low","","",287,[[]]],[11,"gpio12_edge_high","","",287,[[]]],[11,"set_gpio12_edge_high","","",287,[[]]],[11,"gpio12_edge_low","","",287,[[]]],[11,"set_gpio12_edge_low","","",287,[[]]],[11,"gpio12_level_high","","",287,[[]]],[11,"set_gpio12_level_high","","",287,[[]]],[11,"gpio12_level_low","","",287,[[]]],[11,"set_gpio12_level_low","","",287,[[]]],[11,"gpio11_edge_high","","",287,[[]]],[11,"set_gpio11_edge_high","","",287,[[]]],[11,"gpio11_edge_low","","",287,[[]]],[11,"set_gpio11_edge_low","","",287,[[]]],[11,"gpio11_level_high","","",287,[[]]],[11,"set_gpio11_level_high","","",287,[[]]],[11,"gpio11_level_low","","",287,[[]]],[11,"set_gpio11_level_low","","",287,[[]]],[11,"gpio10_edge_high","","",287,[[]]],[11,"set_gpio10_edge_high","","",287,[[]]],[11,"gpio10_edge_low","","",287,[[]]],[11,"set_gpio10_edge_low","","",287,[[]]],[11,"gpio10_level_high","","",287,[[]]],[11,"set_gpio10_level_high","","",287,[[]]],[11,"gpio10_level_low","","",287,[[]]],[11,"set_gpio10_level_low","","",287,[[]]],[11,"gpio9_edge_high","","",287,[[]]],[11,"set_gpio9_edge_high","","",287,[[]]],[11,"gpio9_edge_low","","",287,[[]]],[11,"set_gpio9_edge_low","","",287,[[]]],[11,"gpio9_level_high","","",287,[[]]],[11,"set_gpio9_level_high","","",287,[[]]],[11,"gpio9_level_low","","",287,[[]]],[11,"set_gpio9_level_low","","",287,[[]]],[11,"gpio8_edge_high","","",287,[[]]],[11,"set_gpio8_edge_high","","",287,[[]]],[11,"gpio8_edge_low","","",287,[[]]],[11,"set_gpio8_edge_low","","",287,[[]]],[11,"gpio8_level_high","","",287,[[]]],[11,"set_gpio8_level_high","","",287,[[]]],[11,"gpio8_level_low","","",287,[[]]],[11,"set_gpio8_level_low","","",287,[[]]],[3,"Proc1Ints0","","Interrupt status after masking & forcing for proc1",null,null],[11,"to_bits","","",288,[[]]],[11,"from_bits","","",288,[[],["proc1ints0",3]]],[11,"gpio7_edge_high","","",288,[[]]],[11,"set_gpio7_edge_high","","",288,[[]]],[11,"gpio7_edge_low","","",288,[[]]],[11,"set_gpio7_edge_low","","",288,[[]]],[11,"gpio7_level_high","","",288,[[]]],[11,"set_gpio7_level_high","","",288,[[]]],[11,"gpio7_level_low","","",288,[[]]],[11,"set_gpio7_level_low","","",288,[[]]],[11,"gpio6_edge_high","","",288,[[]]],[11,"set_gpio6_edge_high","","",288,[[]]],[11,"gpio6_edge_low","","",288,[[]]],[11,"set_gpio6_edge_low","","",288,[[]]],[11,"gpio6_level_high","","",288,[[]]],[11,"set_gpio6_level_high","","",288,[[]]],[11,"gpio6_level_low","","",288,[[]]],[11,"set_gpio6_level_low","","",288,[[]]],[11,"gpio5_edge_high","","",288,[[]]],[11,"set_gpio5_edge_high","","",288,[[]]],[11,"gpio5_edge_low","","",288,[[]]],[11,"set_gpio5_edge_low","","",288,[[]]],[11,"gpio5_level_high","","",288,[[]]],[11,"set_gpio5_level_high","","",288,[[]]],[11,"gpio5_level_low","","",288,[[]]],[11,"set_gpio5_level_low","","",288,[[]]],[11,"gpio4_edge_high","","",288,[[]]],[11,"set_gpio4_edge_high","","",288,[[]]],[11,"gpio4_edge_low","","",288,[[]]],[11,"set_gpio4_edge_low","","",288,[[]]],[11,"gpio4_level_high","","",288,[[]]],[11,"set_gpio4_level_high","","",288,[[]]],[11,"gpio4_level_low","","",288,[[]]],[11,"set_gpio4_level_low","","",288,[[]]],[11,"gpio3_edge_high","","",288,[[]]],[11,"set_gpio3_edge_high","","",288,[[]]],[11,"gpio3_edge_low","","",288,[[]]],[11,"set_gpio3_edge_low","","",288,[[]]],[11,"gpio3_level_high","","",288,[[]]],[11,"set_gpio3_level_high","","",288,[[]]],[11,"gpio3_level_low","","",288,[[]]],[11,"set_gpio3_level_low","","",288,[[]]],[11,"gpio2_edge_high","","",288,[[]]],[11,"set_gpio2_edge_high","","",288,[[]]],[11,"gpio2_edge_low","","",288,[[]]],[11,"set_gpio2_edge_low","","",288,[[]]],[11,"gpio2_level_high","","",288,[[]]],[11,"set_gpio2_level_high","","",288,[[]]],[11,"gpio2_level_low","","",288,[[]]],[11,"set_gpio2_level_low","","",288,[[]]],[11,"gpio1_edge_high","","",288,[[]]],[11,"set_gpio1_edge_high","","",288,[[]]],[11,"gpio1_edge_low","","",288,[[]]],[11,"set_gpio1_edge_low","","",288,[[]]],[11,"gpio1_level_high","","",288,[[]]],[11,"set_gpio1_level_high","","",288,[[]]],[11,"gpio1_level_low","","",288,[[]]],[11,"set_gpio1_level_low","","",288,[[]]],[11,"gpio0_edge_high","","",288,[[]]],[11,"set_gpio0_edge_high","","",288,[[]]],[11,"gpio0_edge_low","","",288,[[]]],[11,"set_gpio0_edge_low","","",288,[[]]],[11,"gpio0_level_high","","",288,[[]]],[11,"set_gpio0_level_high","","",288,[[]]],[11,"gpio0_level_low","","",288,[[]]],[11,"set_gpio0_level_low","","",288,[[]]],[3,"Intr1","","Raw Interrupts",null,null],[11,"to_bits","","",289,[[]]],[11,"from_bits","","",289,[[],["intr1",3]]],[11,"gpio15_edge_high","","",289,[[]]],[11,"set_gpio15_edge_high","","",289,[[]]],[11,"gpio15_edge_low","","",289,[[]]],[11,"set_gpio15_edge_low","","",289,[[]]],[11,"gpio15_level_high","","",289,[[]]],[11,"set_gpio15_level_high","","",289,[[]]],[11,"gpio15_level_low","","",289,[[]]],[11,"set_gpio15_level_low","","",289,[[]]],[11,"gpio14_edge_high","","",289,[[]]],[11,"set_gpio14_edge_high","","",289,[[]]],[11,"gpio14_edge_low","","",289,[[]]],[11,"set_gpio14_edge_low","","",289,[[]]],[11,"gpio14_level_high","","",289,[[]]],[11,"set_gpio14_level_high","","",289,[[]]],[11,"gpio14_level_low","","",289,[[]]],[11,"set_gpio14_level_low","","",289,[[]]],[11,"gpio13_edge_high","","",289,[[]]],[11,"set_gpio13_edge_high","","",289,[[]]],[11,"gpio13_edge_low","","",289,[[]]],[11,"set_gpio13_edge_low","","",289,[[]]],[11,"gpio13_level_high","","",289,[[]]],[11,"set_gpio13_level_high","","",289,[[]]],[11,"gpio13_level_low","","",289,[[]]],[11,"set_gpio13_level_low","","",289,[[]]],[11,"gpio12_edge_high","","",289,[[]]],[11,"set_gpio12_edge_high","","",289,[[]]],[11,"gpio12_edge_low","","",289,[[]]],[11,"set_gpio12_edge_low","","",289,[[]]],[11,"gpio12_level_high","","",289,[[]]],[11,"set_gpio12_level_high","","",289,[[]]],[11,"gpio12_level_low","","",289,[[]]],[11,"set_gpio12_level_low","","",289,[[]]],[11,"gpio11_edge_high","","",289,[[]]],[11,"set_gpio11_edge_high","","",289,[[]]],[11,"gpio11_edge_low","","",289,[[]]],[11,"set_gpio11_edge_low","","",289,[[]]],[11,"gpio11_level_high","","",289,[[]]],[11,"set_gpio11_level_high","","",289,[[]]],[11,"gpio11_level_low","","",289,[[]]],[11,"set_gpio11_level_low","","",289,[[]]],[11,"gpio10_edge_high","","",289,[[]]],[11,"set_gpio10_edge_high","","",289,[[]]],[11,"gpio10_edge_low","","",289,[[]]],[11,"set_gpio10_edge_low","","",289,[[]]],[11,"gpio10_level_high","","",289,[[]]],[11,"set_gpio10_level_high","","",289,[[]]],[11,"gpio10_level_low","","",289,[[]]],[11,"set_gpio10_level_low","","",289,[[]]],[11,"gpio9_edge_high","","",289,[[]]],[11,"set_gpio9_edge_high","","",289,[[]]],[11,"gpio9_edge_low","","",289,[[]]],[11,"set_gpio9_edge_low","","",289,[[]]],[11,"gpio9_level_high","","",289,[[]]],[11,"set_gpio9_level_high","","",289,[[]]],[11,"gpio9_level_low","","",289,[[]]],[11,"set_gpio9_level_low","","",289,[[]]],[11,"gpio8_edge_high","","",289,[[]]],[11,"set_gpio8_edge_high","","",289,[[]]],[11,"gpio8_edge_low","","",289,[[]]],[11,"set_gpio8_edge_low","","",289,[[]]],[11,"gpio8_level_high","","",289,[[]]],[11,"set_gpio8_level_high","","",289,[[]]],[11,"gpio8_level_low","","",289,[[]]],[11,"set_gpio8_level_low","","",289,[[]]],[3,"Gpio12Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",290,[[]]],[11,"from_bits","","",290,[[],["gpio12ctrl",3]]],[11,"irqover","","",290,[[],["irqover",3]]],[11,"set_irqover","","",290,[[["irqover",3]]]],[11,"inover","","",290,[[],["inover",3]]],[11,"set_inover","","",290,[[["inover",3]]]],[11,"oeover","","",290,[[],["oeover",3]]],[11,"set_oeover","","",290,[[["oeover",3]]]],[11,"outover","","",290,[[],["outover",3]]],[11,"set_outover","","",290,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",290,[[],["gpio12ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",290,[[["gpio12ctrlfuncsel",3]]]],[3,"Proc0Ints1","","Interrupt status after masking & forcing for proc0",null,null],[11,"to_bits","","",291,[[]]],[11,"from_bits","","",291,[[],["proc0ints1",3]]],[11,"gpio15_edge_high","","",291,[[]]],[11,"set_gpio15_edge_high","","",291,[[]]],[11,"gpio15_edge_low","","",291,[[]]],[11,"set_gpio15_edge_low","","",291,[[]]],[11,"gpio15_level_high","","",291,[[]]],[11,"set_gpio15_level_high","","",291,[[]]],[11,"gpio15_level_low","","",291,[[]]],[11,"set_gpio15_level_low","","",291,[[]]],[11,"gpio14_edge_high","","",291,[[]]],[11,"set_gpio14_edge_high","","",291,[[]]],[11,"gpio14_edge_low","","",291,[[]]],[11,"set_gpio14_edge_low","","",291,[[]]],[11,"gpio14_level_high","","",291,[[]]],[11,"set_gpio14_level_high","","",291,[[]]],[11,"gpio14_level_low","","",291,[[]]],[11,"set_gpio14_level_low","","",291,[[]]],[11,"gpio13_edge_high","","",291,[[]]],[11,"set_gpio13_edge_high","","",291,[[]]],[11,"gpio13_edge_low","","",291,[[]]],[11,"set_gpio13_edge_low","","",291,[[]]],[11,"gpio13_level_high","","",291,[[]]],[11,"set_gpio13_level_high","","",291,[[]]],[11,"gpio13_level_low","","",291,[[]]],[11,"set_gpio13_level_low","","",291,[[]]],[11,"gpio12_edge_high","","",291,[[]]],[11,"set_gpio12_edge_high","","",291,[[]]],[11,"gpio12_edge_low","","",291,[[]]],[11,"set_gpio12_edge_low","","",291,[[]]],[11,"gpio12_level_high","","",291,[[]]],[11,"set_gpio12_level_high","","",291,[[]]],[11,"gpio12_level_low","","",291,[[]]],[11,"set_gpio12_level_low","","",291,[[]]],[11,"gpio11_edge_high","","",291,[[]]],[11,"set_gpio11_edge_high","","",291,[[]]],[11,"gpio11_edge_low","","",291,[[]]],[11,"set_gpio11_edge_low","","",291,[[]]],[11,"gpio11_level_high","","",291,[[]]],[11,"set_gpio11_level_high","","",291,[[]]],[11,"gpio11_level_low","","",291,[[]]],[11,"set_gpio11_level_low","","",291,[[]]],[11,"gpio10_edge_high","","",291,[[]]],[11,"set_gpio10_edge_high","","",291,[[]]],[11,"gpio10_edge_low","","",291,[[]]],[11,"set_gpio10_edge_low","","",291,[[]]],[11,"gpio10_level_high","","",291,[[]]],[11,"set_gpio10_level_high","","",291,[[]]],[11,"gpio10_level_low","","",291,[[]]],[11,"set_gpio10_level_low","","",291,[[]]],[11,"gpio9_edge_high","","",291,[[]]],[11,"set_gpio9_edge_high","","",291,[[]]],[11,"gpio9_edge_low","","",291,[[]]],[11,"set_gpio9_edge_low","","",291,[[]]],[11,"gpio9_level_high","","",291,[[]]],[11,"set_gpio9_level_high","","",291,[[]]],[11,"gpio9_level_low","","",291,[[]]],[11,"set_gpio9_level_low","","",291,[[]]],[11,"gpio8_edge_high","","",291,[[]]],[11,"set_gpio8_edge_high","","",291,[[]]],[11,"gpio8_edge_low","","",291,[[]]],[11,"set_gpio8_edge_low","","",291,[[]]],[11,"gpio8_level_high","","",291,[[]]],[11,"set_gpio8_level_high","","",291,[[]]],[11,"gpio8_level_low","","",291,[[]]],[11,"set_gpio8_level_low","","",291,[[]]],[3,"Gpio3Status","","GPIO status",null,null],[11,"to_bits","","",292,[[]]],[11,"from_bits","","",292,[[],["gpio3status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",292,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",292,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",292,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",292,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",292,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",292,[[]]],[11,"infrompad","","input signal from pad, before override is applied",292,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",292,[[]]],[11,"oetopad","","output enable to pad after register override is applied",292,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",292,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",292,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",292,[[]]],[11,"outtopad","","output signal to pad after register override is applied",292,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",292,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",292,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",292,[[]]],[3,"Gpio13Status","","GPIO status",null,null],[11,"to_bits","","",293,[[]]],[11,"from_bits","","",293,[[],["gpio13status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",293,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",293,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",293,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",293,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",293,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",293,[[]]],[11,"infrompad","","input signal from pad, before override is applied",293,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",293,[[]]],[11,"oetopad","","output enable to pad after register override is applied",293,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",293,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",293,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",293,[[]]],[11,"outtopad","","output signal to pad after register override is applied",293,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",293,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",293,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",293,[[]]],[3,"Gpio15Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",294,[[]]],[11,"from_bits","","",294,[[],["gpio15ctrl",3]]],[11,"irqover","","",294,[[],["irqover",3]]],[11,"set_irqover","","",294,[[["irqover",3]]]],[11,"inover","","",294,[[],["inover",3]]],[11,"set_inover","","",294,[[["inover",3]]]],[11,"oeover","","",294,[[],["oeover",3]]],[11,"set_oeover","","",294,[[["oeover",3]]]],[11,"outover","","",294,[[],["outover",3]]],[11,"set_outover","","",294,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",294,[[],["gpio15ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",294,[[["gpio15ctrlfuncsel",3]]]],[3,"Gpio14Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",295,[[]]],[11,"from_bits","","",295,[[],["gpio14ctrl",3]]],[11,"irqover","","",295,[[],["irqover",3]]],[11,"set_irqover","","",295,[[["irqover",3]]]],[11,"inover","","",295,[[],["inover",3]]],[11,"set_inover","","",295,[[["inover",3]]]],[11,"oeover","","",295,[[],["oeover",3]]],[11,"set_oeover","","",295,[[["oeover",3]]]],[11,"outover","","",295,[[],["outover",3]]],[11,"set_outover","","",295,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",295,[[],["gpio14ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",295,[[["gpio14ctrlfuncsel",3]]]],[3,"Gpio8Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",296,[[]]],[11,"from_bits","","",296,[[],["gpio8ctrl",3]]],[11,"irqover","","",296,[[],["irqover",3]]],[11,"set_irqover","","",296,[[["irqover",3]]]],[11,"inover","","",296,[[],["inover",3]]],[11,"set_inover","","",296,[[["inover",3]]]],[11,"oeover","","",296,[[],["oeover",3]]],[11,"set_oeover","","",296,[[["oeover",3]]]],[11,"outover","","",296,[[],["outover",3]]],[11,"set_outover","","",296,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",296,[[],["gpio8ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",296,[[["gpio8ctrlfuncsel",3]]]],[3,"Proc0Ints0","","Interrupt status after masking & forcing for proc0",null,null],[11,"to_bits","","",297,[[]]],[11,"from_bits","","",297,[[],["proc0ints0",3]]],[11,"gpio7_edge_high","","",297,[[]]],[11,"set_gpio7_edge_high","","",297,[[]]],[11,"gpio7_edge_low","","",297,[[]]],[11,"set_gpio7_edge_low","","",297,[[]]],[11,"gpio7_level_high","","",297,[[]]],[11,"set_gpio7_level_high","","",297,[[]]],[11,"gpio7_level_low","","",297,[[]]],[11,"set_gpio7_level_low","","",297,[[]]],[11,"gpio6_edge_high","","",297,[[]]],[11,"set_gpio6_edge_high","","",297,[[]]],[11,"gpio6_edge_low","","",297,[[]]],[11,"set_gpio6_edge_low","","",297,[[]]],[11,"gpio6_level_high","","",297,[[]]],[11,"set_gpio6_level_high","","",297,[[]]],[11,"gpio6_level_low","","",297,[[]]],[11,"set_gpio6_level_low","","",297,[[]]],[11,"gpio5_edge_high","","",297,[[]]],[11,"set_gpio5_edge_high","","",297,[[]]],[11,"gpio5_edge_low","","",297,[[]]],[11,"set_gpio5_edge_low","","",297,[[]]],[11,"gpio5_level_high","","",297,[[]]],[11,"set_gpio5_level_high","","",297,[[]]],[11,"gpio5_level_low","","",297,[[]]],[11,"set_gpio5_level_low","","",297,[[]]],[11,"gpio4_edge_high","","",297,[[]]],[11,"set_gpio4_edge_high","","",297,[[]]],[11,"gpio4_edge_low","","",297,[[]]],[11,"set_gpio4_edge_low","","",297,[[]]],[11,"gpio4_level_high","","",297,[[]]],[11,"set_gpio4_level_high","","",297,[[]]],[11,"gpio4_level_low","","",297,[[]]],[11,"set_gpio4_level_low","","",297,[[]]],[11,"gpio3_edge_high","","",297,[[]]],[11,"set_gpio3_edge_high","","",297,[[]]],[11,"gpio3_edge_low","","",297,[[]]],[11,"set_gpio3_edge_low","","",297,[[]]],[11,"gpio3_level_high","","",297,[[]]],[11,"set_gpio3_level_high","","",297,[[]]],[11,"gpio3_level_low","","",297,[[]]],[11,"set_gpio3_level_low","","",297,[[]]],[11,"gpio2_edge_high","","",297,[[]]],[11,"set_gpio2_edge_high","","",297,[[]]],[11,"gpio2_edge_low","","",297,[[]]],[11,"set_gpio2_edge_low","","",297,[[]]],[11,"gpio2_level_high","","",297,[[]]],[11,"set_gpio2_level_high","","",297,[[]]],[11,"gpio2_level_low","","",297,[[]]],[11,"set_gpio2_level_low","","",297,[[]]],[11,"gpio1_edge_high","","",297,[[]]],[11,"set_gpio1_edge_high","","",297,[[]]],[11,"gpio1_edge_low","","",297,[[]]],[11,"set_gpio1_edge_low","","",297,[[]]],[11,"gpio1_level_high","","",297,[[]]],[11,"set_gpio1_level_high","","",297,[[]]],[11,"gpio1_level_low","","",297,[[]]],[11,"set_gpio1_level_low","","",297,[[]]],[11,"gpio0_edge_high","","",297,[[]]],[11,"set_gpio0_edge_high","","",297,[[]]],[11,"gpio0_edge_low","","",297,[[]]],[11,"set_gpio0_edge_low","","",297,[[]]],[11,"gpio0_level_high","","",297,[[]]],[11,"set_gpio0_level_high","","",297,[[]]],[11,"gpio0_level_low","","",297,[[]]],[11,"set_gpio0_level_low","","",297,[[]]],[3,"DormantWakeIntf0","","Interrupt Force for dormant_wake",null,null],[11,"to_bits","","",298,[[]]],[11,"from_bits","","",298,[[],["dormantwakeintf0",3]]],[11,"gpio7_edge_high","","",298,[[]]],[11,"set_gpio7_edge_high","","",298,[[]]],[11,"gpio7_edge_low","","",298,[[]]],[11,"set_gpio7_edge_low","","",298,[[]]],[11,"gpio7_level_high","","",298,[[]]],[11,"set_gpio7_level_high","","",298,[[]]],[11,"gpio7_level_low","","",298,[[]]],[11,"set_gpio7_level_low","","",298,[[]]],[11,"gpio6_edge_high","","",298,[[]]],[11,"set_gpio6_edge_high","","",298,[[]]],[11,"gpio6_edge_low","","",298,[[]]],[11,"set_gpio6_edge_low","","",298,[[]]],[11,"gpio6_level_high","","",298,[[]]],[11,"set_gpio6_level_high","","",298,[[]]],[11,"gpio6_level_low","","",298,[[]]],[11,"set_gpio6_level_low","","",298,[[]]],[11,"gpio5_edge_high","","",298,[[]]],[11,"set_gpio5_edge_high","","",298,[[]]],[11,"gpio5_edge_low","","",298,[[]]],[11,"set_gpio5_edge_low","","",298,[[]]],[11,"gpio5_level_high","","",298,[[]]],[11,"set_gpio5_level_high","","",298,[[]]],[11,"gpio5_level_low","","",298,[[]]],[11,"set_gpio5_level_low","","",298,[[]]],[11,"gpio4_edge_high","","",298,[[]]],[11,"set_gpio4_edge_high","","",298,[[]]],[11,"gpio4_edge_low","","",298,[[]]],[11,"set_gpio4_edge_low","","",298,[[]]],[11,"gpio4_level_high","","",298,[[]]],[11,"set_gpio4_level_high","","",298,[[]]],[11,"gpio4_level_low","","",298,[[]]],[11,"set_gpio4_level_low","","",298,[[]]],[11,"gpio3_edge_high","","",298,[[]]],[11,"set_gpio3_edge_high","","",298,[[]]],[11,"gpio3_edge_low","","",298,[[]]],[11,"set_gpio3_edge_low","","",298,[[]]],[11,"gpio3_level_high","","",298,[[]]],[11,"set_gpio3_level_high","","",298,[[]]],[11,"gpio3_level_low","","",298,[[]]],[11,"set_gpio3_level_low","","",298,[[]]],[11,"gpio2_edge_high","","",298,[[]]],[11,"set_gpio2_edge_high","","",298,[[]]],[11,"gpio2_edge_low","","",298,[[]]],[11,"set_gpio2_edge_low","","",298,[[]]],[11,"gpio2_level_high","","",298,[[]]],[11,"set_gpio2_level_high","","",298,[[]]],[11,"gpio2_level_low","","",298,[[]]],[11,"set_gpio2_level_low","","",298,[[]]],[11,"gpio1_edge_high","","",298,[[]]],[11,"set_gpio1_edge_high","","",298,[[]]],[11,"gpio1_edge_low","","",298,[[]]],[11,"set_gpio1_edge_low","","",298,[[]]],[11,"gpio1_level_high","","",298,[[]]],[11,"set_gpio1_level_high","","",298,[[]]],[11,"gpio1_level_low","","",298,[[]]],[11,"set_gpio1_level_low","","",298,[[]]],[11,"gpio0_edge_high","","",298,[[]]],[11,"set_gpio0_edge_high","","",298,[[]]],[11,"gpio0_edge_low","","",298,[[]]],[11,"set_gpio0_edge_low","","",298,[[]]],[11,"gpio0_level_high","","",298,[[]]],[11,"set_gpio0_level_high","","",298,[[]]],[11,"gpio0_level_low","","",298,[[]]],[11,"set_gpio0_level_low","","",298,[[]]],[3,"Gpio19Status","","GPIO status",null,null],[11,"to_bits","","",299,[[]]],[11,"from_bits","","",299,[[],["gpio19status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",299,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",299,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",299,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",299,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",299,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",299,[[]]],[11,"infrompad","","input signal from pad, before override is applied",299,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",299,[[]]],[11,"oetopad","","output enable to pad after register override is applied",299,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",299,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",299,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",299,[[]]],[11,"outtopad","","output signal to pad after register override is applied",299,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",299,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",299,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",299,[[]]],[3,"Gpio24Status","","GPIO status",null,null],[11,"to_bits","","",300,[[]]],[11,"from_bits","","",300,[[],["gpio24status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",300,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",300,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",300,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",300,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",300,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",300,[[]]],[11,"infrompad","","input signal from pad, before override is applied",300,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",300,[[]]],[11,"oetopad","","output enable to pad after register override is applied",300,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",300,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",300,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",300,[[]]],[11,"outtopad","","output signal to pad after register override is applied",300,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",300,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",300,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",300,[[]]],[3,"Gpio5Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",301,[[]]],[11,"from_bits","","",301,[[],["gpio5ctrl",3]]],[11,"irqover","","",301,[[],["irqover",3]]],[11,"set_irqover","","",301,[[["irqover",3]]]],[11,"inover","","",301,[[],["inover",3]]],[11,"set_inover","","",301,[[["inover",3]]]],[11,"oeover","","",301,[[],["oeover",3]]],[11,"set_oeover","","",301,[[["oeover",3]]]],[11,"outover","","",301,[[],["outover",3]]],[11,"set_outover","","",301,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",301,[[],["gpio5ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",301,[[["gpio5ctrlfuncsel",3]]]],[3,"Gpio23Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",302,[[]]],[11,"from_bits","","",302,[[],["gpio23ctrl",3]]],[11,"irqover","","",302,[[],["irqover",3]]],[11,"set_irqover","","",302,[[["irqover",3]]]],[11,"inover","","",302,[[],["inover",3]]],[11,"set_inover","","",302,[[["inover",3]]]],[11,"oeover","","",302,[[],["oeover",3]]],[11,"set_oeover","","",302,[[["oeover",3]]]],[11,"outover","","",302,[[],["outover",3]]],[11,"set_outover","","",302,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",302,[[],["gpio23ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",302,[[["gpio23ctrlfuncsel",3]]]],[3,"DormantWakeIntf2","","Interrupt Force for dormant_wake",null,null],[11,"to_bits","","",303,[[]]],[11,"from_bits","","",303,[[],["dormantwakeintf2",3]]],[11,"gpio23_edge_high","","",303,[[]]],[11,"set_gpio23_edge_high","","",303,[[]]],[11,"gpio23_edge_low","","",303,[[]]],[11,"set_gpio23_edge_low","","",303,[[]]],[11,"gpio23_level_high","","",303,[[]]],[11,"set_gpio23_level_high","","",303,[[]]],[11,"gpio23_level_low","","",303,[[]]],[11,"set_gpio23_level_low","","",303,[[]]],[11,"gpio22_edge_high","","",303,[[]]],[11,"set_gpio22_edge_high","","",303,[[]]],[11,"gpio22_edge_low","","",303,[[]]],[11,"set_gpio22_edge_low","","",303,[[]]],[11,"gpio22_level_high","","",303,[[]]],[11,"set_gpio22_level_high","","",303,[[]]],[11,"gpio22_level_low","","",303,[[]]],[11,"set_gpio22_level_low","","",303,[[]]],[11,"gpio21_edge_high","","",303,[[]]],[11,"set_gpio21_edge_high","","",303,[[]]],[11,"gpio21_edge_low","","",303,[[]]],[11,"set_gpio21_edge_low","","",303,[[]]],[11,"gpio21_level_high","","",303,[[]]],[11,"set_gpio21_level_high","","",303,[[]]],[11,"gpio21_level_low","","",303,[[]]],[11,"set_gpio21_level_low","","",303,[[]]],[11,"gpio20_edge_high","","",303,[[]]],[11,"set_gpio20_edge_high","","",303,[[]]],[11,"gpio20_edge_low","","",303,[[]]],[11,"set_gpio20_edge_low","","",303,[[]]],[11,"gpio20_level_high","","",303,[[]]],[11,"set_gpio20_level_high","","",303,[[]]],[11,"gpio20_level_low","","",303,[[]]],[11,"set_gpio20_level_low","","",303,[[]]],[11,"gpio19_edge_high","","",303,[[]]],[11,"set_gpio19_edge_high","","",303,[[]]],[11,"gpio19_edge_low","","",303,[[]]],[11,"set_gpio19_edge_low","","",303,[[]]],[11,"gpio19_level_high","","",303,[[]]],[11,"set_gpio19_level_high","","",303,[[]]],[11,"gpio19_level_low","","",303,[[]]],[11,"set_gpio19_level_low","","",303,[[]]],[11,"gpio18_edge_high","","",303,[[]]],[11,"set_gpio18_edge_high","","",303,[[]]],[11,"gpio18_edge_low","","",303,[[]]],[11,"set_gpio18_edge_low","","",303,[[]]],[11,"gpio18_level_high","","",303,[[]]],[11,"set_gpio18_level_high","","",303,[[]]],[11,"gpio18_level_low","","",303,[[]]],[11,"set_gpio18_level_low","","",303,[[]]],[11,"gpio17_edge_high","","",303,[[]]],[11,"set_gpio17_edge_high","","",303,[[]]],[11,"gpio17_edge_low","","",303,[[]]],[11,"set_gpio17_edge_low","","",303,[[]]],[11,"gpio17_level_high","","",303,[[]]],[11,"set_gpio17_level_high","","",303,[[]]],[11,"gpio17_level_low","","",303,[[]]],[11,"set_gpio17_level_low","","",303,[[]]],[11,"gpio16_edge_high","","",303,[[]]],[11,"set_gpio16_edge_high","","",303,[[]]],[11,"gpio16_edge_low","","",303,[[]]],[11,"set_gpio16_edge_low","","",303,[[]]],[11,"gpio16_level_high","","",303,[[]]],[11,"set_gpio16_level_high","","",303,[[]]],[11,"gpio16_level_low","","",303,[[]]],[11,"set_gpio16_level_low","","",303,[[]]],[3,"Gpio9Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",304,[[]]],[11,"from_bits","","",304,[[],["gpio9ctrl",3]]],[11,"irqover","","",304,[[],["irqover",3]]],[11,"set_irqover","","",304,[[["irqover",3]]]],[11,"inover","","",304,[[],["inover",3]]],[11,"set_inover","","",304,[[["inover",3]]]],[11,"oeover","","",304,[[],["oeover",3]]],[11,"set_oeover","","",304,[[["oeover",3]]]],[11,"outover","","",304,[[],["outover",3]]],[11,"set_outover","","",304,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",304,[[],["gpio9ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",304,[[["gpio9ctrlfuncsel",3]]]],[3,"Proc1Inte0","","Interrupt Enable for proc1",null,null],[11,"to_bits","","",305,[[]]],[11,"from_bits","","",305,[[],["proc1inte0",3]]],[11,"gpio7_edge_high","","",305,[[]]],[11,"set_gpio7_edge_high","","",305,[[]]],[11,"gpio7_edge_low","","",305,[[]]],[11,"set_gpio7_edge_low","","",305,[[]]],[11,"gpio7_level_high","","",305,[[]]],[11,"set_gpio7_level_high","","",305,[[]]],[11,"gpio7_level_low","","",305,[[]]],[11,"set_gpio7_level_low","","",305,[[]]],[11,"gpio6_edge_high","","",305,[[]]],[11,"set_gpio6_edge_high","","",305,[[]]],[11,"gpio6_edge_low","","",305,[[]]],[11,"set_gpio6_edge_low","","",305,[[]]],[11,"gpio6_level_high","","",305,[[]]],[11,"set_gpio6_level_high","","",305,[[]]],[11,"gpio6_level_low","","",305,[[]]],[11,"set_gpio6_level_low","","",305,[[]]],[11,"gpio5_edge_high","","",305,[[]]],[11,"set_gpio5_edge_high","","",305,[[]]],[11,"gpio5_edge_low","","",305,[[]]],[11,"set_gpio5_edge_low","","",305,[[]]],[11,"gpio5_level_high","","",305,[[]]],[11,"set_gpio5_level_high","","",305,[[]]],[11,"gpio5_level_low","","",305,[[]]],[11,"set_gpio5_level_low","","",305,[[]]],[11,"gpio4_edge_high","","",305,[[]]],[11,"set_gpio4_edge_high","","",305,[[]]],[11,"gpio4_edge_low","","",305,[[]]],[11,"set_gpio4_edge_low","","",305,[[]]],[11,"gpio4_level_high","","",305,[[]]],[11,"set_gpio4_level_high","","",305,[[]]],[11,"gpio4_level_low","","",305,[[]]],[11,"set_gpio4_level_low","","",305,[[]]],[11,"gpio3_edge_high","","",305,[[]]],[11,"set_gpio3_edge_high","","",305,[[]]],[11,"gpio3_edge_low","","",305,[[]]],[11,"set_gpio3_edge_low","","",305,[[]]],[11,"gpio3_level_high","","",305,[[]]],[11,"set_gpio3_level_high","","",305,[[]]],[11,"gpio3_level_low","","",305,[[]]],[11,"set_gpio3_level_low","","",305,[[]]],[11,"gpio2_edge_high","","",305,[[]]],[11,"set_gpio2_edge_high","","",305,[[]]],[11,"gpio2_edge_low","","",305,[[]]],[11,"set_gpio2_edge_low","","",305,[[]]],[11,"gpio2_level_high","","",305,[[]]],[11,"set_gpio2_level_high","","",305,[[]]],[11,"gpio2_level_low","","",305,[[]]],[11,"set_gpio2_level_low","","",305,[[]]],[11,"gpio1_edge_high","","",305,[[]]],[11,"set_gpio1_edge_high","","",305,[[]]],[11,"gpio1_edge_low","","",305,[[]]],[11,"set_gpio1_edge_low","","",305,[[]]],[11,"gpio1_level_high","","",305,[[]]],[11,"set_gpio1_level_high","","",305,[[]]],[11,"gpio1_level_low","","",305,[[]]],[11,"set_gpio1_level_low","","",305,[[]]],[11,"gpio0_edge_high","","",305,[[]]],[11,"set_gpio0_edge_high","","",305,[[]]],[11,"gpio0_edge_low","","",305,[[]]],[11,"set_gpio0_edge_low","","",305,[[]]],[11,"gpio0_level_high","","",305,[[]]],[11,"set_gpio0_level_high","","",305,[[]]],[11,"gpio0_level_low","","",305,[[]]],[11,"set_gpio0_level_low","","",305,[[]]],[3,"Gpio29Status","","GPIO status",null,null],[11,"to_bits","","",306,[[]]],[11,"from_bits","","",306,[[],["gpio29status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",306,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",306,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",306,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",306,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",306,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",306,[[]]],[11,"infrompad","","input signal from pad, before override is applied",306,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",306,[[]]],[11,"oetopad","","output enable to pad after register override is applied",306,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",306,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",306,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",306,[[]]],[11,"outtopad","","output signal to pad after register override is applied",306,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",306,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",306,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",306,[[]]],[3,"Gpio2Status","","GPIO status",null,null],[11,"to_bits","","",307,[[]]],[11,"from_bits","","",307,[[],["gpio2status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",307,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",307,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",307,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",307,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",307,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",307,[[]]],[11,"infrompad","","input signal from pad, before override is applied",307,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",307,[[]]],[11,"oetopad","","output enable to pad after register override is applied",307,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",307,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",307,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",307,[[]]],[11,"outtopad","","output signal to pad after register override is applied",307,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",307,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",307,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",307,[[]]],[3,"Gpio17Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",308,[[]]],[11,"from_bits","","",308,[[],["gpio17ctrl",3]]],[11,"irqover","","",308,[[],["irqover",3]]],[11,"set_irqover","","",308,[[["irqover",3]]]],[11,"inover","","",308,[[],["inover",3]]],[11,"set_inover","","",308,[[["inover",3]]]],[11,"oeover","","",308,[[],["oeover",3]]],[11,"set_oeover","","",308,[[["oeover",3]]]],[11,"outover","","",308,[[],["outover",3]]],[11,"set_outover","","",308,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",308,[[],["gpio17ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",308,[[["gpio17ctrlfuncsel",3]]]],[3,"Intr2","","Raw Interrupts",null,null],[11,"to_bits","","",309,[[]]],[11,"from_bits","","",309,[[],["intr2",3]]],[11,"gpio23_edge_high","","",309,[[]]],[11,"set_gpio23_edge_high","","",309,[[]]],[11,"gpio23_edge_low","","",309,[[]]],[11,"set_gpio23_edge_low","","",309,[[]]],[11,"gpio23_level_high","","",309,[[]]],[11,"set_gpio23_level_high","","",309,[[]]],[11,"gpio23_level_low","","",309,[[]]],[11,"set_gpio23_level_low","","",309,[[]]],[11,"gpio22_edge_high","","",309,[[]]],[11,"set_gpio22_edge_high","","",309,[[]]],[11,"gpio22_edge_low","","",309,[[]]],[11,"set_gpio22_edge_low","","",309,[[]]],[11,"gpio22_level_high","","",309,[[]]],[11,"set_gpio22_level_high","","",309,[[]]],[11,"gpio22_level_low","","",309,[[]]],[11,"set_gpio22_level_low","","",309,[[]]],[11,"gpio21_edge_high","","",309,[[]]],[11,"set_gpio21_edge_high","","",309,[[]]],[11,"gpio21_edge_low","","",309,[[]]],[11,"set_gpio21_edge_low","","",309,[[]]],[11,"gpio21_level_high","","",309,[[]]],[11,"set_gpio21_level_high","","",309,[[]]],[11,"gpio21_level_low","","",309,[[]]],[11,"set_gpio21_level_low","","",309,[[]]],[11,"gpio20_edge_high","","",309,[[]]],[11,"set_gpio20_edge_high","","",309,[[]]],[11,"gpio20_edge_low","","",309,[[]]],[11,"set_gpio20_edge_low","","",309,[[]]],[11,"gpio20_level_high","","",309,[[]]],[11,"set_gpio20_level_high","","",309,[[]]],[11,"gpio20_level_low","","",309,[[]]],[11,"set_gpio20_level_low","","",309,[[]]],[11,"gpio19_edge_high","","",309,[[]]],[11,"set_gpio19_edge_high","","",309,[[]]],[11,"gpio19_edge_low","","",309,[[]]],[11,"set_gpio19_edge_low","","",309,[[]]],[11,"gpio19_level_high","","",309,[[]]],[11,"set_gpio19_level_high","","",309,[[]]],[11,"gpio19_level_low","","",309,[[]]],[11,"set_gpio19_level_low","","",309,[[]]],[11,"gpio18_edge_high","","",309,[[]]],[11,"set_gpio18_edge_high","","",309,[[]]],[11,"gpio18_edge_low","","",309,[[]]],[11,"set_gpio18_edge_low","","",309,[[]]],[11,"gpio18_level_high","","",309,[[]]],[11,"set_gpio18_level_high","","",309,[[]]],[11,"gpio18_level_low","","",309,[[]]],[11,"set_gpio18_level_low","","",309,[[]]],[11,"gpio17_edge_high","","",309,[[]]],[11,"set_gpio17_edge_high","","",309,[[]]],[11,"gpio17_edge_low","","",309,[[]]],[11,"set_gpio17_edge_low","","",309,[[]]],[11,"gpio17_level_high","","",309,[[]]],[11,"set_gpio17_level_high","","",309,[[]]],[11,"gpio17_level_low","","",309,[[]]],[11,"set_gpio17_level_low","","",309,[[]]],[11,"gpio16_edge_high","","",309,[[]]],[11,"set_gpio16_edge_high","","",309,[[]]],[11,"gpio16_edge_low","","",309,[[]]],[11,"set_gpio16_edge_low","","",309,[[]]],[11,"gpio16_level_high","","",309,[[]]],[11,"set_gpio16_level_high","","",309,[[]]],[11,"gpio16_level_low","","",309,[[]]],[11,"set_gpio16_level_low","","",309,[[]]],[3,"Proc0Intf2","","Interrupt Force for proc0",null,null],[11,"to_bits","","",310,[[]]],[11,"from_bits","","",310,[[],["proc0intf2",3]]],[11,"gpio23_edge_high","","",310,[[]]],[11,"set_gpio23_edge_high","","",310,[[]]],[11,"gpio23_edge_low","","",310,[[]]],[11,"set_gpio23_edge_low","","",310,[[]]],[11,"gpio23_level_high","","",310,[[]]],[11,"set_gpio23_level_high","","",310,[[]]],[11,"gpio23_level_low","","",310,[[]]],[11,"set_gpio23_level_low","","",310,[[]]],[11,"gpio22_edge_high","","",310,[[]]],[11,"set_gpio22_edge_high","","",310,[[]]],[11,"gpio22_edge_low","","",310,[[]]],[11,"set_gpio22_edge_low","","",310,[[]]],[11,"gpio22_level_high","","",310,[[]]],[11,"set_gpio22_level_high","","",310,[[]]],[11,"gpio22_level_low","","",310,[[]]],[11,"set_gpio22_level_low","","",310,[[]]],[11,"gpio21_edge_high","","",310,[[]]],[11,"set_gpio21_edge_high","","",310,[[]]],[11,"gpio21_edge_low","","",310,[[]]],[11,"set_gpio21_edge_low","","",310,[[]]],[11,"gpio21_level_high","","",310,[[]]],[11,"set_gpio21_level_high","","",310,[[]]],[11,"gpio21_level_low","","",310,[[]]],[11,"set_gpio21_level_low","","",310,[[]]],[11,"gpio20_edge_high","","",310,[[]]],[11,"set_gpio20_edge_high","","",310,[[]]],[11,"gpio20_edge_low","","",310,[[]]],[11,"set_gpio20_edge_low","","",310,[[]]],[11,"gpio20_level_high","","",310,[[]]],[11,"set_gpio20_level_high","","",310,[[]]],[11,"gpio20_level_low","","",310,[[]]],[11,"set_gpio20_level_low","","",310,[[]]],[11,"gpio19_edge_high","","",310,[[]]],[11,"set_gpio19_edge_high","","",310,[[]]],[11,"gpio19_edge_low","","",310,[[]]],[11,"set_gpio19_edge_low","","",310,[[]]],[11,"gpio19_level_high","","",310,[[]]],[11,"set_gpio19_level_high","","",310,[[]]],[11,"gpio19_level_low","","",310,[[]]],[11,"set_gpio19_level_low","","",310,[[]]],[11,"gpio18_edge_high","","",310,[[]]],[11,"set_gpio18_edge_high","","",310,[[]]],[11,"gpio18_edge_low","","",310,[[]]],[11,"set_gpio18_edge_low","","",310,[[]]],[11,"gpio18_level_high","","",310,[[]]],[11,"set_gpio18_level_high","","",310,[[]]],[11,"gpio18_level_low","","",310,[[]]],[11,"set_gpio18_level_low","","",310,[[]]],[11,"gpio17_edge_high","","",310,[[]]],[11,"set_gpio17_edge_high","","",310,[[]]],[11,"gpio17_edge_low","","",310,[[]]],[11,"set_gpio17_edge_low","","",310,[[]]],[11,"gpio17_level_high","","",310,[[]]],[11,"set_gpio17_level_high","","",310,[[]]],[11,"gpio17_level_low","","",310,[[]]],[11,"set_gpio17_level_low","","",310,[[]]],[11,"gpio16_edge_high","","",310,[[]]],[11,"set_gpio16_edge_high","","",310,[[]]],[11,"gpio16_edge_low","","",310,[[]]],[11,"set_gpio16_edge_low","","",310,[[]]],[11,"gpio16_level_high","","",310,[[]]],[11,"set_gpio16_level_high","","",310,[[]]],[11,"gpio16_level_low","","",310,[[]]],[11,"set_gpio16_level_low","","",310,[[]]],[3,"Gpio17Status","","GPIO status",null,null],[11,"to_bits","","",311,[[]]],[11,"from_bits","","",311,[[],["gpio17status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",311,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",311,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",311,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",311,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",311,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",311,[[]]],[11,"infrompad","","input signal from pad, before override is applied",311,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",311,[[]]],[11,"oetopad","","output enable to pad after register override is applied",311,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",311,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",311,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",311,[[]]],[11,"outtopad","","output signal to pad after register override is applied",311,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",311,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",311,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",311,[[]]],[3,"Gpio10Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",312,[[]]],[11,"from_bits","","",312,[[],["gpio10ctrl",3]]],[11,"irqover","","",312,[[],["irqover",3]]],[11,"set_irqover","","",312,[[["irqover",3]]]],[11,"inover","","",312,[[],["inover",3]]],[11,"set_inover","","",312,[[["inover",3]]]],[11,"oeover","","",312,[[],["oeover",3]]],[11,"set_oeover","","",312,[[["oeover",3]]]],[11,"outover","","",312,[[],["outover",3]]],[11,"set_outover","","",312,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",312,[[],["gpio10ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",312,[[["gpio10ctrlfuncsel",3]]]],[3,"Intr3","","Raw Interrupts",null,null],[11,"to_bits","","",313,[[]]],[11,"from_bits","","",313,[[],["intr3",3]]],[11,"gpio29_edge_high","","",313,[[]]],[11,"set_gpio29_edge_high","","",313,[[]]],[11,"gpio29_edge_low","","",313,[[]]],[11,"set_gpio29_edge_low","","",313,[[]]],[11,"gpio29_level_high","","",313,[[]]],[11,"set_gpio29_level_high","","",313,[[]]],[11,"gpio29_level_low","","",313,[[]]],[11,"set_gpio29_level_low","","",313,[[]]],[11,"gpio28_edge_high","","",313,[[]]],[11,"set_gpio28_edge_high","","",313,[[]]],[11,"gpio28_edge_low","","",313,[[]]],[11,"set_gpio28_edge_low","","",313,[[]]],[11,"gpio28_level_high","","",313,[[]]],[11,"set_gpio28_level_high","","",313,[[]]],[11,"gpio28_level_low","","",313,[[]]],[11,"set_gpio28_level_low","","",313,[[]]],[11,"gpio27_edge_high","","",313,[[]]],[11,"set_gpio27_edge_high","","",313,[[]]],[11,"gpio27_edge_low","","",313,[[]]],[11,"set_gpio27_edge_low","","",313,[[]]],[11,"gpio27_level_high","","",313,[[]]],[11,"set_gpio27_level_high","","",313,[[]]],[11,"gpio27_level_low","","",313,[[]]],[11,"set_gpio27_level_low","","",313,[[]]],[11,"gpio26_edge_high","","",313,[[]]],[11,"set_gpio26_edge_high","","",313,[[]]],[11,"gpio26_edge_low","","",313,[[]]],[11,"set_gpio26_edge_low","","",313,[[]]],[11,"gpio26_level_high","","",313,[[]]],[11,"set_gpio26_level_high","","",313,[[]]],[11,"gpio26_level_low","","",313,[[]]],[11,"set_gpio26_level_low","","",313,[[]]],[11,"gpio25_edge_high","","",313,[[]]],[11,"set_gpio25_edge_high","","",313,[[]]],[11,"gpio25_edge_low","","",313,[[]]],[11,"set_gpio25_edge_low","","",313,[[]]],[11,"gpio25_level_high","","",313,[[]]],[11,"set_gpio25_level_high","","",313,[[]]],[11,"gpio25_level_low","","",313,[[]]],[11,"set_gpio25_level_low","","",313,[[]]],[11,"gpio24_edge_high","","",313,[[]]],[11,"set_gpio24_edge_high","","",313,[[]]],[11,"gpio24_edge_low","","",313,[[]]],[11,"set_gpio24_edge_low","","",313,[[]]],[11,"gpio24_level_high","","",313,[[]]],[11,"set_gpio24_level_high","","",313,[[]]],[11,"gpio24_level_low","","",313,[[]]],[11,"set_gpio24_level_low","","",313,[[]]],[3,"Gpio20Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",314,[[]]],[11,"from_bits","","",314,[[],["gpio20ctrl",3]]],[11,"irqover","","",314,[[],["irqover",3]]],[11,"set_irqover","","",314,[[["irqover",3]]]],[11,"inover","","",314,[[],["inover",3]]],[11,"set_inover","","",314,[[["inover",3]]]],[11,"oeover","","",314,[[],["oeover",3]]],[11,"set_oeover","","",314,[[["oeover",3]]]],[11,"outover","","",314,[[],["outover",3]]],[11,"set_outover","","",314,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",314,[[],["gpio20ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",314,[[["gpio20ctrlfuncsel",3]]]],[3,"Proc1Inte3","","Interrupt Enable for proc1",null,null],[11,"to_bits","","",315,[[]]],[11,"from_bits","","",315,[[],["proc1inte3",3]]],[11,"gpio29_edge_high","","",315,[[]]],[11,"set_gpio29_edge_high","","",315,[[]]],[11,"gpio29_edge_low","","",315,[[]]],[11,"set_gpio29_edge_low","","",315,[[]]],[11,"gpio29_level_high","","",315,[[]]],[11,"set_gpio29_level_high","","",315,[[]]],[11,"gpio29_level_low","","",315,[[]]],[11,"set_gpio29_level_low","","",315,[[]]],[11,"gpio28_edge_high","","",315,[[]]],[11,"set_gpio28_edge_high","","",315,[[]]],[11,"gpio28_edge_low","","",315,[[]]],[11,"set_gpio28_edge_low","","",315,[[]]],[11,"gpio28_level_high","","",315,[[]]],[11,"set_gpio28_level_high","","",315,[[]]],[11,"gpio28_level_low","","",315,[[]]],[11,"set_gpio28_level_low","","",315,[[]]],[11,"gpio27_edge_high","","",315,[[]]],[11,"set_gpio27_edge_high","","",315,[[]]],[11,"gpio27_edge_low","","",315,[[]]],[11,"set_gpio27_edge_low","","",315,[[]]],[11,"gpio27_level_high","","",315,[[]]],[11,"set_gpio27_level_high","","",315,[[]]],[11,"gpio27_level_low","","",315,[[]]],[11,"set_gpio27_level_low","","",315,[[]]],[11,"gpio26_edge_high","","",315,[[]]],[11,"set_gpio26_edge_high","","",315,[[]]],[11,"gpio26_edge_low","","",315,[[]]],[11,"set_gpio26_edge_low","","",315,[[]]],[11,"gpio26_level_high","","",315,[[]]],[11,"set_gpio26_level_high","","",315,[[]]],[11,"gpio26_level_low","","",315,[[]]],[11,"set_gpio26_level_low","","",315,[[]]],[11,"gpio25_edge_high","","",315,[[]]],[11,"set_gpio25_edge_high","","",315,[[]]],[11,"gpio25_edge_low","","",315,[[]]],[11,"set_gpio25_edge_low","","",315,[[]]],[11,"gpio25_level_high","","",315,[[]]],[11,"set_gpio25_level_high","","",315,[[]]],[11,"gpio25_level_low","","",315,[[]]],[11,"set_gpio25_level_low","","",315,[[]]],[11,"gpio24_edge_high","","",315,[[]]],[11,"set_gpio24_edge_high","","",315,[[]]],[11,"gpio24_edge_low","","",315,[[]]],[11,"set_gpio24_edge_low","","",315,[[]]],[11,"gpio24_level_high","","",315,[[]]],[11,"set_gpio24_level_high","","",315,[[]]],[11,"gpio24_level_low","","",315,[[]]],[11,"set_gpio24_level_low","","",315,[[]]],[3,"Gpio18Status","","GPIO status",null,null],[11,"to_bits","","",316,[[]]],[11,"from_bits","","",316,[[],["gpio18status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",316,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",316,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",316,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",316,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",316,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",316,[[]]],[11,"infrompad","","input signal from pad, before override is applied",316,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",316,[[]]],[11,"oetopad","","output enable to pad after register override is applied",316,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",316,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",316,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",316,[[]]],[11,"outtopad","","output signal to pad after register override is applied",316,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",316,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",316,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",316,[[]]],[3,"DormantWakeInts2","","Interrupt status after masking & forcing for dormant_wake",null,null],[11,"to_bits","","",317,[[]]],[11,"from_bits","","",317,[[],["dormantwakeints2",3]]],[11,"gpio23_edge_high","","",317,[[]]],[11,"set_gpio23_edge_high","","",317,[[]]],[11,"gpio23_edge_low","","",317,[[]]],[11,"set_gpio23_edge_low","","",317,[[]]],[11,"gpio23_level_high","","",317,[[]]],[11,"set_gpio23_level_high","","",317,[[]]],[11,"gpio23_level_low","","",317,[[]]],[11,"set_gpio23_level_low","","",317,[[]]],[11,"gpio22_edge_high","","",317,[[]]],[11,"set_gpio22_edge_high","","",317,[[]]],[11,"gpio22_edge_low","","",317,[[]]],[11,"set_gpio22_edge_low","","",317,[[]]],[11,"gpio22_level_high","","",317,[[]]],[11,"set_gpio22_level_high","","",317,[[]]],[11,"gpio22_level_low","","",317,[[]]],[11,"set_gpio22_level_low","","",317,[[]]],[11,"gpio21_edge_high","","",317,[[]]],[11,"set_gpio21_edge_high","","",317,[[]]],[11,"gpio21_edge_low","","",317,[[]]],[11,"set_gpio21_edge_low","","",317,[[]]],[11,"gpio21_level_high","","",317,[[]]],[11,"set_gpio21_level_high","","",317,[[]]],[11,"gpio21_level_low","","",317,[[]]],[11,"set_gpio21_level_low","","",317,[[]]],[11,"gpio20_edge_high","","",317,[[]]],[11,"set_gpio20_edge_high","","",317,[[]]],[11,"gpio20_edge_low","","",317,[[]]],[11,"set_gpio20_edge_low","","",317,[[]]],[11,"gpio20_level_high","","",317,[[]]],[11,"set_gpio20_level_high","","",317,[[]]],[11,"gpio20_level_low","","",317,[[]]],[11,"set_gpio20_level_low","","",317,[[]]],[11,"gpio19_edge_high","","",317,[[]]],[11,"set_gpio19_edge_high","","",317,[[]]],[11,"gpio19_edge_low","","",317,[[]]],[11,"set_gpio19_edge_low","","",317,[[]]],[11,"gpio19_level_high","","",317,[[]]],[11,"set_gpio19_level_high","","",317,[[]]],[11,"gpio19_level_low","","",317,[[]]],[11,"set_gpio19_level_low","","",317,[[]]],[11,"gpio18_edge_high","","",317,[[]]],[11,"set_gpio18_edge_high","","",317,[[]]],[11,"gpio18_edge_low","","",317,[[]]],[11,"set_gpio18_edge_low","","",317,[[]]],[11,"gpio18_level_high","","",317,[[]]],[11,"set_gpio18_level_high","","",317,[[]]],[11,"gpio18_level_low","","",317,[[]]],[11,"set_gpio18_level_low","","",317,[[]]],[11,"gpio17_edge_high","","",317,[[]]],[11,"set_gpio17_edge_high","","",317,[[]]],[11,"gpio17_edge_low","","",317,[[]]],[11,"set_gpio17_edge_low","","",317,[[]]],[11,"gpio17_level_high","","",317,[[]]],[11,"set_gpio17_level_high","","",317,[[]]],[11,"gpio17_level_low","","",317,[[]]],[11,"set_gpio17_level_low","","",317,[[]]],[11,"gpio16_edge_high","","",317,[[]]],[11,"set_gpio16_edge_high","","",317,[[]]],[11,"gpio16_edge_low","","",317,[[]]],[11,"set_gpio16_edge_low","","",317,[[]]],[11,"gpio16_level_high","","",317,[[]]],[11,"set_gpio16_level_high","","",317,[[]]],[11,"gpio16_level_low","","",317,[[]]],[11,"set_gpio16_level_low","","",317,[[]]],[3,"Proc1Ints3","","Interrupt status after masking & forcing for proc1",null,null],[11,"to_bits","","",318,[[]]],[11,"from_bits","","",318,[[],["proc1ints3",3]]],[11,"gpio29_edge_high","","",318,[[]]],[11,"set_gpio29_edge_high","","",318,[[]]],[11,"gpio29_edge_low","","",318,[[]]],[11,"set_gpio29_edge_low","","",318,[[]]],[11,"gpio29_level_high","","",318,[[]]],[11,"set_gpio29_level_high","","",318,[[]]],[11,"gpio29_level_low","","",318,[[]]],[11,"set_gpio29_level_low","","",318,[[]]],[11,"gpio28_edge_high","","",318,[[]]],[11,"set_gpio28_edge_high","","",318,[[]]],[11,"gpio28_edge_low","","",318,[[]]],[11,"set_gpio28_edge_low","","",318,[[]]],[11,"gpio28_level_high","","",318,[[]]],[11,"set_gpio28_level_high","","",318,[[]]],[11,"gpio28_level_low","","",318,[[]]],[11,"set_gpio28_level_low","","",318,[[]]],[11,"gpio27_edge_high","","",318,[[]]],[11,"set_gpio27_edge_high","","",318,[[]]],[11,"gpio27_edge_low","","",318,[[]]],[11,"set_gpio27_edge_low","","",318,[[]]],[11,"gpio27_level_high","","",318,[[]]],[11,"set_gpio27_level_high","","",318,[[]]],[11,"gpio27_level_low","","",318,[[]]],[11,"set_gpio27_level_low","","",318,[[]]],[11,"gpio26_edge_high","","",318,[[]]],[11,"set_gpio26_edge_high","","",318,[[]]],[11,"gpio26_edge_low","","",318,[[]]],[11,"set_gpio26_edge_low","","",318,[[]]],[11,"gpio26_level_high","","",318,[[]]],[11,"set_gpio26_level_high","","",318,[[]]],[11,"gpio26_level_low","","",318,[[]]],[11,"set_gpio26_level_low","","",318,[[]]],[11,"gpio25_edge_high","","",318,[[]]],[11,"set_gpio25_edge_high","","",318,[[]]],[11,"gpio25_edge_low","","",318,[[]]],[11,"set_gpio25_edge_low","","",318,[[]]],[11,"gpio25_level_high","","",318,[[]]],[11,"set_gpio25_level_high","","",318,[[]]],[11,"gpio25_level_low","","",318,[[]]],[11,"set_gpio25_level_low","","",318,[[]]],[11,"gpio24_edge_high","","",318,[[]]],[11,"set_gpio24_edge_high","","",318,[[]]],[11,"gpio24_edge_low","","",318,[[]]],[11,"set_gpio24_edge_low","","",318,[[]]],[11,"gpio24_level_high","","",318,[[]]],[11,"set_gpio24_level_high","","",318,[[]]],[11,"gpio24_level_low","","",318,[[]]],[11,"set_gpio24_level_low","","",318,[[]]],[3,"Gpio27Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",319,[[]]],[11,"from_bits","","",319,[[],["gpio27ctrl",3]]],[11,"irqover","","",319,[[],["irqover",3]]],[11,"set_irqover","","",319,[[["irqover",3]]]],[11,"inover","","",319,[[],["inover",3]]],[11,"set_inover","","",319,[[["inover",3]]]],[11,"oeover","","",319,[[],["oeover",3]]],[11,"set_oeover","","",319,[[["oeover",3]]]],[11,"outover","","",319,[[],["outover",3]]],[11,"set_outover","","",319,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",319,[[],["gpio27ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",319,[[["gpio27ctrlfuncsel",3]]]],[3,"Gpio21Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",320,[[]]],[11,"from_bits","","",320,[[],["gpio21ctrl",3]]],[11,"irqover","","",320,[[],["irqover",3]]],[11,"set_irqover","","",320,[[["irqover",3]]]],[11,"inover","","",320,[[],["inover",3]]],[11,"set_inover","","",320,[[["inover",3]]]],[11,"oeover","","",320,[[],["oeover",3]]],[11,"set_oeover","","",320,[[["oeover",3]]]],[11,"outover","","",320,[[],["outover",3]]],[11,"set_outover","","",320,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",320,[[],["gpio21ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",320,[[["gpio21ctrlfuncsel",3]]]],[3,"Gpio4Status","","GPIO status",null,null],[11,"to_bits","","",321,[[]]],[11,"from_bits","","",321,[[],["gpio4status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",321,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",321,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",321,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",321,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",321,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",321,[[]]],[11,"infrompad","","input signal from pad, before override is applied",321,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",321,[[]]],[11,"oetopad","","output enable to pad after register override is applied",321,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",321,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",321,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",321,[[]]],[11,"outtopad","","output signal to pad after register override is applied",321,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",321,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",321,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",321,[[]]],[3,"Proc0Intf0","","Interrupt Force for proc0",null,null],[11,"to_bits","","",322,[[]]],[11,"from_bits","","",322,[[],["proc0intf0",3]]],[11,"gpio7_edge_high","","",322,[[]]],[11,"set_gpio7_edge_high","","",322,[[]]],[11,"gpio7_edge_low","","",322,[[]]],[11,"set_gpio7_edge_low","","",322,[[]]],[11,"gpio7_level_high","","",322,[[]]],[11,"set_gpio7_level_high","","",322,[[]]],[11,"gpio7_level_low","","",322,[[]]],[11,"set_gpio7_level_low","","",322,[[]]],[11,"gpio6_edge_high","","",322,[[]]],[11,"set_gpio6_edge_high","","",322,[[]]],[11,"gpio6_edge_low","","",322,[[]]],[11,"set_gpio6_edge_low","","",322,[[]]],[11,"gpio6_level_high","","",322,[[]]],[11,"set_gpio6_level_high","","",322,[[]]],[11,"gpio6_level_low","","",322,[[]]],[11,"set_gpio6_level_low","","",322,[[]]],[11,"gpio5_edge_high","","",322,[[]]],[11,"set_gpio5_edge_high","","",322,[[]]],[11,"gpio5_edge_low","","",322,[[]]],[11,"set_gpio5_edge_low","","",322,[[]]],[11,"gpio5_level_high","","",322,[[]]],[11,"set_gpio5_level_high","","",322,[[]]],[11,"gpio5_level_low","","",322,[[]]],[11,"set_gpio5_level_low","","",322,[[]]],[11,"gpio4_edge_high","","",322,[[]]],[11,"set_gpio4_edge_high","","",322,[[]]],[11,"gpio4_edge_low","","",322,[[]]],[11,"set_gpio4_edge_low","","",322,[[]]],[11,"gpio4_level_high","","",322,[[]]],[11,"set_gpio4_level_high","","",322,[[]]],[11,"gpio4_level_low","","",322,[[]]],[11,"set_gpio4_level_low","","",322,[[]]],[11,"gpio3_edge_high","","",322,[[]]],[11,"set_gpio3_edge_high","","",322,[[]]],[11,"gpio3_edge_low","","",322,[[]]],[11,"set_gpio3_edge_low","","",322,[[]]],[11,"gpio3_level_high","","",322,[[]]],[11,"set_gpio3_level_high","","",322,[[]]],[11,"gpio3_level_low","","",322,[[]]],[11,"set_gpio3_level_low","","",322,[[]]],[11,"gpio2_edge_high","","",322,[[]]],[11,"set_gpio2_edge_high","","",322,[[]]],[11,"gpio2_edge_low","","",322,[[]]],[11,"set_gpio2_edge_low","","",322,[[]]],[11,"gpio2_level_high","","",322,[[]]],[11,"set_gpio2_level_high","","",322,[[]]],[11,"gpio2_level_low","","",322,[[]]],[11,"set_gpio2_level_low","","",322,[[]]],[11,"gpio1_edge_high","","",322,[[]]],[11,"set_gpio1_edge_high","","",322,[[]]],[11,"gpio1_edge_low","","",322,[[]]],[11,"set_gpio1_edge_low","","",322,[[]]],[11,"gpio1_level_high","","",322,[[]]],[11,"set_gpio1_level_high","","",322,[[]]],[11,"gpio1_level_low","","",322,[[]]],[11,"set_gpio1_level_low","","",322,[[]]],[11,"gpio0_edge_high","","",322,[[]]],[11,"set_gpio0_edge_high","","",322,[[]]],[11,"gpio0_edge_low","","",322,[[]]],[11,"set_gpio0_edge_low","","",322,[[]]],[11,"gpio0_level_high","","",322,[[]]],[11,"set_gpio0_level_high","","",322,[[]]],[11,"gpio0_level_low","","",322,[[]]],[11,"set_gpio0_level_low","","",322,[[]]],[3,"Gpio28Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",323,[[]]],[11,"from_bits","","",323,[[],["gpio28ctrl",3]]],[11,"irqover","","",323,[[],["irqover",3]]],[11,"set_irqover","","",323,[[["irqover",3]]]],[11,"inover","","",323,[[],["inover",3]]],[11,"set_inover","","",323,[[["inover",3]]]],[11,"oeover","","",323,[[],["oeover",3]]],[11,"set_oeover","","",323,[[["oeover",3]]]],[11,"outover","","",323,[[],["outover",3]]],[11,"set_outover","","",323,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",323,[[],["gpio28ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",323,[[["gpio28ctrlfuncsel",3]]]],[3,"DormantWakeInte2","","Interrupt Enable for dormant_wake",null,null],[11,"to_bits","","",324,[[]]],[11,"from_bits","","",324,[[],["dormantwakeinte2",3]]],[11,"gpio23_edge_high","","",324,[[]]],[11,"set_gpio23_edge_high","","",324,[[]]],[11,"gpio23_edge_low","","",324,[[]]],[11,"set_gpio23_edge_low","","",324,[[]]],[11,"gpio23_level_high","","",324,[[]]],[11,"set_gpio23_level_high","","",324,[[]]],[11,"gpio23_level_low","","",324,[[]]],[11,"set_gpio23_level_low","","",324,[[]]],[11,"gpio22_edge_high","","",324,[[]]],[11,"set_gpio22_edge_high","","",324,[[]]],[11,"gpio22_edge_low","","",324,[[]]],[11,"set_gpio22_edge_low","","",324,[[]]],[11,"gpio22_level_high","","",324,[[]]],[11,"set_gpio22_level_high","","",324,[[]]],[11,"gpio22_level_low","","",324,[[]]],[11,"set_gpio22_level_low","","",324,[[]]],[11,"gpio21_edge_high","","",324,[[]]],[11,"set_gpio21_edge_high","","",324,[[]]],[11,"gpio21_edge_low","","",324,[[]]],[11,"set_gpio21_edge_low","","",324,[[]]],[11,"gpio21_level_high","","",324,[[]]],[11,"set_gpio21_level_high","","",324,[[]]],[11,"gpio21_level_low","","",324,[[]]],[11,"set_gpio21_level_low","","",324,[[]]],[11,"gpio20_edge_high","","",324,[[]]],[11,"set_gpio20_edge_high","","",324,[[]]],[11,"gpio20_edge_low","","",324,[[]]],[11,"set_gpio20_edge_low","","",324,[[]]],[11,"gpio20_level_high","","",324,[[]]],[11,"set_gpio20_level_high","","",324,[[]]],[11,"gpio20_level_low","","",324,[[]]],[11,"set_gpio20_level_low","","",324,[[]]],[11,"gpio19_edge_high","","",324,[[]]],[11,"set_gpio19_edge_high","","",324,[[]]],[11,"gpio19_edge_low","","",324,[[]]],[11,"set_gpio19_edge_low","","",324,[[]]],[11,"gpio19_level_high","","",324,[[]]],[11,"set_gpio19_level_high","","",324,[[]]],[11,"gpio19_level_low","","",324,[[]]],[11,"set_gpio19_level_low","","",324,[[]]],[11,"gpio18_edge_high","","",324,[[]]],[11,"set_gpio18_edge_high","","",324,[[]]],[11,"gpio18_edge_low","","",324,[[]]],[11,"set_gpio18_edge_low","","",324,[[]]],[11,"gpio18_level_high","","",324,[[]]],[11,"set_gpio18_level_high","","",324,[[]]],[11,"gpio18_level_low","","",324,[[]]],[11,"set_gpio18_level_low","","",324,[[]]],[11,"gpio17_edge_high","","",324,[[]]],[11,"set_gpio17_edge_high","","",324,[[]]],[11,"gpio17_edge_low","","",324,[[]]],[11,"set_gpio17_edge_low","","",324,[[]]],[11,"gpio17_level_high","","",324,[[]]],[11,"set_gpio17_level_high","","",324,[[]]],[11,"gpio17_level_low","","",324,[[]]],[11,"set_gpio17_level_low","","",324,[[]]],[11,"gpio16_edge_high","","",324,[[]]],[11,"set_gpio16_edge_high","","",324,[[]]],[11,"gpio16_edge_low","","",324,[[]]],[11,"set_gpio16_edge_low","","",324,[[]]],[11,"gpio16_level_high","","",324,[[]]],[11,"set_gpio16_level_high","","",324,[[]]],[11,"gpio16_level_low","","",324,[[]]],[11,"set_gpio16_level_low","","",324,[[]]],[3,"Gpio11Status","","GPIO status",null,null],[11,"to_bits","","",325,[[]]],[11,"from_bits","","",325,[[],["gpio11status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",325,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",325,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",325,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",325,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",325,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",325,[[]]],[11,"infrompad","","input signal from pad, before override is applied",325,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",325,[[]]],[11,"oetopad","","output enable to pad after register override is applied",325,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",325,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",325,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",325,[[]]],[11,"outtopad","","output signal to pad after register override is applied",325,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",325,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",325,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",325,[[]]],[3,"Proc0Inte0","","Interrupt Enable for proc0",null,null],[11,"to_bits","","",326,[[]]],[11,"from_bits","","",326,[[],["proc0inte0",3]]],[11,"gpio7_edge_high","","",326,[[]]],[11,"set_gpio7_edge_high","","",326,[[]]],[11,"gpio7_edge_low","","",326,[[]]],[11,"set_gpio7_edge_low","","",326,[[]]],[11,"gpio7_level_high","","",326,[[]]],[11,"set_gpio7_level_high","","",326,[[]]],[11,"gpio7_level_low","","",326,[[]]],[11,"set_gpio7_level_low","","",326,[[]]],[11,"gpio6_edge_high","","",326,[[]]],[11,"set_gpio6_edge_high","","",326,[[]]],[11,"gpio6_edge_low","","",326,[[]]],[11,"set_gpio6_edge_low","","",326,[[]]],[11,"gpio6_level_high","","",326,[[]]],[11,"set_gpio6_level_high","","",326,[[]]],[11,"gpio6_level_low","","",326,[[]]],[11,"set_gpio6_level_low","","",326,[[]]],[11,"gpio5_edge_high","","",326,[[]]],[11,"set_gpio5_edge_high","","",326,[[]]],[11,"gpio5_edge_low","","",326,[[]]],[11,"set_gpio5_edge_low","","",326,[[]]],[11,"gpio5_level_high","","",326,[[]]],[11,"set_gpio5_level_high","","",326,[[]]],[11,"gpio5_level_low","","",326,[[]]],[11,"set_gpio5_level_low","","",326,[[]]],[11,"gpio4_edge_high","","",326,[[]]],[11,"set_gpio4_edge_high","","",326,[[]]],[11,"gpio4_edge_low","","",326,[[]]],[11,"set_gpio4_edge_low","","",326,[[]]],[11,"gpio4_level_high","","",326,[[]]],[11,"set_gpio4_level_high","","",326,[[]]],[11,"gpio4_level_low","","",326,[[]]],[11,"set_gpio4_level_low","","",326,[[]]],[11,"gpio3_edge_high","","",326,[[]]],[11,"set_gpio3_edge_high","","",326,[[]]],[11,"gpio3_edge_low","","",326,[[]]],[11,"set_gpio3_edge_low","","",326,[[]]],[11,"gpio3_level_high","","",326,[[]]],[11,"set_gpio3_level_high","","",326,[[]]],[11,"gpio3_level_low","","",326,[[]]],[11,"set_gpio3_level_low","","",326,[[]]],[11,"gpio2_edge_high","","",326,[[]]],[11,"set_gpio2_edge_high","","",326,[[]]],[11,"gpio2_edge_low","","",326,[[]]],[11,"set_gpio2_edge_low","","",326,[[]]],[11,"gpio2_level_high","","",326,[[]]],[11,"set_gpio2_level_high","","",326,[[]]],[11,"gpio2_level_low","","",326,[[]]],[11,"set_gpio2_level_low","","",326,[[]]],[11,"gpio1_edge_high","","",326,[[]]],[11,"set_gpio1_edge_high","","",326,[[]]],[11,"gpio1_edge_low","","",326,[[]]],[11,"set_gpio1_edge_low","","",326,[[]]],[11,"gpio1_level_high","","",326,[[]]],[11,"set_gpio1_level_high","","",326,[[]]],[11,"gpio1_level_low","","",326,[[]]],[11,"set_gpio1_level_low","","",326,[[]]],[11,"gpio0_edge_high","","",326,[[]]],[11,"set_gpio0_edge_high","","",326,[[]]],[11,"gpio0_edge_low","","",326,[[]]],[11,"set_gpio0_edge_low","","",326,[[]]],[11,"gpio0_level_high","","",326,[[]]],[11,"set_gpio0_level_high","","",326,[[]]],[11,"gpio0_level_low","","",326,[[]]],[11,"set_gpio0_level_low","","",326,[[]]],[3,"Intr0","","Raw Interrupts",null,null],[11,"to_bits","","",327,[[]]],[11,"from_bits","","",327,[[],["intr0",3]]],[11,"gpio7_edge_high","","",327,[[]]],[11,"set_gpio7_edge_high","","",327,[[]]],[11,"gpio7_edge_low","","",327,[[]]],[11,"set_gpio7_edge_low","","",327,[[]]],[11,"gpio7_level_high","","",327,[[]]],[11,"set_gpio7_level_high","","",327,[[]]],[11,"gpio7_level_low","","",327,[[]]],[11,"set_gpio7_level_low","","",327,[[]]],[11,"gpio6_edge_high","","",327,[[]]],[11,"set_gpio6_edge_high","","",327,[[]]],[11,"gpio6_edge_low","","",327,[[]]],[11,"set_gpio6_edge_low","","",327,[[]]],[11,"gpio6_level_high","","",327,[[]]],[11,"set_gpio6_level_high","","",327,[[]]],[11,"gpio6_level_low","","",327,[[]]],[11,"set_gpio6_level_low","","",327,[[]]],[11,"gpio5_edge_high","","",327,[[]]],[11,"set_gpio5_edge_high","","",327,[[]]],[11,"gpio5_edge_low","","",327,[[]]],[11,"set_gpio5_edge_low","","",327,[[]]],[11,"gpio5_level_high","","",327,[[]]],[11,"set_gpio5_level_high","","",327,[[]]],[11,"gpio5_level_low","","",327,[[]]],[11,"set_gpio5_level_low","","",327,[[]]],[11,"gpio4_edge_high","","",327,[[]]],[11,"set_gpio4_edge_high","","",327,[[]]],[11,"gpio4_edge_low","","",327,[[]]],[11,"set_gpio4_edge_low","","",327,[[]]],[11,"gpio4_level_high","","",327,[[]]],[11,"set_gpio4_level_high","","",327,[[]]],[11,"gpio4_level_low","","",327,[[]]],[11,"set_gpio4_level_low","","",327,[[]]],[11,"gpio3_edge_high","","",327,[[]]],[11,"set_gpio3_edge_high","","",327,[[]]],[11,"gpio3_edge_low","","",327,[[]]],[11,"set_gpio3_edge_low","","",327,[[]]],[11,"gpio3_level_high","","",327,[[]]],[11,"set_gpio3_level_high","","",327,[[]]],[11,"gpio3_level_low","","",327,[[]]],[11,"set_gpio3_level_low","","",327,[[]]],[11,"gpio2_edge_high","","",327,[[]]],[11,"set_gpio2_edge_high","","",327,[[]]],[11,"gpio2_edge_low","","",327,[[]]],[11,"set_gpio2_edge_low","","",327,[[]]],[11,"gpio2_level_high","","",327,[[]]],[11,"set_gpio2_level_high","","",327,[[]]],[11,"gpio2_level_low","","",327,[[]]],[11,"set_gpio2_level_low","","",327,[[]]],[11,"gpio1_edge_high","","",327,[[]]],[11,"set_gpio1_edge_high","","",327,[[]]],[11,"gpio1_edge_low","","",327,[[]]],[11,"set_gpio1_edge_low","","",327,[[]]],[11,"gpio1_level_high","","",327,[[]]],[11,"set_gpio1_level_high","","",327,[[]]],[11,"gpio1_level_low","","",327,[[]]],[11,"set_gpio1_level_low","","",327,[[]]],[11,"gpio0_edge_high","","",327,[[]]],[11,"set_gpio0_edge_high","","",327,[[]]],[11,"gpio0_edge_low","","",327,[[]]],[11,"set_gpio0_edge_low","","",327,[[]]],[11,"gpio0_level_high","","",327,[[]]],[11,"set_gpio0_level_high","","",327,[[]]],[11,"gpio0_level_low","","",327,[[]]],[11,"set_gpio0_level_low","","",327,[[]]],[3,"Gpio12Status","","GPIO status",null,null],[11,"to_bits","","",328,[[]]],[11,"from_bits","","",328,[[],["gpio12status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",328,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",328,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",328,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",328,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",328,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",328,[[]]],[11,"infrompad","","input signal from pad, before override is applied",328,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",328,[[]]],[11,"oetopad","","output enable to pad after register override is applied",328,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",328,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",328,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",328,[[]]],[11,"outtopad","","output signal to pad after register override is applied",328,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",328,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",328,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",328,[[]]],[3,"Gpio11Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",329,[[]]],[11,"from_bits","","",329,[[],["gpio11ctrl",3]]],[11,"irqover","","",329,[[],["irqover",3]]],[11,"set_irqover","","",329,[[["irqover",3]]]],[11,"inover","","",329,[[],["inover",3]]],[11,"set_inover","","",329,[[["inover",3]]]],[11,"oeover","","",329,[[],["oeover",3]]],[11,"set_oeover","","",329,[[["oeover",3]]]],[11,"outover","","",329,[[],["outover",3]]],[11,"set_outover","","",329,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",329,[[],["gpio11ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",329,[[["gpio11ctrlfuncsel",3]]]],[3,"Proc1Intf1","","Interrupt Force for proc1",null,null],[11,"to_bits","","",330,[[]]],[11,"from_bits","","",330,[[],["proc1intf1",3]]],[11,"gpio15_edge_high","","",330,[[]]],[11,"set_gpio15_edge_high","","",330,[[]]],[11,"gpio15_edge_low","","",330,[[]]],[11,"set_gpio15_edge_low","","",330,[[]]],[11,"gpio15_level_high","","",330,[[]]],[11,"set_gpio15_level_high","","",330,[[]]],[11,"gpio15_level_low","","",330,[[]]],[11,"set_gpio15_level_low","","",330,[[]]],[11,"gpio14_edge_high","","",330,[[]]],[11,"set_gpio14_edge_high","","",330,[[]]],[11,"gpio14_edge_low","","",330,[[]]],[11,"set_gpio14_edge_low","","",330,[[]]],[11,"gpio14_level_high","","",330,[[]]],[11,"set_gpio14_level_high","","",330,[[]]],[11,"gpio14_level_low","","",330,[[]]],[11,"set_gpio14_level_low","","",330,[[]]],[11,"gpio13_edge_high","","",330,[[]]],[11,"set_gpio13_edge_high","","",330,[[]]],[11,"gpio13_edge_low","","",330,[[]]],[11,"set_gpio13_edge_low","","",330,[[]]],[11,"gpio13_level_high","","",330,[[]]],[11,"set_gpio13_level_high","","",330,[[]]],[11,"gpio13_level_low","","",330,[[]]],[11,"set_gpio13_level_low","","",330,[[]]],[11,"gpio12_edge_high","","",330,[[]]],[11,"set_gpio12_edge_high","","",330,[[]]],[11,"gpio12_edge_low","","",330,[[]]],[11,"set_gpio12_edge_low","","",330,[[]]],[11,"gpio12_level_high","","",330,[[]]],[11,"set_gpio12_level_high","","",330,[[]]],[11,"gpio12_level_low","","",330,[[]]],[11,"set_gpio12_level_low","","",330,[[]]],[11,"gpio11_edge_high","","",330,[[]]],[11,"set_gpio11_edge_high","","",330,[[]]],[11,"gpio11_edge_low","","",330,[[]]],[11,"set_gpio11_edge_low","","",330,[[]]],[11,"gpio11_level_high","","",330,[[]]],[11,"set_gpio11_level_high","","",330,[[]]],[11,"gpio11_level_low","","",330,[[]]],[11,"set_gpio11_level_low","","",330,[[]]],[11,"gpio10_edge_high","","",330,[[]]],[11,"set_gpio10_edge_high","","",330,[[]]],[11,"gpio10_edge_low","","",330,[[]]],[11,"set_gpio10_edge_low","","",330,[[]]],[11,"gpio10_level_high","","",330,[[]]],[11,"set_gpio10_level_high","","",330,[[]]],[11,"gpio10_level_low","","",330,[[]]],[11,"set_gpio10_level_low","","",330,[[]]],[11,"gpio9_edge_high","","",330,[[]]],[11,"set_gpio9_edge_high","","",330,[[]]],[11,"gpio9_edge_low","","",330,[[]]],[11,"set_gpio9_edge_low","","",330,[[]]],[11,"gpio9_level_high","","",330,[[]]],[11,"set_gpio9_level_high","","",330,[[]]],[11,"gpio9_level_low","","",330,[[]]],[11,"set_gpio9_level_low","","",330,[[]]],[11,"gpio8_edge_high","","",330,[[]]],[11,"set_gpio8_edge_high","","",330,[[]]],[11,"gpio8_edge_low","","",330,[[]]],[11,"set_gpio8_edge_low","","",330,[[]]],[11,"gpio8_level_high","","",330,[[]]],[11,"set_gpio8_level_high","","",330,[[]]],[11,"gpio8_level_low","","",330,[[]]],[11,"set_gpio8_level_low","","",330,[[]]],[3,"Proc0Intf1","","Interrupt Force for proc0",null,null],[11,"to_bits","","",331,[[]]],[11,"from_bits","","",331,[[],["proc0intf1",3]]],[11,"gpio15_edge_high","","",331,[[]]],[11,"set_gpio15_edge_high","","",331,[[]]],[11,"gpio15_edge_low","","",331,[[]]],[11,"set_gpio15_edge_low","","",331,[[]]],[11,"gpio15_level_high","","",331,[[]]],[11,"set_gpio15_level_high","","",331,[[]]],[11,"gpio15_level_low","","",331,[[]]],[11,"set_gpio15_level_low","","",331,[[]]],[11,"gpio14_edge_high","","",331,[[]]],[11,"set_gpio14_edge_high","","",331,[[]]],[11,"gpio14_edge_low","","",331,[[]]],[11,"set_gpio14_edge_low","","",331,[[]]],[11,"gpio14_level_high","","",331,[[]]],[11,"set_gpio14_level_high","","",331,[[]]],[11,"gpio14_level_low","","",331,[[]]],[11,"set_gpio14_level_low","","",331,[[]]],[11,"gpio13_edge_high","","",331,[[]]],[11,"set_gpio13_edge_high","","",331,[[]]],[11,"gpio13_edge_low","","",331,[[]]],[11,"set_gpio13_edge_low","","",331,[[]]],[11,"gpio13_level_high","","",331,[[]]],[11,"set_gpio13_level_high","","",331,[[]]],[11,"gpio13_level_low","","",331,[[]]],[11,"set_gpio13_level_low","","",331,[[]]],[11,"gpio12_edge_high","","",331,[[]]],[11,"set_gpio12_edge_high","","",331,[[]]],[11,"gpio12_edge_low","","",331,[[]]],[11,"set_gpio12_edge_low","","",331,[[]]],[11,"gpio12_level_high","","",331,[[]]],[11,"set_gpio12_level_high","","",331,[[]]],[11,"gpio12_level_low","","",331,[[]]],[11,"set_gpio12_level_low","","",331,[[]]],[11,"gpio11_edge_high","","",331,[[]]],[11,"set_gpio11_edge_high","","",331,[[]]],[11,"gpio11_edge_low","","",331,[[]]],[11,"set_gpio11_edge_low","","",331,[[]]],[11,"gpio11_level_high","","",331,[[]]],[11,"set_gpio11_level_high","","",331,[[]]],[11,"gpio11_level_low","","",331,[[]]],[11,"set_gpio11_level_low","","",331,[[]]],[11,"gpio10_edge_high","","",331,[[]]],[11,"set_gpio10_edge_high","","",331,[[]]],[11,"gpio10_edge_low","","",331,[[]]],[11,"set_gpio10_edge_low","","",331,[[]]],[11,"gpio10_level_high","","",331,[[]]],[11,"set_gpio10_level_high","","",331,[[]]],[11,"gpio10_level_low","","",331,[[]]],[11,"set_gpio10_level_low","","",331,[[]]],[11,"gpio9_edge_high","","",331,[[]]],[11,"set_gpio9_edge_high","","",331,[[]]],[11,"gpio9_edge_low","","",331,[[]]],[11,"set_gpio9_edge_low","","",331,[[]]],[11,"gpio9_level_high","","",331,[[]]],[11,"set_gpio9_level_high","","",331,[[]]],[11,"gpio9_level_low","","",331,[[]]],[11,"set_gpio9_level_low","","",331,[[]]],[11,"gpio8_edge_high","","",331,[[]]],[11,"set_gpio8_edge_high","","",331,[[]]],[11,"gpio8_edge_low","","",331,[[]]],[11,"set_gpio8_edge_low","","",331,[[]]],[11,"gpio8_level_high","","",331,[[]]],[11,"set_gpio8_level_high","","",331,[[]]],[11,"gpio8_level_low","","",331,[[]]],[11,"set_gpio8_level_low","","",331,[[]]],[3,"Gpio6Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",332,[[]]],[11,"from_bits","","",332,[[],["gpio6ctrl",3]]],[11,"irqover","","",332,[[],["irqover",3]]],[11,"set_irqover","","",332,[[["irqover",3]]]],[11,"inover","","",332,[[],["inover",3]]],[11,"set_inover","","",332,[[["inover",3]]]],[11,"oeover","","",332,[[],["oeover",3]]],[11,"set_oeover","","",332,[[["oeover",3]]]],[11,"outover","","",332,[[],["outover",3]]],[11,"set_outover","","",332,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",332,[[],["gpio6ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",332,[[["gpio6ctrlfuncsel",3]]]],[3,"Proc1Intf2","","Interrupt Force for proc1",null,null],[11,"to_bits","","",333,[[]]],[11,"from_bits","","",333,[[],["proc1intf2",3]]],[11,"gpio23_edge_high","","",333,[[]]],[11,"set_gpio23_edge_high","","",333,[[]]],[11,"gpio23_edge_low","","",333,[[]]],[11,"set_gpio23_edge_low","","",333,[[]]],[11,"gpio23_level_high","","",333,[[]]],[11,"set_gpio23_level_high","","",333,[[]]],[11,"gpio23_level_low","","",333,[[]]],[11,"set_gpio23_level_low","","",333,[[]]],[11,"gpio22_edge_high","","",333,[[]]],[11,"set_gpio22_edge_high","","",333,[[]]],[11,"gpio22_edge_low","","",333,[[]]],[11,"set_gpio22_edge_low","","",333,[[]]],[11,"gpio22_level_high","","",333,[[]]],[11,"set_gpio22_level_high","","",333,[[]]],[11,"gpio22_level_low","","",333,[[]]],[11,"set_gpio22_level_low","","",333,[[]]],[11,"gpio21_edge_high","","",333,[[]]],[11,"set_gpio21_edge_high","","",333,[[]]],[11,"gpio21_edge_low","","",333,[[]]],[11,"set_gpio21_edge_low","","",333,[[]]],[11,"gpio21_level_high","","",333,[[]]],[11,"set_gpio21_level_high","","",333,[[]]],[11,"gpio21_level_low","","",333,[[]]],[11,"set_gpio21_level_low","","",333,[[]]],[11,"gpio20_edge_high","","",333,[[]]],[11,"set_gpio20_edge_high","","",333,[[]]],[11,"gpio20_edge_low","","",333,[[]]],[11,"set_gpio20_edge_low","","",333,[[]]],[11,"gpio20_level_high","","",333,[[]]],[11,"set_gpio20_level_high","","",333,[[]]],[11,"gpio20_level_low","","",333,[[]]],[11,"set_gpio20_level_low","","",333,[[]]],[11,"gpio19_edge_high","","",333,[[]]],[11,"set_gpio19_edge_high","","",333,[[]]],[11,"gpio19_edge_low","","",333,[[]]],[11,"set_gpio19_edge_low","","",333,[[]]],[11,"gpio19_level_high","","",333,[[]]],[11,"set_gpio19_level_high","","",333,[[]]],[11,"gpio19_level_low","","",333,[[]]],[11,"set_gpio19_level_low","","",333,[[]]],[11,"gpio18_edge_high","","",333,[[]]],[11,"set_gpio18_edge_high","","",333,[[]]],[11,"gpio18_edge_low","","",333,[[]]],[11,"set_gpio18_edge_low","","",333,[[]]],[11,"gpio18_level_high","","",333,[[]]],[11,"set_gpio18_level_high","","",333,[[]]],[11,"gpio18_level_low","","",333,[[]]],[11,"set_gpio18_level_low","","",333,[[]]],[11,"gpio17_edge_high","","",333,[[]]],[11,"set_gpio17_edge_high","","",333,[[]]],[11,"gpio17_edge_low","","",333,[[]]],[11,"set_gpio17_edge_low","","",333,[[]]],[11,"gpio17_level_high","","",333,[[]]],[11,"set_gpio17_level_high","","",333,[[]]],[11,"gpio17_level_low","","",333,[[]]],[11,"set_gpio17_level_low","","",333,[[]]],[11,"gpio16_edge_high","","",333,[[]]],[11,"set_gpio16_edge_high","","",333,[[]]],[11,"gpio16_edge_low","","",333,[[]]],[11,"set_gpio16_edge_low","","",333,[[]]],[11,"gpio16_level_high","","",333,[[]]],[11,"set_gpio16_level_high","","",333,[[]]],[11,"gpio16_level_low","","",333,[[]]],[11,"set_gpio16_level_low","","",333,[[]]],[3,"Gpio16Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",334,[[]]],[11,"from_bits","","",334,[[],["gpio16ctrl",3]]],[11,"irqover","","",334,[[],["irqover",3]]],[11,"set_irqover","","",334,[[["irqover",3]]]],[11,"inover","","",334,[[],["inover",3]]],[11,"set_inover","","",334,[[["inover",3]]]],[11,"oeover","","",334,[[],["oeover",3]]],[11,"set_oeover","","",334,[[["oeover",3]]]],[11,"outover","","",334,[[],["outover",3]]],[11,"set_outover","","",334,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",334,[[],["gpio16ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",334,[[["gpio16ctrlfuncsel",3]]]],[3,"Gpio20Status","","GPIO status",null,null],[11,"to_bits","","",335,[[]]],[11,"from_bits","","",335,[[],["gpio20status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",335,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",335,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",335,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",335,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",335,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",335,[[]]],[11,"infrompad","","input signal from pad, before override is applied",335,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",335,[[]]],[11,"oetopad","","output enable to pad after register override is applied",335,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",335,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",335,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",335,[[]]],[11,"outtopad","","output signal to pad after register override is applied",335,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",335,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",335,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",335,[[]]],[3,"Gpio3Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",336,[[]]],[11,"from_bits","","",336,[[],["gpio3ctrl",3]]],[11,"irqover","","",336,[[],["irqover",3]]],[11,"set_irqover","","",336,[[["irqover",3]]]],[11,"inover","","",336,[[],["inover",3]]],[11,"set_inover","","",336,[[["inover",3]]]],[11,"oeover","","",336,[[],["oeover",3]]],[11,"set_oeover","","",336,[[["oeover",3]]]],[11,"outover","","",336,[[],["outover",3]]],[11,"set_outover","","",336,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",336,[[],["gpio3ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",336,[[["gpio3ctrlfuncsel",3]]]],[3,"Gpio1Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",337,[[]]],[11,"from_bits","","",337,[[],["gpio1ctrl",3]]],[11,"irqover","","",337,[[],["irqover",3]]],[11,"set_irqover","","",337,[[["irqover",3]]]],[11,"inover","","",337,[[],["inover",3]]],[11,"set_inover","","",337,[[["inover",3]]]],[11,"oeover","","",337,[[],["oeover",3]]],[11,"set_oeover","","",337,[[["oeover",3]]]],[11,"outover","","",337,[[],["outover",3]]],[11,"set_outover","","",337,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",337,[[],["gpio1ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",337,[[["gpio1ctrlfuncsel",3]]]],[3,"Gpio25Status","","GPIO status",null,null],[11,"to_bits","","",338,[[]]],[11,"from_bits","","",338,[[],["gpio25status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",338,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",338,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",338,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",338,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",338,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",338,[[]]],[11,"infrompad","","input signal from pad, before override is applied",338,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",338,[[]]],[11,"oetopad","","output enable to pad after register override is applied",338,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",338,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",338,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",338,[[]]],[11,"outtopad","","output signal to pad after register override is applied",338,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",338,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",338,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",338,[[]]],[3,"Gpio14Status","","GPIO status",null,null],[11,"to_bits","","",339,[[]]],[11,"from_bits","","",339,[[],["gpio14status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",339,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",339,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",339,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",339,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",339,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",339,[[]]],[11,"infrompad","","input signal from pad, before override is applied",339,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",339,[[]]],[11,"oetopad","","output enable to pad after register override is applied",339,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",339,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",339,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",339,[[]]],[11,"outtopad","","output signal to pad after register override is applied",339,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",339,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",339,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",339,[[]]],[3,"Gpio27Status","","GPIO status",null,null],[11,"to_bits","","",340,[[]]],[11,"from_bits","","",340,[[],["gpio27status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",340,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",340,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",340,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",340,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",340,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",340,[[]]],[11,"infrompad","","input signal from pad, before override is applied",340,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",340,[[]]],[11,"oetopad","","output enable to pad after register override is applied",340,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",340,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",340,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",340,[[]]],[11,"outtopad","","output signal to pad after register override is applied",340,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",340,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",340,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",340,[[]]],[3,"Gpio6Status","","GPIO status",null,null],[11,"to_bits","","",341,[[]]],[11,"from_bits","","",341,[[],["gpio6status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",341,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",341,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",341,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",341,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",341,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",341,[[]]],[11,"infrompad","","input signal from pad, before override is applied",341,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",341,[[]]],[11,"oetopad","","output enable to pad after register override is applied",341,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",341,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",341,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",341,[[]]],[11,"outtopad","","output signal to pad after register override is applied",341,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",341,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",341,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",341,[[]]],[3,"Gpio26Status","","GPIO status",null,null],[11,"to_bits","","",342,[[]]],[11,"from_bits","","",342,[[],["gpio26status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",342,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",342,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",342,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",342,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",342,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",342,[[]]],[11,"infrompad","","input signal from pad, before override is applied",342,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",342,[[]]],[11,"oetopad","","output enable to pad after register override is applied",342,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",342,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",342,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",342,[[]]],[11,"outtopad","","output signal to pad after register override is applied",342,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",342,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",342,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",342,[[]]],[3,"Proc0Intf3","","Interrupt Force for proc0",null,null],[11,"to_bits","","",343,[[]]],[11,"from_bits","","",343,[[],["proc0intf3",3]]],[11,"gpio29_edge_high","","",343,[[]]],[11,"set_gpio29_edge_high","","",343,[[]]],[11,"gpio29_edge_low","","",343,[[]]],[11,"set_gpio29_edge_low","","",343,[[]]],[11,"gpio29_level_high","","",343,[[]]],[11,"set_gpio29_level_high","","",343,[[]]],[11,"gpio29_level_low","","",343,[[]]],[11,"set_gpio29_level_low","","",343,[[]]],[11,"gpio28_edge_high","","",343,[[]]],[11,"set_gpio28_edge_high","","",343,[[]]],[11,"gpio28_edge_low","","",343,[[]]],[11,"set_gpio28_edge_low","","",343,[[]]],[11,"gpio28_level_high","","",343,[[]]],[11,"set_gpio28_level_high","","",343,[[]]],[11,"gpio28_level_low","","",343,[[]]],[11,"set_gpio28_level_low","","",343,[[]]],[11,"gpio27_edge_high","","",343,[[]]],[11,"set_gpio27_edge_high","","",343,[[]]],[11,"gpio27_edge_low","","",343,[[]]],[11,"set_gpio27_edge_low","","",343,[[]]],[11,"gpio27_level_high","","",343,[[]]],[11,"set_gpio27_level_high","","",343,[[]]],[11,"gpio27_level_low","","",343,[[]]],[11,"set_gpio27_level_low","","",343,[[]]],[11,"gpio26_edge_high","","",343,[[]]],[11,"set_gpio26_edge_high","","",343,[[]]],[11,"gpio26_edge_low","","",343,[[]]],[11,"set_gpio26_edge_low","","",343,[[]]],[11,"gpio26_level_high","","",343,[[]]],[11,"set_gpio26_level_high","","",343,[[]]],[11,"gpio26_level_low","","",343,[[]]],[11,"set_gpio26_level_low","","",343,[[]]],[11,"gpio25_edge_high","","",343,[[]]],[11,"set_gpio25_edge_high","","",343,[[]]],[11,"gpio25_edge_low","","",343,[[]]],[11,"set_gpio25_edge_low","","",343,[[]]],[11,"gpio25_level_high","","",343,[[]]],[11,"set_gpio25_level_high","","",343,[[]]],[11,"gpio25_level_low","","",343,[[]]],[11,"set_gpio25_level_low","","",343,[[]]],[11,"gpio24_edge_high","","",343,[[]]],[11,"set_gpio24_edge_high","","",343,[[]]],[11,"gpio24_edge_low","","",343,[[]]],[11,"set_gpio24_edge_low","","",343,[[]]],[11,"gpio24_level_high","","",343,[[]]],[11,"set_gpio24_level_high","","",343,[[]]],[11,"gpio24_level_low","","",343,[[]]],[11,"set_gpio24_level_low","","",343,[[]]],[3,"DormantWakeInts1","","Interrupt status after masking & forcing for dormant_wake",null,null],[11,"to_bits","","",344,[[]]],[11,"from_bits","","",344,[[],["dormantwakeints1",3]]],[11,"gpio15_edge_high","","",344,[[]]],[11,"set_gpio15_edge_high","","",344,[[]]],[11,"gpio15_edge_low","","",344,[[]]],[11,"set_gpio15_edge_low","","",344,[[]]],[11,"gpio15_level_high","","",344,[[]]],[11,"set_gpio15_level_high","","",344,[[]]],[11,"gpio15_level_low","","",344,[[]]],[11,"set_gpio15_level_low","","",344,[[]]],[11,"gpio14_edge_high","","",344,[[]]],[11,"set_gpio14_edge_high","","",344,[[]]],[11,"gpio14_edge_low","","",344,[[]]],[11,"set_gpio14_edge_low","","",344,[[]]],[11,"gpio14_level_high","","",344,[[]]],[11,"set_gpio14_level_high","","",344,[[]]],[11,"gpio14_level_low","","",344,[[]]],[11,"set_gpio14_level_low","","",344,[[]]],[11,"gpio13_edge_high","","",344,[[]]],[11,"set_gpio13_edge_high","","",344,[[]]],[11,"gpio13_edge_low","","",344,[[]]],[11,"set_gpio13_edge_low","","",344,[[]]],[11,"gpio13_level_high","","",344,[[]]],[11,"set_gpio13_level_high","","",344,[[]]],[11,"gpio13_level_low","","",344,[[]]],[11,"set_gpio13_level_low","","",344,[[]]],[11,"gpio12_edge_high","","",344,[[]]],[11,"set_gpio12_edge_high","","",344,[[]]],[11,"gpio12_edge_low","","",344,[[]]],[11,"set_gpio12_edge_low","","",344,[[]]],[11,"gpio12_level_high","","",344,[[]]],[11,"set_gpio12_level_high","","",344,[[]]],[11,"gpio12_level_low","","",344,[[]]],[11,"set_gpio12_level_low","","",344,[[]]],[11,"gpio11_edge_high","","",344,[[]]],[11,"set_gpio11_edge_high","","",344,[[]]],[11,"gpio11_edge_low","","",344,[[]]],[11,"set_gpio11_edge_low","","",344,[[]]],[11,"gpio11_level_high","","",344,[[]]],[11,"set_gpio11_level_high","","",344,[[]]],[11,"gpio11_level_low","","",344,[[]]],[11,"set_gpio11_level_low","","",344,[[]]],[11,"gpio10_edge_high","","",344,[[]]],[11,"set_gpio10_edge_high","","",344,[[]]],[11,"gpio10_edge_low","","",344,[[]]],[11,"set_gpio10_edge_low","","",344,[[]]],[11,"gpio10_level_high","","",344,[[]]],[11,"set_gpio10_level_high","","",344,[[]]],[11,"gpio10_level_low","","",344,[[]]],[11,"set_gpio10_level_low","","",344,[[]]],[11,"gpio9_edge_high","","",344,[[]]],[11,"set_gpio9_edge_high","","",344,[[]]],[11,"gpio9_edge_low","","",344,[[]]],[11,"set_gpio9_edge_low","","",344,[[]]],[11,"gpio9_level_high","","",344,[[]]],[11,"set_gpio9_level_high","","",344,[[]]],[11,"gpio9_level_low","","",344,[[]]],[11,"set_gpio9_level_low","","",344,[[]]],[11,"gpio8_edge_high","","",344,[[]]],[11,"set_gpio8_edge_high","","",344,[[]]],[11,"gpio8_edge_low","","",344,[[]]],[11,"set_gpio8_edge_low","","",344,[[]]],[11,"gpio8_level_high","","",344,[[]]],[11,"set_gpio8_level_high","","",344,[[]]],[11,"gpio8_level_low","","",344,[[]]],[11,"set_gpio8_level_low","","",344,[[]]],[3,"Gpio9Status","","GPIO status",null,null],[11,"to_bits","","",345,[[]]],[11,"from_bits","","",345,[[],["gpio9status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",345,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",345,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",345,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",345,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",345,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",345,[[]]],[11,"infrompad","","input signal from pad, before override is applied",345,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",345,[[]]],[11,"oetopad","","output enable to pad after register override is applied",345,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",345,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",345,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",345,[[]]],[11,"outtopad","","output signal to pad after register override is applied",345,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",345,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",345,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",345,[[]]],[3,"DormantWakeInts0","","Interrupt status after masking & forcing for dormant_wake",null,null],[11,"to_bits","","",346,[[]]],[11,"from_bits","","",346,[[],["dormantwakeints0",3]]],[11,"gpio7_edge_high","","",346,[[]]],[11,"set_gpio7_edge_high","","",346,[[]]],[11,"gpio7_edge_low","","",346,[[]]],[11,"set_gpio7_edge_low","","",346,[[]]],[11,"gpio7_level_high","","",346,[[]]],[11,"set_gpio7_level_high","","",346,[[]]],[11,"gpio7_level_low","","",346,[[]]],[11,"set_gpio7_level_low","","",346,[[]]],[11,"gpio6_edge_high","","",346,[[]]],[11,"set_gpio6_edge_high","","",346,[[]]],[11,"gpio6_edge_low","","",346,[[]]],[11,"set_gpio6_edge_low","","",346,[[]]],[11,"gpio6_level_high","","",346,[[]]],[11,"set_gpio6_level_high","","",346,[[]]],[11,"gpio6_level_low","","",346,[[]]],[11,"set_gpio6_level_low","","",346,[[]]],[11,"gpio5_edge_high","","",346,[[]]],[11,"set_gpio5_edge_high","","",346,[[]]],[11,"gpio5_edge_low","","",346,[[]]],[11,"set_gpio5_edge_low","","",346,[[]]],[11,"gpio5_level_high","","",346,[[]]],[11,"set_gpio5_level_high","","",346,[[]]],[11,"gpio5_level_low","","",346,[[]]],[11,"set_gpio5_level_low","","",346,[[]]],[11,"gpio4_edge_high","","",346,[[]]],[11,"set_gpio4_edge_high","","",346,[[]]],[11,"gpio4_edge_low","","",346,[[]]],[11,"set_gpio4_edge_low","","",346,[[]]],[11,"gpio4_level_high","","",346,[[]]],[11,"set_gpio4_level_high","","",346,[[]]],[11,"gpio4_level_low","","",346,[[]]],[11,"set_gpio4_level_low","","",346,[[]]],[11,"gpio3_edge_high","","",346,[[]]],[11,"set_gpio3_edge_high","","",346,[[]]],[11,"gpio3_edge_low","","",346,[[]]],[11,"set_gpio3_edge_low","","",346,[[]]],[11,"gpio3_level_high","","",346,[[]]],[11,"set_gpio3_level_high","","",346,[[]]],[11,"gpio3_level_low","","",346,[[]]],[11,"set_gpio3_level_low","","",346,[[]]],[11,"gpio2_edge_high","","",346,[[]]],[11,"set_gpio2_edge_high","","",346,[[]]],[11,"gpio2_edge_low","","",346,[[]]],[11,"set_gpio2_edge_low","","",346,[[]]],[11,"gpio2_level_high","","",346,[[]]],[11,"set_gpio2_level_high","","",346,[[]]],[11,"gpio2_level_low","","",346,[[]]],[11,"set_gpio2_level_low","","",346,[[]]],[11,"gpio1_edge_high","","",346,[[]]],[11,"set_gpio1_edge_high","","",346,[[]]],[11,"gpio1_edge_low","","",346,[[]]],[11,"set_gpio1_edge_low","","",346,[[]]],[11,"gpio1_level_high","","",346,[[]]],[11,"set_gpio1_level_high","","",346,[[]]],[11,"gpio1_level_low","","",346,[[]]],[11,"set_gpio1_level_low","","",346,[[]]],[11,"gpio0_edge_high","","",346,[[]]],[11,"set_gpio0_edge_high","","",346,[[]]],[11,"gpio0_edge_low","","",346,[[]]],[11,"set_gpio0_edge_low","","",346,[[]]],[11,"gpio0_level_high","","",346,[[]]],[11,"set_gpio0_level_high","","",346,[[]]],[11,"gpio0_level_low","","",346,[[]]],[11,"set_gpio0_level_low","","",346,[[]]],[3,"Proc0Inte1","","Interrupt Enable for proc0",null,null],[11,"to_bits","","",347,[[]]],[11,"from_bits","","",347,[[],["proc0inte1",3]]],[11,"gpio15_edge_high","","",347,[[]]],[11,"set_gpio15_edge_high","","",347,[[]]],[11,"gpio15_edge_low","","",347,[[]]],[11,"set_gpio15_edge_low","","",347,[[]]],[11,"gpio15_level_high","","",347,[[]]],[11,"set_gpio15_level_high","","",347,[[]]],[11,"gpio15_level_low","","",347,[[]]],[11,"set_gpio15_level_low","","",347,[[]]],[11,"gpio14_edge_high","","",347,[[]]],[11,"set_gpio14_edge_high","","",347,[[]]],[11,"gpio14_edge_low","","",347,[[]]],[11,"set_gpio14_edge_low","","",347,[[]]],[11,"gpio14_level_high","","",347,[[]]],[11,"set_gpio14_level_high","","",347,[[]]],[11,"gpio14_level_low","","",347,[[]]],[11,"set_gpio14_level_low","","",347,[[]]],[11,"gpio13_edge_high","","",347,[[]]],[11,"set_gpio13_edge_high","","",347,[[]]],[11,"gpio13_edge_low","","",347,[[]]],[11,"set_gpio13_edge_low","","",347,[[]]],[11,"gpio13_level_high","","",347,[[]]],[11,"set_gpio13_level_high","","",347,[[]]],[11,"gpio13_level_low","","",347,[[]]],[11,"set_gpio13_level_low","","",347,[[]]],[11,"gpio12_edge_high","","",347,[[]]],[11,"set_gpio12_edge_high","","",347,[[]]],[11,"gpio12_edge_low","","",347,[[]]],[11,"set_gpio12_edge_low","","",347,[[]]],[11,"gpio12_level_high","","",347,[[]]],[11,"set_gpio12_level_high","","",347,[[]]],[11,"gpio12_level_low","","",347,[[]]],[11,"set_gpio12_level_low","","",347,[[]]],[11,"gpio11_edge_high","","",347,[[]]],[11,"set_gpio11_edge_high","","",347,[[]]],[11,"gpio11_edge_low","","",347,[[]]],[11,"set_gpio11_edge_low","","",347,[[]]],[11,"gpio11_level_high","","",347,[[]]],[11,"set_gpio11_level_high","","",347,[[]]],[11,"gpio11_level_low","","",347,[[]]],[11,"set_gpio11_level_low","","",347,[[]]],[11,"gpio10_edge_high","","",347,[[]]],[11,"set_gpio10_edge_high","","",347,[[]]],[11,"gpio10_edge_low","","",347,[[]]],[11,"set_gpio10_edge_low","","",347,[[]]],[11,"gpio10_level_high","","",347,[[]]],[11,"set_gpio10_level_high","","",347,[[]]],[11,"gpio10_level_low","","",347,[[]]],[11,"set_gpio10_level_low","","",347,[[]]],[11,"gpio9_edge_high","","",347,[[]]],[11,"set_gpio9_edge_high","","",347,[[]]],[11,"gpio9_edge_low","","",347,[[]]],[11,"set_gpio9_edge_low","","",347,[[]]],[11,"gpio9_level_high","","",347,[[]]],[11,"set_gpio9_level_high","","",347,[[]]],[11,"gpio9_level_low","","",347,[[]]],[11,"set_gpio9_level_low","","",347,[[]]],[11,"gpio8_edge_high","","",347,[[]]],[11,"set_gpio8_edge_high","","",347,[[]]],[11,"gpio8_edge_low","","",347,[[]]],[11,"set_gpio8_edge_low","","",347,[[]]],[11,"gpio8_level_high","","",347,[[]]],[11,"set_gpio8_level_high","","",347,[[]]],[11,"gpio8_level_low","","",347,[[]]],[11,"set_gpio8_level_low","","",347,[[]]],[3,"Gpio7Status","","GPIO status",null,null],[11,"to_bits","","",348,[[]]],[11,"from_bits","","",348,[[],["gpio7status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",348,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",348,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",348,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",348,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",348,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",348,[[]]],[11,"infrompad","","input signal from pad, before override is applied",348,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",348,[[]]],[11,"oetopad","","output enable to pad after register override is applied",348,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",348,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",348,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",348,[[]]],[11,"outtopad","","output signal to pad after register override is applied",348,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",348,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",348,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",348,[[]]],[3,"Gpio13Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",349,[[]]],[11,"from_bits","","",349,[[],["gpio13ctrl",3]]],[11,"irqover","","",349,[[],["irqover",3]]],[11,"set_irqover","","",349,[[["irqover",3]]]],[11,"inover","","",349,[[],["inover",3]]],[11,"set_inover","","",349,[[["inover",3]]]],[11,"oeover","","",349,[[],["oeover",3]]],[11,"set_oeover","","",349,[[["oeover",3]]]],[11,"outover","","",349,[[],["outover",3]]],[11,"set_outover","","",349,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",349,[[],["gpio13ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",349,[[["gpio13ctrlfuncsel",3]]]],[3,"Gpio19Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",350,[[]]],[11,"from_bits","","",350,[[],["gpio19ctrl",3]]],[11,"irqover","","",350,[[],["irqover",3]]],[11,"set_irqover","","",350,[[["irqover",3]]]],[11,"inover","","",350,[[],["inover",3]]],[11,"set_inover","","",350,[[["inover",3]]]],[11,"oeover","","",350,[[],["oeover",3]]],[11,"set_oeover","","",350,[[["oeover",3]]]],[11,"outover","","",350,[[],["outover",3]]],[11,"set_outover","","",350,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",350,[[],["gpio19ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",350,[[["gpio19ctrlfuncsel",3]]]],[3,"DormantWakeIntf3","","Interrupt Force for dormant_wake",null,null],[11,"to_bits","","",351,[[]]],[11,"from_bits","","",351,[[],["dormantwakeintf3",3]]],[11,"gpio29_edge_high","","",351,[[]]],[11,"set_gpio29_edge_high","","",351,[[]]],[11,"gpio29_edge_low","","",351,[[]]],[11,"set_gpio29_edge_low","","",351,[[]]],[11,"gpio29_level_high","","",351,[[]]],[11,"set_gpio29_level_high","","",351,[[]]],[11,"gpio29_level_low","","",351,[[]]],[11,"set_gpio29_level_low","","",351,[[]]],[11,"gpio28_edge_high","","",351,[[]]],[11,"set_gpio28_edge_high","","",351,[[]]],[11,"gpio28_edge_low","","",351,[[]]],[11,"set_gpio28_edge_low","","",351,[[]]],[11,"gpio28_level_high","","",351,[[]]],[11,"set_gpio28_level_high","","",351,[[]]],[11,"gpio28_level_low","","",351,[[]]],[11,"set_gpio28_level_low","","",351,[[]]],[11,"gpio27_edge_high","","",351,[[]]],[11,"set_gpio27_edge_high","","",351,[[]]],[11,"gpio27_edge_low","","",351,[[]]],[11,"set_gpio27_edge_low","","",351,[[]]],[11,"gpio27_level_high","","",351,[[]]],[11,"set_gpio27_level_high","","",351,[[]]],[11,"gpio27_level_low","","",351,[[]]],[11,"set_gpio27_level_low","","",351,[[]]],[11,"gpio26_edge_high","","",351,[[]]],[11,"set_gpio26_edge_high","","",351,[[]]],[11,"gpio26_edge_low","","",351,[[]]],[11,"set_gpio26_edge_low","","",351,[[]]],[11,"gpio26_level_high","","",351,[[]]],[11,"set_gpio26_level_high","","",351,[[]]],[11,"gpio26_level_low","","",351,[[]]],[11,"set_gpio26_level_low","","",351,[[]]],[11,"gpio25_edge_high","","",351,[[]]],[11,"set_gpio25_edge_high","","",351,[[]]],[11,"gpio25_edge_low","","",351,[[]]],[11,"set_gpio25_edge_low","","",351,[[]]],[11,"gpio25_level_high","","",351,[[]]],[11,"set_gpio25_level_high","","",351,[[]]],[11,"gpio25_level_low","","",351,[[]]],[11,"set_gpio25_level_low","","",351,[[]]],[11,"gpio24_edge_high","","",351,[[]]],[11,"set_gpio24_edge_high","","",351,[[]]],[11,"gpio24_edge_low","","",351,[[]]],[11,"set_gpio24_edge_low","","",351,[[]]],[11,"gpio24_level_high","","",351,[[]]],[11,"set_gpio24_level_high","","",351,[[]]],[11,"gpio24_level_low","","",351,[[]]],[11,"set_gpio24_level_low","","",351,[[]]],[3,"Gpio25Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",352,[[]]],[11,"from_bits","","",352,[[],["gpio25ctrl",3]]],[11,"irqover","","",352,[[],["irqover",3]]],[11,"set_irqover","","",352,[[["irqover",3]]]],[11,"inover","","",352,[[],["inover",3]]],[11,"set_inover","","",352,[[["inover",3]]]],[11,"oeover","","",352,[[],["oeover",3]]],[11,"set_oeover","","",352,[[["oeover",3]]]],[11,"outover","","",352,[[],["outover",3]]],[11,"set_outover","","",352,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",352,[[],["gpio25ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",352,[[["gpio25ctrlfuncsel",3]]]],[3,"Gpio4Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",353,[[]]],[11,"from_bits","","",353,[[],["gpio4ctrl",3]]],[11,"irqover","","",353,[[],["irqover",3]]],[11,"set_irqover","","",353,[[["irqover",3]]]],[11,"inover","","",353,[[],["inover",3]]],[11,"set_inover","","",353,[[["inover",3]]]],[11,"oeover","","",353,[[],["oeover",3]]],[11,"set_oeover","","",353,[[["oeover",3]]]],[11,"outover","","",353,[[],["outover",3]]],[11,"set_outover","","",353,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",353,[[],["gpio4ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",353,[[["gpio4ctrlfuncsel",3]]]],[3,"Gpio0Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",354,[[]]],[11,"from_bits","","",354,[[],["gpio0ctrl",3]]],[11,"irqover","","",354,[[],["irqover",3]]],[11,"set_irqover","","",354,[[["irqover",3]]]],[11,"inover","","",354,[[],["inover",3]]],[11,"set_inover","","",354,[[["inover",3]]]],[11,"oeover","","",354,[[],["oeover",3]]],[11,"set_oeover","","",354,[[["oeover",3]]]],[11,"outover","","",354,[[],["outover",3]]],[11,"set_outover","","",354,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",354,[[],["gpio0ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",354,[[["gpio0ctrlfuncsel",3]]]],[0,"values","rp2040_pac::io_bank0","",null,null],[3,"Gpio10CtrlFuncsel","rp2040_pac::io_bank0::values","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",355,[[]]],[11,"from_bits","","",355,[[],["gpio10ctrlfuncsel",3]]],[18,"SPI1_SCLK","","",355,null],[18,"UART1_CTS","","",355,null],[18,"I2C1_SDA","","",355,null],[18,"PWM_A_5","","",355,null],[18,"SIO_10","","",355,null],[18,"PIO0_10","","",355,null],[18,"PIO1_10","","",355,null],[18,"USB_MUXING_EXTPHY_VM","","",355,null],[18,"USB_MUXING_VBUS_DETECT","","",355,null],[18,"NULL","","",355,null],[3,"Gpio25CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",356,[[]]],[11,"from_bits","","",356,[[],["gpio25ctrlfuncsel",3]]],[18,"SPI1_SS_N","","",356,null],[18,"UART1_RX","","",356,null],[18,"I2C0_SCL","","",356,null],[18,"PWM_B_4","","",356,null],[18,"SIO_25","","",356,null],[18,"PIO0_25","","",356,null],[18,"PIO1_25","","",356,null],[18,"CLOCKS_GPOUT_3","","",356,null],[18,"USB_MUXING_VBUS_DETECT","","",356,null],[18,"NULL","","",356,null],[3,"Gpio9CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",357,[[]]],[11,"from_bits","","",357,[[],["gpio9ctrlfuncsel",3]]],[18,"SPI1_SS_N","","",357,null],[18,"UART1_RX","","",357,null],[18,"I2C0_SCL","","",357,null],[18,"PWM_B_4","","",357,null],[18,"SIO_9","","",357,null],[18,"PIO0_9","","",357,null],[18,"PIO1_9","","",357,null],[18,"USB_MUXING_EXTPHY_VP","","",357,null],[18,"USB_MUXING_OVERCURR_DETECT","","",357,null],[18,"NULL","","",357,null],[3,"Gpio28CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",358,[[]]],[11,"from_bits","","",358,[[],["gpio28ctrlfuncsel",3]]],[18,"SPI1_RX","","",358,null],[18,"UART0_TX","","",358,null],[18,"I2C0_SDA","","",358,null],[18,"PWM_A_6","","",358,null],[18,"SIO_28","","",358,null],[18,"PIO0_28","","",358,null],[18,"PIO1_28","","",358,null],[18,"USB_MUXING_VBUS_DETECT","","",358,null],[18,"NULL","","",358,null],[3,"Gpio29CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",359,[[]]],[11,"from_bits","","",359,[[],["gpio29ctrlfuncsel",3]]],[18,"SPI1_SS_N","","",359,null],[18,"UART0_RX","","",359,null],[18,"I2C0_SCL","","",359,null],[18,"PWM_B_6","","",359,null],[18,"SIO_29","","",359,null],[18,"PIO0_29","","",359,null],[18,"PIO1_29","","",359,null],[18,"USB_MUXING_VBUS_EN","","",359,null],[18,"NULL","","",359,null],[3,"Gpio17CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",360,[[]]],[11,"from_bits","","",360,[[],["gpio17ctrlfuncsel",3]]],[18,"SPI0_SS_N","","",360,null],[18,"UART0_RX","","",360,null],[18,"I2C0_SCL","","",360,null],[18,"PWM_B_0","","",360,null],[18,"SIO_17","","",360,null],[18,"PIO0_17","","",360,null],[18,"PIO1_17","","",360,null],[18,"USB_MUXING_VBUS_EN","","",360,null],[18,"NULL","","",360,null],[3,"Gpio7CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",361,[[]]],[11,"from_bits","","",361,[[],["gpio7ctrlfuncsel",3]]],[18,"SPI0_TX","","",361,null],[18,"UART1_RTS","","",361,null],[18,"I2C1_SCL","","",361,null],[18,"PWM_B_3","","",361,null],[18,"SIO_7","","",361,null],[18,"PIO0_7","","",361,null],[18,"PIO1_7","","",361,null],[18,"USB_MUXING_EXTPHY_OE_N","","",361,null],[18,"USB_MUXING_VBUS_DETECT","","",361,null],[18,"NULL","","",361,null],[3,"Gpio5CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",362,[[]]],[11,"from_bits","","",362,[[],["gpio5ctrlfuncsel",3]]],[18,"SPI0_SS_N","","",362,null],[18,"UART1_RX","","",362,null],[18,"I2C0_SCL","","",362,null],[18,"PWM_B_2","","",362,null],[18,"SIO_5","","",362,null],[18,"PIO0_5","","",362,null],[18,"PIO1_5","","",362,null],[18,"USB_MUXING_VBUS_EN","","",362,null],[18,"NULL","","",362,null],[3,"Gpio13CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",363,[[]]],[11,"from_bits","","",363,[[],["gpio13ctrlfuncsel",3]]],[18,"SPI1_SS_N","","",363,null],[18,"UART0_RX","","",363,null],[18,"I2C0_SCL","","",363,null],[18,"PWM_B_6","","",363,null],[18,"SIO_13","","",363,null],[18,"PIO0_13","","",363,null],[18,"PIO1_13","","",363,null],[18,"USB_MUXING_EXTPHY_VPO","","",363,null],[18,"USB_MUXING_VBUS_DETECT","","",363,null],[18,"NULL","","",363,null],[3,"Gpio24CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",364,[[]]],[11,"from_bits","","",364,[[],["gpio24ctrlfuncsel",3]]],[18,"SPI1_RX","","",364,null],[18,"UART1_TX","","",364,null],[18,"I2C0_SDA","","",364,null],[18,"PWM_A_4","","",364,null],[18,"SIO_24","","",364,null],[18,"PIO0_24","","",364,null],[18,"PIO1_24","","",364,null],[18,"CLOCKS_GPOUT_2","","",364,null],[18,"USB_MUXING_OVERCURR_DETECT","","",364,null],[18,"NULL","","",364,null],[3,"Gpio27CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",365,[[]]],[11,"from_bits","","",365,[[],["gpio27ctrlfuncsel",3]]],[18,"SPI1_TX","","",365,null],[18,"UART1_RTS","","",365,null],[18,"I2C1_SCL","","",365,null],[18,"PWM_B_5","","",365,null],[18,"SIO_27","","",365,null],[18,"PIO0_27","","",365,null],[18,"PIO1_27","","",365,null],[18,"USB_MUXING_OVERCURR_DETECT","","",365,null],[18,"NULL","","",365,null],[3,"Gpio11CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",366,[[]]],[11,"from_bits","","",366,[[],["gpio11ctrlfuncsel",3]]],[18,"SPI1_TX","","",366,null],[18,"UART1_RTS","","",366,null],[18,"I2C1_SCL","","",366,null],[18,"PWM_B_5","","",366,null],[18,"SIO_11","","",366,null],[18,"PIO0_11","","",366,null],[18,"PIO1_11","","",366,null],[18,"USB_MUXING_EXTPHY_SUSPND","","",366,null],[18,"USB_MUXING_VBUS_EN","","",366,null],[18,"NULL","","",366,null],[3,"Gpio14CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",367,[[]]],[11,"from_bits","","",367,[[],["gpio14ctrlfuncsel",3]]],[18,"SPI1_SCLK","","",367,null],[18,"UART0_CTS","","",367,null],[18,"I2C1_SDA","","",367,null],[18,"PWM_A_7","","",367,null],[18,"SIO_14","","",367,null],[18,"PIO0_14","","",367,null],[18,"PIO1_14","","",367,null],[18,"USB_MUXING_EXTPHY_VMO","","",367,null],[18,"USB_MUXING_VBUS_EN","","",367,null],[18,"NULL","","",367,null],[3,"Gpio4CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",368,[[]]],[11,"from_bits","","",368,[[],["gpio4ctrlfuncsel",3]]],[18,"SPI0_RX","","",368,null],[18,"UART1_TX","","",368,null],[18,"I2C0_SDA","","",368,null],[18,"PWM_A_2","","",368,null],[18,"SIO_4","","",368,null],[18,"PIO0_4","","",368,null],[18,"PIO1_4","","",368,null],[18,"USB_MUXING_VBUS_DETECT","","",368,null],[18,"NULL","","",368,null],[3,"Gpio16CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",369,[[]]],[11,"from_bits","","",369,[[],["gpio16ctrlfuncsel",3]]],[18,"SPI0_RX","","",369,null],[18,"UART0_TX","","",369,null],[18,"I2C0_SDA","","",369,null],[18,"PWM_A_0","","",369,null],[18,"SIO_16","","",369,null],[18,"PIO0_16","","",369,null],[18,"PIO1_16","","",369,null],[18,"USB_MUXING_DIGITAL_DM","","",369,null],[18,"USB_MUXING_VBUS_DETECT","","",369,null],[18,"NULL","","",369,null],[3,"Gpio8CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",370,[[]]],[11,"from_bits","","",370,[[],["gpio8ctrlfuncsel",3]]],[18,"SPI1_RX","","",370,null],[18,"UART1_TX","","",370,null],[18,"I2C0_SDA","","",370,null],[18,"PWM_A_4","","",370,null],[18,"SIO_8","","",370,null],[18,"PIO0_8","","",370,null],[18,"PIO1_8","","",370,null],[18,"USB_MUXING_EXTPHY_RCV","","",370,null],[18,"USB_MUXING_VBUS_EN","","",370,null],[18,"NULL","","",370,null],[3,"Gpio2CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",371,[[]]],[11,"from_bits","","",371,[[],["gpio2ctrlfuncsel",3]]],[18,"JTAG_TDI","","",371,null],[18,"SPI0_SCLK","","",371,null],[18,"UART0_CTS","","",371,null],[18,"I2C1_SDA","","",371,null],[18,"PWM_A_1","","",371,null],[18,"SIO_2","","",371,null],[18,"PIO0_2","","",371,null],[18,"PIO1_2","","",371,null],[18,"USB_MUXING_VBUS_EN","","",371,null],[18,"NULL","","",371,null],[3,"Gpio22CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",372,[[]]],[11,"from_bits","","",372,[[],["gpio22ctrlfuncsel",3]]],[18,"SPI0_SCLK","","",372,null],[18,"UART1_CTS","","",372,null],[18,"I2C1_SDA","","",372,null],[18,"PWM_A_3","","",372,null],[18,"SIO_22","","",372,null],[18,"PIO0_22","","",372,null],[18,"PIO1_22","","",372,null],[18,"CLOCKS_GPIN_1","","",372,null],[18,"USB_MUXING_VBUS_DETECT","","",372,null],[18,"NULL","","",372,null],[3,"Gpio0CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",373,[[]]],[11,"from_bits","","",373,[[],["gpio0ctrlfuncsel",3]]],[18,"JTAG_TCK","","",373,null],[18,"SPI0_RX","","",373,null],[18,"UART0_TX","","",373,null],[18,"I2C0_SDA","","",373,null],[18,"PWM_A_0","","",373,null],[18,"SIO_0","","",373,null],[18,"PIO0_0","","",373,null],[18,"PIO1_0","","",373,null],[18,"USB_MUXING_OVERCURR_DETECT","","",373,null],[18,"NULL","","",373,null],[3,"Gpio23CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",374,[[]]],[11,"from_bits","","",374,[[],["gpio23ctrlfuncsel",3]]],[18,"SPI0_TX","","",374,null],[18,"UART1_RTS","","",374,null],[18,"I2C1_SCL","","",374,null],[18,"PWM_B_3","","",374,null],[18,"SIO_23","","",374,null],[18,"PIO0_23","","",374,null],[18,"PIO1_23","","",374,null],[18,"CLOCKS_GPOUT_1","","",374,null],[18,"USB_MUXING_VBUS_EN","","",374,null],[18,"NULL","","",374,null],[3,"Gpio12CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",375,[[]]],[11,"from_bits","","",375,[[],["gpio12ctrlfuncsel",3]]],[18,"SPI1_RX","","",375,null],[18,"UART0_TX","","",375,null],[18,"I2C0_SDA","","",375,null],[18,"PWM_A_6","","",375,null],[18,"SIO_12","","",375,null],[18,"PIO0_12","","",375,null],[18,"PIO1_12","","",375,null],[18,"USB_MUXING_EXTPHY_SPEED","","",375,null],[18,"USB_MUXING_OVERCURR_DETECT","","",375,null],[18,"NULL","","",375,null],[3,"Gpio20CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",376,[[]]],[11,"from_bits","","",376,[[],["gpio20ctrlfuncsel",3]]],[18,"SPI0_RX","","",376,null],[18,"UART1_TX","","",376,null],[18,"I2C0_SDA","","",376,null],[18,"PWM_A_2","","",376,null],[18,"SIO_20","","",376,null],[18,"PIO0_20","","",376,null],[18,"PIO1_20","","",376,null],[18,"CLOCKS_GPIN_0","","",376,null],[18,"USB_MUXING_VBUS_EN","","",376,null],[18,"NULL","","",376,null],[3,"Gpio19CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",377,[[]]],[11,"from_bits","","",377,[[],["gpio19ctrlfuncsel",3]]],[18,"SPI0_TX","","",377,null],[18,"UART0_RTS","","",377,null],[18,"I2C1_SCL","","",377,null],[18,"PWM_B_1","","",377,null],[18,"SIO_19","","",377,null],[18,"PIO0_19","","",377,null],[18,"PIO1_19","","",377,null],[18,"USB_MUXING_VBUS_DETECT","","",377,null],[18,"NULL","","",377,null],[3,"Gpio6CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",378,[[]]],[11,"from_bits","","",378,[[],["gpio6ctrlfuncsel",3]]],[18,"SPI0_SCLK","","",378,null],[18,"UART1_CTS","","",378,null],[18,"I2C1_SDA","","",378,null],[18,"PWM_A_3","","",378,null],[18,"SIO_6","","",378,null],[18,"PIO0_6","","",378,null],[18,"PIO1_6","","",378,null],[18,"USB_MUXING_EXTPHY_SOFTCON","","",378,null],[18,"USB_MUXING_OVERCURR_DETECT","","",378,null],[18,"NULL","","",378,null],[3,"Gpio26CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",379,[[]]],[11,"from_bits","","",379,[[],["gpio26ctrlfuncsel",3]]],[18,"SPI1_SCLK","","",379,null],[18,"UART1_CTS","","",379,null],[18,"I2C1_SDA","","",379,null],[18,"PWM_A_5","","",379,null],[18,"SIO_26","","",379,null],[18,"PIO0_26","","",379,null],[18,"PIO1_26","","",379,null],[18,"USB_MUXING_VBUS_EN","","",379,null],[18,"NULL","","",379,null],[3,"Gpio15CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",380,[[]]],[11,"from_bits","","",380,[[],["gpio15ctrlfuncsel",3]]],[18,"SPI1_TX","","",380,null],[18,"UART0_RTS","","",380,null],[18,"I2C1_SCL","","",380,null],[18,"PWM_B_7","","",380,null],[18,"SIO_15","","",380,null],[18,"PIO0_15","","",380,null],[18,"PIO1_15","","",380,null],[18,"USB_MUXING_DIGITAL_DP","","",380,null],[18,"USB_MUXING_OVERCURR_DETECT","","",380,null],[18,"NULL","","",380,null],[3,"Gpio18CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",381,[[]]],[11,"from_bits","","",381,[[],["gpio18ctrlfuncsel",3]]],[18,"SPI0_SCLK","","",381,null],[18,"UART0_CTS","","",381,null],[18,"I2C1_SDA","","",381,null],[18,"PWM_A_1","","",381,null],[18,"SIO_18","","",381,null],[18,"PIO0_18","","",381,null],[18,"PIO1_18","","",381,null],[18,"USB_MUXING_OVERCURR_DETECT","","",381,null],[18,"NULL","","",381,null],[3,"Gpio1CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",382,[[]]],[11,"from_bits","","",382,[[],["gpio1ctrlfuncsel",3]]],[18,"JTAG_TMS","","",382,null],[18,"SPI0_SS_N","","",382,null],[18,"UART0_RX","","",382,null],[18,"I2C0_SCL","","",382,null],[18,"PWM_B_0","","",382,null],[18,"SIO_1","","",382,null],[18,"PIO0_1","","",382,null],[18,"PIO1_1","","",382,null],[18,"USB_MUXING_VBUS_DETECT","","",382,null],[18,"NULL","","",382,null],[3,"Gpio21CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",383,[[]]],[11,"from_bits","","",383,[[],["gpio21ctrlfuncsel",3]]],[18,"SPI0_SS_N","","",383,null],[18,"UART1_RX","","",383,null],[18,"I2C0_SCL","","",383,null],[18,"PWM_B_2","","",383,null],[18,"SIO_21","","",383,null],[18,"PIO0_21","","",383,null],[18,"PIO1_21","","",383,null],[18,"CLOCKS_GPOUT_0","","",383,null],[18,"USB_MUXING_OVERCURR_DETECT","","",383,null],[18,"NULL","","",383,null],[3,"Gpio3CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",384,[[]]],[11,"from_bits","","",384,[[],["gpio3ctrlfuncsel",3]]],[18,"JTAG_TDO","","",384,null],[18,"SPI0_TX","","",384,null],[18,"UART0_RTS","","",384,null],[18,"I2C1_SCL","","",384,null],[18,"PWM_B_1","","",384,null],[18,"SIO_3","","",384,null],[18,"PIO0_3","","",384,null],[18,"PIO1_3","","",384,null],[18,"USB_MUXING_OVERCURR_DETECT","","",384,null],[18,"NULL","","",384,null],[3,"IoBank0","rp2040_pac::io_bank0","",null,null],[11,"from_ptr","","",385,[[]]],[11,"gpio0_status","","GPIO status",385,[[],[["rw",3],["reg",3],["gpio0status",3]]]],[11,"gpio0_ctrl","","GPIO control including function select and overrides.",385,[[],[["gpio0ctrl",3],["reg",3],["rw",3]]]],[11,"gpio1_status","","GPIO status",385,[[],[["reg",3],["gpio1status",3],["rw",3]]]],[11,"gpio1_ctrl","","GPIO control including function select and overrides.",385,[[],[["reg",3],["gpio1ctrl",3],["rw",3]]]],[11,"gpio2_status","","GPIO status",385,[[],[["reg",3],["gpio2status",3],["rw",3]]]],[11,"gpio2_ctrl","","GPIO control including function select and overrides.",385,[[],[["gpio2ctrl",3],["reg",3],["rw",3]]]],[11,"gpio3_status","","GPIO status",385,[[],[["gpio3status",3],["rw",3],["reg",3]]]],[11,"gpio3_ctrl","","GPIO control including function select and overrides.",385,[[],[["reg",3],["gpio3ctrl",3],["rw",3]]]],[11,"gpio4_status","","GPIO status",385,[[],[["gpio4status",3],["reg",3],["rw",3]]]],[11,"gpio4_ctrl","","GPIO control including function select and overrides.",385,[[],[["rw",3],["gpio4ctrl",3],["reg",3]]]],[11,"gpio5_status","","GPIO status",385,[[],[["gpio5status",3],["reg",3],["rw",3]]]],[11,"gpio5_ctrl","","GPIO control including function select and overrides.",385,[[],[["gpio5ctrl",3],["reg",3],["rw",3]]]],[11,"gpio6_status","","GPIO status",385,[[],[["reg",3],["gpio6status",3],["rw",3]]]],[11,"gpio6_ctrl","","GPIO control including function select and overrides.",385,[[],[["reg",3],["gpio6ctrl",3],["rw",3]]]],[11,"gpio7_status","","GPIO status",385,[[],[["rw",3],["gpio7status",3],["reg",3]]]],[11,"gpio7_ctrl","","GPIO control including function select and overrides.",385,[[],[["reg",3],["gpio7ctrl",3],["rw",3]]]],[11,"gpio8_status","","GPIO status",385,[[],[["gpio8status",3],["rw",3],["reg",3]]]],[11,"gpio8_ctrl","","GPIO control including function select and overrides.",385,[[],[["gpio8ctrl",3],["rw",3],["reg",3]]]],[11,"gpio9_status","","GPIO status",385,[[],[["reg",3],["gpio9status",3],["rw",3]]]],[11,"gpio9_ctrl","","GPIO control including function select and overrides.",385,[[],[["gpio9ctrl",3],["reg",3],["rw",3]]]],[11,"gpio10_status","","GPIO status",385,[[],[["gpio10status",3],["reg",3],["rw",3]]]],[11,"gpio10_ctrl","","GPIO control including function select and overrides.",385,[[],[["rw",3],["reg",3],["gpio10ctrl",3]]]],[11,"gpio11_status","","GPIO status",385,[[],[["gpio11status",3],["rw",3],["reg",3]]]],[11,"gpio11_ctrl","","GPIO control including function select and overrides.",385,[[],[["gpio11ctrl",3],["rw",3],["reg",3]]]],[11,"gpio12_status","","GPIO status",385,[[],[["reg",3],["gpio12status",3],["rw",3]]]],[11,"gpio12_ctrl","","GPIO control including function select and overrides.",385,[[],[["rw",3],["gpio12ctrl",3],["reg",3]]]],[11,"gpio13_status","","GPIO status",385,[[],[["rw",3],["gpio13status",3],["reg",3]]]],[11,"gpio13_ctrl","","GPIO control including function select and overrides.",385,[[],[["gpio13ctrl",3],["rw",3],["reg",3]]]],[11,"gpio14_status","","GPIO status",385,[[],[["reg",3],["gpio14status",3],["rw",3]]]],[11,"gpio14_ctrl","","GPIO control including function select and overrides.",385,[[],[["reg",3],["gpio14ctrl",3],["rw",3]]]],[11,"gpio15_status","","GPIO status",385,[[],[["reg",3],["gpio15status",3],["rw",3]]]],[11,"gpio15_ctrl","","GPIO control including function select and overrides.",385,[[],[["gpio15ctrl",3],["reg",3],["rw",3]]]],[11,"gpio16_status","","GPIO status",385,[[],[["gpio16status",3],["rw",3],["reg",3]]]],[11,"gpio16_ctrl","","GPIO control including function select and overrides.",385,[[],[["reg",3],["gpio16ctrl",3],["rw",3]]]],[11,"gpio17_status","","GPIO status",385,[[],[["gpio17status",3],["rw",3],["reg",3]]]],[11,"gpio17_ctrl","","GPIO control including function select and overrides.",385,[[],[["gpio17ctrl",3],["rw",3],["reg",3]]]],[11,"gpio18_status","","GPIO status",385,[[],[["rw",3],["reg",3],["gpio18status",3]]]],[11,"gpio18_ctrl","","GPIO control including function select and overrides.",385,[[],[["gpio18ctrl",3],["rw",3],["reg",3]]]],[11,"gpio19_status","","GPIO status",385,[[],[["reg",3],["gpio19status",3],["rw",3]]]],[11,"gpio19_ctrl","","GPIO control including function select and overrides.",385,[[],[["reg",3],["gpio19ctrl",3],["rw",3]]]],[11,"gpio20_status","","GPIO status",385,[[],[["gpio20status",3],["rw",3],["reg",3]]]],[11,"gpio20_ctrl","","GPIO control including function select and overrides.",385,[[],[["gpio20ctrl",3],["rw",3],["reg",3]]]],[11,"gpio21_status","","GPIO status",385,[[],[["gpio21status",3],["rw",3],["reg",3]]]],[11,"gpio21_ctrl","","GPIO control including function select and overrides.",385,[[],[["rw",3],["reg",3],["gpio21ctrl",3]]]],[11,"gpio22_status","","GPIO status",385,[[],[["rw",3],["gpio22status",3],["reg",3]]]],[11,"gpio22_ctrl","","GPIO control including function select and overrides.",385,[[],[["gpio22ctrl",3],["reg",3],["rw",3]]]],[11,"gpio23_status","","GPIO status",385,[[],[["gpio23status",3],["rw",3],["reg",3]]]],[11,"gpio23_ctrl","","GPIO control including function select and overrides.",385,[[],[["gpio23ctrl",3],["rw",3],["reg",3]]]],[11,"gpio24_status","","GPIO status",385,[[],[["gpio24status",3],["reg",3],["rw",3]]]],[11,"gpio24_ctrl","","GPIO control including function select and overrides.",385,[[],[["reg",3],["gpio24ctrl",3],["rw",3]]]],[11,"gpio25_status","","GPIO status",385,[[],[["rw",3],["gpio25status",3],["reg",3]]]],[11,"gpio25_ctrl","","GPIO control including function select and overrides.",385,[[],[["reg",3],["gpio25ctrl",3],["rw",3]]]],[11,"gpio26_status","","GPIO status",385,[[],[["reg",3],["gpio26status",3],["rw",3]]]],[11,"gpio26_ctrl","","GPIO control including function select and overrides.",385,[[],[["gpio26ctrl",3],["rw",3],["reg",3]]]],[11,"gpio27_status","","GPIO status",385,[[],[["rw",3],["reg",3],["gpio27status",3]]]],[11,"gpio27_ctrl","","GPIO control including function select and overrides.",385,[[],[["reg",3],["gpio27ctrl",3],["rw",3]]]],[11,"gpio28_status","","GPIO status",385,[[],[["rw",3],["reg",3],["gpio28status",3]]]],[11,"gpio28_ctrl","","GPIO control including function select and overrides.",385,[[],[["reg",3],["rw",3],["gpio28ctrl",3]]]],[11,"gpio29_status","","GPIO status",385,[[],[["gpio29status",3],["reg",3],["rw",3]]]],[11,"gpio29_ctrl","","GPIO control including function select and overrides.",385,[[],[["gpio29ctrl",3],["rw",3],["reg",3]]]],[11,"intr0","","Raw Interrupts",385,[[],[["intr0",3],["reg",3],["rw",3]]]],[11,"intr1","","Raw Interrupts",385,[[],[["reg",3],["intr1",3],["rw",3]]]],[11,"intr2","","Raw Interrupts",385,[[],[["intr2",3],["reg",3],["rw",3]]]],[11,"intr3","","Raw Interrupts",385,[[],[["intr3",3],["reg",3],["rw",3]]]],[11,"proc0_inte0","","Interrupt Enable for proc0",385,[[],[["proc0inte0",3],["rw",3],["reg",3]]]],[11,"proc0_inte1","","Interrupt Enable for proc0",385,[[],[["proc0inte1",3],["reg",3],["rw",3]]]],[11,"proc0_inte2","","Interrupt Enable for proc0",385,[[],[["reg",3],["proc0inte2",3],["rw",3]]]],[11,"proc0_inte3","","Interrupt Enable for proc0",385,[[],[["reg",3],["rw",3],["proc0inte3",3]]]],[11,"proc0_intf0","","Interrupt Force for proc0",385,[[],[["proc0intf0",3],["reg",3],["rw",3]]]],[11,"proc0_intf1","","Interrupt Force for proc0",385,[[],[["reg",3],["proc0intf1",3],["rw",3]]]],[11,"proc0_intf2","","Interrupt Force for proc0",385,[[],[["rw",3],["reg",3],["proc0intf2",3]]]],[11,"proc0_intf3","","Interrupt Force for proc0",385,[[],[["reg",3],["proc0intf3",3],["rw",3]]]],[11,"proc0_ints0","","Interrupt status after masking & forcing for proc0",385,[[],[["proc0ints0",3],["reg",3],["rw",3]]]],[11,"proc0_ints1","","Interrupt status after masking & forcing for proc0",385,[[],[["proc0ints1",3],["reg",3],["rw",3]]]],[11,"proc0_ints2","","Interrupt status after masking & forcing for proc0",385,[[],[["proc0ints2",3],["rw",3],["reg",3]]]],[11,"proc0_ints3","","Interrupt status after masking & forcing for proc0",385,[[],[["rw",3],["reg",3],["proc0ints3",3]]]],[11,"proc1_inte0","","Interrupt Enable for proc1",385,[[],[["reg",3],["proc1inte0",3],["rw",3]]]],[11,"proc1_inte1","","Interrupt Enable for proc1",385,[[],[["rw",3],["reg",3],["proc1inte1",3]]]],[11,"proc1_inte2","","Interrupt Enable for proc1",385,[[],[["proc1inte2",3],["rw",3],["reg",3]]]],[11,"proc1_inte3","","Interrupt Enable for proc1",385,[[],[["reg",3],["proc1inte3",3],["rw",3]]]],[11,"proc1_intf0","","Interrupt Force for proc1",385,[[],[["proc1intf0",3],["reg",3],["rw",3]]]],[11,"proc1_intf1","","Interrupt Force for proc1",385,[[],[["proc1intf1",3],["rw",3],["reg",3]]]],[11,"proc1_intf2","","Interrupt Force for proc1",385,[[],[["reg",3],["rw",3],["proc1intf2",3]]]],[11,"proc1_intf3","","Interrupt Force for proc1",385,[[],[["rw",3],["reg",3],["proc1intf3",3]]]],[11,"proc1_ints0","","Interrupt status after masking & forcing for proc1",385,[[],[["reg",3],["proc1ints0",3],["rw",3]]]],[11,"proc1_ints1","","Interrupt status after masking & forcing for proc1",385,[[],[["rw",3],["proc1ints1",3],["reg",3]]]],[11,"proc1_ints2","","Interrupt status after masking & forcing for proc1",385,[[],[["proc1ints2",3],["rw",3],["reg",3]]]],[11,"proc1_ints3","","Interrupt status after masking & forcing for proc1",385,[[],[["reg",3],["proc1ints3",3],["rw",3]]]],[11,"dormant_wake_inte0","","Interrupt Enable for dormant_wake",385,[[],[["dormantwakeinte0",3],["reg",3],["rw",3]]]],[11,"dormant_wake_inte1","","Interrupt Enable for dormant_wake",385,[[],[["reg",3],["dormantwakeinte1",3],["rw",3]]]],[11,"dormant_wake_inte2","","Interrupt Enable for dormant_wake",385,[[],[["rw",3],["reg",3],["dormantwakeinte2",3]]]],[11,"dormant_wake_inte3","","Interrupt Enable for dormant_wake",385,[[],[["dormantwakeinte3",3],["rw",3],["reg",3]]]],[11,"dormant_wake_intf0","","Interrupt Force for dormant_wake",385,[[],[["dormantwakeintf0",3],["rw",3],["reg",3]]]],[11,"dormant_wake_intf1","","Interrupt Force for dormant_wake",385,[[],[["dormantwakeintf1",3],["rw",3],["reg",3]]]],[11,"dormant_wake_intf2","","Interrupt Force for dormant_wake",385,[[],[["rw",3],["dormantwakeintf2",3],["reg",3]]]],[11,"dormant_wake_intf3","","Interrupt Force for dormant_wake",385,[[],[["reg",3],["dormantwakeintf3",3],["rw",3]]]],[11,"dormant_wake_ints0","","Interrupt status after masking & forcing for dormant_wake",385,[[],[["rw",3],["reg",3],["dormantwakeints0",3]]]],[11,"dormant_wake_ints1","","Interrupt status after masking & forcing for dormant_wake",385,[[],[["dormantwakeints1",3],["rw",3],["reg",3]]]],[11,"dormant_wake_ints2","","Interrupt status after masking & forcing for dormant_wake",385,[[],[["reg",3],["dormantwakeints2",3],["rw",3]]]],[11,"dormant_wake_ints3","","Interrupt status after masking & forcing for dormant_wake",385,[[],[["reg",3],["dormantwakeints3",3],["rw",3]]]],[0,"io_qspi","rp2040_pac","",null,null],[0,"fields","rp2040_pac::io_qspi","",null,null],[3,"GpioQspiSclkCtrl","rp2040_pac::io_qspi::fields","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",386,[[]]],[11,"from_bits","","",386,[[],["gpioqspisclkctrl",3]]],[11,"irqover","","",386,[[],["irqover",3]]],[11,"set_irqover","","",386,[[["irqover",3]]]],[11,"inover","","",386,[[],["inover",3]]],[11,"set_inover","","",386,[[["inover",3]]]],[11,"oeover","","",386,[[],["oeover",3]]],[11,"set_oeover","","",386,[[["oeover",3]]]],[11,"outover","","",386,[[],["outover",3]]],[11,"set_outover","","",386,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",386,[[],["gpioqspisclkctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",386,[[["gpioqspisclkctrlfuncsel",3]]]],[3,"GpioQspiSclkStatus","","GPIO status",null,null],[11,"to_bits","","",387,[[]]],[11,"from_bits","","",387,[[],["gpioqspisclkstatus",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",387,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",387,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",387,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",387,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",387,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",387,[[]]],[11,"infrompad","","input signal from pad, before override is applied",387,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",387,[[]]],[11,"oetopad","","output enable to pad after register override is applied",387,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",387,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",387,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",387,[[]]],[11,"outtopad","","output signal to pad after register override is applied",387,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",387,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",387,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",387,[[]]],[3,"Proc1Ints","","Interrupt status after masking & forcing for proc1",null,null],[11,"to_bits","","",388,[[]]],[11,"from_bits","","",388,[[],["proc1ints",3]]],[11,"gpio_qspi_sd3_edge_high","","",388,[[]]],[11,"set_gpio_qspi_sd3_edge_high","","",388,[[]]],[11,"gpio_qspi_sd3_edge_low","","",388,[[]]],[11,"set_gpio_qspi_sd3_edge_low","","",388,[[]]],[11,"gpio_qspi_sd3_level_high","","",388,[[]]],[11,"set_gpio_qspi_sd3_level_high","","",388,[[]]],[11,"gpio_qspi_sd3_level_low","","",388,[[]]],[11,"set_gpio_qspi_sd3_level_low","","",388,[[]]],[11,"gpio_qspi_sd2_edge_high","","",388,[[]]],[11,"set_gpio_qspi_sd2_edge_high","","",388,[[]]],[11,"gpio_qspi_sd2_edge_low","","",388,[[]]],[11,"set_gpio_qspi_sd2_edge_low","","",388,[[]]],[11,"gpio_qspi_sd2_level_high","","",388,[[]]],[11,"set_gpio_qspi_sd2_level_high","","",388,[[]]],[11,"gpio_qspi_sd2_level_low","","",388,[[]]],[11,"set_gpio_qspi_sd2_level_low","","",388,[[]]],[11,"gpio_qspi_sd1_edge_high","","",388,[[]]],[11,"set_gpio_qspi_sd1_edge_high","","",388,[[]]],[11,"gpio_qspi_sd1_edge_low","","",388,[[]]],[11,"set_gpio_qspi_sd1_edge_low","","",388,[[]]],[11,"gpio_qspi_sd1_level_high","","",388,[[]]],[11,"set_gpio_qspi_sd1_level_high","","",388,[[]]],[11,"gpio_qspi_sd1_level_low","","",388,[[]]],[11,"set_gpio_qspi_sd1_level_low","","",388,[[]]],[11,"gpio_qspi_sd0_edge_high","","",388,[[]]],[11,"set_gpio_qspi_sd0_edge_high","","",388,[[]]],[11,"gpio_qspi_sd0_edge_low","","",388,[[]]],[11,"set_gpio_qspi_sd0_edge_low","","",388,[[]]],[11,"gpio_qspi_sd0_level_high","","",388,[[]]],[11,"set_gpio_qspi_sd0_level_high","","",388,[[]]],[11,"gpio_qspi_sd0_level_low","","",388,[[]]],[11,"set_gpio_qspi_sd0_level_low","","",388,[[]]],[11,"gpio_qspi_ss_edge_high","","",388,[[]]],[11,"set_gpio_qspi_ss_edge_high","","",388,[[]]],[11,"gpio_qspi_ss_edge_low","","",388,[[]]],[11,"set_gpio_qspi_ss_edge_low","","",388,[[]]],[11,"gpio_qspi_ss_level_high","","",388,[[]]],[11,"set_gpio_qspi_ss_level_high","","",388,[[]]],[11,"gpio_qspi_ss_level_low","","",388,[[]]],[11,"set_gpio_qspi_ss_level_low","","",388,[[]]],[11,"gpio_qspi_sclk_edge_high","","",388,[[]]],[11,"set_gpio_qspi_sclk_edge_high","","",388,[[]]],[11,"gpio_qspi_sclk_edge_low","","",388,[[]]],[11,"set_gpio_qspi_sclk_edge_low","","",388,[[]]],[11,"gpio_qspi_sclk_level_high","","",388,[[]]],[11,"set_gpio_qspi_sclk_level_high","","",388,[[]]],[11,"gpio_qspi_sclk_level_low","","",388,[[]]],[11,"set_gpio_qspi_sclk_level_low","","",388,[[]]],[3,"Proc0Ints","","Interrupt status after masking & forcing for proc0",null,null],[11,"to_bits","","",389,[[]]],[11,"from_bits","","",389,[[],["proc0ints",3]]],[11,"gpio_qspi_sd3_edge_high","","",389,[[]]],[11,"set_gpio_qspi_sd3_edge_high","","",389,[[]]],[11,"gpio_qspi_sd3_edge_low","","",389,[[]]],[11,"set_gpio_qspi_sd3_edge_low","","",389,[[]]],[11,"gpio_qspi_sd3_level_high","","",389,[[]]],[11,"set_gpio_qspi_sd3_level_high","","",389,[[]]],[11,"gpio_qspi_sd3_level_low","","",389,[[]]],[11,"set_gpio_qspi_sd3_level_low","","",389,[[]]],[11,"gpio_qspi_sd2_edge_high","","",389,[[]]],[11,"set_gpio_qspi_sd2_edge_high","","",389,[[]]],[11,"gpio_qspi_sd2_edge_low","","",389,[[]]],[11,"set_gpio_qspi_sd2_edge_low","","",389,[[]]],[11,"gpio_qspi_sd2_level_high","","",389,[[]]],[11,"set_gpio_qspi_sd2_level_high","","",389,[[]]],[11,"gpio_qspi_sd2_level_low","","",389,[[]]],[11,"set_gpio_qspi_sd2_level_low","","",389,[[]]],[11,"gpio_qspi_sd1_edge_high","","",389,[[]]],[11,"set_gpio_qspi_sd1_edge_high","","",389,[[]]],[11,"gpio_qspi_sd1_edge_low","","",389,[[]]],[11,"set_gpio_qspi_sd1_edge_low","","",389,[[]]],[11,"gpio_qspi_sd1_level_high","","",389,[[]]],[11,"set_gpio_qspi_sd1_level_high","","",389,[[]]],[11,"gpio_qspi_sd1_level_low","","",389,[[]]],[11,"set_gpio_qspi_sd1_level_low","","",389,[[]]],[11,"gpio_qspi_sd0_edge_high","","",389,[[]]],[11,"set_gpio_qspi_sd0_edge_high","","",389,[[]]],[11,"gpio_qspi_sd0_edge_low","","",389,[[]]],[11,"set_gpio_qspi_sd0_edge_low","","",389,[[]]],[11,"gpio_qspi_sd0_level_high","","",389,[[]]],[11,"set_gpio_qspi_sd0_level_high","","",389,[[]]],[11,"gpio_qspi_sd0_level_low","","",389,[[]]],[11,"set_gpio_qspi_sd0_level_low","","",389,[[]]],[11,"gpio_qspi_ss_edge_high","","",389,[[]]],[11,"set_gpio_qspi_ss_edge_high","","",389,[[]]],[11,"gpio_qspi_ss_edge_low","","",389,[[]]],[11,"set_gpio_qspi_ss_edge_low","","",389,[[]]],[11,"gpio_qspi_ss_level_high","","",389,[[]]],[11,"set_gpio_qspi_ss_level_high","","",389,[[]]],[11,"gpio_qspi_ss_level_low","","",389,[[]]],[11,"set_gpio_qspi_ss_level_low","","",389,[[]]],[11,"gpio_qspi_sclk_edge_high","","",389,[[]]],[11,"set_gpio_qspi_sclk_edge_high","","",389,[[]]],[11,"gpio_qspi_sclk_edge_low","","",389,[[]]],[11,"set_gpio_qspi_sclk_edge_low","","",389,[[]]],[11,"gpio_qspi_sclk_level_high","","",389,[[]]],[11,"set_gpio_qspi_sclk_level_high","","",389,[[]]],[11,"gpio_qspi_sclk_level_low","","",389,[[]]],[11,"set_gpio_qspi_sclk_level_low","","",389,[[]]],[3,"GpioQspiSsStatus","","GPIO status",null,null],[11,"to_bits","","",390,[[]]],[11,"from_bits","","",390,[[],["gpioqspissstatus",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",390,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",390,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",390,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",390,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",390,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",390,[[]]],[11,"infrompad","","input signal from pad, before override is applied",390,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",390,[[]]],[11,"oetopad","","output enable to pad after register override is applied",390,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",390,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",390,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",390,[[]]],[11,"outtopad","","output signal to pad after register override is applied",390,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",390,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",390,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",390,[[]]],[3,"Proc0Inte","","Interrupt Enable for proc0",null,null],[11,"to_bits","","",391,[[]]],[11,"from_bits","","",391,[[],["proc0inte",3]]],[11,"gpio_qspi_sd3_edge_high","","",391,[[]]],[11,"set_gpio_qspi_sd3_edge_high","","",391,[[]]],[11,"gpio_qspi_sd3_edge_low","","",391,[[]]],[11,"set_gpio_qspi_sd3_edge_low","","",391,[[]]],[11,"gpio_qspi_sd3_level_high","","",391,[[]]],[11,"set_gpio_qspi_sd3_level_high","","",391,[[]]],[11,"gpio_qspi_sd3_level_low","","",391,[[]]],[11,"set_gpio_qspi_sd3_level_low","","",391,[[]]],[11,"gpio_qspi_sd2_edge_high","","",391,[[]]],[11,"set_gpio_qspi_sd2_edge_high","","",391,[[]]],[11,"gpio_qspi_sd2_edge_low","","",391,[[]]],[11,"set_gpio_qspi_sd2_edge_low","","",391,[[]]],[11,"gpio_qspi_sd2_level_high","","",391,[[]]],[11,"set_gpio_qspi_sd2_level_high","","",391,[[]]],[11,"gpio_qspi_sd2_level_low","","",391,[[]]],[11,"set_gpio_qspi_sd2_level_low","","",391,[[]]],[11,"gpio_qspi_sd1_edge_high","","",391,[[]]],[11,"set_gpio_qspi_sd1_edge_high","","",391,[[]]],[11,"gpio_qspi_sd1_edge_low","","",391,[[]]],[11,"set_gpio_qspi_sd1_edge_low","","",391,[[]]],[11,"gpio_qspi_sd1_level_high","","",391,[[]]],[11,"set_gpio_qspi_sd1_level_high","","",391,[[]]],[11,"gpio_qspi_sd1_level_low","","",391,[[]]],[11,"set_gpio_qspi_sd1_level_low","","",391,[[]]],[11,"gpio_qspi_sd0_edge_high","","",391,[[]]],[11,"set_gpio_qspi_sd0_edge_high","","",391,[[]]],[11,"gpio_qspi_sd0_edge_low","","",391,[[]]],[11,"set_gpio_qspi_sd0_edge_low","","",391,[[]]],[11,"gpio_qspi_sd0_level_high","","",391,[[]]],[11,"set_gpio_qspi_sd0_level_high","","",391,[[]]],[11,"gpio_qspi_sd0_level_low","","",391,[[]]],[11,"set_gpio_qspi_sd0_level_low","","",391,[[]]],[11,"gpio_qspi_ss_edge_high","","",391,[[]]],[11,"set_gpio_qspi_ss_edge_high","","",391,[[]]],[11,"gpio_qspi_ss_edge_low","","",391,[[]]],[11,"set_gpio_qspi_ss_edge_low","","",391,[[]]],[11,"gpio_qspi_ss_level_high","","",391,[[]]],[11,"set_gpio_qspi_ss_level_high","","",391,[[]]],[11,"gpio_qspi_ss_level_low","","",391,[[]]],[11,"set_gpio_qspi_ss_level_low","","",391,[[]]],[11,"gpio_qspi_sclk_edge_high","","",391,[[]]],[11,"set_gpio_qspi_sclk_edge_high","","",391,[[]]],[11,"gpio_qspi_sclk_edge_low","","",391,[[]]],[11,"set_gpio_qspi_sclk_edge_low","","",391,[[]]],[11,"gpio_qspi_sclk_level_high","","",391,[[]]],[11,"set_gpio_qspi_sclk_level_high","","",391,[[]]],[11,"gpio_qspi_sclk_level_low","","",391,[[]]],[11,"set_gpio_qspi_sclk_level_low","","",391,[[]]],[3,"GpioQspiSd3Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",392,[[]]],[11,"from_bits","","",392,[[],["gpioqspisd3ctrl",3]]],[11,"irqover","","",392,[[],["irqover",3]]],[11,"set_irqover","","",392,[[["irqover",3]]]],[11,"inover","","",392,[[],["inover",3]]],[11,"set_inover","","",392,[[["inover",3]]]],[11,"oeover","","",392,[[],["oeover",3]]],[11,"set_oeover","","",392,[[["oeover",3]]]],[11,"outover","","",392,[[],["outover",3]]],[11,"set_outover","","",392,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",392,[[],["gpioqspisd3ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",392,[[["gpioqspisd3ctrlfuncsel",3]]]],[3,"GpioQspiSd1Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",393,[[]]],[11,"from_bits","","",393,[[],["gpioqspisd1ctrl",3]]],[11,"irqover","","",393,[[],["irqover",3]]],[11,"set_irqover","","",393,[[["irqover",3]]]],[11,"inover","","",393,[[],["inover",3]]],[11,"set_inover","","",393,[[["inover",3]]]],[11,"oeover","","",393,[[],["oeover",3]]],[11,"set_oeover","","",393,[[["oeover",3]]]],[11,"outover","","",393,[[],["outover",3]]],[11,"set_outover","","",393,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",393,[[],["gpioqspisd1ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",393,[[["gpioqspisd1ctrlfuncsel",3]]]],[3,"GpioQspiSsCtrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",394,[[]]],[11,"from_bits","","",394,[[],["gpioqspissctrl",3]]],[11,"irqover","","",394,[[],["irqover",3]]],[11,"set_irqover","","",394,[[["irqover",3]]]],[11,"inover","","",394,[[],["inover",3]]],[11,"set_inover","","",394,[[["inover",3]]]],[11,"oeover","","",394,[[],["oeover",3]]],[11,"set_oeover","","",394,[[["oeover",3]]]],[11,"outover","","",394,[[],["outover",3]]],[11,"set_outover","","",394,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",394,[[],["gpioqspissctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",394,[[["gpioqspissctrlfuncsel",3]]]],[3,"GpioQspiSd3Status","","GPIO status",null,null],[11,"to_bits","","",395,[[]]],[11,"from_bits","","",395,[[],["gpioqspisd3status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",395,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",395,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",395,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",395,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",395,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",395,[[]]],[11,"infrompad","","input signal from pad, before override is applied",395,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",395,[[]]],[11,"oetopad","","output enable to pad after register override is applied",395,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",395,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",395,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",395,[[]]],[11,"outtopad","","output signal to pad after register override is applied",395,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",395,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",395,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",395,[[]]],[3,"Intr","","Raw Interrupts",null,null],[11,"to_bits","","",396,[[]]],[11,"from_bits","","",396,[[],["intr",3]]],[11,"gpio_qspi_sd3_edge_high","","",396,[[]]],[11,"set_gpio_qspi_sd3_edge_high","","",396,[[]]],[11,"gpio_qspi_sd3_edge_low","","",396,[[]]],[11,"set_gpio_qspi_sd3_edge_low","","",396,[[]]],[11,"gpio_qspi_sd3_level_high","","",396,[[]]],[11,"set_gpio_qspi_sd3_level_high","","",396,[[]]],[11,"gpio_qspi_sd3_level_low","","",396,[[]]],[11,"set_gpio_qspi_sd3_level_low","","",396,[[]]],[11,"gpio_qspi_sd2_edge_high","","",396,[[]]],[11,"set_gpio_qspi_sd2_edge_high","","",396,[[]]],[11,"gpio_qspi_sd2_edge_low","","",396,[[]]],[11,"set_gpio_qspi_sd2_edge_low","","",396,[[]]],[11,"gpio_qspi_sd2_level_high","","",396,[[]]],[11,"set_gpio_qspi_sd2_level_high","","",396,[[]]],[11,"gpio_qspi_sd2_level_low","","",396,[[]]],[11,"set_gpio_qspi_sd2_level_low","","",396,[[]]],[11,"gpio_qspi_sd1_edge_high","","",396,[[]]],[11,"set_gpio_qspi_sd1_edge_high","","",396,[[]]],[11,"gpio_qspi_sd1_edge_low","","",396,[[]]],[11,"set_gpio_qspi_sd1_edge_low","","",396,[[]]],[11,"gpio_qspi_sd1_level_high","","",396,[[]]],[11,"set_gpio_qspi_sd1_level_high","","",396,[[]]],[11,"gpio_qspi_sd1_level_low","","",396,[[]]],[11,"set_gpio_qspi_sd1_level_low","","",396,[[]]],[11,"gpio_qspi_sd0_edge_high","","",396,[[]]],[11,"set_gpio_qspi_sd0_edge_high","","",396,[[]]],[11,"gpio_qspi_sd0_edge_low","","",396,[[]]],[11,"set_gpio_qspi_sd0_edge_low","","",396,[[]]],[11,"gpio_qspi_sd0_level_high","","",396,[[]]],[11,"set_gpio_qspi_sd0_level_high","","",396,[[]]],[11,"gpio_qspi_sd0_level_low","","",396,[[]]],[11,"set_gpio_qspi_sd0_level_low","","",396,[[]]],[11,"gpio_qspi_ss_edge_high","","",396,[[]]],[11,"set_gpio_qspi_ss_edge_high","","",396,[[]]],[11,"gpio_qspi_ss_edge_low","","",396,[[]]],[11,"set_gpio_qspi_ss_edge_low","","",396,[[]]],[11,"gpio_qspi_ss_level_high","","",396,[[]]],[11,"set_gpio_qspi_ss_level_high","","",396,[[]]],[11,"gpio_qspi_ss_level_low","","",396,[[]]],[11,"set_gpio_qspi_ss_level_low","","",396,[[]]],[11,"gpio_qspi_sclk_edge_high","","",396,[[]]],[11,"set_gpio_qspi_sclk_edge_high","","",396,[[]]],[11,"gpio_qspi_sclk_edge_low","","",396,[[]]],[11,"set_gpio_qspi_sclk_edge_low","","",396,[[]]],[11,"gpio_qspi_sclk_level_high","","",396,[[]]],[11,"set_gpio_qspi_sclk_level_high","","",396,[[]]],[11,"gpio_qspi_sclk_level_low","","",396,[[]]],[11,"set_gpio_qspi_sclk_level_low","","",396,[[]]],[3,"GpioQspiSd2Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",397,[[]]],[11,"from_bits","","",397,[[],["gpioqspisd2ctrl",3]]],[11,"irqover","","",397,[[],["irqover",3]]],[11,"set_irqover","","",397,[[["irqover",3]]]],[11,"inover","","",397,[[],["inover",3]]],[11,"set_inover","","",397,[[["inover",3]]]],[11,"oeover","","",397,[[],["oeover",3]]],[11,"set_oeover","","",397,[[["oeover",3]]]],[11,"outover","","",397,[[],["outover",3]]],[11,"set_outover","","",397,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",397,[[],["gpioqspisd2ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",397,[[["gpioqspisd2ctrlfuncsel",3]]]],[3,"GpioQspiSd2Status","","GPIO status",null,null],[11,"to_bits","","",398,[[]]],[11,"from_bits","","",398,[[],["gpioqspisd2status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",398,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",398,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",398,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",398,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",398,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",398,[[]]],[11,"infrompad","","input signal from pad, before override is applied",398,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",398,[[]]],[11,"oetopad","","output enable to pad after register override is applied",398,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",398,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",398,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",398,[[]]],[11,"outtopad","","output signal to pad after register override is applied",398,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",398,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",398,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",398,[[]]],[3,"GpioQspiSd0Ctrl","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",399,[[]]],[11,"from_bits","","",399,[[],["gpioqspisd0ctrl",3]]],[11,"irqover","","",399,[[],["irqover",3]]],[11,"set_irqover","","",399,[[["irqover",3]]]],[11,"inover","","",399,[[],["inover",3]]],[11,"set_inover","","",399,[[["inover",3]]]],[11,"oeover","","",399,[[],["oeover",3]]],[11,"set_oeover","","",399,[[["oeover",3]]]],[11,"outover","","",399,[[],["outover",3]]],[11,"set_outover","","",399,[[["outover",3]]]],[11,"funcsel","","0-31 -> selects pin function according to the gpio table …",399,[[],["gpioqspisd0ctrlfuncsel",3]]],[11,"set_funcsel","","0-31 -> selects pin function according to the gpio table …",399,[[["gpioqspisd0ctrlfuncsel",3]]]],[3,"GpioQspiSd1Status","","GPIO status",null,null],[11,"to_bits","","",400,[[]]],[11,"from_bits","","",400,[[],["gpioqspisd1status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",400,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",400,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",400,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",400,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",400,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",400,[[]]],[11,"infrompad","","input signal from pad, before override is applied",400,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",400,[[]]],[11,"oetopad","","output enable to pad after register override is applied",400,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",400,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",400,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",400,[[]]],[11,"outtopad","","output signal to pad after register override is applied",400,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",400,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",400,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",400,[[]]],[3,"GpioQspiSd0Status","","GPIO status",null,null],[11,"to_bits","","",401,[[]]],[11,"from_bits","","",401,[[],["gpioqspisd0status",3]]],[11,"irqtoproc","","interrupt to processors, after override is applied",401,[[]]],[11,"set_irqtoproc","","interrupt to processors, after override is applied",401,[[]]],[11,"irqfrompad","","interrupt from pad before override is applied",401,[[]]],[11,"set_irqfrompad","","interrupt from pad before override is applied",401,[[]]],[11,"intoperi","","input signal to peripheral, after override is applied",401,[[]]],[11,"set_intoperi","","input signal to peripheral, after override is applied",401,[[]]],[11,"infrompad","","input signal from pad, before override is applied",401,[[]]],[11,"set_infrompad","","input signal from pad, before override is applied",401,[[]]],[11,"oetopad","","output enable to pad after register override is applied",401,[[]]],[11,"set_oetopad","","output enable to pad after register override is applied",401,[[]]],[11,"oefromperi","","output enable from selected peripheral, before register …",401,[[]]],[11,"set_oefromperi","","output enable from selected peripheral, before register …",401,[[]]],[11,"outtopad","","output signal to pad after register override is applied",401,[[]]],[11,"set_outtopad","","output signal to pad after register override is applied",401,[[]]],[11,"outfromperi","","output signal from selected peripheral, before register …",401,[[]]],[11,"set_outfromperi","","output signal from selected peripheral, before register …",401,[[]]],[3,"DormantWakeIntf","","Interrupt Force for dormant_wake",null,null],[11,"to_bits","","",402,[[]]],[11,"from_bits","","",402,[[],["dormantwakeintf",3]]],[11,"gpio_qspi_sd3_edge_high","","",402,[[]]],[11,"set_gpio_qspi_sd3_edge_high","","",402,[[]]],[11,"gpio_qspi_sd3_edge_low","","",402,[[]]],[11,"set_gpio_qspi_sd3_edge_low","","",402,[[]]],[11,"gpio_qspi_sd3_level_high","","",402,[[]]],[11,"set_gpio_qspi_sd3_level_high","","",402,[[]]],[11,"gpio_qspi_sd3_level_low","","",402,[[]]],[11,"set_gpio_qspi_sd3_level_low","","",402,[[]]],[11,"gpio_qspi_sd2_edge_high","","",402,[[]]],[11,"set_gpio_qspi_sd2_edge_high","","",402,[[]]],[11,"gpio_qspi_sd2_edge_low","","",402,[[]]],[11,"set_gpio_qspi_sd2_edge_low","","",402,[[]]],[11,"gpio_qspi_sd2_level_high","","",402,[[]]],[11,"set_gpio_qspi_sd2_level_high","","",402,[[]]],[11,"gpio_qspi_sd2_level_low","","",402,[[]]],[11,"set_gpio_qspi_sd2_level_low","","",402,[[]]],[11,"gpio_qspi_sd1_edge_high","","",402,[[]]],[11,"set_gpio_qspi_sd1_edge_high","","",402,[[]]],[11,"gpio_qspi_sd1_edge_low","","",402,[[]]],[11,"set_gpio_qspi_sd1_edge_low","","",402,[[]]],[11,"gpio_qspi_sd1_level_high","","",402,[[]]],[11,"set_gpio_qspi_sd1_level_high","","",402,[[]]],[11,"gpio_qspi_sd1_level_low","","",402,[[]]],[11,"set_gpio_qspi_sd1_level_low","","",402,[[]]],[11,"gpio_qspi_sd0_edge_high","","",402,[[]]],[11,"set_gpio_qspi_sd0_edge_high","","",402,[[]]],[11,"gpio_qspi_sd0_edge_low","","",402,[[]]],[11,"set_gpio_qspi_sd0_edge_low","","",402,[[]]],[11,"gpio_qspi_sd0_level_high","","",402,[[]]],[11,"set_gpio_qspi_sd0_level_high","","",402,[[]]],[11,"gpio_qspi_sd0_level_low","","",402,[[]]],[11,"set_gpio_qspi_sd0_level_low","","",402,[[]]],[11,"gpio_qspi_ss_edge_high","","",402,[[]]],[11,"set_gpio_qspi_ss_edge_high","","",402,[[]]],[11,"gpio_qspi_ss_edge_low","","",402,[[]]],[11,"set_gpio_qspi_ss_edge_low","","",402,[[]]],[11,"gpio_qspi_ss_level_high","","",402,[[]]],[11,"set_gpio_qspi_ss_level_high","","",402,[[]]],[11,"gpio_qspi_ss_level_low","","",402,[[]]],[11,"set_gpio_qspi_ss_level_low","","",402,[[]]],[11,"gpio_qspi_sclk_edge_high","","",402,[[]]],[11,"set_gpio_qspi_sclk_edge_high","","",402,[[]]],[11,"gpio_qspi_sclk_edge_low","","",402,[[]]],[11,"set_gpio_qspi_sclk_edge_low","","",402,[[]]],[11,"gpio_qspi_sclk_level_high","","",402,[[]]],[11,"set_gpio_qspi_sclk_level_high","","",402,[[]]],[11,"gpio_qspi_sclk_level_low","","",402,[[]]],[11,"set_gpio_qspi_sclk_level_low","","",402,[[]]],[3,"DormantWakeInts","","Interrupt status after masking & forcing for dormant_wake",null,null],[11,"to_bits","","",403,[[]]],[11,"from_bits","","",403,[[],["dormantwakeints",3]]],[11,"gpio_qspi_sd3_edge_high","","",403,[[]]],[11,"set_gpio_qspi_sd3_edge_high","","",403,[[]]],[11,"gpio_qspi_sd3_edge_low","","",403,[[]]],[11,"set_gpio_qspi_sd3_edge_low","","",403,[[]]],[11,"gpio_qspi_sd3_level_high","","",403,[[]]],[11,"set_gpio_qspi_sd3_level_high","","",403,[[]]],[11,"gpio_qspi_sd3_level_low","","",403,[[]]],[11,"set_gpio_qspi_sd3_level_low","","",403,[[]]],[11,"gpio_qspi_sd2_edge_high","","",403,[[]]],[11,"set_gpio_qspi_sd2_edge_high","","",403,[[]]],[11,"gpio_qspi_sd2_edge_low","","",403,[[]]],[11,"set_gpio_qspi_sd2_edge_low","","",403,[[]]],[11,"gpio_qspi_sd2_level_high","","",403,[[]]],[11,"set_gpio_qspi_sd2_level_high","","",403,[[]]],[11,"gpio_qspi_sd2_level_low","","",403,[[]]],[11,"set_gpio_qspi_sd2_level_low","","",403,[[]]],[11,"gpio_qspi_sd1_edge_high","","",403,[[]]],[11,"set_gpio_qspi_sd1_edge_high","","",403,[[]]],[11,"gpio_qspi_sd1_edge_low","","",403,[[]]],[11,"set_gpio_qspi_sd1_edge_low","","",403,[[]]],[11,"gpio_qspi_sd1_level_high","","",403,[[]]],[11,"set_gpio_qspi_sd1_level_high","","",403,[[]]],[11,"gpio_qspi_sd1_level_low","","",403,[[]]],[11,"set_gpio_qspi_sd1_level_low","","",403,[[]]],[11,"gpio_qspi_sd0_edge_high","","",403,[[]]],[11,"set_gpio_qspi_sd0_edge_high","","",403,[[]]],[11,"gpio_qspi_sd0_edge_low","","",403,[[]]],[11,"set_gpio_qspi_sd0_edge_low","","",403,[[]]],[11,"gpio_qspi_sd0_level_high","","",403,[[]]],[11,"set_gpio_qspi_sd0_level_high","","",403,[[]]],[11,"gpio_qspi_sd0_level_low","","",403,[[]]],[11,"set_gpio_qspi_sd0_level_low","","",403,[[]]],[11,"gpio_qspi_ss_edge_high","","",403,[[]]],[11,"set_gpio_qspi_ss_edge_high","","",403,[[]]],[11,"gpio_qspi_ss_edge_low","","",403,[[]]],[11,"set_gpio_qspi_ss_edge_low","","",403,[[]]],[11,"gpio_qspi_ss_level_high","","",403,[[]]],[11,"set_gpio_qspi_ss_level_high","","",403,[[]]],[11,"gpio_qspi_ss_level_low","","",403,[[]]],[11,"set_gpio_qspi_ss_level_low","","",403,[[]]],[11,"gpio_qspi_sclk_edge_high","","",403,[[]]],[11,"set_gpio_qspi_sclk_edge_high","","",403,[[]]],[11,"gpio_qspi_sclk_edge_low","","",403,[[]]],[11,"set_gpio_qspi_sclk_edge_low","","",403,[[]]],[11,"gpio_qspi_sclk_level_high","","",403,[[]]],[11,"set_gpio_qspi_sclk_level_high","","",403,[[]]],[11,"gpio_qspi_sclk_level_low","","",403,[[]]],[11,"set_gpio_qspi_sclk_level_low","","",403,[[]]],[3,"Proc1Intf","","Interrupt Force for proc1",null,null],[11,"to_bits","","",404,[[]]],[11,"from_bits","","",404,[[],["proc1intf",3]]],[11,"gpio_qspi_sd3_edge_high","","",404,[[]]],[11,"set_gpio_qspi_sd3_edge_high","","",404,[[]]],[11,"gpio_qspi_sd3_edge_low","","",404,[[]]],[11,"set_gpio_qspi_sd3_edge_low","","",404,[[]]],[11,"gpio_qspi_sd3_level_high","","",404,[[]]],[11,"set_gpio_qspi_sd3_level_high","","",404,[[]]],[11,"gpio_qspi_sd3_level_low","","",404,[[]]],[11,"set_gpio_qspi_sd3_level_low","","",404,[[]]],[11,"gpio_qspi_sd2_edge_high","","",404,[[]]],[11,"set_gpio_qspi_sd2_edge_high","","",404,[[]]],[11,"gpio_qspi_sd2_edge_low","","",404,[[]]],[11,"set_gpio_qspi_sd2_edge_low","","",404,[[]]],[11,"gpio_qspi_sd2_level_high","","",404,[[]]],[11,"set_gpio_qspi_sd2_level_high","","",404,[[]]],[11,"gpio_qspi_sd2_level_low","","",404,[[]]],[11,"set_gpio_qspi_sd2_level_low","","",404,[[]]],[11,"gpio_qspi_sd1_edge_high","","",404,[[]]],[11,"set_gpio_qspi_sd1_edge_high","","",404,[[]]],[11,"gpio_qspi_sd1_edge_low","","",404,[[]]],[11,"set_gpio_qspi_sd1_edge_low","","",404,[[]]],[11,"gpio_qspi_sd1_level_high","","",404,[[]]],[11,"set_gpio_qspi_sd1_level_high","","",404,[[]]],[11,"gpio_qspi_sd1_level_low","","",404,[[]]],[11,"set_gpio_qspi_sd1_level_low","","",404,[[]]],[11,"gpio_qspi_sd0_edge_high","","",404,[[]]],[11,"set_gpio_qspi_sd0_edge_high","","",404,[[]]],[11,"gpio_qspi_sd0_edge_low","","",404,[[]]],[11,"set_gpio_qspi_sd0_edge_low","","",404,[[]]],[11,"gpio_qspi_sd0_level_high","","",404,[[]]],[11,"set_gpio_qspi_sd0_level_high","","",404,[[]]],[11,"gpio_qspi_sd0_level_low","","",404,[[]]],[11,"set_gpio_qspi_sd0_level_low","","",404,[[]]],[11,"gpio_qspi_ss_edge_high","","",404,[[]]],[11,"set_gpio_qspi_ss_edge_high","","",404,[[]]],[11,"gpio_qspi_ss_edge_low","","",404,[[]]],[11,"set_gpio_qspi_ss_edge_low","","",404,[[]]],[11,"gpio_qspi_ss_level_high","","",404,[[]]],[11,"set_gpio_qspi_ss_level_high","","",404,[[]]],[11,"gpio_qspi_ss_level_low","","",404,[[]]],[11,"set_gpio_qspi_ss_level_low","","",404,[[]]],[11,"gpio_qspi_sclk_edge_high","","",404,[[]]],[11,"set_gpio_qspi_sclk_edge_high","","",404,[[]]],[11,"gpio_qspi_sclk_edge_low","","",404,[[]]],[11,"set_gpio_qspi_sclk_edge_low","","",404,[[]]],[11,"gpio_qspi_sclk_level_high","","",404,[[]]],[11,"set_gpio_qspi_sclk_level_high","","",404,[[]]],[11,"gpio_qspi_sclk_level_low","","",404,[[]]],[11,"set_gpio_qspi_sclk_level_low","","",404,[[]]],[3,"Proc0Intf","","Interrupt Force for proc0",null,null],[11,"to_bits","","",405,[[]]],[11,"from_bits","","",405,[[],["proc0intf",3]]],[11,"gpio_qspi_sd3_edge_high","","",405,[[]]],[11,"set_gpio_qspi_sd3_edge_high","","",405,[[]]],[11,"gpio_qspi_sd3_edge_low","","",405,[[]]],[11,"set_gpio_qspi_sd3_edge_low","","",405,[[]]],[11,"gpio_qspi_sd3_level_high","","",405,[[]]],[11,"set_gpio_qspi_sd3_level_high","","",405,[[]]],[11,"gpio_qspi_sd3_level_low","","",405,[[]]],[11,"set_gpio_qspi_sd3_level_low","","",405,[[]]],[11,"gpio_qspi_sd2_edge_high","","",405,[[]]],[11,"set_gpio_qspi_sd2_edge_high","","",405,[[]]],[11,"gpio_qspi_sd2_edge_low","","",405,[[]]],[11,"set_gpio_qspi_sd2_edge_low","","",405,[[]]],[11,"gpio_qspi_sd2_level_high","","",405,[[]]],[11,"set_gpio_qspi_sd2_level_high","","",405,[[]]],[11,"gpio_qspi_sd2_level_low","","",405,[[]]],[11,"set_gpio_qspi_sd2_level_low","","",405,[[]]],[11,"gpio_qspi_sd1_edge_high","","",405,[[]]],[11,"set_gpio_qspi_sd1_edge_high","","",405,[[]]],[11,"gpio_qspi_sd1_edge_low","","",405,[[]]],[11,"set_gpio_qspi_sd1_edge_low","","",405,[[]]],[11,"gpio_qspi_sd1_level_high","","",405,[[]]],[11,"set_gpio_qspi_sd1_level_high","","",405,[[]]],[11,"gpio_qspi_sd1_level_low","","",405,[[]]],[11,"set_gpio_qspi_sd1_level_low","","",405,[[]]],[11,"gpio_qspi_sd0_edge_high","","",405,[[]]],[11,"set_gpio_qspi_sd0_edge_high","","",405,[[]]],[11,"gpio_qspi_sd0_edge_low","","",405,[[]]],[11,"set_gpio_qspi_sd0_edge_low","","",405,[[]]],[11,"gpio_qspi_sd0_level_high","","",405,[[]]],[11,"set_gpio_qspi_sd0_level_high","","",405,[[]]],[11,"gpio_qspi_sd0_level_low","","",405,[[]]],[11,"set_gpio_qspi_sd0_level_low","","",405,[[]]],[11,"gpio_qspi_ss_edge_high","","",405,[[]]],[11,"set_gpio_qspi_ss_edge_high","","",405,[[]]],[11,"gpio_qspi_ss_edge_low","","",405,[[]]],[11,"set_gpio_qspi_ss_edge_low","","",405,[[]]],[11,"gpio_qspi_ss_level_high","","",405,[[]]],[11,"set_gpio_qspi_ss_level_high","","",405,[[]]],[11,"gpio_qspi_ss_level_low","","",405,[[]]],[11,"set_gpio_qspi_ss_level_low","","",405,[[]]],[11,"gpio_qspi_sclk_edge_high","","",405,[[]]],[11,"set_gpio_qspi_sclk_edge_high","","",405,[[]]],[11,"gpio_qspi_sclk_edge_low","","",405,[[]]],[11,"set_gpio_qspi_sclk_edge_low","","",405,[[]]],[11,"gpio_qspi_sclk_level_high","","",405,[[]]],[11,"set_gpio_qspi_sclk_level_high","","",405,[[]]],[11,"gpio_qspi_sclk_level_low","","",405,[[]]],[11,"set_gpio_qspi_sclk_level_low","","",405,[[]]],[3,"DormantWakeInte","","Interrupt Enable for dormant_wake",null,null],[11,"to_bits","","",406,[[]]],[11,"from_bits","","",406,[[],["dormantwakeinte",3]]],[11,"gpio_qspi_sd3_edge_high","","",406,[[]]],[11,"set_gpio_qspi_sd3_edge_high","","",406,[[]]],[11,"gpio_qspi_sd3_edge_low","","",406,[[]]],[11,"set_gpio_qspi_sd3_edge_low","","",406,[[]]],[11,"gpio_qspi_sd3_level_high","","",406,[[]]],[11,"set_gpio_qspi_sd3_level_high","","",406,[[]]],[11,"gpio_qspi_sd3_level_low","","",406,[[]]],[11,"set_gpio_qspi_sd3_level_low","","",406,[[]]],[11,"gpio_qspi_sd2_edge_high","","",406,[[]]],[11,"set_gpio_qspi_sd2_edge_high","","",406,[[]]],[11,"gpio_qspi_sd2_edge_low","","",406,[[]]],[11,"set_gpio_qspi_sd2_edge_low","","",406,[[]]],[11,"gpio_qspi_sd2_level_high","","",406,[[]]],[11,"set_gpio_qspi_sd2_level_high","","",406,[[]]],[11,"gpio_qspi_sd2_level_low","","",406,[[]]],[11,"set_gpio_qspi_sd2_level_low","","",406,[[]]],[11,"gpio_qspi_sd1_edge_high","","",406,[[]]],[11,"set_gpio_qspi_sd1_edge_high","","",406,[[]]],[11,"gpio_qspi_sd1_edge_low","","",406,[[]]],[11,"set_gpio_qspi_sd1_edge_low","","",406,[[]]],[11,"gpio_qspi_sd1_level_high","","",406,[[]]],[11,"set_gpio_qspi_sd1_level_high","","",406,[[]]],[11,"gpio_qspi_sd1_level_low","","",406,[[]]],[11,"set_gpio_qspi_sd1_level_low","","",406,[[]]],[11,"gpio_qspi_sd0_edge_high","","",406,[[]]],[11,"set_gpio_qspi_sd0_edge_high","","",406,[[]]],[11,"gpio_qspi_sd0_edge_low","","",406,[[]]],[11,"set_gpio_qspi_sd0_edge_low","","",406,[[]]],[11,"gpio_qspi_sd0_level_high","","",406,[[]]],[11,"set_gpio_qspi_sd0_level_high","","",406,[[]]],[11,"gpio_qspi_sd0_level_low","","",406,[[]]],[11,"set_gpio_qspi_sd0_level_low","","",406,[[]]],[11,"gpio_qspi_ss_edge_high","","",406,[[]]],[11,"set_gpio_qspi_ss_edge_high","","",406,[[]]],[11,"gpio_qspi_ss_edge_low","","",406,[[]]],[11,"set_gpio_qspi_ss_edge_low","","",406,[[]]],[11,"gpio_qspi_ss_level_high","","",406,[[]]],[11,"set_gpio_qspi_ss_level_high","","",406,[[]]],[11,"gpio_qspi_ss_level_low","","",406,[[]]],[11,"set_gpio_qspi_ss_level_low","","",406,[[]]],[11,"gpio_qspi_sclk_edge_high","","",406,[[]]],[11,"set_gpio_qspi_sclk_edge_high","","",406,[[]]],[11,"gpio_qspi_sclk_edge_low","","",406,[[]]],[11,"set_gpio_qspi_sclk_edge_low","","",406,[[]]],[11,"gpio_qspi_sclk_level_high","","",406,[[]]],[11,"set_gpio_qspi_sclk_level_high","","",406,[[]]],[11,"gpio_qspi_sclk_level_low","","",406,[[]]],[11,"set_gpio_qspi_sclk_level_low","","",406,[[]]],[3,"Proc1Inte","","Interrupt Enable for proc1",null,null],[11,"to_bits","","",407,[[]]],[11,"from_bits","","",407,[[],["proc1inte",3]]],[11,"gpio_qspi_sd3_edge_high","","",407,[[]]],[11,"set_gpio_qspi_sd3_edge_high","","",407,[[]]],[11,"gpio_qspi_sd3_edge_low","","",407,[[]]],[11,"set_gpio_qspi_sd3_edge_low","","",407,[[]]],[11,"gpio_qspi_sd3_level_high","","",407,[[]]],[11,"set_gpio_qspi_sd3_level_high","","",407,[[]]],[11,"gpio_qspi_sd3_level_low","","",407,[[]]],[11,"set_gpio_qspi_sd3_level_low","","",407,[[]]],[11,"gpio_qspi_sd2_edge_high","","",407,[[]]],[11,"set_gpio_qspi_sd2_edge_high","","",407,[[]]],[11,"gpio_qspi_sd2_edge_low","","",407,[[]]],[11,"set_gpio_qspi_sd2_edge_low","","",407,[[]]],[11,"gpio_qspi_sd2_level_high","","",407,[[]]],[11,"set_gpio_qspi_sd2_level_high","","",407,[[]]],[11,"gpio_qspi_sd2_level_low","","",407,[[]]],[11,"set_gpio_qspi_sd2_level_low","","",407,[[]]],[11,"gpio_qspi_sd1_edge_high","","",407,[[]]],[11,"set_gpio_qspi_sd1_edge_high","","",407,[[]]],[11,"gpio_qspi_sd1_edge_low","","",407,[[]]],[11,"set_gpio_qspi_sd1_edge_low","","",407,[[]]],[11,"gpio_qspi_sd1_level_high","","",407,[[]]],[11,"set_gpio_qspi_sd1_level_high","","",407,[[]]],[11,"gpio_qspi_sd1_level_low","","",407,[[]]],[11,"set_gpio_qspi_sd1_level_low","","",407,[[]]],[11,"gpio_qspi_sd0_edge_high","","",407,[[]]],[11,"set_gpio_qspi_sd0_edge_high","","",407,[[]]],[11,"gpio_qspi_sd0_edge_low","","",407,[[]]],[11,"set_gpio_qspi_sd0_edge_low","","",407,[[]]],[11,"gpio_qspi_sd0_level_high","","",407,[[]]],[11,"set_gpio_qspi_sd0_level_high","","",407,[[]]],[11,"gpio_qspi_sd0_level_low","","",407,[[]]],[11,"set_gpio_qspi_sd0_level_low","","",407,[[]]],[11,"gpio_qspi_ss_edge_high","","",407,[[]]],[11,"set_gpio_qspi_ss_edge_high","","",407,[[]]],[11,"gpio_qspi_ss_edge_low","","",407,[[]]],[11,"set_gpio_qspi_ss_edge_low","","",407,[[]]],[11,"gpio_qspi_ss_level_high","","",407,[[]]],[11,"set_gpio_qspi_ss_level_high","","",407,[[]]],[11,"gpio_qspi_ss_level_low","","",407,[[]]],[11,"set_gpio_qspi_ss_level_low","","",407,[[]]],[11,"gpio_qspi_sclk_edge_high","","",407,[[]]],[11,"set_gpio_qspi_sclk_edge_high","","",407,[[]]],[11,"gpio_qspi_sclk_edge_low","","",407,[[]]],[11,"set_gpio_qspi_sclk_edge_low","","",407,[[]]],[11,"gpio_qspi_sclk_level_high","","",407,[[]]],[11,"set_gpio_qspi_sclk_level_high","","",407,[[]]],[11,"gpio_qspi_sclk_level_low","","",407,[[]]],[11,"set_gpio_qspi_sclk_level_low","","",407,[[]]],[0,"values","rp2040_pac::io_qspi","",null,null],[3,"GpioQspiSclkCtrlFuncsel","rp2040_pac::io_qspi::values","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",408,[[]]],[11,"from_bits","","",408,[[],["gpioqspisclkctrlfuncsel",3]]],[18,"XIP_SCLK","","",408,null],[18,"SIO_30","","",408,null],[18,"NULL","","",408,null],[3,"GpioQspiSd2CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",409,[[]]],[11,"from_bits","","",409,[[],["gpioqspisd2ctrlfuncsel",3]]],[18,"XIP_SD2","","",409,null],[18,"SIO_34","","",409,null],[18,"NULL","","",409,null],[3,"GpioQspiSd3CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",410,[[]]],[11,"from_bits","","",410,[[],["gpioqspisd3ctrlfuncsel",3]]],[18,"XIP_SD3","","",410,null],[18,"SIO_35","","",410,null],[18,"NULL","","",410,null],[3,"GpioQspiSsCtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",411,[[]]],[11,"from_bits","","",411,[[],["gpioqspissctrlfuncsel",3]]],[18,"XIP_SS_N","","",411,null],[18,"SIO_31","","",411,null],[18,"NULL","","",411,null],[3,"GpioQspiSd1CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",412,[[]]],[11,"from_bits","","",412,[[],["gpioqspisd1ctrlfuncsel",3]]],[18,"XIP_SD1","","",412,null],[18,"SIO_33","","",412,null],[18,"NULL","","",412,null],[3,"GpioQspiSd0CtrlFuncsel","","GPIO control including function select and overrides.",null,null],[11,"to_bits","","",413,[[]]],[11,"from_bits","","",413,[[],["gpioqspisd0ctrlfuncsel",3]]],[18,"XIP_SD0","","",413,null],[18,"SIO_32","","",413,null],[18,"NULL","","",413,null],[3,"IoQspi","rp2040_pac::io_qspi","",null,null],[11,"from_ptr","","",414,[[]]],[11,"gpio_qspi_sclk_status","","GPIO status",414,[[],[["reg",3],["gpioqspisclkstatus",3],["rw",3]]]],[11,"gpio_qspi_sclk_ctrl","","GPIO control including function select and overrides.",414,[[],[["reg",3],["gpioqspisclkctrl",3],["rw",3]]]],[11,"gpio_qspi_ss_status","","GPIO status",414,[[],[["rw",3],["reg",3],["gpioqspissstatus",3]]]],[11,"gpio_qspi_ss_ctrl","","GPIO control including function select and overrides.",414,[[],[["reg",3],["gpioqspissctrl",3],["rw",3]]]],[11,"gpio_qspi_sd0_status","","GPIO status",414,[[],[["gpioqspisd0status",3],["reg",3],["rw",3]]]],[11,"gpio_qspi_sd0_ctrl","","GPIO control including function select and overrides.",414,[[],[["reg",3],["gpioqspisd0ctrl",3],["rw",3]]]],[11,"gpio_qspi_sd1_status","","GPIO status",414,[[],[["reg",3],["rw",3],["gpioqspisd1status",3]]]],[11,"gpio_qspi_sd1_ctrl","","GPIO control including function select and overrides.",414,[[],[["rw",3],["reg",3],["gpioqspisd1ctrl",3]]]],[11,"gpio_qspi_sd2_status","","GPIO status",414,[[],[["reg",3],["gpioqspisd2status",3],["rw",3]]]],[11,"gpio_qspi_sd2_ctrl","","GPIO control including function select and overrides.",414,[[],[["reg",3],["rw",3],["gpioqspisd2ctrl",3]]]],[11,"gpio_qspi_sd3_status","","GPIO status",414,[[],[["gpioqspisd3status",3],["rw",3],["reg",3]]]],[11,"gpio_qspi_sd3_ctrl","","GPIO control including function select and overrides.",414,[[],[["reg",3],["gpioqspisd3ctrl",3],["rw",3]]]],[11,"intr","","Raw Interrupts",414,[[],[["rw",3],["reg",3],["intr",3]]]],[11,"proc0_inte","","Interrupt Enable for proc0",414,[[],[["proc0inte",3],["rw",3],["reg",3]]]],[11,"proc0_intf","","Interrupt Force for proc0",414,[[],[["proc0intf",3],["reg",3],["rw",3]]]],[11,"proc0_ints","","Interrupt status after masking & forcing for proc0",414,[[],[["proc0ints",3],["rw",3],["reg",3]]]],[11,"proc1_inte","","Interrupt Enable for proc1",414,[[],[["reg",3],["rw",3],["proc1inte",3]]]],[11,"proc1_intf","","Interrupt Force for proc1",414,[[],[["reg",3],["proc1intf",3],["rw",3]]]],[11,"proc1_ints","","Interrupt status after masking & forcing for proc1",414,[[],[["reg",3],["proc1ints",3],["rw",3]]]],[11,"dormant_wake_inte","","Interrupt Enable for dormant_wake",414,[[],[["rw",3],["reg",3],["dormantwakeinte",3]]]],[11,"dormant_wake_intf","","Interrupt Force for dormant_wake",414,[[],[["dormantwakeintf",3],["reg",3],["rw",3]]]],[11,"dormant_wake_ints","","Interrupt status after masking & forcing for dormant_wake",414,[[],[["reg",3],["dormantwakeints",3],["rw",3]]]],[0,"pads","rp2040_pac","",null,null],[0,"values","rp2040_pac::pads","",null,null],[3,"Drive","rp2040_pac::pads::values","Pad control register",null,null],[11,"to_bits","","",415,[[]]],[11,"from_bits","","",415,[[],["drive",3]]],[18,"_2MA","","",415,null],[18,"_4MA","","",415,null],[18,"_8MA","","",415,null],[18,"_12MA","","",415,null],[3,"VoltageSelect","","Voltage select. Per bank control",null,null],[11,"to_bits","","",416,[[]]],[11,"from_bits","","",416,[[],["voltageselect",3]]],[18,"_3V3","","Set voltage to 3.3V (DVDD >= 2V5)",416,null],[18,"_1V8","","Set voltage to 1.8V (DVDD <= 1V8)",416,null],[0,"pads_bank0","rp2040_pac","",null,null],[0,"fields","rp2040_pac::pads_bank0","",null,null],[3,"Gpio28","rp2040_pac::pads_bank0::fields","Pad control register",null,null],[11,"to_bits","","",417,[[]]],[11,"from_bits","","",417,[[],["gpio28",3]]],[11,"od","","Output disable. Has priority over output enable from …",417,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",417,[[]]],[11,"ie","","Input enable",417,[[]]],[11,"set_ie","","Input enable",417,[[]]],[11,"drive","","Drive strength.",417,[[],["drive",3]]],[11,"set_drive","","Drive strength.",417,[[["drive",3]]]],[11,"pue","","Pull up enable",417,[[]]],[11,"set_pue","","Pull up enable",417,[[]]],[11,"pde","","Pull down enable",417,[[]]],[11,"set_pde","","Pull down enable",417,[[]]],[11,"schmitt","","Enable schmitt trigger",417,[[]]],[11,"set_schmitt","","Enable schmitt trigger",417,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",417,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",417,[[]]],[3,"Gpio27","","Pad control register",null,null],[11,"to_bits","","",418,[[]]],[11,"from_bits","","",418,[[],["gpio27",3]]],[11,"od","","Output disable. Has priority over output enable from …",418,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",418,[[]]],[11,"ie","","Input enable",418,[[]]],[11,"set_ie","","Input enable",418,[[]]],[11,"drive","","Drive strength.",418,[[],["drive",3]]],[11,"set_drive","","Drive strength.",418,[[["drive",3]]]],[11,"pue","","Pull up enable",418,[[]]],[11,"set_pue","","Pull up enable",418,[[]]],[11,"pde","","Pull down enable",418,[[]]],[11,"set_pde","","Pull down enable",418,[[]]],[11,"schmitt","","Enable schmitt trigger",418,[[]]],[11,"set_schmitt","","Enable schmitt trigger",418,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",418,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",418,[[]]],[3,"Gpio16","","Pad control register",null,null],[11,"to_bits","","",419,[[]]],[11,"from_bits","","",419,[[],["gpio16",3]]],[11,"od","","Output disable. Has priority over output enable from …",419,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",419,[[]]],[11,"ie","","Input enable",419,[[]]],[11,"set_ie","","Input enable",419,[[]]],[11,"drive","","Drive strength.",419,[[],["drive",3]]],[11,"set_drive","","Drive strength.",419,[[["drive",3]]]],[11,"pue","","Pull up enable",419,[[]]],[11,"set_pue","","Pull up enable",419,[[]]],[11,"pde","","Pull down enable",419,[[]]],[11,"set_pde","","Pull down enable",419,[[]]],[11,"schmitt","","Enable schmitt trigger",419,[[]]],[11,"set_schmitt","","Enable schmitt trigger",419,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",419,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",419,[[]]],[3,"Gpio20","","Pad control register",null,null],[11,"to_bits","","",420,[[]]],[11,"from_bits","","",420,[[],["gpio20",3]]],[11,"od","","Output disable. Has priority over output enable from …",420,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",420,[[]]],[11,"ie","","Input enable",420,[[]]],[11,"set_ie","","Input enable",420,[[]]],[11,"drive","","Drive strength.",420,[[],["drive",3]]],[11,"set_drive","","Drive strength.",420,[[["drive",3]]]],[11,"pue","","Pull up enable",420,[[]]],[11,"set_pue","","Pull up enable",420,[[]]],[11,"pde","","Pull down enable",420,[[]]],[11,"set_pde","","Pull down enable",420,[[]]],[11,"schmitt","","Enable schmitt trigger",420,[[]]],[11,"set_schmitt","","Enable schmitt trigger",420,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",420,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",420,[[]]],[3,"Gpio19","","Pad control register",null,null],[11,"to_bits","","",421,[[]]],[11,"from_bits","","",421,[[],["gpio19",3]]],[11,"od","","Output disable. Has priority over output enable from …",421,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",421,[[]]],[11,"ie","","Input enable",421,[[]]],[11,"set_ie","","Input enable",421,[[]]],[11,"drive","","Drive strength.",421,[[],["drive",3]]],[11,"set_drive","","Drive strength.",421,[[["drive",3]]]],[11,"pue","","Pull up enable",421,[[]]],[11,"set_pue","","Pull up enable",421,[[]]],[11,"pde","","Pull down enable",421,[[]]],[11,"set_pde","","Pull down enable",421,[[]]],[11,"schmitt","","Enable schmitt trigger",421,[[]]],[11,"set_schmitt","","Enable schmitt trigger",421,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",421,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",421,[[]]],[3,"Gpio22","","Pad control register",null,null],[11,"to_bits","","",422,[[]]],[11,"from_bits","","",422,[[],["gpio22",3]]],[11,"od","","Output disable. Has priority over output enable from …",422,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",422,[[]]],[11,"ie","","Input enable",422,[[]]],[11,"set_ie","","Input enable",422,[[]]],[11,"drive","","Drive strength.",422,[[],["drive",3]]],[11,"set_drive","","Drive strength.",422,[[["drive",3]]]],[11,"pue","","Pull up enable",422,[[]]],[11,"set_pue","","Pull up enable",422,[[]]],[11,"pde","","Pull down enable",422,[[]]],[11,"set_pde","","Pull down enable",422,[[]]],[11,"schmitt","","Enable schmitt trigger",422,[[]]],[11,"set_schmitt","","Enable schmitt trigger",422,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",422,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",422,[[]]],[3,"Gpio29","","Pad control register",null,null],[11,"to_bits","","",423,[[]]],[11,"from_bits","","",423,[[],["gpio29",3]]],[11,"od","","Output disable. Has priority over output enable from …",423,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",423,[[]]],[11,"ie","","Input enable",423,[[]]],[11,"set_ie","","Input enable",423,[[]]],[11,"drive","","Drive strength.",423,[[],["drive",3]]],[11,"set_drive","","Drive strength.",423,[[["drive",3]]]],[11,"pue","","Pull up enable",423,[[]]],[11,"set_pue","","Pull up enable",423,[[]]],[11,"pde","","Pull down enable",423,[[]]],[11,"set_pde","","Pull down enable",423,[[]]],[11,"schmitt","","Enable schmitt trigger",423,[[]]],[11,"set_schmitt","","Enable schmitt trigger",423,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",423,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",423,[[]]],[3,"Gpio11","","Pad control register",null,null],[11,"to_bits","","",424,[[]]],[11,"from_bits","","",424,[[],["gpio11",3]]],[11,"od","","Output disable. Has priority over output enable from …",424,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",424,[[]]],[11,"ie","","Input enable",424,[[]]],[11,"set_ie","","Input enable",424,[[]]],[11,"drive","","Drive strength.",424,[[],["drive",3]]],[11,"set_drive","","Drive strength.",424,[[["drive",3]]]],[11,"pue","","Pull up enable",424,[[]]],[11,"set_pue","","Pull up enable",424,[[]]],[11,"pde","","Pull down enable",424,[[]]],[11,"set_pde","","Pull down enable",424,[[]]],[11,"schmitt","","Enable schmitt trigger",424,[[]]],[11,"set_schmitt","","Enable schmitt trigger",424,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",424,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",424,[[]]],[3,"Gpio25","","Pad control register",null,null],[11,"to_bits","","",425,[[]]],[11,"from_bits","","",425,[[],["gpio25",3]]],[11,"od","","Output disable. Has priority over output enable from …",425,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",425,[[]]],[11,"ie","","Input enable",425,[[]]],[11,"set_ie","","Input enable",425,[[]]],[11,"drive","","Drive strength.",425,[[],["drive",3]]],[11,"set_drive","","Drive strength.",425,[[["drive",3]]]],[11,"pue","","Pull up enable",425,[[]]],[11,"set_pue","","Pull up enable",425,[[]]],[11,"pde","","Pull down enable",425,[[]]],[11,"set_pde","","Pull down enable",425,[[]]],[11,"schmitt","","Enable schmitt trigger",425,[[]]],[11,"set_schmitt","","Enable schmitt trigger",425,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",425,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",425,[[]]],[3,"Gpio10","","Pad control register",null,null],[11,"to_bits","","",426,[[]]],[11,"from_bits","","",426,[[],["gpio10",3]]],[11,"od","","Output disable. Has priority over output enable from …",426,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",426,[[]]],[11,"ie","","Input enable",426,[[]]],[11,"set_ie","","Input enable",426,[[]]],[11,"drive","","Drive strength.",426,[[],["drive",3]]],[11,"set_drive","","Drive strength.",426,[[["drive",3]]]],[11,"pue","","Pull up enable",426,[[]]],[11,"set_pue","","Pull up enable",426,[[]]],[11,"pde","","Pull down enable",426,[[]]],[11,"set_pde","","Pull down enable",426,[[]]],[11,"schmitt","","Enable schmitt trigger",426,[[]]],[11,"set_schmitt","","Enable schmitt trigger",426,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",426,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",426,[[]]],[3,"Gpio6","","Pad control register",null,null],[11,"to_bits","","",427,[[]]],[11,"from_bits","","",427,[[],["gpio6",3]]],[11,"od","","Output disable. Has priority over output enable from …",427,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",427,[[]]],[11,"ie","","Input enable",427,[[]]],[11,"set_ie","","Input enable",427,[[]]],[11,"drive","","Drive strength.",427,[[],["drive",3]]],[11,"set_drive","","Drive strength.",427,[[["drive",3]]]],[11,"pue","","Pull up enable",427,[[]]],[11,"set_pue","","Pull up enable",427,[[]]],[11,"pde","","Pull down enable",427,[[]]],[11,"set_pde","","Pull down enable",427,[[]]],[11,"schmitt","","Enable schmitt trigger",427,[[]]],[11,"set_schmitt","","Enable schmitt trigger",427,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",427,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",427,[[]]],[3,"Gpio18","","Pad control register",null,null],[11,"to_bits","","",428,[[]]],[11,"from_bits","","",428,[[],["gpio18",3]]],[11,"od","","Output disable. Has priority over output enable from …",428,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",428,[[]]],[11,"ie","","Input enable",428,[[]]],[11,"set_ie","","Input enable",428,[[]]],[11,"drive","","Drive strength.",428,[[],["drive",3]]],[11,"set_drive","","Drive strength.",428,[[["drive",3]]]],[11,"pue","","Pull up enable",428,[[]]],[11,"set_pue","","Pull up enable",428,[[]]],[11,"pde","","Pull down enable",428,[[]]],[11,"set_pde","","Pull down enable",428,[[]]],[11,"schmitt","","Enable schmitt trigger",428,[[]]],[11,"set_schmitt","","Enable schmitt trigger",428,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",428,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",428,[[]]],[3,"VoltageSelect","","Voltage select. Per bank control",null,null],[11,"to_bits","","",429,[[]]],[11,"from_bits","","",429,[[],["voltageselect",3]]],[11,"voltage_select","","",429,[[],["voltageselect",3]]],[11,"set_voltage_select","","",429,[[["voltageselect",3]]]],[3,"Gpio0","","Pad control register",null,null],[11,"to_bits","","",430,[[]]],[11,"from_bits","","",430,[[],["gpio0",3]]],[11,"od","","Output disable. Has priority over output enable from …",430,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",430,[[]]],[11,"ie","","Input enable",430,[[]]],[11,"set_ie","","Input enable",430,[[]]],[11,"drive","","Drive strength.",430,[[],["drive",3]]],[11,"set_drive","","Drive strength.",430,[[["drive",3]]]],[11,"pue","","Pull up enable",430,[[]]],[11,"set_pue","","Pull up enable",430,[[]]],[11,"pde","","Pull down enable",430,[[]]],[11,"set_pde","","Pull down enable",430,[[]]],[11,"schmitt","","Enable schmitt trigger",430,[[]]],[11,"set_schmitt","","Enable schmitt trigger",430,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",430,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",430,[[]]],[3,"Gpio15","","Pad control register",null,null],[11,"to_bits","","",431,[[]]],[11,"from_bits","","",431,[[],["gpio15",3]]],[11,"od","","Output disable. Has priority over output enable from …",431,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",431,[[]]],[11,"ie","","Input enable",431,[[]]],[11,"set_ie","","Input enable",431,[[]]],[11,"drive","","Drive strength.",431,[[],["drive",3]]],[11,"set_drive","","Drive strength.",431,[[["drive",3]]]],[11,"pue","","Pull up enable",431,[[]]],[11,"set_pue","","Pull up enable",431,[[]]],[11,"pde","","Pull down enable",431,[[]]],[11,"set_pde","","Pull down enable",431,[[]]],[11,"schmitt","","Enable schmitt trigger",431,[[]]],[11,"set_schmitt","","Enable schmitt trigger",431,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",431,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",431,[[]]],[3,"Gpio13","","Pad control register",null,null],[11,"to_bits","","",432,[[]]],[11,"from_bits","","",432,[[],["gpio13",3]]],[11,"od","","Output disable. Has priority over output enable from …",432,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",432,[[]]],[11,"ie","","Input enable",432,[[]]],[11,"set_ie","","Input enable",432,[[]]],[11,"drive","","Drive strength.",432,[[],["drive",3]]],[11,"set_drive","","Drive strength.",432,[[["drive",3]]]],[11,"pue","","Pull up enable",432,[[]]],[11,"set_pue","","Pull up enable",432,[[]]],[11,"pde","","Pull down enable",432,[[]]],[11,"set_pde","","Pull down enable",432,[[]]],[11,"schmitt","","Enable schmitt trigger",432,[[]]],[11,"set_schmitt","","Enable schmitt trigger",432,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",432,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",432,[[]]],[3,"Swd","","Pad control register",null,null],[11,"to_bits","","",433,[[]]],[11,"from_bits","","",433,[[],["swd",3]]],[11,"od","","Output disable. Has priority over output enable from …",433,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",433,[[]]],[11,"ie","","Input enable",433,[[]]],[11,"set_ie","","Input enable",433,[[]]],[11,"drive","","Drive strength.",433,[[],["drive",3]]],[11,"set_drive","","Drive strength.",433,[[["drive",3]]]],[11,"pue","","Pull up enable",433,[[]]],[11,"set_pue","","Pull up enable",433,[[]]],[11,"pde","","Pull down enable",433,[[]]],[11,"set_pde","","Pull down enable",433,[[]]],[11,"schmitt","","Enable schmitt trigger",433,[[]]],[11,"set_schmitt","","Enable schmitt trigger",433,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",433,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",433,[[]]],[3,"Gpio12","","Pad control register",null,null],[11,"to_bits","","",434,[[]]],[11,"from_bits","","",434,[[],["gpio12",3]]],[11,"od","","Output disable. Has priority over output enable from …",434,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",434,[[]]],[11,"ie","","Input enable",434,[[]]],[11,"set_ie","","Input enable",434,[[]]],[11,"drive","","Drive strength.",434,[[],["drive",3]]],[11,"set_drive","","Drive strength.",434,[[["drive",3]]]],[11,"pue","","Pull up enable",434,[[]]],[11,"set_pue","","Pull up enable",434,[[]]],[11,"pde","","Pull down enable",434,[[]]],[11,"set_pde","","Pull down enable",434,[[]]],[11,"schmitt","","Enable schmitt trigger",434,[[]]],[11,"set_schmitt","","Enable schmitt trigger",434,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",434,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",434,[[]]],[3,"Gpio5","","Pad control register",null,null],[11,"to_bits","","",435,[[]]],[11,"from_bits","","",435,[[],["gpio5",3]]],[11,"od","","Output disable. Has priority over output enable from …",435,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",435,[[]]],[11,"ie","","Input enable",435,[[]]],[11,"set_ie","","Input enable",435,[[]]],[11,"drive","","Drive strength.",435,[[],["drive",3]]],[11,"set_drive","","Drive strength.",435,[[["drive",3]]]],[11,"pue","","Pull up enable",435,[[]]],[11,"set_pue","","Pull up enable",435,[[]]],[11,"pde","","Pull down enable",435,[[]]],[11,"set_pde","","Pull down enable",435,[[]]],[11,"schmitt","","Enable schmitt trigger",435,[[]]],[11,"set_schmitt","","Enable schmitt trigger",435,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",435,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",435,[[]]],[3,"Swclk","","Pad control register",null,null],[11,"to_bits","","",436,[[]]],[11,"from_bits","","",436,[[],["swclk",3]]],[11,"od","","Output disable. Has priority over output enable from …",436,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",436,[[]]],[11,"ie","","Input enable",436,[[]]],[11,"set_ie","","Input enable",436,[[]]],[11,"drive","","Drive strength.",436,[[],["drive",3]]],[11,"set_drive","","Drive strength.",436,[[["drive",3]]]],[11,"pue","","Pull up enable",436,[[]]],[11,"set_pue","","Pull up enable",436,[[]]],[11,"pde","","Pull down enable",436,[[]]],[11,"set_pde","","Pull down enable",436,[[]]],[11,"schmitt","","Enable schmitt trigger",436,[[]]],[11,"set_schmitt","","Enable schmitt trigger",436,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",436,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",436,[[]]],[3,"Gpio24","","Pad control register",null,null],[11,"to_bits","","",437,[[]]],[11,"from_bits","","",437,[[],["gpio24",3]]],[11,"od","","Output disable. Has priority over output enable from …",437,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",437,[[]]],[11,"ie","","Input enable",437,[[]]],[11,"set_ie","","Input enable",437,[[]]],[11,"drive","","Drive strength.",437,[[],["drive",3]]],[11,"set_drive","","Drive strength.",437,[[["drive",3]]]],[11,"pue","","Pull up enable",437,[[]]],[11,"set_pue","","Pull up enable",437,[[]]],[11,"pde","","Pull down enable",437,[[]]],[11,"set_pde","","Pull down enable",437,[[]]],[11,"schmitt","","Enable schmitt trigger",437,[[]]],[11,"set_schmitt","","Enable schmitt trigger",437,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",437,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",437,[[]]],[3,"Gpio3","","Pad control register",null,null],[11,"to_bits","","",438,[[]]],[11,"from_bits","","",438,[[],["gpio3",3]]],[11,"od","","Output disable. Has priority over output enable from …",438,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",438,[[]]],[11,"ie","","Input enable",438,[[]]],[11,"set_ie","","Input enable",438,[[]]],[11,"drive","","Drive strength.",438,[[],["drive",3]]],[11,"set_drive","","Drive strength.",438,[[["drive",3]]]],[11,"pue","","Pull up enable",438,[[]]],[11,"set_pue","","Pull up enable",438,[[]]],[11,"pde","","Pull down enable",438,[[]]],[11,"set_pde","","Pull down enable",438,[[]]],[11,"schmitt","","Enable schmitt trigger",438,[[]]],[11,"set_schmitt","","Enable schmitt trigger",438,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",438,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",438,[[]]],[3,"Gpio14","","Pad control register",null,null],[11,"to_bits","","",439,[[]]],[11,"from_bits","","",439,[[],["gpio14",3]]],[11,"od","","Output disable. Has priority over output enable from …",439,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",439,[[]]],[11,"ie","","Input enable",439,[[]]],[11,"set_ie","","Input enable",439,[[]]],[11,"drive","","Drive strength.",439,[[],["drive",3]]],[11,"set_drive","","Drive strength.",439,[[["drive",3]]]],[11,"pue","","Pull up enable",439,[[]]],[11,"set_pue","","Pull up enable",439,[[]]],[11,"pde","","Pull down enable",439,[[]]],[11,"set_pde","","Pull down enable",439,[[]]],[11,"schmitt","","Enable schmitt trigger",439,[[]]],[11,"set_schmitt","","Enable schmitt trigger",439,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",439,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",439,[[]]],[3,"Gpio2","","Pad control register",null,null],[11,"to_bits","","",440,[[]]],[11,"from_bits","","",440,[[],["gpio2",3]]],[11,"od","","Output disable. Has priority over output enable from …",440,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",440,[[]]],[11,"ie","","Input enable",440,[[]]],[11,"set_ie","","Input enable",440,[[]]],[11,"drive","","Drive strength.",440,[[],["drive",3]]],[11,"set_drive","","Drive strength.",440,[[["drive",3]]]],[11,"pue","","Pull up enable",440,[[]]],[11,"set_pue","","Pull up enable",440,[[]]],[11,"pde","","Pull down enable",440,[[]]],[11,"set_pde","","Pull down enable",440,[[]]],[11,"schmitt","","Enable schmitt trigger",440,[[]]],[11,"set_schmitt","","Enable schmitt trigger",440,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",440,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",440,[[]]],[3,"Gpio1","","Pad control register",null,null],[11,"to_bits","","",441,[[]]],[11,"from_bits","","",441,[[],["gpio1",3]]],[11,"od","","Output disable. Has priority over output enable from …",441,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",441,[[]]],[11,"ie","","Input enable",441,[[]]],[11,"set_ie","","Input enable",441,[[]]],[11,"drive","","Drive strength.",441,[[],["drive",3]]],[11,"set_drive","","Drive strength.",441,[[["drive",3]]]],[11,"pue","","Pull up enable",441,[[]]],[11,"set_pue","","Pull up enable",441,[[]]],[11,"pde","","Pull down enable",441,[[]]],[11,"set_pde","","Pull down enable",441,[[]]],[11,"schmitt","","Enable schmitt trigger",441,[[]]],[11,"set_schmitt","","Enable schmitt trigger",441,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",441,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",441,[[]]],[3,"Gpio26","","Pad control register",null,null],[11,"to_bits","","",442,[[]]],[11,"from_bits","","",442,[[],["gpio26",3]]],[11,"od","","Output disable. Has priority over output enable from …",442,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",442,[[]]],[11,"ie","","Input enable",442,[[]]],[11,"set_ie","","Input enable",442,[[]]],[11,"drive","","Drive strength.",442,[[],["drive",3]]],[11,"set_drive","","Drive strength.",442,[[["drive",3]]]],[11,"pue","","Pull up enable",442,[[]]],[11,"set_pue","","Pull up enable",442,[[]]],[11,"pde","","Pull down enable",442,[[]]],[11,"set_pde","","Pull down enable",442,[[]]],[11,"schmitt","","Enable schmitt trigger",442,[[]]],[11,"set_schmitt","","Enable schmitt trigger",442,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",442,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",442,[[]]],[3,"Gpio23","","Pad control register",null,null],[11,"to_bits","","",443,[[]]],[11,"from_bits","","",443,[[],["gpio23",3]]],[11,"od","","Output disable. Has priority over output enable from …",443,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",443,[[]]],[11,"ie","","Input enable",443,[[]]],[11,"set_ie","","Input enable",443,[[]]],[11,"drive","","Drive strength.",443,[[],["drive",3]]],[11,"set_drive","","Drive strength.",443,[[["drive",3]]]],[11,"pue","","Pull up enable",443,[[]]],[11,"set_pue","","Pull up enable",443,[[]]],[11,"pde","","Pull down enable",443,[[]]],[11,"set_pde","","Pull down enable",443,[[]]],[11,"schmitt","","Enable schmitt trigger",443,[[]]],[11,"set_schmitt","","Enable schmitt trigger",443,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",443,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",443,[[]]],[3,"Gpio4","","Pad control register",null,null],[11,"to_bits","","",444,[[]]],[11,"from_bits","","",444,[[],["gpio4",3]]],[11,"od","","Output disable. Has priority over output enable from …",444,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",444,[[]]],[11,"ie","","Input enable",444,[[]]],[11,"set_ie","","Input enable",444,[[]]],[11,"drive","","Drive strength.",444,[[],["drive",3]]],[11,"set_drive","","Drive strength.",444,[[["drive",3]]]],[11,"pue","","Pull up enable",444,[[]]],[11,"set_pue","","Pull up enable",444,[[]]],[11,"pde","","Pull down enable",444,[[]]],[11,"set_pde","","Pull down enable",444,[[]]],[11,"schmitt","","Enable schmitt trigger",444,[[]]],[11,"set_schmitt","","Enable schmitt trigger",444,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",444,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",444,[[]]],[3,"Gpio7","","Pad control register",null,null],[11,"to_bits","","",445,[[]]],[11,"from_bits","","",445,[[],["gpio7",3]]],[11,"od","","Output disable. Has priority over output enable from …",445,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",445,[[]]],[11,"ie","","Input enable",445,[[]]],[11,"set_ie","","Input enable",445,[[]]],[11,"drive","","Drive strength.",445,[[],["drive",3]]],[11,"set_drive","","Drive strength.",445,[[["drive",3]]]],[11,"pue","","Pull up enable",445,[[]]],[11,"set_pue","","Pull up enable",445,[[]]],[11,"pde","","Pull down enable",445,[[]]],[11,"set_pde","","Pull down enable",445,[[]]],[11,"schmitt","","Enable schmitt trigger",445,[[]]],[11,"set_schmitt","","Enable schmitt trigger",445,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",445,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",445,[[]]],[3,"Gpio9","","Pad control register",null,null],[11,"to_bits","","",446,[[]]],[11,"from_bits","","",446,[[],["gpio9",3]]],[11,"od","","Output disable. Has priority over output enable from …",446,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",446,[[]]],[11,"ie","","Input enable",446,[[]]],[11,"set_ie","","Input enable",446,[[]]],[11,"drive","","Drive strength.",446,[[],["drive",3]]],[11,"set_drive","","Drive strength.",446,[[["drive",3]]]],[11,"pue","","Pull up enable",446,[[]]],[11,"set_pue","","Pull up enable",446,[[]]],[11,"pde","","Pull down enable",446,[[]]],[11,"set_pde","","Pull down enable",446,[[]]],[11,"schmitt","","Enable schmitt trigger",446,[[]]],[11,"set_schmitt","","Enable schmitt trigger",446,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",446,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",446,[[]]],[3,"Gpio17","","Pad control register",null,null],[11,"to_bits","","",447,[[]]],[11,"from_bits","","",447,[[],["gpio17",3]]],[11,"od","","Output disable. Has priority over output enable from …",447,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",447,[[]]],[11,"ie","","Input enable",447,[[]]],[11,"set_ie","","Input enable",447,[[]]],[11,"drive","","Drive strength.",447,[[],["drive",3]]],[11,"set_drive","","Drive strength.",447,[[["drive",3]]]],[11,"pue","","Pull up enable",447,[[]]],[11,"set_pue","","Pull up enable",447,[[]]],[11,"pde","","Pull down enable",447,[[]]],[11,"set_pde","","Pull down enable",447,[[]]],[11,"schmitt","","Enable schmitt trigger",447,[[]]],[11,"set_schmitt","","Enable schmitt trigger",447,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",447,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",447,[[]]],[3,"Gpio8","","Pad control register",null,null],[11,"to_bits","","",448,[[]]],[11,"from_bits","","",448,[[],["gpio8",3]]],[11,"od","","Output disable. Has priority over output enable from …",448,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",448,[[]]],[11,"ie","","Input enable",448,[[]]],[11,"set_ie","","Input enable",448,[[]]],[11,"drive","","Drive strength.",448,[[],["drive",3]]],[11,"set_drive","","Drive strength.",448,[[["drive",3]]]],[11,"pue","","Pull up enable",448,[[]]],[11,"set_pue","","Pull up enable",448,[[]]],[11,"pde","","Pull down enable",448,[[]]],[11,"set_pde","","Pull down enable",448,[[]]],[11,"schmitt","","Enable schmitt trigger",448,[[]]],[11,"set_schmitt","","Enable schmitt trigger",448,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",448,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",448,[[]]],[3,"Gpio21","","Pad control register",null,null],[11,"to_bits","","",449,[[]]],[11,"from_bits","","",449,[[],["gpio21",3]]],[11,"od","","Output disable. Has priority over output enable from …",449,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",449,[[]]],[11,"ie","","Input enable",449,[[]]],[11,"set_ie","","Input enable",449,[[]]],[11,"drive","","Drive strength.",449,[[],["drive",3]]],[11,"set_drive","","Drive strength.",449,[[["drive",3]]]],[11,"pue","","Pull up enable",449,[[]]],[11,"set_pue","","Pull up enable",449,[[]]],[11,"pde","","Pull down enable",449,[[]]],[11,"set_pde","","Pull down enable",449,[[]]],[11,"schmitt","","Enable schmitt trigger",449,[[]]],[11,"set_schmitt","","Enable schmitt trigger",449,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",449,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",449,[[]]],[3,"PadsBank0","rp2040_pac::pads_bank0","",null,null],[11,"from_ptr","","",450,[[]]],[11,"voltage_select","","Voltage select. Per bank control",450,[[],[["voltageselect",3],["rw",3],["reg",3]]]],[11,"gpio0","","Pad control register",450,[[],[["reg",3],["gpio0",3],["rw",3]]]],[11,"gpio1","","Pad control register",450,[[],[["rw",3],["gpio1",3],["reg",3]]]],[11,"gpio2","","Pad control register",450,[[],[["gpio2",3],["rw",3],["reg",3]]]],[11,"gpio3","","Pad control register",450,[[],[["rw",3],["reg",3],["gpio3",3]]]],[11,"gpio4","","Pad control register",450,[[],[["gpio4",3],["rw",3],["reg",3]]]],[11,"gpio5","","Pad control register",450,[[],[["rw",3],["reg",3],["gpio5",3]]]],[11,"gpio6","","Pad control register",450,[[],[["rw",3],["reg",3],["gpio6",3]]]],[11,"gpio7","","Pad control register",450,[[],[["gpio7",3],["reg",3],["rw",3]]]],[11,"gpio8","","Pad control register",450,[[],[["rw",3],["reg",3],["gpio8",3]]]],[11,"gpio9","","Pad control register",450,[[],[["reg",3],["gpio9",3],["rw",3]]]],[11,"gpio10","","Pad control register",450,[[],[["gpio10",3],["reg",3],["rw",3]]]],[11,"gpio11","","Pad control register",450,[[],[["rw",3],["reg",3],["gpio11",3]]]],[11,"gpio12","","Pad control register",450,[[],[["gpio12",3],["rw",3],["reg",3]]]],[11,"gpio13","","Pad control register",450,[[],[["gpio13",3],["reg",3],["rw",3]]]],[11,"gpio14","","Pad control register",450,[[],[["rw",3],["reg",3],["gpio14",3]]]],[11,"gpio15","","Pad control register",450,[[],[["rw",3],["reg",3],["gpio15",3]]]],[11,"gpio16","","Pad control register",450,[[],[["reg",3],["gpio16",3],["rw",3]]]],[11,"gpio17","","Pad control register",450,[[],[["rw",3],["gpio17",3],["reg",3]]]],[11,"gpio18","","Pad control register",450,[[],[["rw",3],["gpio18",3],["reg",3]]]],[11,"gpio19","","Pad control register",450,[[],[["reg",3],["rw",3],["gpio19",3]]]],[11,"gpio20","","Pad control register",450,[[],[["gpio20",3],["rw",3],["reg",3]]]],[11,"gpio21","","Pad control register",450,[[],[["rw",3],["gpio21",3],["reg",3]]]],[11,"gpio22","","Pad control register",450,[[],[["gpio22",3],["reg",3],["rw",3]]]],[11,"gpio23","","Pad control register",450,[[],[["reg",3],["gpio23",3],["rw",3]]]],[11,"gpio24","","Pad control register",450,[[],[["rw",3],["reg",3],["gpio24",3]]]],[11,"gpio25","","Pad control register",450,[[],[["reg",3],["gpio25",3],["rw",3]]]],[11,"gpio26","","Pad control register",450,[[],[["gpio26",3],["rw",3],["reg",3]]]],[11,"gpio27","","Pad control register",450,[[],[["rw",3],["reg",3],["gpio27",3]]]],[11,"gpio28","","Pad control register",450,[[],[["reg",3],["gpio28",3],["rw",3]]]],[11,"gpio29","","Pad control register",450,[[],[["gpio29",3],["reg",3],["rw",3]]]],[11,"swclk","","Pad control register",450,[[],[["reg",3],["swclk",3],["rw",3]]]],[11,"swd","","Pad control register",450,[[],[["swd",3],["reg",3],["rw",3]]]],[0,"pads_qspi","rp2040_pac","",null,null],[0,"fields","rp2040_pac::pads_qspi","",null,null],[3,"GpioQspiSd1","rp2040_pac::pads_qspi::fields","Pad control register",null,null],[11,"to_bits","","",451,[[]]],[11,"from_bits","","",451,[[],["gpioqspisd1",3]]],[11,"od","","Output disable. Has priority over output enable from …",451,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",451,[[]]],[11,"ie","","Input enable",451,[[]]],[11,"set_ie","","Input enable",451,[[]]],[11,"drive","","Drive strength.",451,[[],["drive",3]]],[11,"set_drive","","Drive strength.",451,[[["drive",3]]]],[11,"pue","","Pull up enable",451,[[]]],[11,"set_pue","","Pull up enable",451,[[]]],[11,"pde","","Pull down enable",451,[[]]],[11,"set_pde","","Pull down enable",451,[[]]],[11,"schmitt","","Enable schmitt trigger",451,[[]]],[11,"set_schmitt","","Enable schmitt trigger",451,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",451,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",451,[[]]],[3,"GpioQspiSs","","Pad control register",null,null],[11,"to_bits","","",452,[[]]],[11,"from_bits","","",452,[[],["gpioqspiss",3]]],[11,"od","","Output disable. Has priority over output enable from …",452,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",452,[[]]],[11,"ie","","Input enable",452,[[]]],[11,"set_ie","","Input enable",452,[[]]],[11,"drive","","Drive strength.",452,[[],["drive",3]]],[11,"set_drive","","Drive strength.",452,[[["drive",3]]]],[11,"pue","","Pull up enable",452,[[]]],[11,"set_pue","","Pull up enable",452,[[]]],[11,"pde","","Pull down enable",452,[[]]],[11,"set_pde","","Pull down enable",452,[[]]],[11,"schmitt","","Enable schmitt trigger",452,[[]]],[11,"set_schmitt","","Enable schmitt trigger",452,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",452,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",452,[[]]],[3,"GpioQspiSclk","","Pad control register",null,null],[11,"to_bits","","",453,[[]]],[11,"from_bits","","",453,[[],["gpioqspisclk",3]]],[11,"od","","Output disable. Has priority over output enable from …",453,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",453,[[]]],[11,"ie","","Input enable",453,[[]]],[11,"set_ie","","Input enable",453,[[]]],[11,"drive","","Drive strength.",453,[[],["drive",3]]],[11,"set_drive","","Drive strength.",453,[[["drive",3]]]],[11,"pue","","Pull up enable",453,[[]]],[11,"set_pue","","Pull up enable",453,[[]]],[11,"pde","","Pull down enable",453,[[]]],[11,"set_pde","","Pull down enable",453,[[]]],[11,"schmitt","","Enable schmitt trigger",453,[[]]],[11,"set_schmitt","","Enable schmitt trigger",453,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",453,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",453,[[]]],[3,"GpioQspiSd2","","Pad control register",null,null],[11,"to_bits","","",454,[[]]],[11,"from_bits","","",454,[[],["gpioqspisd2",3]]],[11,"od","","Output disable. Has priority over output enable from …",454,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",454,[[]]],[11,"ie","","Input enable",454,[[]]],[11,"set_ie","","Input enable",454,[[]]],[11,"drive","","Drive strength.",454,[[],["drive",3]]],[11,"set_drive","","Drive strength.",454,[[["drive",3]]]],[11,"pue","","Pull up enable",454,[[]]],[11,"set_pue","","Pull up enable",454,[[]]],[11,"pde","","Pull down enable",454,[[]]],[11,"set_pde","","Pull down enable",454,[[]]],[11,"schmitt","","Enable schmitt trigger",454,[[]]],[11,"set_schmitt","","Enable schmitt trigger",454,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",454,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",454,[[]]],[3,"VoltageSelect","","Voltage select. Per bank control",null,null],[11,"to_bits","","",455,[[]]],[11,"from_bits","","",455,[[],["voltageselect",3]]],[11,"voltage_select","","",455,[[],["voltageselect",3]]],[11,"set_voltage_select","","",455,[[["voltageselect",3]]]],[3,"GpioQspiSd3","","Pad control register",null,null],[11,"to_bits","","",456,[[]]],[11,"from_bits","","",456,[[],["gpioqspisd3",3]]],[11,"od","","Output disable. Has priority over output enable from …",456,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",456,[[]]],[11,"ie","","Input enable",456,[[]]],[11,"set_ie","","Input enable",456,[[]]],[11,"drive","","Drive strength.",456,[[],["drive",3]]],[11,"set_drive","","Drive strength.",456,[[["drive",3]]]],[11,"pue","","Pull up enable",456,[[]]],[11,"set_pue","","Pull up enable",456,[[]]],[11,"pde","","Pull down enable",456,[[]]],[11,"set_pde","","Pull down enable",456,[[]]],[11,"schmitt","","Enable schmitt trigger",456,[[]]],[11,"set_schmitt","","Enable schmitt trigger",456,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",456,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",456,[[]]],[3,"GpioQspiSd0","","Pad control register",null,null],[11,"to_bits","","",457,[[]]],[11,"from_bits","","",457,[[],["gpioqspisd0",3]]],[11,"od","","Output disable. Has priority over output enable from …",457,[[]]],[11,"set_od","","Output disable. Has priority over output enable from …",457,[[]]],[11,"ie","","Input enable",457,[[]]],[11,"set_ie","","Input enable",457,[[]]],[11,"drive","","Drive strength.",457,[[],["drive",3]]],[11,"set_drive","","Drive strength.",457,[[["drive",3]]]],[11,"pue","","Pull up enable",457,[[]]],[11,"set_pue","","Pull up enable",457,[[]]],[11,"pde","","Pull down enable",457,[[]]],[11,"set_pde","","Pull down enable",457,[[]]],[11,"schmitt","","Enable schmitt trigger",457,[[]]],[11,"set_schmitt","","Enable schmitt trigger",457,[[]]],[11,"slewfast","","Slew rate control. 1 = Fast, 0 = Slow",457,[[]]],[11,"set_slewfast","","Slew rate control. 1 = Fast, 0 = Slow",457,[[]]],[3,"PadsQspi","rp2040_pac::pads_qspi","",null,null],[11,"from_ptr","","",458,[[]]],[11,"voltage_select","","Voltage select. Per bank control",458,[[],[["reg",3],["voltageselect",3],["rw",3]]]],[11,"gpio_qspi_sclk","","Pad control register",458,[[],[["reg",3],["rw",3],["gpioqspisclk",3]]]],[11,"gpio_qspi_sd0","","Pad control register",458,[[],[["reg",3],["rw",3],["gpioqspisd0",3]]]],[11,"gpio_qspi_sd1","","Pad control register",458,[[],[["gpioqspisd1",3],["rw",3],["reg",3]]]],[11,"gpio_qspi_sd2","","Pad control register",458,[[],[["reg",3],["rw",3],["gpioqspisd2",3]]]],[11,"gpio_qspi_sd3","","Pad control register",458,[[],[["reg",3],["rw",3],["gpioqspisd3",3]]]],[11,"gpio_qspi_ss","","Pad control register",458,[[],[["reg",3],["gpioqspiss",3],["rw",3]]]],[0,"pio0","rp2040_pac","",null,null],[0,"fields","rp2040_pac::pio0","",null,null],[3,"Flevel","rp2040_pac::pio0::fields","FIFO levels",null,null],[11,"to_bits","","",459,[[]]],[11,"from_bits","","",459,[[],["flevel",3]]],[11,"rx3","","",459,[[]]],[11,"set_rx3","","",459,[[]]],[11,"tx3","","",459,[[]]],[11,"set_tx3","","",459,[[]]],[11,"rx2","","",459,[[]]],[11,"set_rx2","","",459,[[]]],[11,"tx2","","",459,[[]]],[11,"set_tx2","","",459,[[]]],[11,"rx1","","",459,[[]]],[11,"set_rx1","","",459,[[]]],[11,"tx1","","",459,[[]]],[11,"set_tx1","","",459,[[]]],[11,"rx0","","",459,[[]]],[11,"set_rx0","","",459,[[]]],[11,"tx0","","",459,[[]]],[11,"set_tx0","","",459,[[]]],[3,"Intr","","Interrupt Force for irq0",null,null],[11,"to_bits","","",460,[[]]],[11,"from_bits","","",460,[[],["intr",3]]],[11,"sm3","","",460,[[]]],[11,"set_sm3","","",460,[[]]],[11,"sm2","","",460,[[]]],[11,"set_sm2","","",460,[[]]],[11,"sm1","","",460,[[]]],[11,"set_sm1","","",460,[[]]],[11,"sm0","","",460,[[]]],[11,"set_sm0","","",460,[[]]],[11,"sm3_txnfull","","",460,[[]]],[11,"set_sm3_txnfull","","",460,[[]]],[11,"sm2_txnfull","","",460,[[]]],[11,"set_sm2_txnfull","","",460,[[]]],[11,"sm1_txnfull","","",460,[[]]],[11,"set_sm1_txnfull","","",460,[[]]],[11,"sm0_txnfull","","",460,[[]]],[11,"set_sm0_txnfull","","",460,[[]]],[11,"sm3_rxnempty","","",460,[[]]],[11,"set_sm3_rxnempty","","",460,[[]]],[11,"sm2_rxnempty","","",460,[[]]],[11,"set_sm2_rxnempty","","",460,[[]]],[11,"sm1_rxnempty","","",460,[[]]],[11,"set_sm1_rxnempty","","",460,[[]]],[11,"sm0_rxnempty","","",460,[[]]],[11,"set_sm0_rxnempty","","",460,[[]]],[3,"DbgCfginfo","","The PIO hardware has some free parameters that may vary …",null,null],[11,"to_bits","","",461,[[]]],[11,"from_bits","","",461,[[],["dbgcfginfo",3]]],[11,"imem_size","","The size of the instruction memory, measured in units of …",461,[[]]],[11,"set_imem_size","","The size of the instruction memory, measured in units of …",461,[[]]],[11,"sm_count","","The number of state machines this PIO instance is …",461,[[]]],[11,"set_sm_count","","The number of state machines this PIO instance is …",461,[[]]],[11,"fifo_depth","","The depth of the state machine TX/RX FIFOs, measured in …",461,[[]]],[11,"set_fifo_depth","","The depth of the state machine TX/RX FIFOs, measured in …",461,[[]]],[3,"Irq","","Interrupt request register. Write 1 to clear",null,null],[11,"to_bits","","",462,[[]]],[11,"from_bits","","",462,[[],["irq",3]]],[11,"irq","","",462,[[]]],[11,"set_irq","","",462,[[]]],[3,"SmPinctrl","","State machine pin control",null,null],[11,"to_bits","","",463,[[]]],[11,"from_bits","","",463,[[],["smpinctrl",3]]],[11,"sideset_count","","The number of delay bits co-opted for side-set. Inclusive …",463,[[]]],[11,"set_sideset_count","","The number of delay bits co-opted for side-set. Inclusive …",463,[[]]],[11,"set_count","","The number of pins asserted by a SET. Max of 5",463,[[]]],[11,"set_set_count","","The number of pins asserted by a SET. Max of 5",463,[[]]],[11,"out_count","","The number of pins asserted by an OUT. Value of 0 -> 32 …",463,[[]]],[11,"set_out_count","","The number of pins asserted by an OUT. Value of 0 -> 32 …",463,[[]]],[11,"in_base","","The virtual pin corresponding to IN bit 0",463,[[]]],[11,"set_in_base","","The virtual pin corresponding to IN bit 0",463,[[]]],[11,"sideset_base","","The virtual pin corresponding to delay field bit 0",463,[[]]],[11,"set_sideset_base","","The virtual pin corresponding to delay field bit 0",463,[[]]],[11,"set_base","","The virtual pin corresponding to SET bit 0",463,[[]]],[11,"set_set_base","","The virtual pin corresponding to SET bit 0",463,[[]]],[11,"out_base","","The virtual pin corresponding to OUT bit 0",463,[[]]],[11,"set_out_base","","The virtual pin corresponding to OUT bit 0",463,[[]]],[3,"Fdebug","","FIFO debug register",null,null],[11,"to_bits","","",464,[[]]],[11,"from_bits","","",464,[[],["fdebug",3]]],[11,"txstall","","State machine has stalled on empty TX FIFO. Write 1 to …",464,[[]]],[11,"set_txstall","","State machine has stalled on empty TX FIFO. Write 1 to …",464,[[]]],[11,"txover","","TX FIFO overflow has occurred. Write 1 to clear.",464,[[]]],[11,"set_txover","","TX FIFO overflow has occurred. Write 1 to clear.",464,[[]]],[11,"rxunder","","RX FIFO underflow has occurred. Write 1 to clear.",464,[[]]],[11,"set_rxunder","","RX FIFO underflow has occurred. Write 1 to clear.",464,[[]]],[11,"rxstall","","State machine has stalled on full RX FIFO. Write 1 to …",464,[[]]],[11,"set_rxstall","","State machine has stalled on full RX FIFO. Write 1 to …",464,[[]]],[3,"SmShiftctrl","","Control behaviour of the input/output shift registers for …",null,null],[11,"to_bits","","",465,[[]]],[11,"from_bits","","",465,[[],["smshiftctrl",3]]],[11,"fjoin_rx","","When 1, RX FIFO steals the TX FIFO\'s storage, and becomes …",465,[[]]],[11,"set_fjoin_rx","","When 1, RX FIFO steals the TX FIFO\'s storage, and becomes …",465,[[]]],[11,"fjoin_tx","","When 1, TX FIFO steals the RX FIFO\'s storage, and becomes …",465,[[]]],[11,"set_fjoin_tx","","When 1, TX FIFO steals the RX FIFO\'s storage, and becomes …",465,[[]]],[11,"pull_thresh","","Number of bits shifted out of TXSR before autopull or …",465,[[]]],[11,"set_pull_thresh","","Number of bits shifted out of TXSR before autopull or …",465,[[]]],[11,"push_thresh","","Number of bits shifted into RXSR before autopush or …",465,[[]]],[11,"set_push_thresh","","Number of bits shifted into RXSR before autopush or …",465,[[]]],[11,"out_shiftdir","","1 = shift out of output shift register to right. 0 = to …",465,[[]]],[11,"set_out_shiftdir","","1 = shift out of output shift register to right. 0 = to …",465,[[]]],[11,"in_shiftdir","","1 = shift input shift register to right (data enters from …",465,[[]]],[11,"set_in_shiftdir","","1 = shift input shift register to right (data enters from …",465,[[]]],[11,"autopull","","Pull automatically when the output shift register is …",465,[[]]],[11,"set_autopull","","Pull automatically when the output shift register is …",465,[[]]],[11,"autopush","","Push automatically when the input shift register is filled",465,[[]]],[11,"set_autopush","","Push automatically when the input shift register is filled",465,[[]]],[3,"IrqForce","","Writing a 1 to each of these bits will forcibly assert …",null,null],[11,"to_bits","","",466,[[]]],[11,"from_bits","","",466,[[],["irqforce",3]]],[11,"irq_force","","",466,[[]]],[11,"set_irq_force","","",466,[[]]],[3,"SmExecctrl","","Execution/behavioural settings for state machine 0",null,null],[11,"to_bits","","",467,[[]]],[11,"from_bits","","",467,[[],["smexecctrl",3]]],[11,"exec_stalled","","An instruction written to SMx_INSTR is stalled, and …",467,[[]]],[11,"set_exec_stalled","","An instruction written to SMx_INSTR is stalled, and …",467,[[]]],[11,"side_en","","If 1, the delay MSB is used as side-set enable, rather …",467,[[]]],[11,"set_side_en","","If 1, the delay MSB is used as side-set enable, rather …",467,[[]]],[11,"side_pindir","","Side-set data is asserted to pin OEs instead of pin values",467,[[]]],[11,"set_side_pindir","","Side-set data is asserted to pin OEs instead of pin values",467,[[]]],[11,"jmp_pin","","The GPIO number to use as condition for JMP PIN. …",467,[[]]],[11,"set_jmp_pin","","The GPIO number to use as condition for JMP PIN. …",467,[[]]],[11,"out_en_sel","","Which data bit to use for inline OUT enable",467,[[]]],[11,"set_out_en_sel","","Which data bit to use for inline OUT enable",467,[[]]],[11,"inline_out_en","","If 1, use a bit of OUT data as an auxiliary write enable …",467,[[]]],[11,"set_inline_out_en","","If 1, use a bit of OUT data as an auxiliary write enable …",467,[[]]],[11,"out_sticky","","Continuously assert the most recent OUT/SET to the pins",467,[[]]],[11,"set_out_sticky","","Continuously assert the most recent OUT/SET to the pins",467,[[]]],[11,"wrap_top","","After reaching this address, execution is wrapped to …",467,[[]]],[11,"set_wrap_top","","After reaching this address, execution is wrapped to …",467,[[]]],[11,"wrap_bottom","","After reaching wrap_top, execution is wrapped to this …",467,[[]]],[11,"set_wrap_bottom","","After reaching wrap_top, execution is wrapped to this …",467,[[]]],[11,"status_sel","","Comparison used for the MOV x, STATUS instruction.",467,[[],["smexecctrlstatussel",3]]],[11,"set_status_sel","","Comparison used for the MOV x, STATUS instruction.",467,[[["smexecctrlstatussel",3]]]],[11,"status_n","","Comparison level for the MOV x, STATUS instruction",467,[[]]],[11,"set_status_n","","Comparison level for the MOV x, STATUS instruction",467,[[]]],[3,"Fstat","","FIFO status register",null,null],[11,"to_bits","","",468,[[]]],[11,"from_bits","","",468,[[],["fstat",3]]],[11,"txempty","","State machine TX FIFO is empty",468,[[]]],[11,"set_txempty","","State machine TX FIFO is empty",468,[[]]],[11,"txfull","","State machine TX FIFO is full",468,[[]]],[11,"set_txfull","","State machine TX FIFO is full",468,[[]]],[11,"rxempty","","State machine RX FIFO is empty",468,[[]]],[11,"set_rxempty","","State machine RX FIFO is empty",468,[[]]],[11,"rxfull","","State machine RX FIFO is full",468,[[]]],[11,"set_rxfull","","State machine RX FIFO is full",468,[[]]],[3,"Ctrl","","PIO control register",null,null],[11,"to_bits","","",469,[[]]],[11,"from_bits","","",469,[[],["ctrl",3]]],[11,"clkdiv_restart","","Force clock dividers to restart their count and clear …",469,[[]]],[11,"set_clkdiv_restart","","Force clock dividers to restart their count and clear …",469,[[]]],[11,"sm_restart","","Clear internal SM state which is otherwise difficult to …",469,[[]]],[11,"set_sm_restart","","Clear internal SM state which is otherwise difficult to …",469,[[]]],[11,"sm_enable","","Enable state machine",469,[[]]],[11,"set_sm_enable","","Enable state machine",469,[[]]],[3,"SmClkdiv","","Clock divider register for state machine 3 Frequency = …",null,null],[11,"to_bits","","",470,[[]]],[11,"from_bits","","",470,[[],["smclkdiv",3]]],[11,"int","","Effective frequency is sysclk/int. Value of 0 is …",470,[[]]],[11,"set_int","","Effective frequency is sysclk/int. Value of 0 is …",470,[[]]],[11,"frac","","Fractional part of clock divider",470,[[]]],[11,"set_frac","","Fractional part of clock divider",470,[[]]],[3,"SmInstr","","Instruction currently being executed by state machine 3 …",null,null],[11,"to_bits","","",471,[[]]],[11,"from_bits","","",471,[[],["sminstr",3]]],[11,"instr","","",471,[[]]],[11,"set_instr","","",471,[[]]],[3,"SmAddr","","Current instruction address of state machine 1",null,null],[11,"to_bits","","",472,[[]]],[11,"from_bits","","",472,[[],["smaddr",3]]],[11,"addr","","",472,[[]]],[11,"set_addr","","",472,[[]]],[3,"InstrMem","","Write-only access to instruction memory location 16",null,null],[11,"to_bits","","",473,[[]]],[11,"from_bits","","",473,[[],["instrmem",3]]],[11,"instr_mem","","",473,[[]]],[11,"set_instr_mem","","",473,[[]]],[0,"values","rp2040_pac::pio0","",null,null],[3,"SmExecctrlStatusSel","rp2040_pac::pio0::values","Execution/behavioural settings for state machine 2",null,null],[11,"to_bits","","",474,[[]]],[11,"from_bits","","",474,[[],["smexecctrlstatussel",3]]],[18,"TXLEVEL","","All-ones if TX FIFO level < N, otherwise all-zeroes",474,null],[18,"RXLEVEL","","All-ones if RX FIFO level < N, otherwise all-zeroes",474,null],[3,"Pio0","rp2040_pac::pio0","Programmable IO block",null,null],[11,"from_ptr","","",475,[[]]],[11,"ctrl","","PIO control register",475,[[],[["reg",3],["rw",3],["ctrl",3]]]],[11,"fstat","","FIFO status register",475,[[],[["reg",3],["fstat",3],["rw",3]]]],[11,"fdebug","","FIFO debug register",475,[[],[["reg",3],["fdebug",3],["rw",3]]]],[11,"flevel","","FIFO levels",475,[[],[["flevel",3],["rw",3],["reg",3]]]],[11,"irq","","Interrupt request register. Write 1 to clear",475,[[],[["reg",3],["irq",3],["rw",3]]]],[11,"irq_force","","Writing a 1 to each of these bits will forcibly assert …",475,[[],[["reg",3],["irqforce",3],["rw",3]]]],[11,"input_sync_bypass","","There is a 2-flipflop synchronizer on each GPIO input, …",475,[[],[["reg",3],["rw",3]]]],[11,"dbg_padout","","Read to sample the pad output values PIO is currently …",475,[[],[["r",3],["reg",3]]]],[11,"dbg_padoe","","Read to sample the pad output enables (direction) PIO is …",475,[[],[["r",3],["reg",3]]]],[11,"dbg_cfginfo","","The PIO hardware has some free parameters that may vary …",475,[[],[["dbgcfginfo",3],["reg",3],["rw",3]]]],[11,"intr","","Raw Interrupts",475,[[],[["reg",3],["intr",3],["rw",3]]]],[11,"instr_mem","","Write-only access to instruction memory location 0",475,[[],[["instrmem",3],["rw",3],["reg",3]]]],[11,"txf","","Direct write access to the TX FIFO for this state …",475,[[],[["reg",3],["w",3]]]],[11,"rxf","","Direct read access to the RX FIFO for this state machine. …",475,[[],[["r",3],["reg",3]]]],[11,"sm","","",475,[[],["statemachine",3]]],[11,"irqs","","",475,[[],["irq",3]]],[3,"StateMachine","","",null,null],[11,"from_ptr","","",476,[[]]],[11,"clkdiv","","Clock divider register for state machine 0 Frequency = …",476,[[],[["smclkdiv",3],["reg",3],["rw",3]]]],[11,"execctrl","","Execution/behavioural settings for state machine 0",476,[[],[["rw",3],["reg",3],["smexecctrl",3]]]],[11,"shiftctrl","","Control behaviour of the input/output shift registers for …",476,[[],[["reg",3],["rw",3],["smshiftctrl",3]]]],[11,"addr","","Current instruction address of state machine 0",476,[[],[["reg",3],["smaddr",3],["rw",3]]]],[11,"instr","","Instruction currently being executed by state machine 0 …",476,[[],[["sminstr",3],["reg",3],["rw",3]]]],[11,"pinctrl","","State machine pin control",476,[[],[["smpinctrl",3],["reg",3],["rw",3]]]],[3,"Irq","","",null,null],[11,"from_ptr","","",477,[[]]],[11,"inte","","Interrupt Enable for irq1",477,[[],[["reg",3],["intr",3],["rw",3]]]],[11,"intf","","Interrupt Force for irq1",477,[[],[["reg",3],["intr",3],["rw",3]]]],[11,"ints","","Interrupt status after masking & forcing for irq1",477,[[],[["reg",3],["intr",3],["rw",3]]]],[0,"pll_sys","rp2040_pac","",null,null],[0,"fields","rp2040_pac::pll_sys","",null,null],[3,"Cs","rp2040_pac::pll_sys::fields","Control and Status GENERAL CONSTRAINTS: Reference clock …",null,null],[11,"to_bits","","",478,[[]]],[11,"from_bits","","",478,[[],["cs",3]]],[11,"lock","","PLL is locked",478,[[]]],[11,"set_lock","","PLL is locked",478,[[]]],[11,"bypass","","Passes the reference clock to the output instead of the …",478,[[]]],[11,"set_bypass","","Passes the reference clock to the output instead of the …",478,[[]]],[11,"refdiv","","Divides the PLL input reference clock. Behaviour is …",478,[[]]],[11,"set_refdiv","","Divides the PLL input reference clock. Behaviour is …",478,[[]]],[3,"Pwr","","Controls the PLL power modes.",null,null],[11,"to_bits","","",479,[[]]],[11,"from_bits","","",479,[[],["pwr",3]]],[11,"vcopd","","PLL VCO powerdown To save power set high when PLL output …",479,[[]]],[11,"set_vcopd","","PLL VCO powerdown To save power set high when PLL output …",479,[[]]],[11,"postdivpd","","PLL post divider powerdown To save power set high when …",479,[[]]],[11,"set_postdivpd","","PLL post divider powerdown To save power set high when …",479,[[]]],[11,"dsmpd","","PLL DSM powerdown Nothing is achieved by setting this low.",479,[[]]],[11,"set_dsmpd","","PLL DSM powerdown Nothing is achieved by setting this low.",479,[[]]],[11,"pd","","PLL powerdown To save power set high when PLL output not …",479,[[]]],[11,"set_pd","","PLL powerdown To save power set high when PLL output not …",479,[[]]],[3,"Prim","","Controls the PLL post dividers for the primary output …",null,null],[11,"to_bits","","",480,[[]]],[11,"from_bits","","",480,[[],["prim",3]]],[11,"postdiv1","","divide by 1-7",480,[[]]],[11,"set_postdiv1","","divide by 1-7",480,[[]]],[11,"postdiv2","","divide by 1-7",480,[[]]],[11,"set_postdiv2","","divide by 1-7",480,[[]]],[3,"FbdivInt","","Feedback divisor (note: this PLL does not support …",null,null],[11,"to_bits","","",481,[[]]],[11,"from_bits","","",481,[[],["fbdivint",3]]],[11,"fbdiv_int","","see ctrl reg description for constraints",481,[[]]],[11,"set_fbdiv_int","","see ctrl reg description for constraints",481,[[]]],[3,"PllSys","rp2040_pac::pll_sys","",null,null],[11,"from_ptr","","",482,[[]]],[11,"cs","","Control and Status GENERAL CONSTRAINTS: Reference clock …",482,[[],[["cs",3],["reg",3],["rw",3]]]],[11,"pwr","","Controls the PLL power modes.",482,[[],[["reg",3],["pwr",3],["rw",3]]]],[11,"fbdiv_int","","Feedback divisor (note: this PLL does not support …",482,[[],[["rw",3],["reg",3],["fbdivint",3]]]],[11,"prim","","Controls the PLL post dividers for the primary output …",482,[[],[["reg",3],["rw",3],["prim",3]]]],[0,"ppb","rp2040_pac","",null,null],[0,"fields","rp2040_pac::ppb","",null,null],[3,"NvicIcer","rp2040_pac::ppb::fields","Use the Interrupt Clear-Enable Registers to disable …",null,null],[11,"to_bits","","",483,[[]]],[11,"from_bits","","",483,[[],["nvicicer",3]]],[11,"clrena","","Interrupt clear-enable bits. Write: 0 = No effect. 1 = …",483,[[]]],[11,"set_clrena","","Interrupt clear-enable bits. Write: 0 = No effect. 1 = …",483,[[]]],[3,"MpuCtrl","","Use the MPU Control Register to enable and disable the …",null,null],[11,"to_bits","","",484,[[]]],[11,"from_bits","","",484,[[],["mpuctrl",3]]],[11,"privdefena","","Controls whether the default memory map is enabled as a …",484,[[]]],[11,"set_privdefena","","Controls whether the default memory map is enabled as a …",484,[[]]],[11,"hfnmiena","","Controls the use of the MPU for HardFaults and NMIs. …",484,[[]]],[11,"set_hfnmiena","","Controls the use of the MPU for HardFaults and NMIs. …",484,[[]]],[11,"enable","","Enables the MPU. If the MPU is disabled, privileged and …",484,[[]]],[11,"set_enable","","Enables the MPU. If the MPU is disabled, privileged and …",484,[[]]],[3,"Ccr","","The Configuration and Control Register permanently …",null,null],[11,"to_bits","","",485,[[]]],[11,"from_bits","","",485,[[],["ccr",3]]],[11,"stkalign","","Always reads as one, indicates 8-byte stack alignment on …",485,[[]]],[11,"set_stkalign","","Always reads as one, indicates 8-byte stack alignment on …",485,[[]]],[11,"unalign_trp","","Always reads as one, indicates that all unaligned …",485,[[]]],[11,"set_unalign_trp","","Always reads as one, indicates that all unaligned …",485,[[]]],[3,"Cpuid","","Read the CPU ID Base Register to determine: the ID number …",null,null],[11,"to_bits","","",486,[[]]],[11,"from_bits","","",486,[[],["cpuid",3]]],[11,"implementer","","Implementor code: 0x41 = ARM",486,[[]]],[11,"set_implementer","","Implementor code: 0x41 = ARM",486,[[]]],[11,"variant","","Major revision number n in the rnpm revision status: 0x0 …",486,[[]]],[11,"set_variant","","Major revision number n in the rnpm revision status: 0x0 …",486,[[]]],[11,"architecture","","Constant that defines the architecture of the processor: …",486,[[]]],[11,"set_architecture","","Constant that defines the architecture of the processor: …",486,[[]]],[11,"partno","","Number of processor within family: 0xC60 = Cortex-M0+",486,[[]]],[11,"set_partno","","Number of processor within family: 0xC60 = Cortex-M0+",486,[[]]],[11,"revision","","Minor revision number m in the rnpm revision status: 0x1 …",486,[[]]],[11,"set_revision","","Minor revision number m in the rnpm revision status: 0x1 …",486,[[]]],[3,"Icsr","","Use the Interrupt Control State Register to set a pending …",null,null],[11,"to_bits","","",487,[[]]],[11,"from_bits","","",487,[[],["icsr",3]]],[11,"nmipendset","","Setting this bit will activate an NMI. Since NMI is the …",487,[[]]],[11,"set_nmipendset","","Setting this bit will activate an NMI. Since NMI is the …",487,[[]]],[11,"pendsvset","","PendSV set-pending bit. Write: 0 = No effect. 1 = Changes …",487,[[]]],[11,"set_pendsvset","","PendSV set-pending bit. Write: 0 = No effect. 1 = Changes …",487,[[]]],[11,"pendsvclr","","PendSV clear-pending bit. Write: 0 = No effect. 1 = …",487,[[]]],[11,"set_pendsvclr","","PendSV clear-pending bit. Write: 0 = No effect. 1 = …",487,[[]]],[11,"pendstset","","SysTick exception set-pending bit. Write: 0 = No effect. …",487,[[]]],[11,"set_pendstset","","SysTick exception set-pending bit. Write: 0 = No effect. …",487,[[]]],[11,"pendstclr","","SysTick exception clear-pending bit. Write: 0 = No …",487,[[]]],[11,"set_pendstclr","","SysTick exception clear-pending bit. Write: 0 = No …",487,[[]]],[11,"isrpreempt","","The system can only access this bit when the core is …",487,[[]]],[11,"set_isrpreempt","","The system can only access this bit when the core is …",487,[[]]],[11,"isrpending","","External interrupt pending flag",487,[[]]],[11,"set_isrpending","","External interrupt pending flag",487,[[]]],[11,"vectpending","","Indicates the exception number for the highest priority …",487,[[]]],[11,"set_vectpending","","Indicates the exception number for the highest priority …",487,[[]]],[11,"vectactive","","Active exception number field. Reset clears the …",487,[[]]],[11,"set_vectactive","","Active exception number field. Reset clears the …",487,[[]]],[3,"SystCsr","","Use the SysTick Control and Status Register to enable the …",null,null],[11,"to_bits","","",488,[[]]],[11,"from_bits","","",488,[[],["systcsr",3]]],[11,"countflag","","Returns 1 if timer counted to 0 since last time this was …",488,[[]]],[11,"set_countflag","","Returns 1 if timer counted to 0 since last time this was …",488,[[]]],[11,"clksource","","SysTick clock source. Always reads as one if SYST_CALIB …",488,[[]]],[11,"set_clksource","","SysTick clock source. Always reads as one if SYST_CALIB …",488,[[]]],[11,"tickint","","Enables SysTick exception request: 0 = Counting down to …",488,[[]]],[11,"set_tickint","","Enables SysTick exception request: 0 = Counting down to …",488,[[]]],[11,"enable","","Enable SysTick counter: 0 = Counter disabled. 1 = Counter …",488,[[]]],[11,"set_enable","","Enable SysTick counter: 0 = Counter disabled. 1 = Counter …",488,[[]]],[3,"MpuType","","Read the MPU Type Register to determine if the processor …",null,null],[11,"to_bits","","",489,[[]]],[11,"from_bits","","",489,[[],["mputype",3]]],[11,"iregion","","Instruction region. Reads as zero as ARMv6-M only …",489,[[]]],[11,"set_iregion","","Instruction region. Reads as zero as ARMv6-M only …",489,[[]]],[11,"dregion","","Number of regions supported by the MPU.",489,[[]]],[11,"set_dregion","","Number of regions supported by the MPU.",489,[[]]],[11,"separate","","Indicates support for separate instruction and data …",489,[[]]],[11,"set_separate","","Indicates support for separate instruction and data …",489,[[]]],[3,"SystCvr","","Use the SysTick Current Value Register to find the …",null,null],[11,"to_bits","","",490,[[]]],[11,"from_bits","","",490,[[],["systcvr",3]]],[11,"current","","Reads return the current value of the SysTick counter. …",490,[[]]],[11,"set_current","","Reads return the current value of the SysTick counter. …",490,[[]]],[3,"NvicIpr0","","Use the Interrupt Priority Registers to assign a priority …",null,null],[11,"to_bits","","",491,[[]]],[11,"from_bits","","",491,[[],["nvicipr0",3]]],[11,"ip_3","","Priority of interrupt 3",491,[[]]],[11,"set_ip_3","","Priority of interrupt 3",491,[[]]],[11,"ip_2","","Priority of interrupt 2",491,[[]]],[11,"set_ip_2","","Priority of interrupt 2",491,[[]]],[11,"ip_1","","Priority of interrupt 1",491,[[]]],[11,"set_ip_1","","Priority of interrupt 1",491,[[]]],[11,"ip_0","","Priority of interrupt 0",491,[[]]],[11,"set_ip_0","","Priority of interrupt 0",491,[[]]],[3,"NvicIpr4","","Use the Interrupt Priority Registers to assign a priority …",null,null],[11,"to_bits","","",492,[[]]],[11,"from_bits","","",492,[[],["nvicipr4",3]]],[11,"ip_19","","Priority of interrupt 19",492,[[]]],[11,"set_ip_19","","Priority of interrupt 19",492,[[]]],[11,"ip_18","","Priority of interrupt 18",492,[[]]],[11,"set_ip_18","","Priority of interrupt 18",492,[[]]],[11,"ip_17","","Priority of interrupt 17",492,[[]]],[11,"set_ip_17","","Priority of interrupt 17",492,[[]]],[11,"ip_16","","Priority of interrupt 16",492,[[]]],[11,"set_ip_16","","Priority of interrupt 16",492,[[]]],[3,"Aircr","","Use the Application Interrupt and Reset Control Register …",null,null],[11,"to_bits","","",493,[[]]],[11,"from_bits","","",493,[[],["aircr",3]]],[11,"vectkey","","Register key: Reads as Unknown On writes, write 0x05FA to …",493,[[]]],[11,"set_vectkey","","Register key: Reads as Unknown On writes, write 0x05FA to …",493,[[]]],[11,"endianess","","Data endianness implemented: 0 = Little-endian.",493,[[]]],[11,"set_endianess","","Data endianness implemented: 0 = Little-endian.",493,[[]]],[11,"sysresetreq","","Writing 1 to this bit causes the SYSRESETREQ signal to …",493,[[]]],[11,"set_sysresetreq","","Writing 1 to this bit causes the SYSRESETREQ signal to …",493,[[]]],[11,"vectclractive","","Clears all active state information for fixed and …",493,[[]]],[11,"set_vectclractive","","Clears all active state information for fixed and …",493,[[]]],[3,"SystCalib","","Use the SysTick Calibration Value Register to enable …",null,null],[11,"to_bits","","",494,[[]]],[11,"from_bits","","",494,[[],["systcalib",3]]],[11,"noref","","If reads as 1, the Reference clock is not provided - the …",494,[[]]],[11,"set_noref","","If reads as 1, the Reference clock is not provided - the …",494,[[]]],[11,"skew","","If reads as 1, the calibration value for 10ms is inexact …",494,[[]]],[11,"set_skew","","If reads as 1, the calibration value for 10ms is inexact …",494,[[]]],[11,"tenms","","An optional Reload value to be used for 10ms (100Hz) …",494,[[]]],[11,"set_tenms","","An optional Reload value to be used for 10ms (100Hz) …",494,[[]]],[3,"NvicIser","","Use the Interrupt Set-Enable Register to enable …",null,null],[11,"to_bits","","",495,[[]]],[11,"from_bits","","",495,[[],["nviciser",3]]],[11,"setena","","Interrupt set-enable bits. Write: 0 = No effect. 1 = …",495,[[]]],[11,"set_setena","","Interrupt set-enable bits. Write: 0 = No effect. 1 = …",495,[[]]],[3,"Scr","","System Control Register. Use the System Control Register …",null,null],[11,"to_bits","","",496,[[]]],[11,"from_bits","","",496,[[],["scr",3]]],[11,"sevonpend","","Send Event on Pending bit: 0 = Only enabled interrupts or …",496,[[]]],[11,"set_sevonpend","","Send Event on Pending bit: 0 = Only enabled interrupts or …",496,[[]]],[11,"sleepdeep","","Controls whether the processor uses sleep or deep sleep …",496,[[]]],[11,"set_sleepdeep","","Controls whether the processor uses sleep or deep sleep …",496,[[]]],[11,"sleeponexit","","Indicates sleep-on-exit when returning from Handler mode …",496,[[]]],[11,"set_sleeponexit","","Indicates sleep-on-exit when returning from Handler mode …",496,[[]]],[3,"NvicIpr6","","Use the Interrupt Priority Registers to assign a priority …",null,null],[11,"to_bits","","",497,[[]]],[11,"from_bits","","",497,[[],["nvicipr6",3]]],[11,"ip_27","","Priority of interrupt 27",497,[[]]],[11,"set_ip_27","","Priority of interrupt 27",497,[[]]],[11,"ip_26","","Priority of interrupt 26",497,[[]]],[11,"set_ip_26","","Priority of interrupt 26",497,[[]]],[11,"ip_25","","Priority of interrupt 25",497,[[]]],[11,"set_ip_25","","Priority of interrupt 25",497,[[]]],[11,"ip_24","","Priority of interrupt 24",497,[[]]],[11,"set_ip_24","","Priority of interrupt 24",497,[[]]],[3,"NvicIpr2","","Use the Interrupt Priority Registers to assign a priority …",null,null],[11,"to_bits","","",498,[[]]],[11,"from_bits","","",498,[[],["nvicipr2",3]]],[11,"ip_11","","Priority of interrupt 11",498,[[]]],[11,"set_ip_11","","Priority of interrupt 11",498,[[]]],[11,"ip_10","","Priority of interrupt 10",498,[[]]],[11,"set_ip_10","","Priority of interrupt 10",498,[[]]],[11,"ip_9","","Priority of interrupt 9",498,[[]]],[11,"set_ip_9","","Priority of interrupt 9",498,[[]]],[11,"ip_8","","Priority of interrupt 8",498,[[]]],[11,"set_ip_8","","Priority of interrupt 8",498,[[]]],[3,"NvicIspr","","The NVIC_ISPR forces interrupts into the pending state, …",null,null],[11,"to_bits","","",499,[[]]],[11,"from_bits","","",499,[[],["nvicispr",3]]],[11,"setpend","","Interrupt set-pending bits. Write: 0 = No effect. 1 = …",499,[[]]],[11,"set_setpend","","Interrupt set-pending bits. Write: 0 = No effect. 1 = …",499,[[]]],[3,"MpuRbar","","Read the MPU Region Base Address Register to determine …",null,null],[11,"to_bits","","",500,[[]]],[11,"from_bits","","",500,[[],["mpurbar",3]]],[11,"addr","","Base address of the region.",500,[[]]],[11,"set_addr","","Base address of the region.",500,[[]]],[11,"valid","","On writes, indicates whether the write must update the …",500,[[]]],[11,"set_valid","","On writes, indicates whether the write must update the …",500,[[]]],[11,"region","","On writes, specifies the number of the region whose base …",500,[[]]],[11,"set_region","","On writes, specifies the number of the region whose base …",500,[[]]],[3,"NvicIcpr","","Use the Interrupt Clear-Pending Register to clear pending …",null,null],[11,"to_bits","","",501,[[]]],[11,"from_bits","","",501,[[],["nvicicpr",3]]],[11,"clrpend","","Interrupt clear-pending bits. Write: 0 = No effect. 1 = …",501,[[]]],[11,"set_clrpend","","Interrupt clear-pending bits. Write: 0 = No effect. 1 = …",501,[[]]],[3,"Shcsr","","Use the System Handler Control and State Register to …",null,null],[11,"to_bits","","",502,[[]]],[11,"from_bits","","",502,[[],["shcsr",3]]],[11,"svcallpended","","Reads as 1 if SVCall is Pending. Write 1 to set pending …",502,[[]]],[11,"set_svcallpended","","Reads as 1 if SVCall is Pending. Write 1 to set pending …",502,[[]]],[3,"Shpr3","","System handlers are a special class of exception handler …",null,null],[11,"to_bits","","",503,[[]]],[11,"from_bits","","",503,[[],["shpr3",3]]],[11,"pri_15","","Priority of system handler 15, SysTick",503,[[]]],[11,"set_pri_15","","Priority of system handler 15, SysTick",503,[[]]],[11,"pri_14","","Priority of system handler 14, PendSV",503,[[]]],[11,"set_pri_14","","Priority of system handler 14, PendSV",503,[[]]],[3,"Vtor","","The VTOR holds the vector table offset address.",null,null],[11,"to_bits","","",504,[[]]],[11,"from_bits","","",504,[[],["vtor",3]]],[11,"tbloff","","Bits [31:8] of the indicate the vector table offset …",504,[[]]],[11,"set_tbloff","","Bits [31:8] of the indicate the vector table offset …",504,[[]]],[3,"SystRvr","","Use the SysTick Reload Value Register to specify the …",null,null],[11,"to_bits","","",505,[[]]],[11,"from_bits","","",505,[[],["systrvr",3]]],[11,"reload","","Value to load into the SysTick Current Value Register …",505,[[]]],[11,"set_reload","","Value to load into the SysTick Current Value Register …",505,[[]]],[3,"Shpr2","","System handlers are a special class of exception handler …",null,null],[11,"to_bits","","",506,[[]]],[11,"from_bits","","",506,[[],["shpr2",3]]],[11,"pri_11","","Priority of system handler 11, SVCall",506,[[]]],[11,"set_pri_11","","Priority of system handler 11, SVCall",506,[[]]],[3,"NvicIpr7","","Use the Interrupt Priority Registers to assign a priority …",null,null],[11,"to_bits","","",507,[[]]],[11,"from_bits","","",507,[[],["nvicipr7",3]]],[11,"ip_31","","Priority of interrupt 31",507,[[]]],[11,"set_ip_31","","Priority of interrupt 31",507,[[]]],[11,"ip_30","","Priority of interrupt 30",507,[[]]],[11,"set_ip_30","","Priority of interrupt 30",507,[[]]],[11,"ip_29","","Priority of interrupt 29",507,[[]]],[11,"set_ip_29","","Priority of interrupt 29",507,[[]]],[11,"ip_28","","Priority of interrupt 28",507,[[]]],[11,"set_ip_28","","Priority of interrupt 28",507,[[]]],[3,"NvicIpr5","","Use the Interrupt Priority Registers to assign a priority …",null,null],[11,"to_bits","","",508,[[]]],[11,"from_bits","","",508,[[],["nvicipr5",3]]],[11,"ip_23","","Priority of interrupt 23",508,[[]]],[11,"set_ip_23","","Priority of interrupt 23",508,[[]]],[11,"ip_22","","Priority of interrupt 22",508,[[]]],[11,"set_ip_22","","Priority of interrupt 22",508,[[]]],[11,"ip_21","","Priority of interrupt 21",508,[[]]],[11,"set_ip_21","","Priority of interrupt 21",508,[[]]],[11,"ip_20","","Priority of interrupt 20",508,[[]]],[11,"set_ip_20","","Priority of interrupt 20",508,[[]]],[3,"NvicIpr1","","Use the Interrupt Priority Registers to assign a priority …",null,null],[11,"to_bits","","",509,[[]]],[11,"from_bits","","",509,[[],["nvicipr1",3]]],[11,"ip_7","","Priority of interrupt 7",509,[[]]],[11,"set_ip_7","","Priority of interrupt 7",509,[[]]],[11,"ip_6","","Priority of interrupt 6",509,[[]]],[11,"set_ip_6","","Priority of interrupt 6",509,[[]]],[11,"ip_5","","Priority of interrupt 5",509,[[]]],[11,"set_ip_5","","Priority of interrupt 5",509,[[]]],[11,"ip_4","","Priority of interrupt 4",509,[[]]],[11,"set_ip_4","","Priority of interrupt 4",509,[[]]],[3,"NvicIpr3","","Use the Interrupt Priority Registers to assign a priority …",null,null],[11,"to_bits","","",510,[[]]],[11,"from_bits","","",510,[[],["nvicipr3",3]]],[11,"ip_15","","Priority of interrupt 15",510,[[]]],[11,"set_ip_15","","Priority of interrupt 15",510,[[]]],[11,"ip_14","","Priority of interrupt 14",510,[[]]],[11,"set_ip_14","","Priority of interrupt 14",510,[[]]],[11,"ip_13","","Priority of interrupt 13",510,[[]]],[11,"set_ip_13","","Priority of interrupt 13",510,[[]]],[11,"ip_12","","Priority of interrupt 12",510,[[]]],[11,"set_ip_12","","Priority of interrupt 12",510,[[]]],[3,"MpuRasr","","Use the MPU Region Attribute and Size Register to define …",null,null],[11,"to_bits","","",511,[[]]],[11,"from_bits","","",511,[[],["mpurasr",3]]],[11,"attrs","","The MPU Region Attribute field. Use to define the region …",511,[[]]],[11,"set_attrs","","The MPU Region Attribute field. Use to define the region …",511,[[]]],[11,"srd","","Subregion Disable. For regions of 256 bytes or larger, …",511,[[]]],[11,"set_srd","","Subregion Disable. For regions of 256 bytes or larger, …",511,[[]]],[11,"size","","Indicates the region size. Region size in bytes = …",511,[[]]],[11,"set_size","","Indicates the region size. Region size in bytes = …",511,[[]]],[11,"enable","","Enables the region.",511,[[]]],[11,"set_enable","","Enables the region.",511,[[]]],[3,"MpuRnr","","Use the MPU Region Number Register to select the region …",null,null],[11,"to_bits","","",512,[[]]],[11,"from_bits","","",512,[[],["mpurnr",3]]],[11,"region","","Indicates the MPU region referenced by the MPU_RBAR and …",512,[[]]],[11,"set_region","","Indicates the MPU region referenced by the MPU_RBAR and …",512,[[]]],[3,"Ppb","rp2040_pac::ppb","",null,null],[11,"from_ptr","","",513,[[]]],[11,"syst_csr","","Use the SysTick Control and Status Register to enable the …",513,[[],[["rw",3],["reg",3],["systcsr",3]]]],[11,"syst_rvr","","Use the SysTick Reload Value Register to specify the …",513,[[],[["systrvr",3],["rw",3],["reg",3]]]],[11,"syst_cvr","","Use the SysTick Current Value Register to find the …",513,[[],[["systcvr",3],["reg",3],["rw",3]]]],[11,"syst_calib","","Use the SysTick Calibration Value Register to enable …",513,[[],[["reg",3],["systcalib",3],["rw",3]]]],[11,"nvic_iser","","Use the Interrupt Set-Enable Register to enable …",513,[[],[["reg",3],["nviciser",3],["rw",3]]]],[11,"nvic_icer","","Use the Interrupt Clear-Enable Registers to disable …",513,[[],[["reg",3],["nvicicer",3],["rw",3]]]],[11,"nvic_ispr","","The NVIC_ISPR forces interrupts into the pending state, …",513,[[],[["nvicispr",3],["rw",3],["reg",3]]]],[11,"nvic_icpr","","Use the Interrupt Clear-Pending Register to clear pending …",513,[[],[["reg",3],["rw",3],["nvicicpr",3]]]],[11,"nvic_ipr0","","Use the Interrupt Priority Registers to assign a priority …",513,[[],[["reg",3],["nvicipr0",3],["rw",3]]]],[11,"nvic_ipr1","","Use the Interrupt Priority Registers to assign a priority …",513,[[],[["nvicipr1",3],["rw",3],["reg",3]]]],[11,"nvic_ipr2","","Use the Interrupt Priority Registers to assign a priority …",513,[[],[["reg",3],["nvicipr2",3],["rw",3]]]],[11,"nvic_ipr3","","Use the Interrupt Priority Registers to assign a priority …",513,[[],[["nvicipr3",3],["reg",3],["rw",3]]]],[11,"nvic_ipr4","","Use the Interrupt Priority Registers to assign a priority …",513,[[],[["reg",3],["rw",3],["nvicipr4",3]]]],[11,"nvic_ipr5","","Use the Interrupt Priority Registers to assign a priority …",513,[[],[["nvicipr5",3],["reg",3],["rw",3]]]],[11,"nvic_ipr6","","Use the Interrupt Priority Registers to assign a priority …",513,[[],[["nvicipr6",3],["rw",3],["reg",3]]]],[11,"nvic_ipr7","","Use the Interrupt Priority Registers to assign a priority …",513,[[],[["reg",3],["nvicipr7",3],["rw",3]]]],[11,"cpuid","","Read the CPU ID Base Register to determine: the ID number …",513,[[],[["reg",3],["rw",3],["cpuid",3]]]],[11,"icsr","","Use the Interrupt Control State Register to set a pending …",513,[[],[["icsr",3],["rw",3],["reg",3]]]],[11,"vtor","","The VTOR holds the vector table offset address.",513,[[],[["vtor",3],["reg",3],["rw",3]]]],[11,"aircr","","Use the Application Interrupt and Reset Control Register …",513,[[],[["reg",3],["aircr",3],["rw",3]]]],[11,"scr","","System Control Register. Use the System Control Register …",513,[[],[["scr",3],["rw",3],["reg",3]]]],[11,"ccr","","The Configuration and Control Register permanently …",513,[[],[["reg",3],["ccr",3],["rw",3]]]],[11,"shpr2","","System handlers are a special class of exception handler …",513,[[],[["shpr2",3],["rw",3],["reg",3]]]],[11,"shpr3","","System handlers are a special class of exception handler …",513,[[],[["shpr3",3],["rw",3],["reg",3]]]],[11,"shcsr","","Use the System Handler Control and State Register to …",513,[[],[["reg",3],["shcsr",3],["rw",3]]]],[11,"mpu_type","","Read the MPU Type Register to determine if the processor …",513,[[],[["rw",3],["reg",3],["mputype",3]]]],[11,"mpu_ctrl","","Use the MPU Control Register to enable and disable the …",513,[[],[["reg",3],["mpuctrl",3],["rw",3]]]],[11,"mpu_rnr","","Use the MPU Region Number Register to select the region …",513,[[],[["reg",3],["rw",3],["mpurnr",3]]]],[11,"mpu_rbar","","Read the MPU Region Base Address Register to determine …",513,[[],[["mpurbar",3],["rw",3],["reg",3]]]],[11,"mpu_rasr","","Use the MPU Region Attribute and Size Register to define …",513,[[],[["mpurasr",3],["rw",3],["reg",3]]]],[0,"psm","rp2040_pac","",null,null],[0,"fields","rp2040_pac::psm","",null,null],[3,"FrceOff","rp2040_pac::psm::fields","Force into reset (i.e. power it off)",null,null],[11,"to_bits","","",514,[[]]],[11,"from_bits","","",514,[[],["frceoff",3]]],[11,"proc1","","",514,[[]]],[11,"set_proc1","","",514,[[]]],[11,"proc0","","",514,[[]]],[11,"set_proc0","","",514,[[]]],[11,"sio","","",514,[[]]],[11,"set_sio","","",514,[[]]],[11,"vreg_and_chip_reset","","",514,[[]]],[11,"set_vreg_and_chip_reset","","",514,[[]]],[11,"xip","","",514,[[]]],[11,"set_xip","","",514,[[]]],[11,"sram5","","",514,[[]]],[11,"set_sram5","","",514,[[]]],[11,"sram4","","",514,[[]]],[11,"set_sram4","","",514,[[]]],[11,"sram3","","",514,[[]]],[11,"set_sram3","","",514,[[]]],[11,"sram2","","",514,[[]]],[11,"set_sram2","","",514,[[]]],[11,"sram1","","",514,[[]]],[11,"set_sram1","","",514,[[]]],[11,"sram0","","",514,[[]]],[11,"set_sram0","","",514,[[]]],[11,"rom","","",514,[[]]],[11,"set_rom","","",514,[[]]],[11,"busfabric","","",514,[[]]],[11,"set_busfabric","","",514,[[]]],[11,"resets","","",514,[[]]],[11,"set_resets","","",514,[[]]],[11,"clocks","","",514,[[]]],[11,"set_clocks","","",514,[[]]],[11,"xosc","","",514,[[]]],[11,"set_xosc","","",514,[[]]],[11,"rosc","","",514,[[]]],[11,"set_rosc","","",514,[[]]],[3,"Wdsel","","Set to 1 if this peripheral should be reset when the …",null,null],[11,"to_bits","","",515,[[]]],[11,"from_bits","","",515,[[],["wdsel",3]]],[11,"proc1","","",515,[[]]],[11,"set_proc1","","",515,[[]]],[11,"proc0","","",515,[[]]],[11,"set_proc0","","",515,[[]]],[11,"sio","","",515,[[]]],[11,"set_sio","","",515,[[]]],[11,"vreg_and_chip_reset","","",515,[[]]],[11,"set_vreg_and_chip_reset","","",515,[[]]],[11,"xip","","",515,[[]]],[11,"set_xip","","",515,[[]]],[11,"sram5","","",515,[[]]],[11,"set_sram5","","",515,[[]]],[11,"sram4","","",515,[[]]],[11,"set_sram4","","",515,[[]]],[11,"sram3","","",515,[[]]],[11,"set_sram3","","",515,[[]]],[11,"sram2","","",515,[[]]],[11,"set_sram2","","",515,[[]]],[11,"sram1","","",515,[[]]],[11,"set_sram1","","",515,[[]]],[11,"sram0","","",515,[[]]],[11,"set_sram0","","",515,[[]]],[11,"rom","","",515,[[]]],[11,"set_rom","","",515,[[]]],[11,"busfabric","","",515,[[]]],[11,"set_busfabric","","",515,[[]]],[11,"resets","","",515,[[]]],[11,"set_resets","","",515,[[]]],[11,"clocks","","",515,[[]]],[11,"set_clocks","","",515,[[]]],[11,"xosc","","",515,[[]]],[11,"set_xosc","","",515,[[]]],[11,"rosc","","",515,[[]]],[11,"set_rosc","","",515,[[]]],[3,"FrceOn","","Force block out of reset (i.e. power it on)",null,null],[11,"to_bits","","",516,[[]]],[11,"from_bits","","",516,[[],["frceon",3]]],[11,"proc1","","",516,[[]]],[11,"set_proc1","","",516,[[]]],[11,"proc0","","",516,[[]]],[11,"set_proc0","","",516,[[]]],[11,"sio","","",516,[[]]],[11,"set_sio","","",516,[[]]],[11,"vreg_and_chip_reset","","",516,[[]]],[11,"set_vreg_and_chip_reset","","",516,[[]]],[11,"xip","","",516,[[]]],[11,"set_xip","","",516,[[]]],[11,"sram5","","",516,[[]]],[11,"set_sram5","","",516,[[]]],[11,"sram4","","",516,[[]]],[11,"set_sram4","","",516,[[]]],[11,"sram3","","",516,[[]]],[11,"set_sram3","","",516,[[]]],[11,"sram2","","",516,[[]]],[11,"set_sram2","","",516,[[]]],[11,"sram1","","",516,[[]]],[11,"set_sram1","","",516,[[]]],[11,"sram0","","",516,[[]]],[11,"set_sram0","","",516,[[]]],[11,"rom","","",516,[[]]],[11,"set_rom","","",516,[[]]],[11,"busfabric","","",516,[[]]],[11,"set_busfabric","","",516,[[]]],[11,"resets","","",516,[[]]],[11,"set_resets","","",516,[[]]],[11,"clocks","","",516,[[]]],[11,"set_clocks","","",516,[[]]],[11,"xosc","","",516,[[]]],[11,"set_xosc","","",516,[[]]],[11,"rosc","","",516,[[]]],[11,"set_rosc","","",516,[[]]],[3,"Done","","Indicates the peripheral\'s registers are ready to access.",null,null],[11,"to_bits","","",517,[[]]],[11,"from_bits","","",517,[[],["done",3]]],[11,"proc1","","",517,[[]]],[11,"set_proc1","","",517,[[]]],[11,"proc0","","",517,[[]]],[11,"set_proc0","","",517,[[]]],[11,"sio","","",517,[[]]],[11,"set_sio","","",517,[[]]],[11,"vreg_and_chip_reset","","",517,[[]]],[11,"set_vreg_and_chip_reset","","",517,[[]]],[11,"xip","","",517,[[]]],[11,"set_xip","","",517,[[]]],[11,"sram5","","",517,[[]]],[11,"set_sram5","","",517,[[]]],[11,"sram4","","",517,[[]]],[11,"set_sram4","","",517,[[]]],[11,"sram3","","",517,[[]]],[11,"set_sram3","","",517,[[]]],[11,"sram2","","",517,[[]]],[11,"set_sram2","","",517,[[]]],[11,"sram1","","",517,[[]]],[11,"set_sram1","","",517,[[]]],[11,"sram0","","",517,[[]]],[11,"set_sram0","","",517,[[]]],[11,"rom","","",517,[[]]],[11,"set_rom","","",517,[[]]],[11,"busfabric","","",517,[[]]],[11,"set_busfabric","","",517,[[]]],[11,"resets","","",517,[[]]],[11,"set_resets","","",517,[[]]],[11,"clocks","","",517,[[]]],[11,"set_clocks","","",517,[[]]],[11,"xosc","","",517,[[]]],[11,"set_xosc","","",517,[[]]],[11,"rosc","","",517,[[]]],[11,"set_rosc","","",517,[[]]],[3,"Psm","rp2040_pac::psm","",null,null],[11,"from_ptr","","",518,[[]]],[11,"frce_on","","Force block out of reset (i.e. power it on)",518,[[],[["frceon",3],["reg",3],["rw",3]]]],[11,"frce_off","","Force into reset (i.e. power it off)",518,[[],[["rw",3],["frceoff",3],["reg",3]]]],[11,"wdsel","","Set to 1 if this peripheral should be reset when the …",518,[[],[["wdsel",3],["rw",3],["reg",3]]]],[11,"done","","Indicates the peripheral\'s registers are ready to access.",518,[[],[["done",3],["reg",3],["rw",3]]]],[0,"pwm","rp2040_pac","",null,null],[0,"fields","rp2040_pac::pwm","",null,null],[3,"Ch0Top","rp2040_pac::pwm::fields","Counter wrap value",null,null],[11,"to_bits","","",519,[[]]],[11,"from_bits","","",519,[[],["ch0top",3]]],[11,"ch0_top","","",519,[[]]],[11,"set_ch0_top","","",519,[[]]],[3,"Ch2Top","","Counter wrap value",null,null],[11,"to_bits","","",520,[[]]],[11,"from_bits","","",520,[[],["ch2top",3]]],[11,"ch2_top","","",520,[[]]],[11,"set_ch2_top","","",520,[[]]],[3,"Ch4Ctr","","Direct access to the PWM counter",null,null],[11,"to_bits","","",521,[[]]],[11,"from_bits","","",521,[[],["ch4ctr",3]]],[11,"ch4_ctr","","",521,[[]]],[11,"set_ch4_ctr","","",521,[[]]],[3,"Ch0Csr","","Control and status register",null,null],[11,"to_bits","","",522,[[]]],[11,"from_bits","","",522,[[],["ch0csr",3]]],[11,"ph_adv","","Advance the phase of the counter by 1 count, while it is …",522,[[]]],[11,"set_ph_adv","","Advance the phase of the counter by 1 count, while it is …",522,[[]]],[11,"ph_ret","","Retard the phase of the counter by 1 count, while it is …",522,[[]]],[11,"set_ph_ret","","Retard the phase of the counter by 1 count, while it is …",522,[[]]],[11,"divmode","","",522,[[],["divmode",3]]],[11,"set_divmode","","",522,[[["divmode",3]]]],[11,"b_inv","","Invert output B",522,[[]]],[11,"set_b_inv","","Invert output B",522,[[]]],[11,"a_inv","","Invert output A",522,[[]]],[11,"set_a_inv","","Invert output A",522,[[]]],[11,"ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",522,[[]]],[11,"set_ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",522,[[]]],[11,"en","","Enable the PWM channel.",522,[[]]],[11,"set_en","","Enable the PWM channel.",522,[[]]],[3,"Ch4Div","","INT and FRAC form a fixed-point fractional number. …",null,null],[11,"to_bits","","",523,[[]]],[11,"from_bits","","",523,[[],["ch4div",3]]],[11,"int","","",523,[[]]],[11,"set_int","","",523,[[]]],[11,"frac","","",523,[[]]],[11,"set_frac","","",523,[[]]],[3,"Ch0Cc","","Counter compare values",null,null],[11,"to_bits","","",524,[[]]],[11,"from_bits","","",524,[[],["ch0cc",3]]],[11,"b","","",524,[[]]],[11,"set_b","","",524,[[]]],[11,"a","","",524,[[]]],[11,"set_a","","",524,[[]]],[3,"Ch2Csr","","Control and status register",null,null],[11,"to_bits","","",525,[[]]],[11,"from_bits","","",525,[[],["ch2csr",3]]],[11,"ph_adv","","Advance the phase of the counter by 1 count, while it is …",525,[[]]],[11,"set_ph_adv","","Advance the phase of the counter by 1 count, while it is …",525,[[]]],[11,"ph_ret","","Retard the phase of the counter by 1 count, while it is …",525,[[]]],[11,"set_ph_ret","","Retard the phase of the counter by 1 count, while it is …",525,[[]]],[11,"divmode","","",525,[[],["divmode",3]]],[11,"set_divmode","","",525,[[["divmode",3]]]],[11,"b_inv","","Invert output B",525,[[]]],[11,"set_b_inv","","Invert output B",525,[[]]],[11,"a_inv","","Invert output A",525,[[]]],[11,"set_a_inv","","Invert output A",525,[[]]],[11,"ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",525,[[]]],[11,"set_ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",525,[[]]],[11,"en","","Enable the PWM channel.",525,[[]]],[11,"set_en","","Enable the PWM channel.",525,[[]]],[3,"Ch3Cc","","Counter compare values",null,null],[11,"to_bits","","",526,[[]]],[11,"from_bits","","",526,[[],["ch3cc",3]]],[11,"b","","",526,[[]]],[11,"set_b","","",526,[[]]],[11,"a","","",526,[[]]],[11,"set_a","","",526,[[]]],[3,"Ch1Ctr","","Direct access to the PWM counter",null,null],[11,"to_bits","","",527,[[]]],[11,"from_bits","","",527,[[],["ch1ctr",3]]],[11,"ch1_ctr","","",527,[[]]],[11,"set_ch1_ctr","","",527,[[]]],[3,"Ch4Top","","Counter wrap value",null,null],[11,"to_bits","","",528,[[]]],[11,"from_bits","","",528,[[],["ch4top",3]]],[11,"ch4_top","","",528,[[]]],[11,"set_ch4_top","","",528,[[]]],[3,"Ch3Csr","","Control and status register",null,null],[11,"to_bits","","",529,[[]]],[11,"from_bits","","",529,[[],["ch3csr",3]]],[11,"ph_adv","","Advance the phase of the counter by 1 count, while it is …",529,[[]]],[11,"set_ph_adv","","Advance the phase of the counter by 1 count, while it is …",529,[[]]],[11,"ph_ret","","Retard the phase of the counter by 1 count, while it is …",529,[[]]],[11,"set_ph_ret","","Retard the phase of the counter by 1 count, while it is …",529,[[]]],[11,"divmode","","",529,[[],["divmode",3]]],[11,"set_divmode","","",529,[[["divmode",3]]]],[11,"b_inv","","Invert output B",529,[[]]],[11,"set_b_inv","","Invert output B",529,[[]]],[11,"a_inv","","Invert output A",529,[[]]],[11,"set_a_inv","","Invert output A",529,[[]]],[11,"ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",529,[[]]],[11,"set_ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",529,[[]]],[11,"en","","Enable the PWM channel.",529,[[]]],[11,"set_en","","Enable the PWM channel.",529,[[]]],[3,"Ch2Cc","","Counter compare values",null,null],[11,"to_bits","","",530,[[]]],[11,"from_bits","","",530,[[],["ch2cc",3]]],[11,"b","","",530,[[]]],[11,"set_b","","",530,[[]]],[11,"a","","",530,[[]]],[11,"set_a","","",530,[[]]],[3,"Ch6Div","","INT and FRAC form a fixed-point fractional number. …",null,null],[11,"to_bits","","",531,[[]]],[11,"from_bits","","",531,[[],["ch6div",3]]],[11,"int","","",531,[[]]],[11,"set_int","","",531,[[]]],[11,"frac","","",531,[[]]],[11,"set_frac","","",531,[[]]],[3,"Ch5Csr","","Control and status register",null,null],[11,"to_bits","","",532,[[]]],[11,"from_bits","","",532,[[],["ch5csr",3]]],[11,"ph_adv","","Advance the phase of the counter by 1 count, while it is …",532,[[]]],[11,"set_ph_adv","","Advance the phase of the counter by 1 count, while it is …",532,[[]]],[11,"ph_ret","","Retard the phase of the counter by 1 count, while it is …",532,[[]]],[11,"set_ph_ret","","Retard the phase of the counter by 1 count, while it is …",532,[[]]],[11,"divmode","","",532,[[],["divmode",3]]],[11,"set_divmode","","",532,[[["divmode",3]]]],[11,"b_inv","","Invert output B",532,[[]]],[11,"set_b_inv","","Invert output B",532,[[]]],[11,"a_inv","","Invert output A",532,[[]]],[11,"set_a_inv","","Invert output A",532,[[]]],[11,"ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",532,[[]]],[11,"set_ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",532,[[]]],[11,"en","","Enable the PWM channel.",532,[[]]],[11,"set_en","","Enable the PWM channel.",532,[[]]],[3,"Ch6Cc","","Counter compare values",null,null],[11,"to_bits","","",533,[[]]],[11,"from_bits","","",533,[[],["ch6cc",3]]],[11,"b","","",533,[[]]],[11,"set_b","","",533,[[]]],[11,"a","","",533,[[]]],[11,"set_a","","",533,[[]]],[3,"Ints","","Interrupt status after masking & forcing",null,null],[11,"to_bits","","",534,[[]]],[11,"from_bits","","",534,[[],["ints",3]]],[11,"ch7","","",534,[[]]],[11,"set_ch7","","",534,[[]]],[11,"ch6","","",534,[[]]],[11,"set_ch6","","",534,[[]]],[11,"ch5","","",534,[[]]],[11,"set_ch5","","",534,[[]]],[11,"ch4","","",534,[[]]],[11,"set_ch4","","",534,[[]]],[11,"ch3","","",534,[[]]],[11,"set_ch3","","",534,[[]]],[11,"ch2","","",534,[[]]],[11,"set_ch2","","",534,[[]]],[11,"ch1","","",534,[[]]],[11,"set_ch1","","",534,[[]]],[11,"ch0","","",534,[[]]],[11,"set_ch0","","",534,[[]]],[3,"Intf","","Interrupt Force",null,null],[11,"to_bits","","",535,[[]]],[11,"from_bits","","",535,[[],["intf",3]]],[11,"ch7","","",535,[[]]],[11,"set_ch7","","",535,[[]]],[11,"ch6","","",535,[[]]],[11,"set_ch6","","",535,[[]]],[11,"ch5","","",535,[[]]],[11,"set_ch5","","",535,[[]]],[11,"ch4","","",535,[[]]],[11,"set_ch4","","",535,[[]]],[11,"ch3","","",535,[[]]],[11,"set_ch3","","",535,[[]]],[11,"ch2","","",535,[[]]],[11,"set_ch2","","",535,[[]]],[11,"ch1","","",535,[[]]],[11,"set_ch1","","",535,[[]]],[11,"ch0","","",535,[[]]],[11,"set_ch0","","",535,[[]]],[3,"Ch1Top","","Counter wrap value",null,null],[11,"to_bits","","",536,[[]]],[11,"from_bits","","",536,[[],["ch1top",3]]],[11,"ch1_top","","",536,[[]]],[11,"set_ch1_top","","",536,[[]]],[3,"Ch2Div","","INT and FRAC form a fixed-point fractional number. …",null,null],[11,"to_bits","","",537,[[]]],[11,"from_bits","","",537,[[],["ch2div",3]]],[11,"int","","",537,[[]]],[11,"set_int","","",537,[[]]],[11,"frac","","",537,[[]]],[11,"set_frac","","",537,[[]]],[3,"Ch4Csr","","Control and status register",null,null],[11,"to_bits","","",538,[[]]],[11,"from_bits","","",538,[[],["ch4csr",3]]],[11,"ph_adv","","Advance the phase of the counter by 1 count, while it is …",538,[[]]],[11,"set_ph_adv","","Advance the phase of the counter by 1 count, while it is …",538,[[]]],[11,"ph_ret","","Retard the phase of the counter by 1 count, while it is …",538,[[]]],[11,"set_ph_ret","","Retard the phase of the counter by 1 count, while it is …",538,[[]]],[11,"divmode","","",538,[[],["divmode",3]]],[11,"set_divmode","","",538,[[["divmode",3]]]],[11,"b_inv","","Invert output B",538,[[]]],[11,"set_b_inv","","Invert output B",538,[[]]],[11,"a_inv","","Invert output A",538,[[]]],[11,"set_a_inv","","Invert output A",538,[[]]],[11,"ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",538,[[]]],[11,"set_ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",538,[[]]],[11,"en","","Enable the PWM channel.",538,[[]]],[11,"set_en","","Enable the PWM channel.",538,[[]]],[3,"Ch3Div","","INT and FRAC form a fixed-point fractional number. …",null,null],[11,"to_bits","","",539,[[]]],[11,"from_bits","","",539,[[],["ch3div",3]]],[11,"int","","",539,[[]]],[11,"set_int","","",539,[[]]],[11,"frac","","",539,[[]]],[11,"set_frac","","",539,[[]]],[3,"Ch6Top","","Counter wrap value",null,null],[11,"to_bits","","",540,[[]]],[11,"from_bits","","",540,[[],["ch6top",3]]],[11,"ch6_top","","",540,[[]]],[11,"set_ch6_top","","",540,[[]]],[3,"Ch1Div","","INT and FRAC form a fixed-point fractional number. …",null,null],[11,"to_bits","","",541,[[]]],[11,"from_bits","","",541,[[],["ch1div",3]]],[11,"int","","",541,[[]]],[11,"set_int","","",541,[[]]],[11,"frac","","",541,[[]]],[11,"set_frac","","",541,[[]]],[3,"En","","This register aliases the CSR_EN bits for all channels. …",null,null],[11,"to_bits","","",542,[[]]],[11,"from_bits","","",542,[[],["en",3]]],[11,"ch7","","",542,[[]]],[11,"set_ch7","","",542,[[]]],[11,"ch6","","",542,[[]]],[11,"set_ch6","","",542,[[]]],[11,"ch5","","",542,[[]]],[11,"set_ch5","","",542,[[]]],[11,"ch4","","",542,[[]]],[11,"set_ch4","","",542,[[]]],[11,"ch3","","",542,[[]]],[11,"set_ch3","","",542,[[]]],[11,"ch2","","",542,[[]]],[11,"set_ch2","","",542,[[]]],[11,"ch1","","",542,[[]]],[11,"set_ch1","","",542,[[]]],[11,"ch0","","",542,[[]]],[11,"set_ch0","","",542,[[]]],[3,"Ch7Ctr","","Direct access to the PWM counter",null,null],[11,"to_bits","","",543,[[]]],[11,"from_bits","","",543,[[],["ch7ctr",3]]],[11,"ch7_ctr","","",543,[[]]],[11,"set_ch7_ctr","","",543,[[]]],[3,"Ch4Cc","","Counter compare values",null,null],[11,"to_bits","","",544,[[]]],[11,"from_bits","","",544,[[],["ch4cc",3]]],[11,"b","","",544,[[]]],[11,"set_b","","",544,[[]]],[11,"a","","",544,[[]]],[11,"set_a","","",544,[[]]],[3,"Ch5Cc","","Counter compare values",null,null],[11,"to_bits","","",545,[[]]],[11,"from_bits","","",545,[[],["ch5cc",3]]],[11,"b","","",545,[[]]],[11,"set_b","","",545,[[]]],[11,"a","","",545,[[]]],[11,"set_a","","",545,[[]]],[3,"Ch1Cc","","Counter compare values",null,null],[11,"to_bits","","",546,[[]]],[11,"from_bits","","",546,[[],["ch1cc",3]]],[11,"b","","",546,[[]]],[11,"set_b","","",546,[[]]],[11,"a","","",546,[[]]],[11,"set_a","","",546,[[]]],[3,"Ch7Div","","INT and FRAC form a fixed-point fractional number. …",null,null],[11,"to_bits","","",547,[[]]],[11,"from_bits","","",547,[[],["ch7div",3]]],[11,"int","","",547,[[]]],[11,"set_int","","",547,[[]]],[11,"frac","","",547,[[]]],[11,"set_frac","","",547,[[]]],[3,"Ch5Ctr","","Direct access to the PWM counter",null,null],[11,"to_bits","","",548,[[]]],[11,"from_bits","","",548,[[],["ch5ctr",3]]],[11,"ch5_ctr","","",548,[[]]],[11,"set_ch5_ctr","","",548,[[]]],[3,"Ch6Ctr","","Direct access to the PWM counter",null,null],[11,"to_bits","","",549,[[]]],[11,"from_bits","","",549,[[],["ch6ctr",3]]],[11,"ch6_ctr","","",549,[[]]],[11,"set_ch6_ctr","","",549,[[]]],[3,"Ch3Top","","Counter wrap value",null,null],[11,"to_bits","","",550,[[]]],[11,"from_bits","","",550,[[],["ch3top",3]]],[11,"ch3_top","","",550,[[]]],[11,"set_ch3_top","","",550,[[]]],[3,"Ch6Csr","","Control and status register",null,null],[11,"to_bits","","",551,[[]]],[11,"from_bits","","",551,[[],["ch6csr",3]]],[11,"ph_adv","","Advance the phase of the counter by 1 count, while it is …",551,[[]]],[11,"set_ph_adv","","Advance the phase of the counter by 1 count, while it is …",551,[[]]],[11,"ph_ret","","Retard the phase of the counter by 1 count, while it is …",551,[[]]],[11,"set_ph_ret","","Retard the phase of the counter by 1 count, while it is …",551,[[]]],[11,"divmode","","",551,[[],["divmode",3]]],[11,"set_divmode","","",551,[[["divmode",3]]]],[11,"b_inv","","Invert output B",551,[[]]],[11,"set_b_inv","","Invert output B",551,[[]]],[11,"a_inv","","Invert output A",551,[[]]],[11,"set_a_inv","","Invert output A",551,[[]]],[11,"ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",551,[[]]],[11,"set_ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",551,[[]]],[11,"en","","Enable the PWM channel.",551,[[]]],[11,"set_en","","Enable the PWM channel.",551,[[]]],[3,"Ch7Cc","","Counter compare values",null,null],[11,"to_bits","","",552,[[]]],[11,"from_bits","","",552,[[],["ch7cc",3]]],[11,"b","","",552,[[]]],[11,"set_b","","",552,[[]]],[11,"a","","",552,[[]]],[11,"set_a","","",552,[[]]],[3,"Ch3Ctr","","Direct access to the PWM counter",null,null],[11,"to_bits","","",553,[[]]],[11,"from_bits","","",553,[[],["ch3ctr",3]]],[11,"ch3_ctr","","",553,[[]]],[11,"set_ch3_ctr","","",553,[[]]],[3,"Ch1Csr","","Control and status register",null,null],[11,"to_bits","","",554,[[]]],[11,"from_bits","","",554,[[],["ch1csr",3]]],[11,"ph_adv","","Advance the phase of the counter by 1 count, while it is …",554,[[]]],[11,"set_ph_adv","","Advance the phase of the counter by 1 count, while it is …",554,[[]]],[11,"ph_ret","","Retard the phase of the counter by 1 count, while it is …",554,[[]]],[11,"set_ph_ret","","Retard the phase of the counter by 1 count, while it is …",554,[[]]],[11,"divmode","","",554,[[],["divmode",3]]],[11,"set_divmode","","",554,[[["divmode",3]]]],[11,"b_inv","","Invert output B",554,[[]]],[11,"set_b_inv","","Invert output B",554,[[]]],[11,"a_inv","","Invert output A",554,[[]]],[11,"set_a_inv","","Invert output A",554,[[]]],[11,"ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",554,[[]]],[11,"set_ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",554,[[]]],[11,"en","","Enable the PWM channel.",554,[[]]],[11,"set_en","","Enable the PWM channel.",554,[[]]],[3,"Ch7Top","","Counter wrap value",null,null],[11,"to_bits","","",555,[[]]],[11,"from_bits","","",555,[[],["ch7top",3]]],[11,"ch7_top","","",555,[[]]],[11,"set_ch7_top","","",555,[[]]],[3,"Ch0Ctr","","Direct access to the PWM counter",null,null],[11,"to_bits","","",556,[[]]],[11,"from_bits","","",556,[[],["ch0ctr",3]]],[11,"ch0_ctr","","",556,[[]]],[11,"set_ch0_ctr","","",556,[[]]],[3,"Ch0Div","","INT and FRAC form a fixed-point fractional number. …",null,null],[11,"to_bits","","",557,[[]]],[11,"from_bits","","",557,[[],["ch0div",3]]],[11,"int","","",557,[[]]],[11,"set_int","","",557,[[]]],[11,"frac","","",557,[[]]],[11,"set_frac","","",557,[[]]],[3,"Ch2Ctr","","Direct access to the PWM counter",null,null],[11,"to_bits","","",558,[[]]],[11,"from_bits","","",558,[[],["ch2ctr",3]]],[11,"ch2_ctr","","",558,[[]]],[11,"set_ch2_ctr","","",558,[[]]],[3,"Ch5Div","","INT and FRAC form a fixed-point fractional number. …",null,null],[11,"to_bits","","",559,[[]]],[11,"from_bits","","",559,[[],["ch5div",3]]],[11,"int","","",559,[[]]],[11,"set_int","","",559,[[]]],[11,"frac","","",559,[[]]],[11,"set_frac","","",559,[[]]],[3,"Intr","","Raw Interrupts",null,null],[11,"to_bits","","",560,[[]]],[11,"from_bits","","",560,[[],["intr",3]]],[11,"ch7","","",560,[[]]],[11,"set_ch7","","",560,[[]]],[11,"ch6","","",560,[[]]],[11,"set_ch6","","",560,[[]]],[11,"ch5","","",560,[[]]],[11,"set_ch5","","",560,[[]]],[11,"ch4","","",560,[[]]],[11,"set_ch4","","",560,[[]]],[11,"ch3","","",560,[[]]],[11,"set_ch3","","",560,[[]]],[11,"ch2","","",560,[[]]],[11,"set_ch2","","",560,[[]]],[11,"ch1","","",560,[[]]],[11,"set_ch1","","",560,[[]]],[11,"ch0","","",560,[[]]],[11,"set_ch0","","",560,[[]]],[3,"Ch7Csr","","Control and status register",null,null],[11,"to_bits","","",561,[[]]],[11,"from_bits","","",561,[[],["ch7csr",3]]],[11,"ph_adv","","Advance the phase of the counter by 1 count, while it is …",561,[[]]],[11,"set_ph_adv","","Advance the phase of the counter by 1 count, while it is …",561,[[]]],[11,"ph_ret","","Retard the phase of the counter by 1 count, while it is …",561,[[]]],[11,"set_ph_ret","","Retard the phase of the counter by 1 count, while it is …",561,[[]]],[11,"divmode","","",561,[[],["divmode",3]]],[11,"set_divmode","","",561,[[["divmode",3]]]],[11,"b_inv","","Invert output B",561,[[]]],[11,"set_b_inv","","Invert output B",561,[[]]],[11,"a_inv","","Invert output A",561,[[]]],[11,"set_a_inv","","Invert output A",561,[[]]],[11,"ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",561,[[]]],[11,"set_ph_correct","","1: Enable phase-correct modulation. 0: Trailing-edge",561,[[]]],[11,"en","","Enable the PWM channel.",561,[[]]],[11,"set_en","","Enable the PWM channel.",561,[[]]],[3,"Inte","","Interrupt Enable",null,null],[11,"to_bits","","",562,[[]]],[11,"from_bits","","",562,[[],["inte",3]]],[11,"ch7","","",562,[[]]],[11,"set_ch7","","",562,[[]]],[11,"ch6","","",562,[[]]],[11,"set_ch6","","",562,[[]]],[11,"ch5","","",562,[[]]],[11,"set_ch5","","",562,[[]]],[11,"ch4","","",562,[[]]],[11,"set_ch4","","",562,[[]]],[11,"ch3","","",562,[[]]],[11,"set_ch3","","",562,[[]]],[11,"ch2","","",562,[[]]],[11,"set_ch2","","",562,[[]]],[11,"ch1","","",562,[[]]],[11,"set_ch1","","",562,[[]]],[11,"ch0","","",562,[[]]],[11,"set_ch0","","",562,[[]]],[3,"Ch5Top","","Counter wrap value",null,null],[11,"to_bits","","",563,[[]]],[11,"from_bits","","",563,[[],["ch5top",3]]],[11,"ch5_top","","",563,[[]]],[11,"set_ch5_top","","",563,[[]]],[0,"values","rp2040_pac::pwm","",null,null],[3,"Divmode","rp2040_pac::pwm::values","Control and status register",null,null],[11,"to_bits","","",564,[[]]],[11,"from_bits","","",564,[[],["divmode",3]]],[18,"DIV","","Free-running counting at rate dictated by fractional …",564,null],[18,"LEVEL","","Fractional divider operation is gated by the PWM B pin.",564,null],[18,"RISE","","Counter advances with each rising edge of the PWM B pin.",564,null],[18,"FALL","","Counter advances with each falling edge of the PWM B pin.",564,null],[3,"Pwm","rp2040_pac::pwm","Simple PWM",null,null],[11,"from_ptr","","",565,[[]]],[11,"ch0_csr","","Control and status register",565,[[],[["reg",3],["ch0csr",3],["rw",3]]]],[11,"ch0_div","","INT and FRAC form a fixed-point fractional number. …",565,[[],[["ch0div",3],["reg",3],["rw",3]]]],[11,"ch0_ctr","","Direct access to the PWM counter",565,[[],[["reg",3],["rw",3],["ch0ctr",3]]]],[11,"ch0_cc","","Counter compare values",565,[[],[["ch0cc",3],["reg",3],["rw",3]]]],[11,"ch0_top","","Counter wrap value",565,[[],[["reg",3],["rw",3],["ch0top",3]]]],[11,"ch1_csr","","Control and status register",565,[[],[["reg",3],["ch1csr",3],["rw",3]]]],[11,"ch1_div","","INT and FRAC form a fixed-point fractional number. …",565,[[],[["ch1div",3],["reg",3],["rw",3]]]],[11,"ch1_ctr","","Direct access to the PWM counter",565,[[],[["reg",3],["ch1ctr",3],["rw",3]]]],[11,"ch1_cc","","Counter compare values",565,[[],[["reg",3],["ch1cc",3],["rw",3]]]],[11,"ch1_top","","Counter wrap value",565,[[],[["ch1top",3],["reg",3],["rw",3]]]],[11,"ch2_csr","","Control and status register",565,[[],[["reg",3],["ch2csr",3],["rw",3]]]],[11,"ch2_div","","INT and FRAC form a fixed-point fractional number. …",565,[[],[["reg",3],["ch2div",3],["rw",3]]]],[11,"ch2_ctr","","Direct access to the PWM counter",565,[[],[["reg",3],["ch2ctr",3],["rw",3]]]],[11,"ch2_cc","","Counter compare values",565,[[],[["ch2cc",3],["rw",3],["reg",3]]]],[11,"ch2_top","","Counter wrap value",565,[[],[["reg",3],["ch2top",3],["rw",3]]]],[11,"ch3_csr","","Control and status register",565,[[],[["rw",3],["reg",3],["ch3csr",3]]]],[11,"ch3_div","","INT and FRAC form a fixed-point fractional number. …",565,[[],[["ch3div",3],["reg",3],["rw",3]]]],[11,"ch3_ctr","","Direct access to the PWM counter",565,[[],[["reg",3],["ch3ctr",3],["rw",3]]]],[11,"ch3_cc","","Counter compare values",565,[[],[["reg",3],["rw",3],["ch3cc",3]]]],[11,"ch3_top","","Counter wrap value",565,[[],[["reg",3],["ch3top",3],["rw",3]]]],[11,"ch4_csr","","Control and status register",565,[[],[["rw",3],["reg",3],["ch4csr",3]]]],[11,"ch4_div","","INT and FRAC form a fixed-point fractional number. …",565,[[],[["rw",3],["reg",3],["ch4div",3]]]],[11,"ch4_ctr","","Direct access to the PWM counter",565,[[],[["ch4ctr",3],["reg",3],["rw",3]]]],[11,"ch4_cc","","Counter compare values",565,[[],[["reg",3],["ch4cc",3],["rw",3]]]],[11,"ch4_top","","Counter wrap value",565,[[],[["ch4top",3],["rw",3],["reg",3]]]],[11,"ch5_csr","","Control and status register",565,[[],[["reg",3],["ch5csr",3],["rw",3]]]],[11,"ch5_div","","INT and FRAC form a fixed-point fractional number. …",565,[[],[["ch5div",3],["rw",3],["reg",3]]]],[11,"ch5_ctr","","Direct access to the PWM counter",565,[[],[["rw",3],["reg",3],["ch5ctr",3]]]],[11,"ch5_cc","","Counter compare values",565,[[],[["reg",3],["rw",3],["ch5cc",3]]]],[11,"ch5_top","","Counter wrap value",565,[[],[["reg",3],["ch5top",3],["rw",3]]]],[11,"ch6_csr","","Control and status register",565,[[],[["reg",3],["ch6csr",3],["rw",3]]]],[11,"ch6_div","","INT and FRAC form a fixed-point fractional number. …",565,[[],[["reg",3],["ch6div",3],["rw",3]]]],[11,"ch6_ctr","","Direct access to the PWM counter",565,[[],[["ch6ctr",3],["reg",3],["rw",3]]]],[11,"ch6_cc","","Counter compare values",565,[[],[["ch6cc",3],["rw",3],["reg",3]]]],[11,"ch6_top","","Counter wrap value",565,[[],[["reg",3],["ch6top",3],["rw",3]]]],[11,"ch7_csr","","Control and status register",565,[[],[["rw",3],["ch7csr",3],["reg",3]]]],[11,"ch7_div","","INT and FRAC form a fixed-point fractional number. …",565,[[],[["rw",3],["reg",3],["ch7div",3]]]],[11,"ch7_ctr","","Direct access to the PWM counter",565,[[],[["ch7ctr",3],["rw",3],["reg",3]]]],[11,"ch7_cc","","Counter compare values",565,[[],[["reg",3],["rw",3],["ch7cc",3]]]],[11,"ch7_top","","Counter wrap value",565,[[],[["rw",3],["reg",3],["ch7top",3]]]],[11,"en","","This register aliases the CSR_EN bits for all channels. …",565,[[],[["reg",3],["en",3],["rw",3]]]],[11,"intr","","Raw Interrupts",565,[[],[["reg",3],["intr",3],["rw",3]]]],[11,"inte","","Interrupt Enable",565,[[],[["inte",3],["reg",3],["rw",3]]]],[11,"intf","","Interrupt Force",565,[[],[["reg",3],["intf",3],["rw",3]]]],[11,"ints","","Interrupt status after masking & forcing",565,[[],[["reg",3],["ints",3],["rw",3]]]],[0,"resets","rp2040_pac","",null,null],[0,"fields","rp2040_pac::resets","",null,null],[3,"Peripherals","rp2040_pac::resets::fields","Reset done. If a bit is set then a reset done signal has …",null,null],[11,"to_bits","","",566,[[]]],[11,"from_bits","","",566,[[],["peripherals",3]]],[11,"usbctrl","","",566,[[]]],[11,"set_usbctrl","","",566,[[]]],[11,"uart1","","",566,[[]]],[11,"set_uart1","","",566,[[]]],[11,"uart0","","",566,[[]]],[11,"set_uart0","","",566,[[]]],[11,"timer","","",566,[[]]],[11,"set_timer","","",566,[[]]],[11,"tbman","","",566,[[]]],[11,"set_tbman","","",566,[[]]],[11,"sysinfo","","",566,[[]]],[11,"set_sysinfo","","",566,[[]]],[11,"syscfg","","",566,[[]]],[11,"set_syscfg","","",566,[[]]],[11,"spi1","","",566,[[]]],[11,"set_spi1","","",566,[[]]],[11,"spi0","","",566,[[]]],[11,"set_spi0","","",566,[[]]],[11,"rtc","","",566,[[]]],[11,"set_rtc","","",566,[[]]],[11,"pwm","","",566,[[]]],[11,"set_pwm","","",566,[[]]],[11,"pll_usb","","",566,[[]]],[11,"set_pll_usb","","",566,[[]]],[11,"pll_sys","","",566,[[]]],[11,"set_pll_sys","","",566,[[]]],[11,"pio1","","",566,[[]]],[11,"set_pio1","","",566,[[]]],[11,"pio0","","",566,[[]]],[11,"set_pio0","","",566,[[]]],[11,"pads_qspi","","",566,[[]]],[11,"set_pads_qspi","","",566,[[]]],[11,"pads_bank0","","",566,[[]]],[11,"set_pads_bank0","","",566,[[]]],[11,"jtag","","",566,[[]]],[11,"set_jtag","","",566,[[]]],[11,"io_qspi","","",566,[[]]],[11,"set_io_qspi","","",566,[[]]],[11,"io_bank0","","",566,[[]]],[11,"set_io_bank0","","",566,[[]]],[11,"i2c1","","",566,[[]]],[11,"set_i2c1","","",566,[[]]],[11,"i2c0","","",566,[[]]],[11,"set_i2c0","","",566,[[]]],[11,"dma","","",566,[[]]],[11,"set_dma","","",566,[[]]],[11,"busctrl","","",566,[[]]],[11,"set_busctrl","","",566,[[]]],[11,"adc","","",566,[[]]],[11,"set_adc","","",566,[[]]],[3,"Wdsel","","Watchdog select. If a bit is set then the watchdog will …",null,null],[11,"to_bits","","",567,[[]]],[11,"from_bits","","",567,[[],["wdsel",3]]],[11,"usbctrl","","",567,[[]]],[11,"set_usbctrl","","",567,[[]]],[11,"uart1","","",567,[[]]],[11,"set_uart1","","",567,[[]]],[11,"uart0","","",567,[[]]],[11,"set_uart0","","",567,[[]]],[11,"timer","","",567,[[]]],[11,"set_timer","","",567,[[]]],[11,"tbman","","",567,[[]]],[11,"set_tbman","","",567,[[]]],[11,"sysinfo","","",567,[[]]],[11,"set_sysinfo","","",567,[[]]],[11,"syscfg","","",567,[[]]],[11,"set_syscfg","","",567,[[]]],[11,"spi1","","",567,[[]]],[11,"set_spi1","","",567,[[]]],[11,"spi0","","",567,[[]]],[11,"set_spi0","","",567,[[]]],[11,"rtc","","",567,[[]]],[11,"set_rtc","","",567,[[]]],[11,"pwm","","",567,[[]]],[11,"set_pwm","","",567,[[]]],[11,"pll_usb","","",567,[[]]],[11,"set_pll_usb","","",567,[[]]],[11,"pll_sys","","",567,[[]]],[11,"set_pll_sys","","",567,[[]]],[11,"pio1","","",567,[[]]],[11,"set_pio1","","",567,[[]]],[11,"pio0","","",567,[[]]],[11,"set_pio0","","",567,[[]]],[11,"pads_qspi","","",567,[[]]],[11,"set_pads_qspi","","",567,[[]]],[11,"pads_bank0","","",567,[[]]],[11,"set_pads_bank0","","",567,[[]]],[11,"jtag","","",567,[[]]],[11,"set_jtag","","",567,[[]]],[11,"io_qspi","","",567,[[]]],[11,"set_io_qspi","","",567,[[]]],[11,"io_bank0","","",567,[[]]],[11,"set_io_bank0","","",567,[[]]],[11,"i2c1","","",567,[[]]],[11,"set_i2c1","","",567,[[]]],[11,"i2c0","","",567,[[]]],[11,"set_i2c0","","",567,[[]]],[11,"dma","","",567,[[]]],[11,"set_dma","","",567,[[]]],[11,"busctrl","","",567,[[]]],[11,"set_busctrl","","",567,[[]]],[11,"adc","","",567,[[]]],[11,"set_adc","","",567,[[]]],[3,"Resets","rp2040_pac::resets","",null,null],[11,"from_ptr","","",568,[[]]],[11,"reset","","Reset control. If a bit is set it means the peripheral is …",568,[[],[["peripherals",3],["rw",3],["reg",3]]]],[11,"wdsel","","Watchdog select. If a bit is set then the watchdog will …",568,[[],[["reg",3],["rw",3],["wdsel",3]]]],[11,"reset_done","","Reset done. If a bit is set then a reset done signal has …",568,[[],[["peripherals",3],["rw",3],["reg",3]]]],[0,"rosc","rp2040_pac","",null,null],[0,"fields","rp2040_pac::rosc","",null,null],[3,"Phase","rp2040_pac::rosc::fields","Controls the phase shifted output",null,null],[11,"to_bits","","",569,[[]]],[11,"from_bits","","",569,[[],["phase",3]]],[11,"passwd","","set to 0xaa0 any other value enables the output with …",569,[[]]],[11,"set_passwd","","set to 0xaa0 any other value enables the output with …",569,[[]]],[11,"enable","","enable the phase-shifted output this can be changed …",569,[[]]],[11,"set_enable","","enable the phase-shifted output this can be changed …",569,[[]]],[11,"flip","","invert the phase-shifted output this is ignored when div=1",569,[[]]],[11,"set_flip","","invert the phase-shifted output this is ignored when div=1",569,[[]]],[11,"shift","","phase shift the phase-shifted output by SHIFT input …",569,[[]]],[11,"set_shift","","phase shift the phase-shifted output by SHIFT input …",569,[[]]],[3,"Randombit","","This just reads the state of the oscillator output so …",null,null],[11,"to_bits","","",570,[[]]],[11,"from_bits","","",570,[[],["randombit",3]]],[11,"randombit","","",570,[[]]],[11,"set_randombit","","",570,[[]]],[3,"Status","","Ring Oscillator Status",null,null],[11,"to_bits","","",571,[[]]],[11,"from_bits","","",571,[[],["status",3]]],[11,"stable","","Oscillator is running and stable",571,[[]]],[11,"set_stable","","Oscillator is running and stable",571,[[]]],[11,"badwrite","","An invalid value has been written to CTRL_ENABLE or …",571,[[]]],[11,"set_badwrite","","An invalid value has been written to CTRL_ENABLE or …",571,[[]]],[11,"div_running","","post-divider is running this resets to 0 but transitions …",571,[[]]],[11,"set_div_running","","post-divider is running this resets to 0 but transitions …",571,[[]]],[11,"enabled","","Oscillator is enabled but not necessarily running and …",571,[[]]],[11,"set_enabled","","Oscillator is enabled but not necessarily running and …",571,[[]]],[3,"Ctrl","","Ring Oscillator control",null,null],[11,"to_bits","","",572,[[]]],[11,"from_bits","","",572,[[],["ctrl",3]]],[11,"enable","","On power-up this field is initialised to ENABLE The …",572,[[],["ctrlenable",3]]],[11,"set_enable","","On power-up this field is initialised to ENABLE The …",572,[[["ctrlenable",3]]]],[11,"freq_range","","Controls the number of delay stages in the ROSC ring LOW …",572,[[],["ctrlfreqrange",3]]],[11,"set_freq_range","","Controls the number of delay stages in the ROSC ring LOW …",572,[[["ctrlfreqrange",3]]]],[3,"Freqb","","For a detailed description see freqa register",null,null],[11,"to_bits","","",573,[[]]],[11,"from_bits","","",573,[[],["freqb",3]]],[11,"passwd","","Set to 0x9696 to apply the settings Any other value in …",573,[[],["passwd",3]]],[11,"set_passwd","","Set to 0x9696 to apply the settings Any other value in …",573,[[["passwd",3]]]],[11,"ds7","","Stage 7 drive strength",573,[[]]],[11,"set_ds7","","Stage 7 drive strength",573,[[]]],[11,"ds6","","Stage 6 drive strength",573,[[]]],[11,"set_ds6","","Stage 6 drive strength",573,[[]]],[11,"ds5","","Stage 5 drive strength",573,[[]]],[11,"set_ds5","","Stage 5 drive strength",573,[[]]],[11,"ds4","","Stage 4 drive strength",573,[[]]],[11,"set_ds4","","Stage 4 drive strength",573,[[]]],[3,"Freqa","","The FREQA & FREQB registers control the frequency by …",null,null],[11,"to_bits","","",574,[[]]],[11,"from_bits","","",574,[[],["freqa",3]]],[11,"passwd","","Set to 0x9696 to apply the settings Any other value in …",574,[[],["passwd",3]]],[11,"set_passwd","","Set to 0x9696 to apply the settings Any other value in …",574,[[["passwd",3]]]],[11,"ds3","","Stage 3 drive strength",574,[[]]],[11,"set_ds3","","Stage 3 drive strength",574,[[]]],[11,"ds2","","Stage 2 drive strength",574,[[]]],[11,"set_ds2","","Stage 2 drive strength",574,[[]]],[11,"ds1","","Stage 1 drive strength",574,[[]]],[11,"set_ds1","","Stage 1 drive strength",574,[[]]],[11,"ds0","","Stage 0 drive strength",574,[[]]],[11,"set_ds0","","Stage 0 drive strength",574,[[]]],[3,"Count","","A down counter running at the ROSC frequency which counts …",null,null],[11,"to_bits","","",575,[[]]],[11,"from_bits","","",575,[[],["count",3]]],[11,"count","","",575,[[]]],[11,"set_count","","",575,[[]]],[3,"Div","","Controls the output divider",null,null],[11,"to_bits","","",576,[[]]],[11,"from_bits","","",576,[[],["div",3]]],[11,"div","","set to 0xaa0 + div where div = 0 divides by 32 div = 1-31 …",576,[[],["divdiv",3]]],[11,"set_div","","set to 0xaa0 + div where div = 0 divides by 32 div = 1-31 …",576,[[["divdiv",3]]]],[0,"values","rp2040_pac::rosc","",null,null],[3,"CtrlFreqRange","rp2040_pac::rosc::values","Ring Oscillator control",null,null],[11,"to_bits","","",577,[[]]],[11,"from_bits","","",577,[[],["ctrlfreqrange",3]]],[18,"LOW","","",577,null],[18,"MEDIUM","","",577,null],[18,"HIGH","","",577,null],[18,"TOOHIGH","","",577,null],[3,"Passwd","","For a detailed description see freqa register",null,null],[11,"to_bits","","",578,[[]]],[11,"from_bits","","",578,[[],["passwd",3]]],[18,"PASS","","",578,null],[3,"CtrlEnable","","Ring Oscillator control",null,null],[11,"to_bits","","",579,[[]]],[11,"from_bits","","",579,[[],["ctrlenable",3]]],[18,"DISABLE","","",579,null],[18,"ENABLE","","",579,null],[3,"DivDiv","","Controls the output divider",null,null],[11,"to_bits","","",580,[[]]],[11,"from_bits","","",580,[[],["divdiv",3]]],[18,"PASS","","",580,null],[3,"Rosc","rp2040_pac::rosc","",null,null],[11,"from_ptr","","",581,[[]]],[11,"ctrl","","Ring Oscillator control",581,[[],[["reg",3],["rw",3],["ctrl",3]]]],[11,"freqa","","The FREQA & FREQB registers control the frequency by …",581,[[],[["freqa",3],["rw",3],["reg",3]]]],[11,"freqb","","For a detailed description see freqa register",581,[[],[["reg",3],["rw",3],["freqb",3]]]],[11,"dormant","","Ring Oscillator pause control This is used to save power …",581,[[],[["reg",3],["rw",3]]]],[11,"div","","Controls the output divider",581,[[],[["reg",3],["div",3],["rw",3]]]],[11,"phase","","Controls the phase shifted output",581,[[],[["rw",3],["reg",3],["phase",3]]]],[11,"status","","Ring Oscillator Status",581,[[],[["reg",3],["status",3],["rw",3]]]],[11,"randombit","","This just reads the state of the oscillator output so …",581,[[],[["randombit",3],["rw",3],["reg",3]]]],[11,"count","","A down counter running at the ROSC frequency which counts …",581,[[],[["rw",3],["reg",3],["count",3]]]],[0,"rtc","rp2040_pac","",null,null],[0,"fields","rp2040_pac::rtc","",null,null],[3,"Intf","rp2040_pac::rtc::fields","Interrupt Force",null,null],[11,"to_bits","","",582,[[]]],[11,"from_bits","","",582,[[],["intf",3]]],[11,"rtc","","",582,[[]]],[11,"set_rtc","","",582,[[]]],[3,"Inte","","Interrupt Enable",null,null],[11,"to_bits","","",583,[[]]],[11,"from_bits","","",583,[[],["inte",3]]],[11,"rtc","","",583,[[]]],[11,"set_rtc","","",583,[[]]],[3,"Setup1","","RTC setup register 1",null,null],[11,"to_bits","","",584,[[]]],[11,"from_bits","","",584,[[],["setup1",3]]],[11,"dotw","","Day of the week: 1-Monday...0-Sunday ISO 8601 mod 7",584,[[]]],[11,"set_dotw","","Day of the week: 1-Monday...0-Sunday ISO 8601 mod 7",584,[[]]],[11,"hour","","Hours",584,[[]]],[11,"set_hour","","Hours",584,[[]]],[11,"min","","Minutes",584,[[]]],[11,"set_min","","Minutes",584,[[]]],[11,"sec","","Seconds",584,[[]]],[11,"set_sec","","Seconds",584,[[]]],[3,"Setup0","","RTC setup register 0",null,null],[11,"to_bits","","",585,[[]]],[11,"from_bits","","",585,[[],["setup0",3]]],[11,"year","","Year",585,[[]]],[11,"set_year","","Year",585,[[]]],[11,"month","","Month (1..12)",585,[[]]],[11,"set_month","","Month (1..12)",585,[[]]],[11,"day","","Day of the month (1..31)",585,[[]]],[11,"set_day","","Day of the month (1..31)",585,[[]]],[3,"ClkdivM1","","Divider minus 1 for the 1 second counter. Safe to change …",null,null],[11,"to_bits","","",586,[[]]],[11,"from_bits","","",586,[[],["clkdivm1",3]]],[11,"clkdiv_m1","","",586,[[]]],[11,"set_clkdiv_m1","","",586,[[]]],[3,"Rtc0","","RTC register 0 Read this before RTC 1!",null,null],[11,"to_bits","","",587,[[]]],[11,"from_bits","","",587,[[],["rtc0",3]]],[11,"dotw","","Day of the week",587,[[]]],[11,"set_dotw","","Day of the week",587,[[]]],[11,"hour","","Hours",587,[[]]],[11,"set_hour","","Hours",587,[[]]],[11,"min","","Minutes",587,[[]]],[11,"set_min","","Minutes",587,[[]]],[11,"sec","","Seconds",587,[[]]],[11,"set_sec","","Seconds",587,[[]]],[3,"IrqSetup0","","Interrupt setup register 0",null,null],[11,"to_bits","","",588,[[]]],[11,"from_bits","","",588,[[],["irqsetup0",3]]],[11,"match_active","","",588,[[]]],[11,"set_match_active","","",588,[[]]],[11,"match_ena","","Global match enable. Don\'t change any other value while …",588,[[]]],[11,"set_match_ena","","Global match enable. Don\'t change any other value while …",588,[[]]],[11,"year_ena","","Enable year matching",588,[[]]],[11,"set_year_ena","","Enable year matching",588,[[]]],[11,"month_ena","","Enable month matching",588,[[]]],[11,"set_month_ena","","Enable month matching",588,[[]]],[11,"day_ena","","Enable day matching",588,[[]]],[11,"set_day_ena","","Enable day matching",588,[[]]],[11,"year","","Year",588,[[]]],[11,"set_year","","Year",588,[[]]],[11,"month","","Month (1..12)",588,[[]]],[11,"set_month","","Month (1..12)",588,[[]]],[11,"day","","Day of the month (1..31)",588,[[]]],[11,"set_day","","Day of the month (1..31)",588,[[]]],[3,"IrqSetup1","","Interrupt setup register 1",null,null],[11,"to_bits","","",589,[[]]],[11,"from_bits","","",589,[[],["irqsetup1",3]]],[11,"dotw_ena","","Enable day of the week matching",589,[[]]],[11,"set_dotw_ena","","Enable day of the week matching",589,[[]]],[11,"hour_ena","","Enable hour matching",589,[[]]],[11,"set_hour_ena","","Enable hour matching",589,[[]]],[11,"min_ena","","Enable minute matching",589,[[]]],[11,"set_min_ena","","Enable minute matching",589,[[]]],[11,"sec_ena","","Enable second matching",589,[[]]],[11,"set_sec_ena","","Enable second matching",589,[[]]],[11,"dotw","","Day of the week",589,[[]]],[11,"set_dotw","","Day of the week",589,[[]]],[11,"hour","","Hours",589,[[]]],[11,"set_hour","","Hours",589,[[]]],[11,"min","","Minutes",589,[[]]],[11,"set_min","","Minutes",589,[[]]],[11,"sec","","Seconds",589,[[]]],[11,"set_sec","","Seconds",589,[[]]],[3,"Ints","","Interrupt status after masking & forcing",null,null],[11,"to_bits","","",590,[[]]],[11,"from_bits","","",590,[[],["ints",3]]],[11,"rtc","","",590,[[]]],[11,"set_rtc","","",590,[[]]],[3,"Rtc1","","RTC register 1.",null,null],[11,"to_bits","","",591,[[]]],[11,"from_bits","","",591,[[],["rtc1",3]]],[11,"year","","Year",591,[[]]],[11,"set_year","","Year",591,[[]]],[11,"month","","Month (1..12)",591,[[]]],[11,"set_month","","Month (1..12)",591,[[]]],[11,"day","","Day of the month (1..31)",591,[[]]],[11,"set_day","","Day of the month (1..31)",591,[[]]],[3,"Intr","","Raw Interrupts",null,null],[11,"to_bits","","",592,[[]]],[11,"from_bits","","",592,[[],["intr",3]]],[11,"rtc","","",592,[[]]],[11,"set_rtc","","",592,[[]]],[3,"Ctrl","","RTC Control and status",null,null],[11,"to_bits","","",593,[[]]],[11,"from_bits","","",593,[[],["ctrl",3]]],[11,"force_notleapyear","","If set, leapyear is forced off. Useful for years …",593,[[]]],[11,"set_force_notleapyear","","If set, leapyear is forced off. Useful for years …",593,[[]]],[11,"load","","Load RTC",593,[[]]],[11,"set_load","","Load RTC",593,[[]]],[11,"rtc_active","","RTC enabled (running)",593,[[]]],[11,"set_rtc_active","","RTC enabled (running)",593,[[]]],[11,"rtc_enable","","Enable RTC",593,[[]]],[11,"set_rtc_enable","","Enable RTC",593,[[]]],[3,"Rtc","rp2040_pac::rtc","Register block to control RTC",null,null],[11,"from_ptr","","",594,[[]]],[11,"clkdiv_m1","","Divider minus 1 for the 1 second counter. Safe to change …",594,[[],[["reg",3],["clkdivm1",3],["rw",3]]]],[11,"setup_0","","RTC setup register 0",594,[[],[["rw",3],["setup0",3],["reg",3]]]],[11,"setup_1","","RTC setup register 1",594,[[],[["setup1",3],["reg",3],["rw",3]]]],[11,"ctrl","","RTC Control and status",594,[[],[["reg",3],["rw",3],["ctrl",3]]]],[11,"irq_setup_0","","Interrupt setup register 0",594,[[],[["irqsetup0",3],["rw",3],["reg",3]]]],[11,"irq_setup_1","","Interrupt setup register 1",594,[[],[["reg",3],["irqsetup1",3],["rw",3]]]],[11,"rtc_1","","RTC register 1.",594,[[],[["reg",3],["rtc1",3],["rw",3]]]],[11,"rtc_0","","RTC register 0 Read this before RTC 1!",594,[[],[["reg",3],["rw",3],["rtc0",3]]]],[11,"intr","","Raw Interrupts",594,[[],[["intr",3],["rw",3],["reg",3]]]],[11,"inte","","Interrupt Enable",594,[[],[["inte",3],["rw",3],["reg",3]]]],[11,"intf","","Interrupt Force",594,[[],[["intf",3],["rw",3],["reg",3]]]],[11,"ints","","Interrupt status after masking & forcing",594,[[],[["reg",3],["ints",3],["rw",3]]]],[0,"sio","rp2040_pac","",null,null],[0,"fields","rp2040_pac::sio","",null,null],[3,"Interp1CtrlLane0","rp2040_pac::sio::fields","Control register for lane 0",null,null],[11,"to_bits","","",595,[[]]],[11,"from_bits","","",595,[[],["interp1ctrllane0",3]]],[11,"overf","","Set if either OVERF0 or OVERF1 is set.",595,[[]]],[11,"set_overf","","Set if either OVERF0 or OVERF1 is set.",595,[[]]],[11,"overf1","","Indicates if any masked-off MSBs in ACCUM1 are set.",595,[[]]],[11,"set_overf1","","Indicates if any masked-off MSBs in ACCUM1 are set.",595,[[]]],[11,"overf0","","Indicates if any masked-off MSBs in ACCUM0 are set.",595,[[]]],[11,"set_overf0","","Indicates if any masked-off MSBs in ACCUM0 are set.",595,[[]]],[11,"clamp","","Only present on INTERP1 on each core. If CLAMP mode is …",595,[[]]],[11,"set_clamp","","Only present on INTERP1 on each core. If CLAMP mode is …",595,[[]]],[11,"force_msb","","ORed into bits 29:28 of the lane result presented to the …",595,[[]]],[11,"set_force_msb","","ORed into bits 29:28 of the lane result presented to the …",595,[[]]],[11,"add_raw","","If 1, mask + shift is bypassed for LANE0 result. This …",595,[[]]],[11,"set_add_raw","","If 1, mask + shift is bypassed for LANE0 result. This …",595,[[]]],[11,"cross_result","","If 1, feed the opposite lane\'s result into this lane\'s …",595,[[]]],[11,"set_cross_result","","If 1, feed the opposite lane\'s result into this lane\'s …",595,[[]]],[11,"cross_input","","If 1, feed the opposite lane\'s accumulator into this …",595,[[]]],[11,"set_cross_input","","If 1, feed the opposite lane\'s accumulator into this …",595,[[]]],[11,"signed","","If SIGNED is set, the shifted and masked accumulator …",595,[[]]],[11,"set_signed","","If SIGNED is set, the shifted and masked accumulator …",595,[[]]],[11,"mask_msb","","The most-significant bit allowed to pass by the mask …",595,[[]]],[11,"set_mask_msb","","The most-significant bit allowed to pass by the mask …",595,[[]]],[11,"mask_lsb","","The least-significant bit allowed to pass by the mask …",595,[[]]],[11,"set_mask_lsb","","The least-significant bit allowed to pass by the mask …",595,[[]]],[11,"shift","","Logical right-shift applied to accumulator before masking",595,[[]]],[11,"set_shift","","Logical right-shift applied to accumulator before masking",595,[[]]],[3,"Interp1Accum0Add","","Values written here are atomically added to ACCUM0 …",null,null],[11,"to_bits","","",596,[[]]],[11,"from_bits","","",596,[[],["interp1accum0add",3]]],[11,"interp1_accum0_add","","",596,[[]]],[11,"set_interp1_accum0_add","","",596,[[]]],[3,"GpioHiOut","","QSPI output value",null,null],[11,"to_bits","","",597,[[]]],[11,"from_bits","","",597,[[],["gpiohiout",3]]],[11,"gpio_hi_out","","Set output level (1/0 -> high/low) for QSPI IO0...5. …",597,[[]]],[11,"set_gpio_hi_out","","Set output level (1/0 -> high/low) for QSPI IO0...5. …",597,[[]]],[3,"GpioHiOutXor","","QSPI output value XOR",null,null],[11,"to_bits","","",598,[[]]],[11,"from_bits","","",598,[[],["gpiohioutxor",3]]],[11,"gpio_hi_out_xor","","Perform an atomic bitwise XOR on GPIO_HI_OUT, i.e. …",598,[[]]],[11,"set_gpio_hi_out_xor","","Perform an atomic bitwise XOR on GPIO_HI_OUT, i.e. …",598,[[]]],[3,"Interp0CtrlLane0","","Control register for lane 0",null,null],[11,"to_bits","","",599,[[]]],[11,"from_bits","","",599,[[],["interp0ctrllane0",3]]],[11,"overf","","Set if either OVERF0 or OVERF1 is set.",599,[[]]],[11,"set_overf","","Set if either OVERF0 or OVERF1 is set.",599,[[]]],[11,"overf1","","Indicates if any masked-off MSBs in ACCUM1 are set.",599,[[]]],[11,"set_overf1","","Indicates if any masked-off MSBs in ACCUM1 are set.",599,[[]]],[11,"overf0","","Indicates if any masked-off MSBs in ACCUM0 are set.",599,[[]]],[11,"set_overf0","","Indicates if any masked-off MSBs in ACCUM0 are set.",599,[[]]],[11,"blend","","Only present on INTERP0 on each core. If BLEND mode is …",599,[[]]],[11,"set_blend","","Only present on INTERP0 on each core. If BLEND mode is …",599,[[]]],[11,"force_msb","","ORed into bits 29:28 of the lane result presented to the …",599,[[]]],[11,"set_force_msb","","ORed into bits 29:28 of the lane result presented to the …",599,[[]]],[11,"add_raw","","If 1, mask + shift is bypassed for LANE0 result. This …",599,[[]]],[11,"set_add_raw","","If 1, mask + shift is bypassed for LANE0 result. This …",599,[[]]],[11,"cross_result","","If 1, feed the opposite lane\'s result into this lane\'s …",599,[[]]],[11,"set_cross_result","","If 1, feed the opposite lane\'s result into this lane\'s …",599,[[]]],[11,"cross_input","","If 1, feed the opposite lane\'s accumulator into this …",599,[[]]],[11,"set_cross_input","","If 1, feed the opposite lane\'s accumulator into this …",599,[[]]],[11,"signed","","If SIGNED is set, the shifted and masked accumulator …",599,[[]]],[11,"set_signed","","If SIGNED is set, the shifted and masked accumulator …",599,[[]]],[11,"mask_msb","","The most-significant bit allowed to pass by the mask …",599,[[]]],[11,"set_mask_msb","","The most-significant bit allowed to pass by the mask …",599,[[]]],[11,"mask_lsb","","The least-significant bit allowed to pass by the mask …",599,[[]]],[11,"set_mask_lsb","","The least-significant bit allowed to pass by the mask …",599,[[]]],[11,"shift","","Logical right-shift applied to accumulator before masking",599,[[]]],[11,"set_shift","","Logical right-shift applied to accumulator before masking",599,[[]]],[3,"GpioHiOutSet","","QSPI output value set",null,null],[11,"to_bits","","",600,[[]]],[11,"from_bits","","",600,[[],["gpiohioutset",3]]],[11,"gpio_hi_out_set","","Perform an atomic bit-set on GPIO_HI_OUT, i.e. …",600,[[]]],[11,"set_gpio_hi_out_set","","Perform an atomic bit-set on GPIO_HI_OUT, i.e. …",600,[[]]],[3,"GpioOe","","GPIO output enable",null,null],[11,"to_bits","","",601,[[]]],[11,"from_bits","","",601,[[],["gpiooe",3]]],[11,"gpio_oe","","Set output enable (1/0 -> output/input) for GPIO0...29. …",601,[[]]],[11,"set_gpio_oe","","Set output enable (1/0 -> output/input) for GPIO0...29. …",601,[[]]],[3,"GpioHiOutClr","","QSPI output value clear",null,null],[11,"to_bits","","",602,[[]]],[11,"from_bits","","",602,[[],["gpiohioutclr",3]]],[11,"gpio_hi_out_clr","","Perform an atomic bit-clear on GPIO_HI_OUT, i.e. …",602,[[]]],[11,"set_gpio_hi_out_clr","","Perform an atomic bit-clear on GPIO_HI_OUT, i.e. …",602,[[]]],[3,"Interp1Accum1Add","","Values written here are atomically added to ACCUM1 …",null,null],[11,"to_bits","","",603,[[]]],[11,"from_bits","","",603,[[],["interp1accum1add",3]]],[11,"interp1_accum1_add","","",603,[[]]],[11,"set_interp1_accum1_add","","",603,[[]]],[3,"GpioHiOe","","QSPI output enable",null,null],[11,"to_bits","","",604,[[]]],[11,"from_bits","","",604,[[],["gpiohioe",3]]],[11,"gpio_hi_oe","","Set output enable (1/0 -> output/input) for QSPI IO0...5. …",604,[[]]],[11,"set_gpio_hi_oe","","Set output enable (1/0 -> output/input) for QSPI IO0...5. …",604,[[]]],[3,"GpioHiIn","","Input value for QSPI pins",null,null],[11,"to_bits","","",605,[[]]],[11,"from_bits","","",605,[[],["gpiohiin",3]]],[11,"gpio_hi_in","","Input value on QSPI IO in order 0..5: SCLK, SSn, SD0, …",605,[[]]],[11,"set_gpio_hi_in","","Input value on QSPI IO in order 0..5: SCLK, SSn, SD0, …",605,[[]]],[3,"GpioOeSet","","GPIO output enable set",null,null],[11,"to_bits","","",606,[[]]],[11,"from_bits","","",606,[[],["gpiooeset",3]]],[11,"gpio_oe_set","","Perform an atomic bit-set on GPIO_OE, i.e. …",606,[[]]],[11,"set_gpio_oe_set","","Perform an atomic bit-set on GPIO_OE, i.e. …",606,[[]]],[3,"GpioOutSet","","GPIO output value set",null,null],[11,"to_bits","","",607,[[]]],[11,"from_bits","","",607,[[],["gpiooutset",3]]],[11,"gpio_out_set","","Perform an atomic bit-set on GPIO_OUT, i.e. …",607,[[]]],[11,"set_gpio_out_set","","Perform an atomic bit-set on GPIO_OUT, i.e. …",607,[[]]],[3,"GpioHiOeXor","","QSPI output enable XOR",null,null],[11,"to_bits","","",608,[[]]],[11,"from_bits","","",608,[[],["gpiohioexor",3]]],[11,"gpio_hi_oe_xor","","Perform an atomic bitwise XOR on GPIO_HI_OE, i.e. …",608,[[]]],[11,"set_gpio_hi_oe_xor","","Perform an atomic bitwise XOR on GPIO_HI_OE, i.e. …",608,[[]]],[3,"GpioOutXor","","GPIO output value XOR",null,null],[11,"to_bits","","",609,[[]]],[11,"from_bits","","",609,[[],["gpiooutxor",3]]],[11,"gpio_out_xor","","Perform an atomic bitwise XOR on GPIO_OUT, i.e. …",609,[[]]],[11,"set_gpio_out_xor","","Perform an atomic bitwise XOR on GPIO_OUT, i.e. …",609,[[]]],[3,"DivCsr","","Control and status register for divider.",null,null],[11,"to_bits","","",610,[[]]],[11,"from_bits","","",610,[[],["divcsr",3]]],[11,"dirty","","Changes to 1 when any register is written, and back to 0 …",610,[[]]],[11,"set_dirty","","Changes to 1 when any register is written, and back to 0 …",610,[[]]],[11,"ready","","Reads as 0 when a calculation is in progress, 1 …",610,[[]]],[11,"set_ready","","Reads as 0 when a calculation is in progress, 1 …",610,[[]]],[3,"GpioOeClr","","GPIO output enable clear",null,null],[11,"to_bits","","",611,[[]]],[11,"from_bits","","",611,[[],["gpiooeclr",3]]],[11,"gpio_oe_clr","","Perform an atomic bit-clear on GPIO_OE, i.e. …",611,[[]]],[11,"set_gpio_oe_clr","","Perform an atomic bit-clear on GPIO_OE, i.e. …",611,[[]]],[3,"FifoSt","","Status register for inter-core FIFOs (mailboxes). There …",null,null],[11,"to_bits","","",612,[[]]],[11,"from_bits","","",612,[[],["fifost",3]]],[11,"roe","","Sticky flag indicating the RX FIFO was read when empty. …",612,[[]]],[11,"set_roe","","Sticky flag indicating the RX FIFO was read when empty. …",612,[[]]],[11,"wof","","Sticky flag indicating the TX FIFO was written when full. …",612,[[]]],[11,"set_wof","","Sticky flag indicating the TX FIFO was written when full. …",612,[[]]],[11,"rdy","","Value is 1 if this core\'s TX FIFO is not full (i.e. if …",612,[[]]],[11,"set_rdy","","Value is 1 if this core\'s TX FIFO is not full (i.e. if …",612,[[]]],[11,"vld","","Value is 1 if this core\'s RX FIFO is not empty (i.e. if …",612,[[]]],[11,"set_vld","","Value is 1 if this core\'s RX FIFO is not empty (i.e. if …",612,[[]]],[3,"GpioHiOeSet","","QSPI output enable set",null,null],[11,"to_bits","","",613,[[]]],[11,"from_bits","","",613,[[],["gpiohioeset",3]]],[11,"gpio_hi_oe_set","","Perform an atomic bit-set on GPIO_HI_OE, i.e. …",613,[[]]],[11,"set_gpio_hi_oe_set","","Perform an atomic bit-set on GPIO_HI_OE, i.e. …",613,[[]]],[3,"Interp0Accum0Add","","Values written here are atomically added to ACCUM0 …",null,null],[11,"to_bits","","",614,[[]]],[11,"from_bits","","",614,[[],["interp0accum0add",3]]],[11,"interp0_accum0_add","","",614,[[]]],[11,"set_interp0_accum0_add","","",614,[[]]],[3,"Interp0Accum1Add","","Values written here are atomically added to ACCUM1 …",null,null],[11,"to_bits","","",615,[[]]],[11,"from_bits","","",615,[[],["interp0accum1add",3]]],[11,"interp0_accum1_add","","",615,[[]]],[11,"set_interp0_accum1_add","","",615,[[]]],[3,"GpioOut","","GPIO output value",null,null],[11,"to_bits","","",616,[[]]],[11,"from_bits","","",616,[[],["gpioout",3]]],[11,"gpio_out","","Set output level (1/0 -> high/low) for GPIO0...29. …",616,[[]]],[11,"set_gpio_out","","Set output level (1/0 -> high/low) for GPIO0...29. …",616,[[]]],[3,"GpioIn","","Input value for GPIO pins",null,null],[11,"to_bits","","",617,[[]]],[11,"from_bits","","",617,[[],["gpioin",3]]],[11,"gpio_in","","Input value for GPIO0...29",617,[[]]],[11,"set_gpio_in","","Input value for GPIO0...29",617,[[]]],[3,"GpioHiOeClr","","QSPI output enable clear",null,null],[11,"to_bits","","",618,[[]]],[11,"from_bits","","",618,[[],["gpiohioeclr",3]]],[11,"gpio_hi_oe_clr","","Perform an atomic bit-clear on GPIO_HI_OE, i.e. …",618,[[]]],[11,"set_gpio_hi_oe_clr","","Perform an atomic bit-clear on GPIO_HI_OE, i.e. …",618,[[]]],[3,"Interp0CtrlLane1","","Control register for lane 1",null,null],[11,"to_bits","","",619,[[]]],[11,"from_bits","","",619,[[],["interp0ctrllane1",3]]],[11,"force_msb","","ORed into bits 29:28 of the lane result presented to the …",619,[[]]],[11,"set_force_msb","","ORed into bits 29:28 of the lane result presented to the …",619,[[]]],[11,"add_raw","","If 1, mask + shift is bypassed for LANE1 result. This …",619,[[]]],[11,"set_add_raw","","If 1, mask + shift is bypassed for LANE1 result. This …",619,[[]]],[11,"cross_result","","If 1, feed the opposite lane\'s result into this lane\'s …",619,[[]]],[11,"set_cross_result","","If 1, feed the opposite lane\'s result into this lane\'s …",619,[[]]],[11,"cross_input","","If 1, feed the opposite lane\'s accumulator into this …",619,[[]]],[11,"set_cross_input","","If 1, feed the opposite lane\'s accumulator into this …",619,[[]]],[11,"signed","","If SIGNED is set, the shifted and masked accumulator …",619,[[]]],[11,"set_signed","","If SIGNED is set, the shifted and masked accumulator …",619,[[]]],[11,"mask_msb","","The most-significant bit allowed to pass by the mask …",619,[[]]],[11,"set_mask_msb","","The most-significant bit allowed to pass by the mask …",619,[[]]],[11,"mask_lsb","","The least-significant bit allowed to pass by the mask …",619,[[]]],[11,"set_mask_lsb","","The least-significant bit allowed to pass by the mask …",619,[[]]],[11,"shift","","Logical right-shift applied to accumulator before masking",619,[[]]],[11,"set_shift","","Logical right-shift applied to accumulator before masking",619,[[]]],[3,"GpioOeXor","","GPIO output enable XOR",null,null],[11,"to_bits","","",620,[[]]],[11,"from_bits","","",620,[[],["gpiooexor",3]]],[11,"gpio_oe_xor","","Perform an atomic bitwise XOR on GPIO_OE, i.e. …",620,[[]]],[11,"set_gpio_oe_xor","","Perform an atomic bitwise XOR on GPIO_OE, i.e. …",620,[[]]],[3,"GpioOutClr","","GPIO output value clear",null,null],[11,"to_bits","","",621,[[]]],[11,"from_bits","","",621,[[],["gpiooutclr",3]]],[11,"gpio_out_clr","","Perform an atomic bit-clear on GPIO_OUT, i.e. …",621,[[]]],[11,"set_gpio_out_clr","","Perform an atomic bit-clear on GPIO_OUT, i.e. …",621,[[]]],[3,"Interp1CtrlLane1","","Control register for lane 1",null,null],[11,"to_bits","","",622,[[]]],[11,"from_bits","","",622,[[],["interp1ctrllane1",3]]],[11,"force_msb","","ORed into bits 29:28 of the lane result presented to the …",622,[[]]],[11,"set_force_msb","","ORed into bits 29:28 of the lane result presented to the …",622,[[]]],[11,"add_raw","","If 1, mask + shift is bypassed for LANE1 result. This …",622,[[]]],[11,"set_add_raw","","If 1, mask + shift is bypassed for LANE1 result. This …",622,[[]]],[11,"cross_result","","If 1, feed the opposite lane\'s result into this lane\'s …",622,[[]]],[11,"set_cross_result","","If 1, feed the opposite lane\'s result into this lane\'s …",622,[[]]],[11,"cross_input","","If 1, feed the opposite lane\'s accumulator into this …",622,[[]]],[11,"set_cross_input","","If 1, feed the opposite lane\'s accumulator into this …",622,[[]]],[11,"signed","","If SIGNED is set, the shifted and masked accumulator …",622,[[]]],[11,"set_signed","","If SIGNED is set, the shifted and masked accumulator …",622,[[]]],[11,"mask_msb","","The most-significant bit allowed to pass by the mask …",622,[[]]],[11,"set_mask_msb","","The most-significant bit allowed to pass by the mask …",622,[[]]],[11,"mask_lsb","","The least-significant bit allowed to pass by the mask …",622,[[]]],[11,"set_mask_lsb","","The least-significant bit allowed to pass by the mask …",622,[[]]],[11,"shift","","Logical right-shift applied to accumulator before masking",622,[[]]],[11,"set_shift","","Logical right-shift applied to accumulator before masking",622,[[]]],[3,"Sio","rp2040_pac::sio","Single-cycle IO block Provides core-local and inter-core …",null,null],[11,"from_ptr","","",623,[[]]],[11,"cpuid","","Processor core identifier Value is 0 when read from …",623,[[],[["r",3],["reg",3]]]],[11,"gpio_in","","Input value for GPIO pins",623,[[],[["gpioin",3],["reg",3],["rw",3]]]],[11,"gpio_hi_in","","Input value for QSPI pins",623,[[],[["gpiohiin",3],["reg",3],["rw",3]]]],[11,"gpio_out","","GPIO output value",623,[[],[["reg",3],["rw",3],["gpioout",3]]]],[11,"gpio_out_set","","GPIO output value set",623,[[],[["gpiooutset",3],["reg",3],["rw",3]]]],[11,"gpio_out_clr","","GPIO output value clear",623,[[],[["gpiooutclr",3],["reg",3],["rw",3]]]],[11,"gpio_out_xor","","GPIO output value XOR",623,[[],[["gpiooutxor",3],["rw",3],["reg",3]]]],[11,"gpio_oe","","GPIO output enable",623,[[],[["gpiooe",3],["rw",3],["reg",3]]]],[11,"gpio_oe_set","","GPIO output enable set",623,[[],[["gpiooeset",3],["rw",3],["reg",3]]]],[11,"gpio_oe_clr","","GPIO output enable clear",623,[[],[["reg",3],["rw",3],["gpiooeclr",3]]]],[11,"gpio_oe_xor","","GPIO output enable XOR",623,[[],[["rw",3],["gpiooexor",3],["reg",3]]]],[11,"gpio_hi_out","","QSPI output value",623,[[],[["reg",3],["gpiohiout",3],["rw",3]]]],[11,"gpio_hi_out_set","","QSPI output value set",623,[[],[["gpiohioutset",3],["rw",3],["reg",3]]]],[11,"gpio_hi_out_clr","","QSPI output value clear",623,[[],[["reg",3],["gpiohioutclr",3],["rw",3]]]],[11,"gpio_hi_out_xor","","QSPI output value XOR",623,[[],[["reg",3],["rw",3],["gpiohioutxor",3]]]],[11,"gpio_hi_oe","","QSPI output enable",623,[[],[["reg",3],["gpiohioe",3],["rw",3]]]],[11,"gpio_hi_oe_set","","QSPI output enable set",623,[[],[["reg",3],["gpiohioeset",3],["rw",3]]]],[11,"gpio_hi_oe_clr","","QSPI output enable clear",623,[[],[["rw",3],["reg",3],["gpiohioeclr",3]]]],[11,"gpio_hi_oe_xor","","QSPI output enable XOR",623,[[],[["reg",3],["gpiohioexor",3],["rw",3]]]],[11,"fifo_st","","Status register for inter-core FIFOs (mailboxes). There …",623,[[],[["reg",3],["fifost",3],["rw",3]]]],[11,"fifo_wr","","Write access to this core\'s TX FIFO",623,[[],[["reg",3],["w",3]]]],[11,"fifo_rd","","Read access to this core\'s RX FIFO",623,[[],[["r",3],["reg",3]]]],[11,"spinlock_st","","Spinlock state A bitmap containing the state of all 32 …",623,[[],[["r",3],["reg",3]]]],[11,"div_udividend","","Divider unsigned dividend Write to the DIVIDEND operand …",623,[[],[["reg",3],["rw",3]]]],[11,"div_udivisor","","Divider unsigned divisor Write to the DIVISOR operand of …",623,[[],[["reg",3],["rw",3]]]],[11,"div_sdividend","","Divider signed dividend The same as UDIVIDEND, but starts …",623,[[],[["reg",3],["rw",3]]]],[11,"div_sdivisor","","Divider signed divisor The same as UDIVISOR, but starts a …",623,[[],[["reg",3],["rw",3]]]],[11,"div_quotient","","Divider result quotient The result of <code>DIVIDEND / DIVISOR</code> …",623,[[],[["reg",3],["rw",3]]]],[11,"div_remainder","","Divider result remainder The result of <code>DIVIDEND % DIVISOR</code> …",623,[[],[["reg",3],["rw",3]]]],[11,"div_csr","","Control and status register for divider.",623,[[],[["reg",3],["divcsr",3],["rw",3]]]],[11,"interp0_accum0","","Read/write access to accumulator 0",623,[[],[["reg",3],["rw",3]]]],[11,"interp0_accum1","","Read/write access to accumulator 1",623,[[],[["reg",3],["rw",3]]]],[11,"interp0_base0","","Read/write access to BASE0 register.",623,[[],[["reg",3],["rw",3]]]],[11,"interp0_base1","","Read/write access to BASE1 register.",623,[[],[["reg",3],["rw",3]]]],[11,"interp0_base2","","Read/write access to BASE2 register.",623,[[],[["reg",3],["rw",3]]]],[11,"interp0_pop_lane0","","Read LANE0 result, and simultaneously write lane results …",623,[[],[["r",3],["reg",3]]]],[11,"interp0_pop_lane1","","Read LANE1 result, and simultaneously write lane results …",623,[[],[["r",3],["reg",3]]]],[11,"interp0_pop_full","","Read FULL result, and simultaneously write lane results …",623,[[],[["r",3],["reg",3]]]],[11,"interp0_peek_lane0","","Read LANE0 result, without altering any internal state …",623,[[],[["r",3],["reg",3]]]],[11,"interp0_peek_lane1","","Read LANE1 result, without altering any internal state …",623,[[],[["r",3],["reg",3]]]],[11,"interp0_peek_full","","Read FULL result, without altering any internal state …",623,[[],[["r",3],["reg",3]]]],[11,"interp0_ctrl_lane0","","Control register for lane 0",623,[[],[["reg",3],["rw",3],["interp0ctrllane0",3]]]],[11,"interp0_ctrl_lane1","","Control register for lane 1",623,[[],[["reg",3],["interp0ctrllane1",3],["rw",3]]]],[11,"interp0_accum0_add","","Values written here are atomically added to ACCUM0 …",623,[[],[["interp0accum0add",3],["reg",3],["rw",3]]]],[11,"interp0_accum1_add","","Values written here are atomically added to ACCUM1 …",623,[[],[["rw",3],["reg",3],["interp0accum1add",3]]]],[11,"interp0_base_1and0","","On write, the lower 16 bits go to BASE0, upper bits to …",623,[[],[["reg",3],["rw",3]]]],[11,"interp1_accum0","","Read/write access to accumulator 0",623,[[],[["reg",3],["rw",3]]]],[11,"interp1_accum1","","Read/write access to accumulator 1",623,[[],[["reg",3],["rw",3]]]],[11,"interp1_base0","","Read/write access to BASE0 register.",623,[[],[["reg",3],["rw",3]]]],[11,"interp1_base1","","Read/write access to BASE1 register.",623,[[],[["reg",3],["rw",3]]]],[11,"interp1_base2","","Read/write access to BASE2 register.",623,[[],[["reg",3],["rw",3]]]],[11,"interp1_pop_lane0","","Read LANE0 result, and simultaneously write lane results …",623,[[],[["r",3],["reg",3]]]],[11,"interp1_pop_lane1","","Read LANE1 result, and simultaneously write lane results …",623,[[],[["r",3],["reg",3]]]],[11,"interp1_pop_full","","Read FULL result, and simultaneously write lane results …",623,[[],[["r",3],["reg",3]]]],[11,"interp1_peek_lane0","","Read LANE0 result, without altering any internal state …",623,[[],[["r",3],["reg",3]]]],[11,"interp1_peek_lane1","","Read LANE1 result, without altering any internal state …",623,[[],[["r",3],["reg",3]]]],[11,"interp1_peek_full","","Read FULL result, without altering any internal state …",623,[[],[["r",3],["reg",3]]]],[11,"interp1_ctrl_lane0","","Control register for lane 0",623,[[],[["reg",3],["interp1ctrllane0",3],["rw",3]]]],[11,"interp1_ctrl_lane1","","Control register for lane 1",623,[[],[["interp1ctrllane1",3],["reg",3],["rw",3]]]],[11,"interp1_accum0_add","","Values written here are atomically added to ACCUM0 …",623,[[],[["interp1accum0add",3],["reg",3],["rw",3]]]],[11,"interp1_accum1_add","","Values written here are atomically added to ACCUM1 …",623,[[],[["reg",3],["interp1accum1add",3],["rw",3]]]],[11,"interp1_base_1and0","","On write, the lower 16 bits go to BASE0, upper bits to …",623,[[],[["reg",3],["rw",3]]]],[11,"spinlock0","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock1","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock2","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock3","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock4","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock5","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock6","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock7","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock8","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock9","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock10","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock11","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock12","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock13","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock14","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock15","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock16","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock17","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock18","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock19","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock20","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock21","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock22","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock23","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock24","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock25","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock26","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock27","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock28","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock29","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock30","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[11,"spinlock31","","Reading from a spinlock address will: - Return 0 if lock …",623,[[],[["r",3],["reg",3]]]],[0,"spi0","rp2040_pac","",null,null],[0,"fields","rp2040_pac::spi0","",null,null],[3,"Sspperiphid0","rp2040_pac::spi0::fields","Peripheral identification registers, SSPPeriphID0-3 on …",null,null],[11,"to_bits","","",624,[[]]],[11,"from_bits","","",624,[[],["sspperiphid0",3]]],[11,"partnumber0","","These bits read back as 0x22",624,[[]]],[11,"set_partnumber0","","These bits read back as 0x22",624,[[]]],[3,"Sspsr","","Status register, SSPSR on page 3-7",null,null],[11,"to_bits","","",625,[[]]],[11,"from_bits","","",625,[[],["sspsr",3]]],[11,"bsy","","PrimeCell SSP busy flag, RO: 0 SSP is idle. 1 SSP is …",625,[[]]],[11,"set_bsy","","PrimeCell SSP busy flag, RO: 0 SSP is idle. 1 SSP is …",625,[[]]],[11,"rff","","Receive FIFO full, RO: 0 Receive FIFO is not full. 1 …",625,[[]]],[11,"set_rff","","Receive FIFO full, RO: 0 Receive FIFO is not full. 1 …",625,[[]]],[11,"rne","","Receive FIFO not empty, RO: 0 Receive FIFO is empty. 1 …",625,[[]]],[11,"set_rne","","Receive FIFO not empty, RO: 0 Receive FIFO is empty. 1 …",625,[[]]],[11,"tnf","","Transmit FIFO not full, RO: 0 Transmit FIFO is full. 1 …",625,[[]]],[11,"set_tnf","","Transmit FIFO not full, RO: 0 Transmit FIFO is full. 1 …",625,[[]]],[11,"tfe","","Transmit FIFO empty, RO: 0 Transmit FIFO is not empty. 1 …",625,[[]]],[11,"set_tfe","","Transmit FIFO empty, RO: 0 Transmit FIFO is not empty. 1 …",625,[[]]],[3,"Sspperiphid1","","Peripheral identification registers, SSPPeriphID0-3 on …",null,null],[11,"to_bits","","",626,[[]]],[11,"from_bits","","",626,[[],["sspperiphid1",3]]],[11,"designer0","","These bits read back as 0x1",626,[[]]],[11,"set_designer0","","These bits read back as 0x1",626,[[]]],[11,"partnumber1","","These bits read back as 0x0",626,[[]]],[11,"set_partnumber1","","These bits read back as 0x0",626,[[]]],[3,"Sspcpsr","","Clock prescale register, SSPCPSR on page 3-8",null,null],[11,"to_bits","","",627,[[]]],[11,"from_bits","","",627,[[],["sspcpsr",3]]],[11,"cpsdvsr","","Clock prescale divisor. Must be an even number from …",627,[[]]],[11,"set_cpsdvsr","","Clock prescale divisor. Must be an even number from …",627,[[]]],[3,"Sspcr0","","Control register 0, SSPCR0 on page 3-4",null,null],[11,"to_bits","","",628,[[]]],[11,"from_bits","","",628,[[],["sspcr0",3]]],[11,"scr","","Serial clock rate. The value SCR is used to generate the …",628,[[]]],[11,"set_scr","","Serial clock rate. The value SCR is used to generate the …",628,[[]]],[11,"sph","","SSPCLKOUT phase, applicable to Motorola SPI frame format …",628,[[]]],[11,"set_sph","","SSPCLKOUT phase, applicable to Motorola SPI frame format …",628,[[]]],[11,"spo","","SSPCLKOUT polarity, applicable to Motorola SPI frame …",628,[[]]],[11,"set_spo","","SSPCLKOUT polarity, applicable to Motorola SPI frame …",628,[[]]],[11,"frf","","Frame format: 00 Motorola SPI frame format. 01 TI …",628,[[]]],[11,"set_frf","","Frame format: 00 Motorola SPI frame format. 01 TI …",628,[[]]],[11,"dss","","Data Size Select: 0000 Reserved, undefined operation. …",628,[[]]],[11,"set_dss","","Data Size Select: 0000 Reserved, undefined operation. …",628,[[]]],[3,"Sspmis","","Masked interrupt status register, SSPMIS on page 3-11",null,null],[11,"to_bits","","",629,[[]]],[11,"from_bits","","",629,[[],["sspmis",3]]],[11,"txmis","","Gives the transmit FIFO masked interrupt state, after …",629,[[]]],[11,"set_txmis","","Gives the transmit FIFO masked interrupt state, after …",629,[[]]],[11,"rxmis","","Gives the receive FIFO masked interrupt state, after …",629,[[]]],[11,"set_rxmis","","Gives the receive FIFO masked interrupt state, after …",629,[[]]],[11,"rtmis","","Gives the receive timeout masked interrupt state, after …",629,[[]]],[11,"set_rtmis","","Gives the receive timeout masked interrupt state, after …",629,[[]]],[11,"rormis","","Gives the receive over run masked interrupt status, after …",629,[[]]],[11,"set_rormis","","Gives the receive over run masked interrupt status, after …",629,[[]]],[3,"Ssppcellid1","","PrimeCell identification registers, SSPPCellID0-3 on page …",null,null],[11,"to_bits","","",630,[[]]],[11,"from_bits","","",630,[[],["ssppcellid1",3]]],[11,"ssppcellid1","","These bits read back as 0xF0",630,[[]]],[11,"set_ssppcellid1","","These bits read back as 0xF0",630,[[]]],[3,"Ssppcellid0","","PrimeCell identification registers, SSPPCellID0-3 on page …",null,null],[11,"to_bits","","",631,[[]]],[11,"from_bits","","",631,[[],["ssppcellid0",3]]],[11,"ssppcellid0","","These bits read back as 0x0D",631,[[]]],[11,"set_ssppcellid0","","These bits read back as 0x0D",631,[[]]],[3,"Sspperiphid3","","Peripheral identification registers, SSPPeriphID0-3 on …",null,null],[11,"to_bits","","",632,[[]]],[11,"from_bits","","",632,[[],["sspperiphid3",3]]],[11,"configuration","","These bits read back as 0x00",632,[[]]],[11,"set_configuration","","These bits read back as 0x00",632,[[]]],[3,"Sspdr","","Data register, SSPDR on page 3-6",null,null],[11,"to_bits","","",633,[[]]],[11,"from_bits","","",633,[[],["sspdr",3]]],[11,"data","","Transmit/Receive FIFO: Read Receive FIFO. Write Transmit …",633,[[]]],[11,"set_data","","Transmit/Receive FIFO: Read Receive FIFO. Write Transmit …",633,[[]]],[3,"Ssppcellid2","","PrimeCell identification registers, SSPPCellID0-3 on page …",null,null],[11,"to_bits","","",634,[[]]],[11,"from_bits","","",634,[[],["ssppcellid2",3]]],[11,"ssppcellid2","","These bits read back as 0x05",634,[[]]],[11,"set_ssppcellid2","","These bits read back as 0x05",634,[[]]],[3,"Sspris","","Raw interrupt status register, SSPRIS on page 3-10",null,null],[11,"to_bits","","",635,[[]]],[11,"from_bits","","",635,[[],["sspris",3]]],[11,"txris","","Gives the raw interrupt state, prior to masking, of the …",635,[[]]],[11,"set_txris","","Gives the raw interrupt state, prior to masking, of the …",635,[[]]],[11,"rxris","","Gives the raw interrupt state, prior to masking, of the …",635,[[]]],[11,"set_rxris","","Gives the raw interrupt state, prior to masking, of the …",635,[[]]],[11,"rtris","","Gives the raw interrupt state, prior to masking, of the …",635,[[]]],[11,"set_rtris","","Gives the raw interrupt state, prior to masking, of the …",635,[[]]],[11,"rorris","","Gives the raw interrupt state, prior to masking, of the …",635,[[]]],[11,"set_rorris","","Gives the raw interrupt state, prior to masking, of the …",635,[[]]],[3,"Sspcr1","","Control register 1, SSPCR1 on page 3-5",null,null],[11,"to_bits","","",636,[[]]],[11,"from_bits","","",636,[[],["sspcr1",3]]],[11,"sod","","Slave-mode output disable. This bit is relevant only in …",636,[[]]],[11,"set_sod","","Slave-mode output disable. This bit is relevant only in …",636,[[]]],[11,"ms","","Master or slave mode select. This bit can be modified …",636,[[]]],[11,"set_ms","","Master or slave mode select. This bit can be modified …",636,[[]]],[11,"sse","","Synchronous serial port enable: 0 SSP operation disabled. …",636,[[]]],[11,"set_sse","","Synchronous serial port enable: 0 SSP operation disabled. …",636,[[]]],[11,"lbm","","Loop back mode: 0 Normal serial port operation enabled. 1 …",636,[[]]],[11,"set_lbm","","Loop back mode: 0 Normal serial port operation enabled. 1 …",636,[[]]],[3,"Ssppcellid3","","PrimeCell identification registers, SSPPCellID0-3 on page …",null,null],[11,"to_bits","","",637,[[]]],[11,"from_bits","","",637,[[],["ssppcellid3",3]]],[11,"ssppcellid3","","These bits read back as 0xB1",637,[[]]],[11,"set_ssppcellid3","","These bits read back as 0xB1",637,[[]]],[3,"Sspdmacr","","DMA control register, SSPDMACR on page 3-12",null,null],[11,"to_bits","","",638,[[]]],[11,"from_bits","","",638,[[],["sspdmacr",3]]],[11,"txdmae","","Transmit DMA Enable. If this bit is set to 1, DMA for the …",638,[[]]],[11,"set_txdmae","","Transmit DMA Enable. If this bit is set to 1, DMA for the …",638,[[]]],[11,"rxdmae","","Receive DMA Enable. If this bit is set to 1, DMA for the …",638,[[]]],[11,"set_rxdmae","","Receive DMA Enable. If this bit is set to 1, DMA for the …",638,[[]]],[3,"Sspperiphid2","","Peripheral identification registers, SSPPeriphID0-3 on …",null,null],[11,"to_bits","","",639,[[]]],[11,"from_bits","","",639,[[],["sspperiphid2",3]]],[11,"revision","","These bits return the peripheral revision",639,[[]]],[11,"set_revision","","These bits return the peripheral revision",639,[[]]],[11,"designer1","","These bits read back as 0x4",639,[[]]],[11,"set_designer1","","These bits read back as 0x4",639,[[]]],[3,"Sspimsc","","Interrupt mask set or clear register, SSPIMSC on page 3-9",null,null],[11,"to_bits","","",640,[[]]],[11,"from_bits","","",640,[[],["sspimsc",3]]],[11,"txim","","Transmit FIFO interrupt mask: 0 Transmit FIFO half empty …",640,[[]]],[11,"set_txim","","Transmit FIFO interrupt mask: 0 Transmit FIFO half empty …",640,[[]]],[11,"rxim","","Receive FIFO interrupt mask: 0 Receive FIFO half full or …",640,[[]]],[11,"set_rxim","","Receive FIFO interrupt mask: 0 Receive FIFO half full or …",640,[[]]],[11,"rtim","","Receive timeout interrupt mask: 0 Receive FIFO not empty …",640,[[]]],[11,"set_rtim","","Receive timeout interrupt mask: 0 Receive FIFO not empty …",640,[[]]],[11,"rorim","","Receive overrun interrupt mask: 0 Receive FIFO written to …",640,[[]]],[11,"set_rorim","","Receive overrun interrupt mask: 0 Receive FIFO written to …",640,[[]]],[3,"Sspicr","","Interrupt clear register, SSPICR on page 3-11",null,null],[11,"to_bits","","",641,[[]]],[11,"from_bits","","",641,[[],["sspicr",3]]],[11,"rtic","","Clears the SSPRTINTR interrupt",641,[[]]],[11,"set_rtic","","Clears the SSPRTINTR interrupt",641,[[]]],[11,"roric","","Clears the SSPRORINTR interrupt",641,[[]]],[11,"set_roric","","Clears the SSPRORINTR interrupt",641,[[]]],[3,"Spi0","rp2040_pac::spi0","",null,null],[11,"from_ptr","","",642,[[]]],[11,"sspcr0","","Control register 0, SSPCR0 on page 3-4",642,[[],[["rw",3],["reg",3],["sspcr0",3]]]],[11,"sspcr1","","Control register 1, SSPCR1 on page 3-5",642,[[],[["sspcr1",3],["rw",3],["reg",3]]]],[11,"sspdr","","Data register, SSPDR on page 3-6",642,[[],[["sspdr",3],["reg",3],["rw",3]]]],[11,"sspsr","","Status register, SSPSR on page 3-7",642,[[],[["sspsr",3],["reg",3],["rw",3]]]],[11,"sspcpsr","","Clock prescale register, SSPCPSR on page 3-8",642,[[],[["reg",3],["rw",3],["sspcpsr",3]]]],[11,"sspimsc","","Interrupt mask set or clear register, SSPIMSC on page 3-9",642,[[],[["reg",3],["rw",3],["sspimsc",3]]]],[11,"sspris","","Raw interrupt status register, SSPRIS on page 3-10",642,[[],[["reg",3],["sspris",3],["rw",3]]]],[11,"sspmis","","Masked interrupt status register, SSPMIS on page 3-11",642,[[],[["reg",3],["sspmis",3],["rw",3]]]],[11,"sspicr","","Interrupt clear register, SSPICR on page 3-11",642,[[],[["reg",3],["sspicr",3],["rw",3]]]],[11,"sspdmacr","","DMA control register, SSPDMACR on page 3-12",642,[[],[["sspdmacr",3],["reg",3],["rw",3]]]],[11,"sspperiphid0","","Peripheral identification registers, SSPPeriphID0-3 on …",642,[[],[["reg",3],["sspperiphid0",3],["rw",3]]]],[11,"sspperiphid1","","Peripheral identification registers, SSPPeriphID0-3 on …",642,[[],[["reg",3],["sspperiphid1",3],["rw",3]]]],[11,"sspperiphid2","","Peripheral identification registers, SSPPeriphID0-3 on …",642,[[],[["reg",3],["sspperiphid2",3],["rw",3]]]],[11,"sspperiphid3","","Peripheral identification registers, SSPPeriphID0-3 on …",642,[[],[["reg",3],["rw",3],["sspperiphid3",3]]]],[11,"ssppcellid0","","PrimeCell identification registers, SSPPCellID0-3 on page …",642,[[],[["reg",3],["ssppcellid0",3],["rw",3]]]],[11,"ssppcellid1","","PrimeCell identification registers, SSPPCellID0-3 on page …",642,[[],[["ssppcellid1",3],["reg",3],["rw",3]]]],[11,"ssppcellid2","","PrimeCell identification registers, SSPPCellID0-3 on page …",642,[[],[["ssppcellid2",3],["reg",3],["rw",3]]]],[11,"ssppcellid3","","PrimeCell identification registers, SSPPCellID0-3 on page …",642,[[],[["reg",3],["ssppcellid3",3],["rw",3]]]],[0,"syscfg","rp2040_pac","",null,null],[0,"fields","rp2040_pac::syscfg","",null,null],[3,"ProcInSyncBypass","rp2040_pac::syscfg::fields","For each bit, if 1, bypass the input synchronizer between …",null,null],[11,"to_bits","","",643,[[]]],[11,"from_bits","","",643,[[],["procinsyncbypass",3]]],[11,"proc_in_sync_bypass","","",643,[[]]],[11,"set_proc_in_sync_bypass","","",643,[[]]],[3,"Mempowerdown","","Control power downs to memories. Set high to power down …",null,null],[11,"to_bits","","",644,[[]]],[11,"from_bits","","",644,[[],["mempowerdown",3]]],[11,"rom","","",644,[[]]],[11,"set_rom","","",644,[[]]],[11,"usb","","",644,[[]]],[11,"set_usb","","",644,[[]]],[11,"sram5","","",644,[[]]],[11,"set_sram5","","",644,[[]]],[11,"sram4","","",644,[[]]],[11,"set_sram4","","",644,[[]]],[11,"sram3","","",644,[[]]],[11,"set_sram3","","",644,[[]]],[11,"sram2","","",644,[[]]],[11,"set_sram2","","",644,[[]]],[11,"sram1","","",644,[[]]],[11,"set_sram1","","",644,[[]]],[11,"sram0","","",644,[[]]],[11,"set_sram0","","",644,[[]]],[3,"ProcConfig","","Configuration for processors",null,null],[11,"to_bits","","",645,[[]]],[11,"from_bits","","",645,[[],["procconfig",3]]],[11,"proc1_dap_instid","","Configure proc1 DAP instance ID. Recommend that this is …",645,[[]]],[11,"set_proc1_dap_instid","","Configure proc1 DAP instance ID. Recommend that this is …",645,[[]]],[11,"proc0_dap_instid","","Configure proc0 DAP instance ID. Recommend that this is …",645,[[]]],[11,"set_proc0_dap_instid","","Configure proc0 DAP instance ID. Recommend that this is …",645,[[]]],[11,"proc1_halted","","Indication that proc1 has halted",645,[[]]],[11,"set_proc1_halted","","Indication that proc1 has halted",645,[[]]],[11,"proc0_halted","","Indication that proc0 has halted",645,[[]]],[11,"set_proc0_halted","","Indication that proc0 has halted",645,[[]]],[3,"Dbgforce","","Directly control the SWD debug port of either processor",null,null],[11,"to_bits","","",646,[[]]],[11,"from_bits","","",646,[[],["dbgforce",3]]],[11,"proc1_attach","","Attach processor 1 debug port to syscfg controls, and …",646,[[]]],[11,"set_proc1_attach","","Attach processor 1 debug port to syscfg controls, and …",646,[[]]],[11,"proc1_swclk","","Directly drive processor 1 SWCLK, if PROC1_ATTACH is set",646,[[]]],[11,"set_proc1_swclk","","Directly drive processor 1 SWCLK, if PROC1_ATTACH is set",646,[[]]],[11,"proc1_swdi","","Directly drive processor 1 SWDIO input, if PROC1_ATTACH …",646,[[]]],[11,"set_proc1_swdi","","Directly drive processor 1 SWDIO input, if PROC1_ATTACH …",646,[[]]],[11,"proc1_swdo","","Observe the value of processor 1 SWDIO output.",646,[[]]],[11,"set_proc1_swdo","","Observe the value of processor 1 SWDIO output.",646,[[]]],[11,"proc0_attach","","Attach processor 0 debug port to syscfg controls, and …",646,[[]]],[11,"set_proc0_attach","","Attach processor 0 debug port to syscfg controls, and …",646,[[]]],[11,"proc0_swclk","","Directly drive processor 0 SWCLK, if PROC0_ATTACH is set",646,[[]]],[11,"set_proc0_swclk","","Directly drive processor 0 SWCLK, if PROC0_ATTACH is set",646,[[]]],[11,"proc0_swdi","","Directly drive processor 0 SWDIO input, if PROC0_ATTACH …",646,[[]]],[11,"set_proc0_swdi","","Directly drive processor 0 SWDIO input, if PROC0_ATTACH …",646,[[]]],[11,"proc0_swdo","","Observe the value of processor 0 SWDIO output.",646,[[]]],[11,"set_proc0_swdo","","Observe the value of processor 0 SWDIO output.",646,[[]]],[3,"ProcInSyncBypassHi","","For each bit, if 1, bypass the input synchronizer between …",null,null],[11,"to_bits","","",647,[[]]],[11,"from_bits","","",647,[[],["procinsyncbypasshi",3]]],[11,"proc_in_sync_bypass_hi","","",647,[[]]],[11,"set_proc_in_sync_bypass_hi","","",647,[[]]],[3,"Syscfg","rp2040_pac::syscfg","Register block for various chip control signals",null,null],[11,"from_ptr","","",648,[[]]],[11,"proc0_nmi_mask","","Processor core 0 NMI source mask Set a bit high to enable …",648,[[],[["reg",3],["rw",3]]]],[11,"proc1_nmi_mask","","Processor core 1 NMI source mask Set a bit high to enable …",648,[[],[["reg",3],["rw",3]]]],[11,"proc_config","","Configuration for processors",648,[[],[["reg",3],["procconfig",3],["rw",3]]]],[11,"proc_in_sync_bypass","","For each bit, if 1, bypass the input synchronizer between …",648,[[],[["procinsyncbypass",3],["rw",3],["reg",3]]]],[11,"proc_in_sync_bypass_hi","","For each bit, if 1, bypass the input synchronizer between …",648,[[],[["procinsyncbypasshi",3],["reg",3],["rw",3]]]],[11,"dbgforce","","Directly control the SWD debug port of either processor",648,[[],[["dbgforce",3],["reg",3],["rw",3]]]],[11,"mempowerdown","","Control power downs to memories. Set high to power down …",648,[[],[["mempowerdown",3],["rw",3],["reg",3]]]],[0,"sysinfo","rp2040_pac","",null,null],[0,"fields","rp2040_pac::sysinfo","",null,null],[3,"Platform","rp2040_pac::sysinfo::fields","Platform register. Allows software to know what …",null,null],[11,"to_bits","","",649,[[]]],[11,"from_bits","","",649,[[],["platform",3]]],[11,"asic","","",649,[[]]],[11,"set_asic","","",649,[[]]],[11,"fpga","","",649,[[]]],[11,"set_fpga","","",649,[[]]],[3,"ChipId","","JEDEC JEP-106 compliant chip identifier.",null,null],[11,"to_bits","","",650,[[]]],[11,"from_bits","","",650,[[],["chipid",3]]],[11,"revision","","",650,[[]]],[11,"set_revision","","",650,[[]]],[11,"part","","",650,[[]]],[11,"set_part","","",650,[[]]],[11,"manufacturer","","",650,[[]]],[11,"set_manufacturer","","",650,[[]]],[3,"Sysinfo","rp2040_pac::sysinfo","",null,null],[11,"from_ptr","","",651,[[]]],[11,"chip_id","","JEDEC JEP-106 compliant chip identifier.",651,[[],[["rw",3],["reg",3],["chipid",3]]]],[11,"platform","","Platform register. Allows software to know what …",651,[[],[["reg",3],["platform",3],["rw",3]]]],[11,"gitref_rp2040","","Git hash of the chip source. Used to identify chip …",651,[[],[["r",3],["reg",3]]]],[0,"tbman","rp2040_pac","",null,null],[0,"fields","rp2040_pac::tbman","",null,null],[3,"Platform","rp2040_pac::tbman::fields","Indicates the type of platform in use",null,null],[11,"to_bits","","",652,[[]]],[11,"from_bits","","",652,[[],["platform",3]]],[11,"fpga","","Indicates the platform is an FPGA",652,[[]]],[11,"set_fpga","","Indicates the platform is an FPGA",652,[[]]],[11,"asic","","Indicates the platform is an ASIC",652,[[]]],[11,"set_asic","","Indicates the platform is an ASIC",652,[[]]],[3,"Tbman","rp2040_pac::tbman","Testbench manager. Allows the programmer to know what …",null,null],[11,"from_ptr","","",653,[[]]],[11,"platform","","Indicates the type of platform in use",653,[[],[["platform",3],["reg",3],["rw",3]]]],[0,"timer","rp2040_pac","",null,null],[0,"fields","rp2040_pac::timer","",null,null],[3,"Dbgpause","rp2040_pac::timer::fields","Set bits high to enable pause when the corresponding …",null,null],[11,"to_bits","","",654,[[]]],[11,"from_bits","","",654,[[],["dbgpause",3]]],[11,"dbg1","","Pause when processor 1 is in debug mode",654,[[]]],[11,"set_dbg1","","Pause when processor 1 is in debug mode",654,[[]]],[11,"dbg0","","Pause when processor 0 is in debug mode",654,[[]]],[11,"set_dbg0","","Pause when processor 0 is in debug mode",654,[[]]],[3,"Pause","","Set high to pause the timer",null,null],[11,"to_bits","","",655,[[]]],[11,"from_bits","","",655,[[],["pause",3]]],[11,"pause","","",655,[[]]],[11,"set_pause","","",655,[[]]],[3,"Inte","","Interrupt Enable",null,null],[11,"to_bits","","",656,[[]]],[11,"from_bits","","",656,[[],["inte",3]]],[11,"alarm_3","","",656,[[]]],[11,"set_alarm_3","","",656,[[]]],[11,"alarm_2","","",656,[[]]],[11,"set_alarm_2","","",656,[[]]],[11,"alarm_1","","",656,[[]]],[11,"set_alarm_1","","",656,[[]]],[11,"alarm_0","","",656,[[]]],[11,"set_alarm_0","","",656,[[]]],[3,"Armed","","Indicates the armed/disarmed status of each alarm. A …",null,null],[11,"to_bits","","",657,[[]]],[11,"from_bits","","",657,[[],["armed",3]]],[11,"armed","","",657,[[]]],[11,"set_armed","","",657,[[]]],[3,"Ints","","Interrupt status after masking & forcing",null,null],[11,"to_bits","","",658,[[]]],[11,"from_bits","","",658,[[],["ints",3]]],[11,"alarm_3","","",658,[[]]],[11,"set_alarm_3","","",658,[[]]],[11,"alarm_2","","",658,[[]]],[11,"set_alarm_2","","",658,[[]]],[11,"alarm_1","","",658,[[]]],[11,"set_alarm_1","","",658,[[]]],[11,"alarm_0","","",658,[[]]],[11,"set_alarm_0","","",658,[[]]],[3,"Intf","","Interrupt Force",null,null],[11,"to_bits","","",659,[[]]],[11,"from_bits","","",659,[[],["intf",3]]],[11,"alarm_3","","",659,[[]]],[11,"set_alarm_3","","",659,[[]]],[11,"alarm_2","","",659,[[]]],[11,"set_alarm_2","","",659,[[]]],[11,"alarm_1","","",659,[[]]],[11,"set_alarm_1","","",659,[[]]],[11,"alarm_0","","",659,[[]]],[11,"set_alarm_0","","",659,[[]]],[3,"Intr","","Raw Interrupts",null,null],[11,"to_bits","","",660,[[]]],[11,"from_bits","","",660,[[],["intr",3]]],[11,"alarm_3","","",660,[[]]],[11,"set_alarm_3","","",660,[[]]],[11,"alarm_2","","",660,[[]]],[11,"set_alarm_2","","",660,[[]]],[11,"alarm_1","","",660,[[]]],[11,"set_alarm_1","","",660,[[]]],[11,"alarm_0","","",660,[[]]],[11,"set_alarm_0","","",660,[[]]],[3,"Timer","rp2040_pac::timer","Controls time and alarms time is a 64 bit value …",null,null],[11,"from_ptr","","",661,[[]]],[11,"timehw","","Write to bits 63:32 of time always write timelw before …",661,[[],[["reg",3],["w",3]]]],[11,"timelw","","Write to bits 31:0 of time writes do not get copied to …",661,[[],[["reg",3],["w",3]]]],[11,"timehr","","Read from bits 63:32 of time always read timelr before …",661,[[],[["r",3],["reg",3]]]],[11,"timelr","","Read from bits 31:0 of time",661,[[],[["r",3],["reg",3]]]],[11,"alarm0","","Arm alarm 0, and configure the time it will fire. Once …",661,[[],[["reg",3],["rw",3]]]],[11,"alarm1","","Arm alarm 1, and configure the time it will fire. Once …",661,[[],[["reg",3],["rw",3]]]],[11,"alarm2","","Arm alarm 2, and configure the time it will fire. Once …",661,[[],[["reg",3],["rw",3]]]],[11,"alarm3","","Arm alarm 3, and configure the time it will fire. Once …",661,[[],[["reg",3],["rw",3]]]],[11,"armed","","Indicates the armed/disarmed status of each alarm. A …",661,[[],[["reg",3],["armed",3],["rw",3]]]],[11,"timerawh","","Raw read from bits 63:32 of time (no side effects)",661,[[],[["r",3],["reg",3]]]],[11,"timerawl","","Raw read from bits 31:0 of time (no side effects)",661,[[],[["r",3],["reg",3]]]],[11,"dbgpause","","Set bits high to enable pause when the corresponding …",661,[[],[["reg",3],["rw",3],["dbgpause",3]]]],[11,"pause","","Set high to pause the timer",661,[[],[["reg",3],["pause",3],["rw",3]]]],[11,"intr","","Raw Interrupts",661,[[],[["reg",3],["rw",3],["intr",3]]]],[11,"inte","","Interrupt Enable",661,[[],[["rw",3],["inte",3],["reg",3]]]],[11,"intf","","Interrupt Force",661,[[],[["reg",3],["intf",3],["rw",3]]]],[11,"ints","","Interrupt status after masking & forcing",661,[[],[["reg",3],["ints",3],["rw",3]]]],[0,"uart0","rp2040_pac","",null,null],[0,"fields","rp2040_pac::uart0","",null,null],[3,"Uartibrd","rp2040_pac::uart0::fields","Integer Baud Rate Register, UARTIBRD",null,null],[11,"to_bits","","",662,[[]]],[11,"from_bits","","",662,[[],["uartibrd",3]]],[11,"baud_divint","","The integer baud rate divisor. These bits are cleared to …",662,[[]]],[11,"set_baud_divint","","The integer baud rate divisor. These bits are cleared to …",662,[[]]],[3,"Uartperiphid3","","UARTPeriphID3 Register",null,null],[11,"to_bits","","",663,[[]]],[11,"from_bits","","",663,[[],["uartperiphid3",3]]],[11,"configuration","","These bits read back as 0x00",663,[[]]],[11,"set_configuration","","These bits read back as 0x00",663,[[]]],[3,"Uartpcellid1","","UARTPCellID1 Register",null,null],[11,"to_bits","","",664,[[]]],[11,"from_bits","","",664,[[],["uartpcellid1",3]]],[11,"uartpcellid1","","These bits read back as 0xF0",664,[[]]],[11,"set_uartpcellid1","","These bits read back as 0xF0",664,[[]]],[3,"Uartdr","","Data Register, UARTDR",null,null],[11,"to_bits","","",665,[[]]],[11,"from_bits","","",665,[[],["uartdr",3]]],[11,"oe","","Overrun error. This bit is set to 1 if data is received …",665,[[]]],[11,"set_oe","","Overrun error. This bit is set to 1 if data is received …",665,[[]]],[11,"be","","Break error. This bit is set to 1 if a break condition …",665,[[]]],[11,"set_be","","Break error. This bit is set to 1 if a break condition …",665,[[]]],[11,"pe","","Parity error. When set to 1, it indicates that the parity …",665,[[]]],[11,"set_pe","","Parity error. When set to 1, it indicates that the parity …",665,[[]]],[11,"fe","","Framing error. When set to 1, it indicates that the …",665,[[]]],[11,"set_fe","","Framing error. When set to 1, it indicates that the …",665,[[]]],[11,"data","","Receive (read) data character. Transmit (write) data …",665,[[]]],[11,"set_data","","Receive (read) data character. Transmit (write) data …",665,[[]]],[3,"Uartmis","","Masked Interrupt Status Register, UARTMIS",null,null],[11,"to_bits","","",666,[[]]],[11,"from_bits","","",666,[[],["uartmis",3]]],[11,"oemis","","Overrun error masked interrupt status. Returns the masked …",666,[[]]],[11,"set_oemis","","Overrun error masked interrupt status. Returns the masked …",666,[[]]],[11,"bemis","","Break error masked interrupt status. Returns the masked …",666,[[]]],[11,"set_bemis","","Break error masked interrupt status. Returns the masked …",666,[[]]],[11,"pemis","","Parity error masked interrupt status. Returns the masked …",666,[[]]],[11,"set_pemis","","Parity error masked interrupt status. Returns the masked …",666,[[]]],[11,"femis","","Framing error masked interrupt status. Returns the masked …",666,[[]]],[11,"set_femis","","Framing error masked interrupt status. Returns the masked …",666,[[]]],[11,"rtmis","","Receive timeout masked interrupt status. Returns the …",666,[[]]],[11,"set_rtmis","","Receive timeout masked interrupt status. Returns the …",666,[[]]],[11,"txmis","","Transmit masked interrupt status. Returns the masked …",666,[[]]],[11,"set_txmis","","Transmit masked interrupt status. Returns the masked …",666,[[]]],[11,"rxmis","","Receive masked interrupt status. Returns the masked …",666,[[]]],[11,"set_rxmis","","Receive masked interrupt status. Returns the masked …",666,[[]]],[11,"dsrmmis","","nUARTDSR modem masked interrupt status. Returns the …",666,[[]]],[11,"set_dsrmmis","","nUARTDSR modem masked interrupt status. Returns the …",666,[[]]],[11,"dcdmmis","","nUARTDCD modem masked interrupt status. Returns the …",666,[[]]],[11,"set_dcdmmis","","nUARTDCD modem masked interrupt status. Returns the …",666,[[]]],[11,"ctsmmis","","nUARTCTS modem masked interrupt status. Returns the …",666,[[]]],[11,"set_ctsmmis","","nUARTCTS modem masked interrupt status. Returns the …",666,[[]]],[11,"rimmis","","nUARTRI modem masked interrupt status. Returns the masked …",666,[[]]],[11,"set_rimmis","","nUARTRI modem masked interrupt status. Returns the masked …",666,[[]]],[3,"Uartperiphid2","","UARTPeriphID2 Register",null,null],[11,"to_bits","","",667,[[]]],[11,"from_bits","","",667,[[],["uartperiphid2",3]]],[11,"revision","","This field depends on the revision of the UART: r1p0 0x0 …",667,[[]]],[11,"set_revision","","This field depends on the revision of the UART: r1p0 0x0 …",667,[[]]],[11,"designer1","","These bits read back as 0x4",667,[[]]],[11,"set_designer1","","These bits read back as 0x4",667,[[]]],[3,"Uartperiphid1","","UARTPeriphID1 Register",null,null],[11,"to_bits","","",668,[[]]],[11,"from_bits","","",668,[[],["uartperiphid1",3]]],[11,"designer0","","These bits read back as 0x1",668,[[]]],[11,"set_designer0","","These bits read back as 0x1",668,[[]]],[11,"partnumber1","","These bits read back as 0x0",668,[[]]],[11,"set_partnumber1","","These bits read back as 0x0",668,[[]]],[3,"Uartris","","Raw Interrupt Status Register, UARTRIS",null,null],[11,"to_bits","","",669,[[]]],[11,"from_bits","","",669,[[],["uartris",3]]],[11,"oeris","","Overrun error interrupt status. Returns the raw interrupt …",669,[[]]],[11,"set_oeris","","Overrun error interrupt status. Returns the raw interrupt …",669,[[]]],[11,"beris","","Break error interrupt status. Returns the raw interrupt …",669,[[]]],[11,"set_beris","","Break error interrupt status. Returns the raw interrupt …",669,[[]]],[11,"peris","","Parity error interrupt status. Returns the raw interrupt …",669,[[]]],[11,"set_peris","","Parity error interrupt status. Returns the raw interrupt …",669,[[]]],[11,"feris","","Framing error interrupt status. Returns the raw interrupt …",669,[[]]],[11,"set_feris","","Framing error interrupt status. Returns the raw interrupt …",669,[[]]],[11,"rtris","","Receive timeout interrupt status. Returns the raw …",669,[[]]],[11,"set_rtris","","Receive timeout interrupt status. Returns the raw …",669,[[]]],[11,"txris","","Transmit interrupt status. Returns the raw interrupt …",669,[[]]],[11,"set_txris","","Transmit interrupt status. Returns the raw interrupt …",669,[[]]],[11,"rxris","","Receive interrupt status. Returns the raw interrupt state …",669,[[]]],[11,"set_rxris","","Receive interrupt status. Returns the raw interrupt state …",669,[[]]],[11,"dsrrmis","","nUARTDSR modem interrupt status. Returns the raw …",669,[[]]],[11,"set_dsrrmis","","nUARTDSR modem interrupt status. Returns the raw …",669,[[]]],[11,"dcdrmis","","nUARTDCD modem interrupt status. Returns the raw …",669,[[]]],[11,"set_dcdrmis","","nUARTDCD modem interrupt status. Returns the raw …",669,[[]]],[11,"ctsrmis","","nUARTCTS modem interrupt status. Returns the raw …",669,[[]]],[11,"set_ctsrmis","","nUARTCTS modem interrupt status. Returns the raw …",669,[[]]],[11,"rirmis","","nUARTRI modem interrupt status. Returns the raw interrupt …",669,[[]]],[11,"set_rirmis","","nUARTRI modem interrupt status. Returns the raw interrupt …",669,[[]]],[3,"Uartpcellid2","","UARTPCellID2 Register",null,null],[11,"to_bits","","",670,[[]]],[11,"from_bits","","",670,[[],["uartpcellid2",3]]],[11,"uartpcellid2","","These bits read back as 0x05",670,[[]]],[11,"set_uartpcellid2","","These bits read back as 0x05",670,[[]]],[3,"Uartpcellid3","","UARTPCellID3 Register",null,null],[11,"to_bits","","",671,[[]]],[11,"from_bits","","",671,[[],["uartpcellid3",3]]],[11,"uartpcellid3","","These bits read back as 0xB1",671,[[]]],[11,"set_uartpcellid3","","These bits read back as 0xB1",671,[[]]],[3,"UartlcrH","","Line Control Register, UARTLCR_H",null,null],[11,"to_bits","","",672,[[]]],[11,"from_bits","","",672,[[],["uartlcrh",3]]],[11,"sps","","Stick parity select. 0 = stick parity is disabled 1 = …",672,[[]]],[11,"set_sps","","Stick parity select. 0 = stick parity is disabled 1 = …",672,[[]]],[11,"wlen","","Word length. These bits indicate the number of data bits …",672,[[]]],[11,"set_wlen","","Word length. These bits indicate the number of data bits …",672,[[]]],[11,"fen","","Enable FIFOs: 0 = FIFOs are disabled (character mode) …",672,[[]]],[11,"set_fen","","Enable FIFOs: 0 = FIFOs are disabled (character mode) …",672,[[]]],[11,"stp2","","Two stop bits select. If this bit is set to 1, two stop …",672,[[]]],[11,"set_stp2","","Two stop bits select. If this bit is set to 1, two stop …",672,[[]]],[11,"eps","","Even parity select. Controls the type of parity the UART …",672,[[]]],[11,"set_eps","","Even parity select. Controls the type of parity the UART …",672,[[]]],[11,"pen","","Parity enable: 0 = parity is disabled and no parity bit …",672,[[]]],[11,"set_pen","","Parity enable: 0 = parity is disabled and no parity bit …",672,[[]]],[11,"brk","","Send break. If this bit is set to 1, a low-level is …",672,[[]]],[11,"set_brk","","Send break. If this bit is set to 1, a low-level is …",672,[[]]],[3,"Uartperiphid0","","UARTPeriphID0 Register",null,null],[11,"to_bits","","",673,[[]]],[11,"from_bits","","",673,[[],["uartperiphid0",3]]],[11,"partnumber0","","These bits read back as 0x11",673,[[]]],[11,"set_partnumber0","","These bits read back as 0x11",673,[[]]],[3,"Uartfbrd","","Fractional Baud Rate Register, UARTFBRD",null,null],[11,"to_bits","","",674,[[]]],[11,"from_bits","","",674,[[],["uartfbrd",3]]],[11,"baud_divfrac","","The fractional baud rate divisor. These bits are cleared …",674,[[]]],[11,"set_baud_divfrac","","The fractional baud rate divisor. These bits are cleared …",674,[[]]],[3,"Uartimsc","","Interrupt Mask Set/Clear Register, UARTIMSC",null,null],[11,"to_bits","","",675,[[]]],[11,"from_bits","","",675,[[],["uartimsc",3]]],[11,"oeim","","Overrun error interrupt mask. A read returns the current …",675,[[]]],[11,"set_oeim","","Overrun error interrupt mask. A read returns the current …",675,[[]]],[11,"beim","","Break error interrupt mask. A read returns the current …",675,[[]]],[11,"set_beim","","Break error interrupt mask. A read returns the current …",675,[[]]],[11,"peim","","Parity error interrupt mask. A read returns the current …",675,[[]]],[11,"set_peim","","Parity error interrupt mask. A read returns the current …",675,[[]]],[11,"feim","","Framing error interrupt mask. A read returns the current …",675,[[]]],[11,"set_feim","","Framing error interrupt mask. A read returns the current …",675,[[]]],[11,"rtim","","Receive timeout interrupt mask. A read returns the …",675,[[]]],[11,"set_rtim","","Receive timeout interrupt mask. A read returns the …",675,[[]]],[11,"txim","","Transmit interrupt mask. A read returns the current mask …",675,[[]]],[11,"set_txim","","Transmit interrupt mask. A read returns the current mask …",675,[[]]],[11,"rxim","","Receive interrupt mask. A read returns the current mask …",675,[[]]],[11,"set_rxim","","Receive interrupt mask. A read returns the current mask …",675,[[]]],[11,"dsrmim","","nUARTDSR modem interrupt mask. A read returns the current …",675,[[]]],[11,"set_dsrmim","","nUARTDSR modem interrupt mask. A read returns the current …",675,[[]]],[11,"dcdmim","","nUARTDCD modem interrupt mask. A read returns the current …",675,[[]]],[11,"set_dcdmim","","nUARTDCD modem interrupt mask. A read returns the current …",675,[[]]],[11,"ctsmim","","nUARTCTS modem interrupt mask. A read returns the current …",675,[[]]],[11,"set_ctsmim","","nUARTCTS modem interrupt mask. A read returns the current …",675,[[]]],[11,"rimim","","nUARTRI modem interrupt mask. A read returns the current …",675,[[]]],[11,"set_rimim","","nUARTRI modem interrupt mask. A read returns the current …",675,[[]]],[3,"Uarticr","","Interrupt Clear Register, UARTICR",null,null],[11,"to_bits","","",676,[[]]],[11,"from_bits","","",676,[[],["uarticr",3]]],[11,"oeic","","Overrun error interrupt clear. Clears the UARTOEINTR …",676,[[]]],[11,"set_oeic","","Overrun error interrupt clear. Clears the UARTOEINTR …",676,[[]]],[11,"beic","","Break error interrupt clear. Clears the UARTBEINTR …",676,[[]]],[11,"set_beic","","Break error interrupt clear. Clears the UARTBEINTR …",676,[[]]],[11,"peic","","Parity error interrupt clear. Clears the UARTPEINTR …",676,[[]]],[11,"set_peic","","Parity error interrupt clear. Clears the UARTPEINTR …",676,[[]]],[11,"feic","","Framing error interrupt clear. Clears the UARTFEINTR …",676,[[]]],[11,"set_feic","","Framing error interrupt clear. Clears the UARTFEINTR …",676,[[]]],[11,"rtic","","Receive timeout interrupt clear. Clears the UARTRTINTR …",676,[[]]],[11,"set_rtic","","Receive timeout interrupt clear. Clears the UARTRTINTR …",676,[[]]],[11,"txic","","Transmit interrupt clear. Clears the UARTTXINTR interrupt.",676,[[]]],[11,"set_txic","","Transmit interrupt clear. Clears the UARTTXINTR interrupt.",676,[[]]],[11,"rxic","","Receive interrupt clear. Clears the UARTRXINTR interrupt.",676,[[]]],[11,"set_rxic","","Receive interrupt clear. Clears the UARTRXINTR interrupt.",676,[[]]],[11,"dsrmic","","nUARTDSR modem interrupt clear. Clears the UARTDSRINTR …",676,[[]]],[11,"set_dsrmic","","nUARTDSR modem interrupt clear. Clears the UARTDSRINTR …",676,[[]]],[11,"dcdmic","","nUARTDCD modem interrupt clear. Clears the UARTDCDINTR …",676,[[]]],[11,"set_dcdmic","","nUARTDCD modem interrupt clear. Clears the UARTDCDINTR …",676,[[]]],[11,"ctsmic","","nUARTCTS modem interrupt clear. Clears the UARTCTSINTR …",676,[[]]],[11,"set_ctsmic","","nUARTCTS modem interrupt clear. Clears the UARTCTSINTR …",676,[[]]],[11,"rimic","","nUARTRI modem interrupt clear. Clears the UARTRIINTR …",676,[[]]],[11,"set_rimic","","nUARTRI modem interrupt clear. Clears the UARTRIINTR …",676,[[]]],[3,"Uartfr","","Flag Register, UARTFR",null,null],[11,"to_bits","","",677,[[]]],[11,"from_bits","","",677,[[],["uartfr",3]]],[11,"ri","","Ring indicator. This bit is the complement of the UART …",677,[[]]],[11,"set_ri","","Ring indicator. This bit is the complement of the UART …",677,[[]]],[11,"txfe","","Transmit FIFO empty. The meaning of this bit depends on …",677,[[]]],[11,"set_txfe","","Transmit FIFO empty. The meaning of this bit depends on …",677,[[]]],[11,"rxff","","Receive FIFO full. The meaning of this bit depends on the …",677,[[]]],[11,"set_rxff","","Receive FIFO full. The meaning of this bit depends on the …",677,[[]]],[11,"txff","","Transmit FIFO full. The meaning of this bit depends on …",677,[[]]],[11,"set_txff","","Transmit FIFO full. The meaning of this bit depends on …",677,[[]]],[11,"rxfe","","Receive FIFO empty. The meaning of this bit depends on …",677,[[]]],[11,"set_rxfe","","Receive FIFO empty. The meaning of this bit depends on …",677,[[]]],[11,"busy","","UART busy. If this bit is set to 1, the UART is busy …",677,[[]]],[11,"set_busy","","UART busy. If this bit is set to 1, the UART is busy …",677,[[]]],[11,"dcd","","Data carrier detect. This bit is the complement of the …",677,[[]]],[11,"set_dcd","","Data carrier detect. This bit is the complement of the …",677,[[]]],[11,"dsr","","Data set ready. This bit is the complement of the UART …",677,[[]]],[11,"set_dsr","","Data set ready. This bit is the complement of the UART …",677,[[]]],[11,"cts","","Clear to send. This bit is the complement of the UART …",677,[[]]],[11,"set_cts","","Clear to send. This bit is the complement of the UART …",677,[[]]],[3,"Uartifls","","Interrupt FIFO Level Select Register, UARTIFLS",null,null],[11,"to_bits","","",678,[[]]],[11,"from_bits","","",678,[[],["uartifls",3]]],[11,"rxiflsel","","Receive interrupt FIFO level select. The trigger points …",678,[[]]],[11,"set_rxiflsel","","Receive interrupt FIFO level select. The trigger points …",678,[[]]],[11,"txiflsel","","Transmit interrupt FIFO level select. The trigger points …",678,[[]]],[11,"set_txiflsel","","Transmit interrupt FIFO level select. The trigger points …",678,[[]]],[3,"Uartilpr","","IrDA Low-Power Counter Register, UARTILPR",null,null],[11,"to_bits","","",679,[[]]],[11,"from_bits","","",679,[[],["uartilpr",3]]],[11,"ilpdvsr","","8-bit low-power divisor value. These bits are cleared to …",679,[[]]],[11,"set_ilpdvsr","","8-bit low-power divisor value. These bits are cleared to …",679,[[]]],[3,"Uartdmacr","","DMA Control Register, UARTDMACR",null,null],[11,"to_bits","","",680,[[]]],[11,"from_bits","","",680,[[],["uartdmacr",3]]],[11,"dmaonerr","","DMA on error. If this bit is set to 1, the DMA receive …",680,[[]]],[11,"set_dmaonerr","","DMA on error. If this bit is set to 1, the DMA receive …",680,[[]]],[11,"txdmae","","Transmit DMA enable. If this bit is set to 1, DMA for the …",680,[[]]],[11,"set_txdmae","","Transmit DMA enable. If this bit is set to 1, DMA for the …",680,[[]]],[11,"rxdmae","","Receive DMA enable. If this bit is set to 1, DMA for the …",680,[[]]],[11,"set_rxdmae","","Receive DMA enable. If this bit is set to 1, DMA for the …",680,[[]]],[3,"Uartcr","","Control Register, UARTCR",null,null],[11,"to_bits","","",681,[[]]],[11,"from_bits","","",681,[[],["uartcr",3]]],[11,"ctsen","","CTS hardware flow control enable. If this bit is set to …",681,[[]]],[11,"set_ctsen","","CTS hardware flow control enable. If this bit is set to …",681,[[]]],[11,"rtsen","","RTS hardware flow control enable. If this bit is set to …",681,[[]]],[11,"set_rtsen","","RTS hardware flow control enable. If this bit is set to …",681,[[]]],[11,"out2","","This bit is the complement of the UART Out2 (nUARTOut2) …",681,[[]]],[11,"set_out2","","This bit is the complement of the UART Out2 (nUARTOut2) …",681,[[]]],[11,"out1","","This bit is the complement of the UART Out1 (nUARTOut1) …",681,[[]]],[11,"set_out1","","This bit is the complement of the UART Out1 (nUARTOut1) …",681,[[]]],[11,"rts","","Request to send. This bit is the complement of the UART …",681,[[]]],[11,"set_rts","","Request to send. This bit is the complement of the UART …",681,[[]]],[11,"dtr","","Data transmit ready. This bit is the complement of the …",681,[[]]],[11,"set_dtr","","Data transmit ready. This bit is the complement of the …",681,[[]]],[11,"rxe","","Receive enable. If this bit is set to 1, the receive …",681,[[]]],[11,"set_rxe","","Receive enable. If this bit is set to 1, the receive …",681,[[]]],[11,"txe","","Transmit enable. If this bit is set to 1, the transmit …",681,[[]]],[11,"set_txe","","Transmit enable. If this bit is set to 1, the transmit …",681,[[]]],[11,"lbe","","Loopback enable. If this bit is set to 1 and the SIREN …",681,[[]]],[11,"set_lbe","","Loopback enable. If this bit is set to 1 and the SIREN …",681,[[]]],[11,"sirlp","","SIR low-power IrDA mode. This bit selects the IrDA …",681,[[]]],[11,"set_sirlp","","SIR low-power IrDA mode. This bit selects the IrDA …",681,[[]]],[11,"siren","","SIR enable: 0 = IrDA SIR ENDEC is disabled. nSIROUT …",681,[[]]],[11,"set_siren","","SIR enable: 0 = IrDA SIR ENDEC is disabled. nSIROUT …",681,[[]]],[11,"uarten","","UART enable: 0 = UART is disabled. If the UART is …",681,[[]]],[11,"set_uarten","","UART enable: 0 = UART is disabled. If the UART is …",681,[[]]],[3,"Uartpcellid0","","UARTPCellID0 Register",null,null],[11,"to_bits","","",682,[[]]],[11,"from_bits","","",682,[[],["uartpcellid0",3]]],[11,"uartpcellid0","","These bits read back as 0x0D",682,[[]]],[11,"set_uartpcellid0","","These bits read back as 0x0D",682,[[]]],[3,"Uartrsr","","Receive Status Register/Error Clear Register, …",null,null],[11,"to_bits","","",683,[[]]],[11,"from_bits","","",683,[[],["uartrsr",3]]],[11,"oe","","Overrun error. This bit is set to 1 if data is received …",683,[[]]],[11,"set_oe","","Overrun error. This bit is set to 1 if data is received …",683,[[]]],[11,"be","","Break error. This bit is set to 1 if a break condition …",683,[[]]],[11,"set_be","","Break error. This bit is set to 1 if a break condition …",683,[[]]],[11,"pe","","Parity error. When set to 1, it indicates that the parity …",683,[[]]],[11,"set_pe","","Parity error. When set to 1, it indicates that the parity …",683,[[]]],[11,"fe","","Framing error. When set to 1, it indicates that the …",683,[[]]],[11,"set_fe","","Framing error. When set to 1, it indicates that the …",683,[[]]],[3,"Uart0","rp2040_pac::uart0","",null,null],[11,"from_ptr","","",684,[[]]],[11,"uartdr","","Data Register, UARTDR",684,[[],[["reg",3],["uartdr",3],["rw",3]]]],[11,"uartrsr","","Receive Status Register/Error Clear Register, …",684,[[],[["reg",3],["uartrsr",3],["rw",3]]]],[11,"uartfr","","Flag Register, UARTFR",684,[[],[["reg",3],["uartfr",3],["rw",3]]]],[11,"uartilpr","","IrDA Low-Power Counter Register, UARTILPR",684,[[],[["reg",3],["uartilpr",3],["rw",3]]]],[11,"uartibrd","","Integer Baud Rate Register, UARTIBRD",684,[[],[["uartibrd",3],["rw",3],["reg",3]]]],[11,"uartfbrd","","Fractional Baud Rate Register, UARTFBRD",684,[[],[["uartfbrd",3],["reg",3],["rw",3]]]],[11,"uartlcr_h","","Line Control Register, UARTLCR_H",684,[[],[["rw",3],["reg",3],["uartlcrh",3]]]],[11,"uartcr","","Control Register, UARTCR",684,[[],[["reg",3],["uartcr",3],["rw",3]]]],[11,"uartifls","","Interrupt FIFO Level Select Register, UARTIFLS",684,[[],[["uartifls",3],["rw",3],["reg",3]]]],[11,"uartimsc","","Interrupt Mask Set/Clear Register, UARTIMSC",684,[[],[["uartimsc",3],["rw",3],["reg",3]]]],[11,"uartris","","Raw Interrupt Status Register, UARTRIS",684,[[],[["uartris",3],["reg",3],["rw",3]]]],[11,"uartmis","","Masked Interrupt Status Register, UARTMIS",684,[[],[["rw",3],["reg",3],["uartmis",3]]]],[11,"uarticr","","Interrupt Clear Register, UARTICR",684,[[],[["uarticr",3],["rw",3],["reg",3]]]],[11,"uartdmacr","","DMA Control Register, UARTDMACR",684,[[],[["reg",3],["rw",3],["uartdmacr",3]]]],[11,"uartperiphid0","","UARTPeriphID0 Register",684,[[],[["uartperiphid0",3],["rw",3],["reg",3]]]],[11,"uartperiphid1","","UARTPeriphID1 Register",684,[[],[["reg",3],["rw",3],["uartperiphid1",3]]]],[11,"uartperiphid2","","UARTPeriphID2 Register",684,[[],[["rw",3],["uartperiphid2",3],["reg",3]]]],[11,"uartperiphid3","","UARTPeriphID3 Register",684,[[],[["uartperiphid3",3],["reg",3],["rw",3]]]],[11,"uartpcellid0","","UARTPCellID0 Register",684,[[],[["rw",3],["reg",3],["uartpcellid0",3]]]],[11,"uartpcellid1","","UARTPCellID1 Register",684,[[],[["reg",3],["uartpcellid1",3],["rw",3]]]],[11,"uartpcellid2","","UARTPCellID2 Register",684,[[],[["reg",3],["uartpcellid2",3],["rw",3]]]],[11,"uartpcellid3","","UARTPCellID3 Register",684,[[],[["reg",3],["rw",3],["uartpcellid3",3]]]],[0,"usbctrl_regs","rp2040_pac","",null,null],[0,"fields","rp2040_pac::usbctrl_regs","",null,null],[3,"UsbphyTrim","rp2040_pac::usbctrl_regs::fields","Used to adjust trim values of USB phy pull down resistors.",null,null],[11,"to_bits","","",685,[[]]],[11,"from_bits","","",685,[[],["usbphytrim",3]]],[11,"dm_pulldn_trim","","Value to drive to USB PHY DM pulldown resistor trim …",685,[[]]],[11,"set_dm_pulldn_trim","","Value to drive to USB PHY DM pulldown resistor trim …",685,[[]]],[11,"dp_pulldn_trim","","Value to drive to USB PHY DP pulldown resistor trim …",685,[[]]],[11,"set_dp_pulldn_trim","","Value to drive to USB PHY DP pulldown resistor trim …",685,[[]]],[3,"AddrEndp8","","Interrupt endpoint 8. Only valid for HOST mode.",null,null],[11,"to_bits","","",686,[[]]],[11,"from_bits","","",686,[[],["addrendp8",3]]],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",686,[[]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",686,[[]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",686,[[]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",686,[[]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",686,[[]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",686,[[]]],[11,"address","","Device address",686,[[]]],[11,"set_address","","Device address",686,[[]]],[3,"SofRd","","Read the last SOF (Start of Frame) frame number seen. In …",null,null],[11,"to_bits","","",687,[[]]],[11,"from_bits","","",687,[[],["sofrd",3]]],[11,"count","","",687,[[]]],[11,"set_count","","",687,[[]]],[3,"UsbPwr","","Overrides for the power signals in the event that the …",null,null],[11,"to_bits","","",688,[[]]],[11,"from_bits","","",688,[[],["usbpwr",3]]],[11,"overcurr_detect_en","","",688,[[]]],[11,"set_overcurr_detect_en","","",688,[[]]],[11,"overcurr_detect","","",688,[[]]],[11,"set_overcurr_detect","","",688,[[]]],[11,"vbus_detect_override_en","","",688,[[]]],[11,"set_vbus_detect_override_en","","",688,[[]]],[11,"vbus_detect","","",688,[[]]],[11,"set_vbus_detect","","",688,[[]]],[11,"vbus_en_override_en","","",688,[[]]],[11,"set_vbus_en_override_en","","",688,[[]]],[11,"vbus_en","","",688,[[]]],[11,"set_vbus_en","","",688,[[]]],[3,"EpStatusStallNak","","Device: bits are set when the <code>IRQ_ON_NAK</code> or <code>IRQ_ON_STALL</code> …",null,null],[11,"to_bits","","",689,[[]]],[11,"from_bits","","",689,[[],["epstatusstallnak",3]]],[11,"ep15_out","","",689,[[]]],[11,"set_ep15_out","","",689,[[]]],[11,"ep15_in","","",689,[[]]],[11,"set_ep15_in","","",689,[[]]],[11,"ep14_out","","",689,[[]]],[11,"set_ep14_out","","",689,[[]]],[11,"ep14_in","","",689,[[]]],[11,"set_ep14_in","","",689,[[]]],[11,"ep13_out","","",689,[[]]],[11,"set_ep13_out","","",689,[[]]],[11,"ep13_in","","",689,[[]]],[11,"set_ep13_in","","",689,[[]]],[11,"ep12_out","","",689,[[]]],[11,"set_ep12_out","","",689,[[]]],[11,"ep12_in","","",689,[[]]],[11,"set_ep12_in","","",689,[[]]],[11,"ep11_out","","",689,[[]]],[11,"set_ep11_out","","",689,[[]]],[11,"ep11_in","","",689,[[]]],[11,"set_ep11_in","","",689,[[]]],[11,"ep10_out","","",689,[[]]],[11,"set_ep10_out","","",689,[[]]],[11,"ep10_in","","",689,[[]]],[11,"set_ep10_in","","",689,[[]]],[11,"ep9_out","","",689,[[]]],[11,"set_ep9_out","","",689,[[]]],[11,"ep9_in","","",689,[[]]],[11,"set_ep9_in","","",689,[[]]],[11,"ep8_out","","",689,[[]]],[11,"set_ep8_out","","",689,[[]]],[11,"ep8_in","","",689,[[]]],[11,"set_ep8_in","","",689,[[]]],[11,"ep7_out","","",689,[[]]],[11,"set_ep7_out","","",689,[[]]],[11,"ep7_in","","",689,[[]]],[11,"set_ep7_in","","",689,[[]]],[11,"ep6_out","","",689,[[]]],[11,"set_ep6_out","","",689,[[]]],[11,"ep6_in","","",689,[[]]],[11,"set_ep6_in","","",689,[[]]],[11,"ep5_out","","",689,[[]]],[11,"set_ep5_out","","",689,[[]]],[11,"ep5_in","","",689,[[]]],[11,"set_ep5_in","","",689,[[]]],[11,"ep4_out","","",689,[[]]],[11,"set_ep4_out","","",689,[[]]],[11,"ep4_in","","",689,[[]]],[11,"set_ep4_in","","",689,[[]]],[11,"ep3_out","","",689,[[]]],[11,"set_ep3_out","","",689,[[]]],[11,"ep3_in","","",689,[[]]],[11,"set_ep3_in","","",689,[[]]],[11,"ep2_out","","",689,[[]]],[11,"set_ep2_out","","",689,[[]]],[11,"ep2_in","","",689,[[]]],[11,"set_ep2_in","","",689,[[]]],[11,"ep1_out","","",689,[[]]],[11,"set_ep1_out","","",689,[[]]],[11,"ep1_in","","",689,[[]]],[11,"set_ep1_in","","",689,[[]]],[11,"ep0_out","","",689,[[]]],[11,"set_ep0_out","","",689,[[]]],[11,"ep0_in","","",689,[[]]],[11,"set_ep0_in","","",689,[[]]],[3,"AddrEndp10","","Interrupt endpoint 10. Only valid for HOST mode.",null,null],[11,"to_bits","","",690,[[]]],[11,"from_bits","","",690,[[],["addrendp10",3]]],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",690,[[]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",690,[[]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",690,[[]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",690,[[]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",690,[[]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",690,[[]]],[11,"address","","Device address",690,[[]]],[11,"set_address","","Device address",690,[[]]],[3,"MainCtrl","","Main control register",null,null],[11,"to_bits","","",691,[[]]],[11,"from_bits","","",691,[[],["mainctrl",3]]],[11,"sim_timing","","Reduced timings for simulation",691,[[]]],[11,"set_sim_timing","","Reduced timings for simulation",691,[[]]],[11,"host_ndevice","","Device mode = 0, Host mode = 1",691,[[]]],[11,"set_host_ndevice","","Device mode = 0, Host mode = 1",691,[[]]],[11,"controller_en","","Enable controller",691,[[]]],[11,"set_controller_en","","Enable controller",691,[[]]],[3,"SieStatus","","SIE status register",null,null],[11,"to_bits","","",692,[[]]],[11,"from_bits","","",692,[[],["siestatus",3]]],[11,"data_seq_error","","Data Sequence Error. The device can raise a sequence …",692,[[]]],[11,"set_data_seq_error","","Data Sequence Error. The device can raise a sequence …",692,[[]]],[11,"ack_rec","","ACK received. Raised by both host and device.",692,[[]]],[11,"set_ack_rec","","ACK received. Raised by both host and device.",692,[[]]],[11,"stall_rec","","Host: STALL received",692,[[]]],[11,"set_stall_rec","","Host: STALL received",692,[[]]],[11,"nak_rec","","Host: NAK received",692,[[]]],[11,"set_nak_rec","","Host: NAK received",692,[[]]],[11,"rx_timeout","","RX timeout is raised by both the host and device if an …",692,[[]]],[11,"set_rx_timeout","","RX timeout is raised by both the host and device if an …",692,[[]]],[11,"rx_overflow","","RX overflow is raised by the Serial RX engine if the …",692,[[]]],[11,"set_rx_overflow","","RX overflow is raised by the Serial RX engine if the …",692,[[]]],[11,"bit_stuff_error","","Bit Stuff Error. Raised by the Serial RX engine.",692,[[]]],[11,"set_bit_stuff_error","","Bit Stuff Error. Raised by the Serial RX engine.",692,[[]]],[11,"crc_error","","CRC Error. Raised by the Serial RX engine.",692,[[]]],[11,"set_crc_error","","CRC Error. Raised by the Serial RX engine.",692,[[]]],[11,"bus_reset","","Device: bus reset received",692,[[]]],[11,"set_bus_reset","","Device: bus reset received",692,[[]]],[11,"trans_complete","","Transaction complete. Raised by device if: * An IN or OUT …",692,[[]]],[11,"set_trans_complete","","Transaction complete. Raised by device if: * An IN or OUT …",692,[[]]],[11,"setup_rec","","Device: Setup packet received",692,[[]]],[11,"set_setup_rec","","Device: Setup packet received",692,[[]]],[11,"connected","","Device: connected",692,[[]]],[11,"set_connected","","Device: connected",692,[[]]],[11,"resume","","Host: Device has initiated a remote resume. Device: host …",692,[[]]],[11,"set_resume","","Host: Device has initiated a remote resume. Device: host …",692,[[]]],[11,"vbus_over_curr","","VBUS over current detected",692,[[]]],[11,"set_vbus_over_curr","","VBUS over current detected",692,[[]]],[11,"speed","","Host: device speed. Disconnected = 00, LS = 01, FS = 10",692,[[]]],[11,"set_speed","","Host: device speed. Disconnected = 00, LS = 01, FS = 10",692,[[]]],[11,"suspended","","Bus in suspended state. Valid for device and host. Host …",692,[[]]],[11,"set_suspended","","Bus in suspended state. Valid for device and host. Host …",692,[[]]],[11,"line_state","","USB bus line state",692,[[]]],[11,"set_line_state","","USB bus line state",692,[[]]],[11,"vbus_detected","","Device: VBUS Detected",692,[[]]],[11,"set_vbus_detected","","Device: VBUS Detected",692,[[]]],[3,"NakPoll","","Used by the host controller. Sets the wait time in …",null,null],[11,"to_bits","","",693,[[]]],[11,"from_bits","","",693,[[],["nakpoll",3]]],[11,"delay_fs","","NAK polling interval for a full speed device",693,[[]]],[11,"set_delay_fs","","NAK polling interval for a full speed device",693,[[]]],[11,"delay_ls","","NAK polling interval for a low speed device",693,[[]]],[11,"set_delay_ls","","NAK polling interval for a low speed device",693,[[]]],[3,"AddrEndp13","","Interrupt endpoint 13. Only valid for HOST mode.",null,null],[11,"to_bits","","",694,[[]]],[11,"from_bits","","",694,[[],["addrendp13",3]]],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",694,[[]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",694,[[]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",694,[[]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",694,[[]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",694,[[]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",694,[[]]],[11,"address","","Device address",694,[[]]],[11,"set_address","","Device address",694,[[]]],[3,"AddrEndp7","","Interrupt endpoint 7. Only valid for HOST mode.",null,null],[11,"to_bits","","",695,[[]]],[11,"from_bits","","",695,[[],["addrendp7",3]]],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",695,[[]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",695,[[]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",695,[[]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",695,[[]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",695,[[]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",695,[[]]],[11,"address","","Device address",695,[[]]],[11,"set_address","","Device address",695,[[]]],[3,"Inte","","Interrupt Enable",null,null],[11,"to_bits","","",696,[[]]],[11,"from_bits","","",696,[[],["inte",3]]],[11,"ep_stall_nak","","Raised when any bit in EP_STATUS_STALL_NAK is set. Clear …",696,[[]]],[11,"set_ep_stall_nak","","Raised when any bit in EP_STATUS_STALL_NAK is set. Clear …",696,[[]]],[11,"abort_done","","Raised when any bit in ABORT_DONE is set. Clear by …",696,[[]]],[11,"set_abort_done","","Raised when any bit in ABORT_DONE is set. Clear by …",696,[[]]],[11,"dev_sof","","Set every time the device receives a SOF (Start of Frame) …",696,[[]]],[11,"set_dev_sof","","Set every time the device receives a SOF (Start of Frame) …",696,[[]]],[11,"setup_req","","Device. Source: SIE_STATUS.SETUP_REC",696,[[]]],[11,"set_setup_req","","Device. Source: SIE_STATUS.SETUP_REC",696,[[]]],[11,"dev_resume_from_host","","Set when the device receives a resume from the host. …",696,[[]]],[11,"set_dev_resume_from_host","","Set when the device receives a resume from the host. …",696,[[]]],[11,"dev_suspend","","Set when the device suspend state changes. Cleared by …",696,[[]]],[11,"set_dev_suspend","","Set when the device suspend state changes. Cleared by …",696,[[]]],[11,"dev_conn_dis","","Set when the device connection state changes. Cleared by …",696,[[]]],[11,"set_dev_conn_dis","","Set when the device connection state changes. Cleared by …",696,[[]]],[11,"bus_reset","","Source: SIE_STATUS.BUS_RESET",696,[[]]],[11,"set_bus_reset","","Source: SIE_STATUS.BUS_RESET",696,[[]]],[11,"vbus_detect","","Source: SIE_STATUS.VBUS_DETECT",696,[[]]],[11,"set_vbus_detect","","Source: SIE_STATUS.VBUS_DETECT",696,[[]]],[11,"stall","","Source: SIE_STATUS.STALL_REC",696,[[]]],[11,"set_stall","","Source: SIE_STATUS.STALL_REC",696,[[]]],[11,"error_crc","","Source: SIE_STATUS.CRC_ERROR",696,[[]]],[11,"set_error_crc","","Source: SIE_STATUS.CRC_ERROR",696,[[]]],[11,"error_bit_stuff","","Source: SIE_STATUS.BIT_STUFF_ERROR",696,[[]]],[11,"set_error_bit_stuff","","Source: SIE_STATUS.BIT_STUFF_ERROR",696,[[]]],[11,"error_rx_overflow","","Source: SIE_STATUS.RX_OVERFLOW",696,[[]]],[11,"set_error_rx_overflow","","Source: SIE_STATUS.RX_OVERFLOW",696,[[]]],[11,"error_rx_timeout","","Source: SIE_STATUS.RX_TIMEOUT",696,[[]]],[11,"set_error_rx_timeout","","Source: SIE_STATUS.RX_TIMEOUT",696,[[]]],[11,"error_data_seq","","Source: SIE_STATUS.DATA_SEQ_ERROR",696,[[]]],[11,"set_error_data_seq","","Source: SIE_STATUS.DATA_SEQ_ERROR",696,[[]]],[11,"buff_status","","Raised when any bit in BUFF_STATUS is set. Clear by …",696,[[]]],[11,"set_buff_status","","Raised when any bit in BUFF_STATUS is set. Clear by …",696,[[]]],[11,"trans_complete","","Raised every time SIE_STATUS.TRANS_COMPLETE is set. Clear …",696,[[]]],[11,"set_trans_complete","","Raised every time SIE_STATUS.TRANS_COMPLETE is set. Clear …",696,[[]]],[11,"host_sof","","Host: raised every time the host sends a SOF (Start of …",696,[[]]],[11,"set_host_sof","","Host: raised every time the host sends a SOF (Start of …",696,[[]]],[11,"host_resume","","Host: raised when a device wakes up the host. Cleared by …",696,[[]]],[11,"set_host_resume","","Host: raised when a device wakes up the host. Cleared by …",696,[[]]],[11,"host_conn_dis","","Host: raised when a device is connected or disconnected …",696,[[]]],[11,"set_host_conn_dis","","Host: raised when a device is connected or disconnected …",696,[[]]],[3,"AddrEndp4","","Interrupt endpoint 4. Only valid for HOST mode.",null,null],[11,"to_bits","","",697,[[]]],[11,"from_bits","","",697,[[],["addrendp4",3]]],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",697,[[]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",697,[[]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",697,[[]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",697,[[]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",697,[[]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",697,[[]]],[11,"address","","Device address",697,[[]]],[11,"set_address","","Device address",697,[[]]],[3,"AddrEndp14","","Interrupt endpoint 14. Only valid for HOST mode.",null,null],[11,"to_bits","","",698,[[]]],[11,"from_bits","","",698,[[],["addrendp14",3]]],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",698,[[]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",698,[[]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",698,[[]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",698,[[]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",698,[[]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",698,[[]]],[11,"address","","Device address",698,[[]]],[11,"set_address","","Device address",698,[[]]],[3,"AddrEndp","","Device address and endpoint control",null,null],[11,"to_bits","","",699,[[]]],[11,"from_bits","","",699,[[],["addrendp",3]]],[11,"endpoint","","Device endpoint to send data to. Only valid for HOST mode.",699,[[]]],[11,"set_endpoint","","Device endpoint to send data to. Only valid for HOST mode.",699,[[]]],[11,"address","","In device mode, the address that the device should …",699,[[]]],[11,"set_address","","In device mode, the address that the device should …",699,[[]]],[3,"AddrEndp15","","Interrupt endpoint 15. Only valid for HOST mode.",null,null],[11,"to_bits","","",700,[[]]],[11,"from_bits","","",700,[[],["addrendp15",3]]],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",700,[[]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",700,[[]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",700,[[]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",700,[[]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",700,[[]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",700,[[]]],[11,"address","","Device address",700,[[]]],[11,"set_address","","Device address",700,[[]]],[3,"Intr","","Raw Interrupts",null,null],[11,"to_bits","","",701,[[]]],[11,"from_bits","","",701,[[],["intr",3]]],[11,"ep_stall_nak","","Raised when any bit in EP_STATUS_STALL_NAK is set. Clear …",701,[[]]],[11,"set_ep_stall_nak","","Raised when any bit in EP_STATUS_STALL_NAK is set. Clear …",701,[[]]],[11,"abort_done","","Raised when any bit in ABORT_DONE is set. Clear by …",701,[[]]],[11,"set_abort_done","","Raised when any bit in ABORT_DONE is set. Clear by …",701,[[]]],[11,"dev_sof","","Set every time the device receives a SOF (Start of Frame) …",701,[[]]],[11,"set_dev_sof","","Set every time the device receives a SOF (Start of Frame) …",701,[[]]],[11,"setup_req","","Device. Source: SIE_STATUS.SETUP_REC",701,[[]]],[11,"set_setup_req","","Device. Source: SIE_STATUS.SETUP_REC",701,[[]]],[11,"dev_resume_from_host","","Set when the device receives a resume from the host. …",701,[[]]],[11,"set_dev_resume_from_host","","Set when the device receives a resume from the host. …",701,[[]]],[11,"dev_suspend","","Set when the device suspend state changes. Cleared by …",701,[[]]],[11,"set_dev_suspend","","Set when the device suspend state changes. Cleared by …",701,[[]]],[11,"dev_conn_dis","","Set when the device connection state changes. Cleared by …",701,[[]]],[11,"set_dev_conn_dis","","Set when the device connection state changes. Cleared by …",701,[[]]],[11,"bus_reset","","Source: SIE_STATUS.BUS_RESET",701,[[]]],[11,"set_bus_reset","","Source: SIE_STATUS.BUS_RESET",701,[[]]],[11,"vbus_detect","","Source: SIE_STATUS.VBUS_DETECT",701,[[]]],[11,"set_vbus_detect","","Source: SIE_STATUS.VBUS_DETECT",701,[[]]],[11,"stall","","Source: SIE_STATUS.STALL_REC",701,[[]]],[11,"set_stall","","Source: SIE_STATUS.STALL_REC",701,[[]]],[11,"error_crc","","Source: SIE_STATUS.CRC_ERROR",701,[[]]],[11,"set_error_crc","","Source: SIE_STATUS.CRC_ERROR",701,[[]]],[11,"error_bit_stuff","","Source: SIE_STATUS.BIT_STUFF_ERROR",701,[[]]],[11,"set_error_bit_stuff","","Source: SIE_STATUS.BIT_STUFF_ERROR",701,[[]]],[11,"error_rx_overflow","","Source: SIE_STATUS.RX_OVERFLOW",701,[[]]],[11,"set_error_rx_overflow","","Source: SIE_STATUS.RX_OVERFLOW",701,[[]]],[11,"error_rx_timeout","","Source: SIE_STATUS.RX_TIMEOUT",701,[[]]],[11,"set_error_rx_timeout","","Source: SIE_STATUS.RX_TIMEOUT",701,[[]]],[11,"error_data_seq","","Source: SIE_STATUS.DATA_SEQ_ERROR",701,[[]]],[11,"set_error_data_seq","","Source: SIE_STATUS.DATA_SEQ_ERROR",701,[[]]],[11,"buff_status","","Raised when any bit in BUFF_STATUS is set. Clear by …",701,[[]]],[11,"set_buff_status","","Raised when any bit in BUFF_STATUS is set. Clear by …",701,[[]]],[11,"trans_complete","","Raised every time SIE_STATUS.TRANS_COMPLETE is set. Clear …",701,[[]]],[11,"set_trans_complete","","Raised every time SIE_STATUS.TRANS_COMPLETE is set. Clear …",701,[[]]],[11,"host_sof","","Host: raised every time the host sends a SOF (Start of …",701,[[]]],[11,"set_host_sof","","Host: raised every time the host sends a SOF (Start of …",701,[[]]],[11,"host_resume","","Host: raised when a device wakes up the host. Cleared by …",701,[[]]],[11,"set_host_resume","","Host: raised when a device wakes up the host. Cleared by …",701,[[]]],[11,"host_conn_dis","","Host: raised when a device is connected or disconnected …",701,[[]]],[11,"set_host_conn_dis","","Host: raised when a device is connected or disconnected …",701,[[]]],[3,"AddrEndp11","","Interrupt endpoint 11. Only valid for HOST mode.",null,null],[11,"to_bits","","",702,[[]]],[11,"from_bits","","",702,[[],["addrendp11",3]]],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",702,[[]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",702,[[]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",702,[[]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",702,[[]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",702,[[]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",702,[[]]],[11,"address","","Device address",702,[[]]],[11,"set_address","","Device address",702,[[]]],[3,"BuffStatus","","Buffer status register. A bit set here indicates that a …",null,null],[11,"to_bits","","",703,[[]]],[11,"from_bits","","",703,[[],["buffstatus",3]]],[11,"ep15_out","","",703,[[]]],[11,"set_ep15_out","","",703,[[]]],[11,"ep15_in","","",703,[[]]],[11,"set_ep15_in","","",703,[[]]],[11,"ep14_out","","",703,[[]]],[11,"set_ep14_out","","",703,[[]]],[11,"ep14_in","","",703,[[]]],[11,"set_ep14_in","","",703,[[]]],[11,"ep13_out","","",703,[[]]],[11,"set_ep13_out","","",703,[[]]],[11,"ep13_in","","",703,[[]]],[11,"set_ep13_in","","",703,[[]]],[11,"ep12_out","","",703,[[]]],[11,"set_ep12_out","","",703,[[]]],[11,"ep12_in","","",703,[[]]],[11,"set_ep12_in","","",703,[[]]],[11,"ep11_out","","",703,[[]]],[11,"set_ep11_out","","",703,[[]]],[11,"ep11_in","","",703,[[]]],[11,"set_ep11_in","","",703,[[]]],[11,"ep10_out","","",703,[[]]],[11,"set_ep10_out","","",703,[[]]],[11,"ep10_in","","",703,[[]]],[11,"set_ep10_in","","",703,[[]]],[11,"ep9_out","","",703,[[]]],[11,"set_ep9_out","","",703,[[]]],[11,"ep9_in","","",703,[[]]],[11,"set_ep9_in","","",703,[[]]],[11,"ep8_out","","",703,[[]]],[11,"set_ep8_out","","",703,[[]]],[11,"ep8_in","","",703,[[]]],[11,"set_ep8_in","","",703,[[]]],[11,"ep7_out","","",703,[[]]],[11,"set_ep7_out","","",703,[[]]],[11,"ep7_in","","",703,[[]]],[11,"set_ep7_in","","",703,[[]]],[11,"ep6_out","","",703,[[]]],[11,"set_ep6_out","","",703,[[]]],[11,"ep6_in","","",703,[[]]],[11,"set_ep6_in","","",703,[[]]],[11,"ep5_out","","",703,[[]]],[11,"set_ep5_out","","",703,[[]]],[11,"ep5_in","","",703,[[]]],[11,"set_ep5_in","","",703,[[]]],[11,"ep4_out","","",703,[[]]],[11,"set_ep4_out","","",703,[[]]],[11,"ep4_in","","",703,[[]]],[11,"set_ep4_in","","",703,[[]]],[11,"ep3_out","","",703,[[]]],[11,"set_ep3_out","","",703,[[]]],[11,"ep3_in","","",703,[[]]],[11,"set_ep3_in","","",703,[[]]],[11,"ep2_out","","",703,[[]]],[11,"set_ep2_out","","",703,[[]]],[11,"ep2_in","","",703,[[]]],[11,"set_ep2_in","","",703,[[]]],[11,"ep1_out","","",703,[[]]],[11,"set_ep1_out","","",703,[[]]],[11,"ep1_in","","",703,[[]]],[11,"set_ep1_in","","",703,[[]]],[11,"ep0_out","","",703,[[]]],[11,"set_ep0_out","","",703,[[]]],[11,"ep0_in","","",703,[[]]],[11,"set_ep0_in","","",703,[[]]],[3,"SofWr","","Set the SOF (Start of Frame) frame number in the host …",null,null],[11,"to_bits","","",704,[[]]],[11,"from_bits","","",704,[[],["sofwr",3]]],[11,"count","","",704,[[]]],[11,"set_count","","",704,[[]]],[3,"EpAbortDone","","Device only: Used in conjunction with <code>EP_ABORT</code>. Set once …",null,null],[11,"to_bits","","",705,[[]]],[11,"from_bits","","",705,[[],["epabortdone",3]]],[11,"ep15_out","","",705,[[]]],[11,"set_ep15_out","","",705,[[]]],[11,"ep15_in","","",705,[[]]],[11,"set_ep15_in","","",705,[[]]],[11,"ep14_out","","",705,[[]]],[11,"set_ep14_out","","",705,[[]]],[11,"ep14_in","","",705,[[]]],[11,"set_ep14_in","","",705,[[]]],[11,"ep13_out","","",705,[[]]],[11,"set_ep13_out","","",705,[[]]],[11,"ep13_in","","",705,[[]]],[11,"set_ep13_in","","",705,[[]]],[11,"ep12_out","","",705,[[]]],[11,"set_ep12_out","","",705,[[]]],[11,"ep12_in","","",705,[[]]],[11,"set_ep12_in","","",705,[[]]],[11,"ep11_out","","",705,[[]]],[11,"set_ep11_out","","",705,[[]]],[11,"ep11_in","","",705,[[]]],[11,"set_ep11_in","","",705,[[]]],[11,"ep10_out","","",705,[[]]],[11,"set_ep10_out","","",705,[[]]],[11,"ep10_in","","",705,[[]]],[11,"set_ep10_in","","",705,[[]]],[11,"ep9_out","","",705,[[]]],[11,"set_ep9_out","","",705,[[]]],[11,"ep9_in","","",705,[[]]],[11,"set_ep9_in","","",705,[[]]],[11,"ep8_out","","",705,[[]]],[11,"set_ep8_out","","",705,[[]]],[11,"ep8_in","","",705,[[]]],[11,"set_ep8_in","","",705,[[]]],[11,"ep7_out","","",705,[[]]],[11,"set_ep7_out","","",705,[[]]],[11,"ep7_in","","",705,[[]]],[11,"set_ep7_in","","",705,[[]]],[11,"ep6_out","","",705,[[]]],[11,"set_ep6_out","","",705,[[]]],[11,"ep6_in","","",705,[[]]],[11,"set_ep6_in","","",705,[[]]],[11,"ep5_out","","",705,[[]]],[11,"set_ep5_out","","",705,[[]]],[11,"ep5_in","","",705,[[]]],[11,"set_ep5_in","","",705,[[]]],[11,"ep4_out","","",705,[[]]],[11,"set_ep4_out","","",705,[[]]],[11,"ep4_in","","",705,[[]]],[11,"set_ep4_in","","",705,[[]]],[11,"ep3_out","","",705,[[]]],[11,"set_ep3_out","","",705,[[]]],[11,"ep3_in","","",705,[[]]],[11,"set_ep3_in","","",705,[[]]],[11,"ep2_out","","",705,[[]]],[11,"set_ep2_out","","",705,[[]]],[11,"ep2_in","","",705,[[]]],[11,"set_ep2_in","","",705,[[]]],[11,"ep1_out","","",705,[[]]],[11,"set_ep1_out","","",705,[[]]],[11,"ep1_in","","",705,[[]]],[11,"set_ep1_in","","",705,[[]]],[11,"ep0_out","","",705,[[]]],[11,"set_ep0_out","","",705,[[]]],[11,"ep0_in","","",705,[[]]],[11,"set_ep0_in","","",705,[[]]],[3,"UsbphyDirect","","This register allows for direct control of the USB phy. …",null,null],[11,"to_bits","","",706,[[]]],[11,"from_bits","","",706,[[],["usbphydirect",3]]],[11,"dm_ovv","","DM over voltage",706,[[]]],[11,"set_dm_ovv","","DM over voltage",706,[[]]],[11,"dp_ovv","","DP over voltage",706,[[]]],[11,"set_dp_ovv","","DP over voltage",706,[[]]],[11,"dm_ovcn","","DM overcurrent",706,[[]]],[11,"set_dm_ovcn","","DM overcurrent",706,[[]]],[11,"dp_ovcn","","DP overcurrent",706,[[]]],[11,"set_dp_ovcn","","DP overcurrent",706,[[]]],[11,"rx_dm","","DPM pin state",706,[[]]],[11,"set_rx_dm","","DPM pin state",706,[[]]],[11,"rx_dp","","DPP pin state",706,[[]]],[11,"set_rx_dp","","DPP pin state",706,[[]]],[11,"rx_dd","","Differential RX",706,[[]]],[11,"set_rx_dd","","Differential RX",706,[[]]],[11,"tx_diffmode","","TX_DIFFMODE=0: Single ended mode TX_DIFFMODE=1: …",706,[[]]],[11,"set_tx_diffmode","","TX_DIFFMODE=0: Single ended mode TX_DIFFMODE=1: …",706,[[]]],[11,"tx_fsslew","","TX_FSSLEW=0: Low speed slew rate TX_FSSLEW=1: Full speed …",706,[[]]],[11,"set_tx_fsslew","","TX_FSSLEW=0: Low speed slew rate TX_FSSLEW=1: Full speed …",706,[[]]],[11,"tx_pd","","TX power down override (if override enable is set). 1 = …",706,[[]]],[11,"set_tx_pd","","TX power down override (if override enable is set). 1 = …",706,[[]]],[11,"rx_pd","","RX power down override (if override enable is set). 1 = …",706,[[]]],[11,"set_rx_pd","","RX power down override (if override enable is set). 1 = …",706,[[]]],[11,"tx_dm","","Output data. TX_DIFFMODE=1, Ignored TX_DIFFMODE=0, Drives …",706,[[]]],[11,"set_tx_dm","","Output data. TX_DIFFMODE=1, Ignored TX_DIFFMODE=0, Drives …",706,[[]]],[11,"tx_dp","","Output data. If TX_DIFFMODE=1, Drives DPP/DPM diff pair. …",706,[[]]],[11,"set_tx_dp","","Output data. If TX_DIFFMODE=1, Drives DPP/DPM diff pair. …",706,[[]]],[11,"tx_dm_oe","","Output enable. If TX_DIFFMODE=1, Ignored. If …",706,[[]]],[11,"set_tx_dm_oe","","Output enable. If TX_DIFFMODE=1, Ignored. If …",706,[[]]],[11,"tx_dp_oe","","Output enable. If TX_DIFFMODE=1, OE for DPP/DPM diff …",706,[[]]],[11,"set_tx_dp_oe","","Output enable. If TX_DIFFMODE=1, OE for DPP/DPM diff …",706,[[]]],[11,"dm_pulldn_en","","DM pull down enable",706,[[]]],[11,"set_dm_pulldn_en","","DM pull down enable",706,[[]]],[11,"dm_pullup_en","","DM pull up enable",706,[[]]],[11,"set_dm_pullup_en","","DM pull up enable",706,[[]]],[11,"dm_pullup_hisel","","Enable the second DM pull up resistor. 0 - Pull = Rpu2; 1 …",706,[[]]],[11,"set_dm_pullup_hisel","","Enable the second DM pull up resistor. 0 - Pull = Rpu2; 1 …",706,[[]]],[11,"dp_pulldn_en","","DP pull down enable",706,[[]]],[11,"set_dp_pulldn_en","","DP pull down enable",706,[[]]],[11,"dp_pullup_en","","DP pull up enable",706,[[]]],[11,"set_dp_pullup_en","","DP pull up enable",706,[[]]],[11,"dp_pullup_hisel","","Enable the second DP pull up resistor. 0 - Pull = Rpu2; 1 …",706,[[]]],[11,"set_dp_pullup_hisel","","Enable the second DP pull up resistor. 0 - Pull = Rpu2; 1 …",706,[[]]],[3,"AddrEndp6","","Interrupt endpoint 6. Only valid for HOST mode.",null,null],[11,"to_bits","","",707,[[]]],[11,"from_bits","","",707,[[],["addrendp6",3]]],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",707,[[]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",707,[[]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",707,[[]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",707,[[]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",707,[[]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",707,[[]]],[11,"address","","Device address",707,[[]]],[11,"set_address","","Device address",707,[[]]],[3,"BuffCpuShouldHandle","","Which of the double buffers should be handled. Only valid …",null,null],[11,"to_bits","","",708,[[]]],[11,"from_bits","","",708,[[],["buffcpushouldhandle",3]]],[11,"ep15_out","","",708,[[]]],[11,"set_ep15_out","","",708,[[]]],[11,"ep15_in","","",708,[[]]],[11,"set_ep15_in","","",708,[[]]],[11,"ep14_out","","",708,[[]]],[11,"set_ep14_out","","",708,[[]]],[11,"ep14_in","","",708,[[]]],[11,"set_ep14_in","","",708,[[]]],[11,"ep13_out","","",708,[[]]],[11,"set_ep13_out","","",708,[[]]],[11,"ep13_in","","",708,[[]]],[11,"set_ep13_in","","",708,[[]]],[11,"ep12_out","","",708,[[]]],[11,"set_ep12_out","","",708,[[]]],[11,"ep12_in","","",708,[[]]],[11,"set_ep12_in","","",708,[[]]],[11,"ep11_out","","",708,[[]]],[11,"set_ep11_out","","",708,[[]]],[11,"ep11_in","","",708,[[]]],[11,"set_ep11_in","","",708,[[]]],[11,"ep10_out","","",708,[[]]],[11,"set_ep10_out","","",708,[[]]],[11,"ep10_in","","",708,[[]]],[11,"set_ep10_in","","",708,[[]]],[11,"ep9_out","","",708,[[]]],[11,"set_ep9_out","","",708,[[]]],[11,"ep9_in","","",708,[[]]],[11,"set_ep9_in","","",708,[[]]],[11,"ep8_out","","",708,[[]]],[11,"set_ep8_out","","",708,[[]]],[11,"ep8_in","","",708,[[]]],[11,"set_ep8_in","","",708,[[]]],[11,"ep7_out","","",708,[[]]],[11,"set_ep7_out","","",708,[[]]],[11,"ep7_in","","",708,[[]]],[11,"set_ep7_in","","",708,[[]]],[11,"ep6_out","","",708,[[]]],[11,"set_ep6_out","","",708,[[]]],[11,"ep6_in","","",708,[[]]],[11,"set_ep6_in","","",708,[[]]],[11,"ep5_out","","",708,[[]]],[11,"set_ep5_out","","",708,[[]]],[11,"ep5_in","","",708,[[]]],[11,"set_ep5_in","","",708,[[]]],[11,"ep4_out","","",708,[[]]],[11,"set_ep4_out","","",708,[[]]],[11,"ep4_in","","",708,[[]]],[11,"set_ep4_in","","",708,[[]]],[11,"ep3_out","","",708,[[]]],[11,"set_ep3_out","","",708,[[]]],[11,"ep3_in","","",708,[[]]],[11,"set_ep3_in","","",708,[[]]],[11,"ep2_out","","",708,[[]]],[11,"set_ep2_out","","",708,[[]]],[11,"ep2_in","","",708,[[]]],[11,"set_ep2_in","","",708,[[]]],[11,"ep1_out","","",708,[[]]],[11,"set_ep1_out","","",708,[[]]],[11,"ep1_in","","",708,[[]]],[11,"set_ep1_in","","",708,[[]]],[11,"ep0_out","","",708,[[]]],[11,"set_ep0_out","","",708,[[]]],[11,"ep0_in","","",708,[[]]],[11,"set_ep0_in","","",708,[[]]],[3,"Ints","","Interrupt status after masking & forcing",null,null],[11,"to_bits","","",709,[[]]],[11,"from_bits","","",709,[[],["ints",3]]],[11,"ep_stall_nak","","Raised when any bit in EP_STATUS_STALL_NAK is set. Clear …",709,[[]]],[11,"set_ep_stall_nak","","Raised when any bit in EP_STATUS_STALL_NAK is set. Clear …",709,[[]]],[11,"abort_done","","Raised when any bit in ABORT_DONE is set. Clear by …",709,[[]]],[11,"set_abort_done","","Raised when any bit in ABORT_DONE is set. Clear by …",709,[[]]],[11,"dev_sof","","Set every time the device receives a SOF (Start of Frame) …",709,[[]]],[11,"set_dev_sof","","Set every time the device receives a SOF (Start of Frame) …",709,[[]]],[11,"setup_req","","Device. Source: SIE_STATUS.SETUP_REC",709,[[]]],[11,"set_setup_req","","Device. Source: SIE_STATUS.SETUP_REC",709,[[]]],[11,"dev_resume_from_host","","Set when the device receives a resume from the host. …",709,[[]]],[11,"set_dev_resume_from_host","","Set when the device receives a resume from the host. …",709,[[]]],[11,"dev_suspend","","Set when the device suspend state changes. Cleared by …",709,[[]]],[11,"set_dev_suspend","","Set when the device suspend state changes. Cleared by …",709,[[]]],[11,"dev_conn_dis","","Set when the device connection state changes. Cleared by …",709,[[]]],[11,"set_dev_conn_dis","","Set when the device connection state changes. Cleared by …",709,[[]]],[11,"bus_reset","","Source: SIE_STATUS.BUS_RESET",709,[[]]],[11,"set_bus_reset","","Source: SIE_STATUS.BUS_RESET",709,[[]]],[11,"vbus_detect","","Source: SIE_STATUS.VBUS_DETECT",709,[[]]],[11,"set_vbus_detect","","Source: SIE_STATUS.VBUS_DETECT",709,[[]]],[11,"stall","","Source: SIE_STATUS.STALL_REC",709,[[]]],[11,"set_stall","","Source: SIE_STATUS.STALL_REC",709,[[]]],[11,"error_crc","","Source: SIE_STATUS.CRC_ERROR",709,[[]]],[11,"set_error_crc","","Source: SIE_STATUS.CRC_ERROR",709,[[]]],[11,"error_bit_stuff","","Source: SIE_STATUS.BIT_STUFF_ERROR",709,[[]]],[11,"set_error_bit_stuff","","Source: SIE_STATUS.BIT_STUFF_ERROR",709,[[]]],[11,"error_rx_overflow","","Source: SIE_STATUS.RX_OVERFLOW",709,[[]]],[11,"set_error_rx_overflow","","Source: SIE_STATUS.RX_OVERFLOW",709,[[]]],[11,"error_rx_timeout","","Source: SIE_STATUS.RX_TIMEOUT",709,[[]]],[11,"set_error_rx_timeout","","Source: SIE_STATUS.RX_TIMEOUT",709,[[]]],[11,"error_data_seq","","Source: SIE_STATUS.DATA_SEQ_ERROR",709,[[]]],[11,"set_error_data_seq","","Source: SIE_STATUS.DATA_SEQ_ERROR",709,[[]]],[11,"buff_status","","Raised when any bit in BUFF_STATUS is set. Clear by …",709,[[]]],[11,"set_buff_status","","Raised when any bit in BUFF_STATUS is set. Clear by …",709,[[]]],[11,"trans_complete","","Raised every time SIE_STATUS.TRANS_COMPLETE is set. Clear …",709,[[]]],[11,"set_trans_complete","","Raised every time SIE_STATUS.TRANS_COMPLETE is set. Clear …",709,[[]]],[11,"host_sof","","Host: raised every time the host sends a SOF (Start of …",709,[[]]],[11,"set_host_sof","","Host: raised every time the host sends a SOF (Start of …",709,[[]]],[11,"host_resume","","Host: raised when a device wakes up the host. Cleared by …",709,[[]]],[11,"set_host_resume","","Host: raised when a device wakes up the host. Cleared by …",709,[[]]],[11,"host_conn_dis","","Host: raised when a device is connected or disconnected …",709,[[]]],[11,"set_host_conn_dis","","Host: raised when a device is connected or disconnected …",709,[[]]],[3,"UsbMuxing","","Where to connect the USB controller. Should be to_phy by …",null,null],[11,"to_bits","","",710,[[]]],[11,"from_bits","","",710,[[],["usbmuxing",3]]],[11,"softcon","","",710,[[]]],[11,"set_softcon","","",710,[[]]],[11,"to_digital_pad","","",710,[[]]],[11,"set_to_digital_pad","","",710,[[]]],[11,"to_extphy","","",710,[[]]],[11,"set_to_extphy","","",710,[[]]],[11,"to_phy","","",710,[[]]],[11,"set_to_phy","","",710,[[]]],[3,"IntEpCtrl","","interrupt endpoint control register",null,null],[11,"to_bits","","",711,[[]]],[11,"from_bits","","",711,[[],["intepctrl",3]]],[11,"int_ep_active","","Host: Enable interrupt endpoint 1 -> 15",711,[[]]],[11,"set_int_ep_active","","Host: Enable interrupt endpoint 1 -> 15",711,[[]]],[3,"AddrEndp2","","Interrupt endpoint 2. Only valid for HOST mode.",null,null],[11,"to_bits","","",712,[[]]],[11,"from_bits","","",712,[[],["addrendp2",3]]],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",712,[[]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",712,[[]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",712,[[]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",712,[[]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",712,[[]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",712,[[]]],[11,"address","","Device address",712,[[]]],[11,"set_address","","Device address",712,[[]]],[3,"AddrEndp5","","Interrupt endpoint 5. Only valid for HOST mode.",null,null],[11,"to_bits","","",713,[[]]],[11,"from_bits","","",713,[[],["addrendp5",3]]],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",713,[[]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",713,[[]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",713,[[]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",713,[[]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",713,[[]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",713,[[]]],[11,"address","","Device address",713,[[]]],[11,"set_address","","Device address",713,[[]]],[3,"EpStallArm","","Device: this bit must be set in conjunction with the <code>STALL</code>…",null,null],[11,"to_bits","","",714,[[]]],[11,"from_bits","","",714,[[],["epstallarm",3]]],[11,"ep0_out","","",714,[[]]],[11,"set_ep0_out","","",714,[[]]],[11,"ep0_in","","",714,[[]]],[11,"set_ep0_in","","",714,[[]]],[3,"AddrEndp3","","Interrupt endpoint 3. Only valid for HOST mode.",null,null],[11,"to_bits","","",715,[[]]],[11,"from_bits","","",715,[[],["addrendp3",3]]],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",715,[[]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",715,[[]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",715,[[]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",715,[[]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",715,[[]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",715,[[]]],[11,"address","","Device address",715,[[]]],[11,"set_address","","Device address",715,[[]]],[3,"EpAbort","","Device only: Can be set to ignore the buffer control …",null,null],[11,"to_bits","","",716,[[]]],[11,"from_bits","","",716,[[],["epabort",3]]],[11,"ep15_out","","",716,[[]]],[11,"set_ep15_out","","",716,[[]]],[11,"ep15_in","","",716,[[]]],[11,"set_ep15_in","","",716,[[]]],[11,"ep14_out","","",716,[[]]],[11,"set_ep14_out","","",716,[[]]],[11,"ep14_in","","",716,[[]]],[11,"set_ep14_in","","",716,[[]]],[11,"ep13_out","","",716,[[]]],[11,"set_ep13_out","","",716,[[]]],[11,"ep13_in","","",716,[[]]],[11,"set_ep13_in","","",716,[[]]],[11,"ep12_out","","",716,[[]]],[11,"set_ep12_out","","",716,[[]]],[11,"ep12_in","","",716,[[]]],[11,"set_ep12_in","","",716,[[]]],[11,"ep11_out","","",716,[[]]],[11,"set_ep11_out","","",716,[[]]],[11,"ep11_in","","",716,[[]]],[11,"set_ep11_in","","",716,[[]]],[11,"ep10_out","","",716,[[]]],[11,"set_ep10_out","","",716,[[]]],[11,"ep10_in","","",716,[[]]],[11,"set_ep10_in","","",716,[[]]],[11,"ep9_out","","",716,[[]]],[11,"set_ep9_out","","",716,[[]]],[11,"ep9_in","","",716,[[]]],[11,"set_ep9_in","","",716,[[]]],[11,"ep8_out","","",716,[[]]],[11,"set_ep8_out","","",716,[[]]],[11,"ep8_in","","",716,[[]]],[11,"set_ep8_in","","",716,[[]]],[11,"ep7_out","","",716,[[]]],[11,"set_ep7_out","","",716,[[]]],[11,"ep7_in","","",716,[[]]],[11,"set_ep7_in","","",716,[[]]],[11,"ep6_out","","",716,[[]]],[11,"set_ep6_out","","",716,[[]]],[11,"ep6_in","","",716,[[]]],[11,"set_ep6_in","","",716,[[]]],[11,"ep5_out","","",716,[[]]],[11,"set_ep5_out","","",716,[[]]],[11,"ep5_in","","",716,[[]]],[11,"set_ep5_in","","",716,[[]]],[11,"ep4_out","","",716,[[]]],[11,"set_ep4_out","","",716,[[]]],[11,"ep4_in","","",716,[[]]],[11,"set_ep4_in","","",716,[[]]],[11,"ep3_out","","",716,[[]]],[11,"set_ep3_out","","",716,[[]]],[11,"ep3_in","","",716,[[]]],[11,"set_ep3_in","","",716,[[]]],[11,"ep2_out","","",716,[[]]],[11,"set_ep2_out","","",716,[[]]],[11,"ep2_in","","",716,[[]]],[11,"set_ep2_in","","",716,[[]]],[11,"ep1_out","","",716,[[]]],[11,"set_ep1_out","","",716,[[]]],[11,"ep1_in","","",716,[[]]],[11,"set_ep1_in","","",716,[[]]],[11,"ep0_out","","",716,[[]]],[11,"set_ep0_out","","",716,[[]]],[11,"ep0_in","","",716,[[]]],[11,"set_ep0_in","","",716,[[]]],[3,"UsbphyDirectOverride","","Override enable for each control in usbphy_direct",null,null],[11,"to_bits","","",717,[[]]],[11,"from_bits","","",717,[[],["usbphydirectoverride",3]]],[11,"tx_diffmode_override_en","","",717,[[]]],[11,"set_tx_diffmode_override_en","","",717,[[]]],[11,"dm_pullup_override_en","","",717,[[]]],[11,"set_dm_pullup_override_en","","",717,[[]]],[11,"tx_fsslew_override_en","","",717,[[]]],[11,"set_tx_fsslew_override_en","","",717,[[]]],[11,"tx_pd_override_en","","",717,[[]]],[11,"set_tx_pd_override_en","","",717,[[]]],[11,"rx_pd_override_en","","",717,[[]]],[11,"set_rx_pd_override_en","","",717,[[]]],[11,"tx_dm_override_en","","",717,[[]]],[11,"set_tx_dm_override_en","","",717,[[]]],[11,"tx_dp_override_en","","",717,[[]]],[11,"set_tx_dp_override_en","","",717,[[]]],[11,"tx_dm_oe_override_en","","",717,[[]]],[11,"set_tx_dm_oe_override_en","","",717,[[]]],[11,"tx_dp_oe_override_en","","",717,[[]]],[11,"set_tx_dp_oe_override_en","","",717,[[]]],[11,"dm_pulldn_en_override_en","","",717,[[]]],[11,"set_dm_pulldn_en_override_en","","",717,[[]]],[11,"dp_pulldn_en_override_en","","",717,[[]]],[11,"set_dp_pulldn_en_override_en","","",717,[[]]],[11,"dp_pullup_en_override_en","","",717,[[]]],[11,"set_dp_pullup_en_override_en","","",717,[[]]],[11,"dm_pullup_hisel_override_en","","",717,[[]]],[11,"set_dm_pullup_hisel_override_en","","",717,[[]]],[11,"dp_pullup_hisel_override_en","","",717,[[]]],[11,"set_dp_pullup_hisel_override_en","","",717,[[]]],[3,"SieCtrl","","SIE control register",null,null],[11,"to_bits","","",718,[[]]],[11,"from_bits","","",718,[[],["siectrl",3]]],[11,"ep0_int_stall","","Device: Set bit in EP_STATUS_STALL_NAK when EP0 sends a …",718,[[]]],[11,"set_ep0_int_stall","","Device: Set bit in EP_STATUS_STALL_NAK when EP0 sends a …",718,[[]]],[11,"ep0_double_buf","","Device: EP0 single buffered = 0, double buffered = 1",718,[[]]],[11,"set_ep0_double_buf","","Device: EP0 single buffered = 0, double buffered = 1",718,[[]]],[11,"ep0_int_1buf","","Device: Set bit in BUFF_STATUS for every buffer completed …",718,[[]]],[11,"set_ep0_int_1buf","","Device: Set bit in BUFF_STATUS for every buffer completed …",718,[[]]],[11,"ep0_int_2buf","","Device: Set bit in BUFF_STATUS for every 2 buffers …",718,[[]]],[11,"set_ep0_int_2buf","","Device: Set bit in BUFF_STATUS for every 2 buffers …",718,[[]]],[11,"ep0_int_nak","","Device: Set bit in EP_STATUS_STALL_NAK when EP0 sends a …",718,[[]]],[11,"set_ep0_int_nak","","Device: Set bit in EP_STATUS_STALL_NAK when EP0 sends a …",718,[[]]],[11,"direct_en","","Direct bus drive enable",718,[[]]],[11,"set_direct_en","","Direct bus drive enable",718,[[]]],[11,"direct_dp","","Direct control of DP",718,[[]]],[11,"set_direct_dp","","Direct control of DP",718,[[]]],[11,"direct_dm","","Direct control of DM",718,[[]]],[11,"set_direct_dm","","Direct control of DM",718,[[]]],[11,"transceiver_pd","","Power down bus transceiver",718,[[]]],[11,"set_transceiver_pd","","Power down bus transceiver",718,[[]]],[11,"rpu_opt","","Device: Pull-up strength (0=1K2, 1=2k3)",718,[[]]],[11,"set_rpu_opt","","Device: Pull-up strength (0=1K2, 1=2k3)",718,[[]]],[11,"pullup_en","","Device: Enable pull up resistor",718,[[]]],[11,"set_pullup_en","","Device: Enable pull up resistor",718,[[]]],[11,"pulldown_en","","Host: Enable pull down resistors",718,[[]]],[11,"set_pulldown_en","","Host: Enable pull down resistors",718,[[]]],[11,"reset_bus","","Host: Reset bus",718,[[]]],[11,"set_reset_bus","","Host: Reset bus",718,[[]]],[11,"resume","","Device: Remote wakeup. Device can initiate its own resume …",718,[[]]],[11,"set_resume","","Device: Remote wakeup. Device can initiate its own resume …",718,[[]]],[11,"vbus_en","","Host: Enable VBUS",718,[[]]],[11,"set_vbus_en","","Host: Enable VBUS",718,[[]]],[11,"keep_alive_en","","Host: Enable keep alive packet (for low speed bus)",718,[[]]],[11,"set_keep_alive_en","","Host: Enable keep alive packet (for low speed bus)",718,[[]]],[11,"sof_en","","Host: Enable SOF generation (for full speed bus)",718,[[]]],[11,"set_sof_en","","Host: Enable SOF generation (for full speed bus)",718,[[]]],[11,"sof_sync","","Host: Delay packet(s) until after SOF",718,[[]]],[11,"set_sof_sync","","Host: Delay packet(s) until after SOF",718,[[]]],[11,"preamble_en","","Host: Preable enable for LS device on FS hub",718,[[]]],[11,"set_preamble_en","","Host: Preable enable for LS device on FS hub",718,[[]]],[11,"stop_trans","","Host: Stop transaction",718,[[]]],[11,"set_stop_trans","","Host: Stop transaction",718,[[]]],[11,"receive_data","","Host: Receive transaction (IN to host)",718,[[]]],[11,"set_receive_data","","Host: Receive transaction (IN to host)",718,[[]]],[11,"send_data","","Host: Send transaction (OUT from host)",718,[[]]],[11,"set_send_data","","Host: Send transaction (OUT from host)",718,[[]]],[11,"send_setup","","Host: Send Setup packet",718,[[]]],[11,"set_send_setup","","Host: Send Setup packet",718,[[]]],[11,"start_trans","","Host: Start transaction",718,[[]]],[11,"set_start_trans","","Host: Start transaction",718,[[]]],[3,"AddrEndp9","","Interrupt endpoint 9. Only valid for HOST mode.",null,null],[11,"to_bits","","",719,[[]]],[11,"from_bits","","",719,[[],["addrendp9",3]]],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",719,[[]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",719,[[]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",719,[[]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",719,[[]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",719,[[]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",719,[[]]],[11,"address","","Device address",719,[[]]],[11,"set_address","","Device address",719,[[]]],[3,"AddrEndp1","","Interrupt endpoint 1. Only valid for HOST mode.",null,null],[11,"to_bits","","",720,[[]]],[11,"from_bits","","",720,[[],["addrendp1",3]]],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",720,[[]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",720,[[]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",720,[[]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",720,[[]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",720,[[]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",720,[[]]],[11,"address","","Device address",720,[[]]],[11,"set_address","","Device address",720,[[]]],[3,"Intf","","Interrupt Force",null,null],[11,"to_bits","","",721,[[]]],[11,"from_bits","","",721,[[],["intf",3]]],[11,"ep_stall_nak","","Raised when any bit in EP_STATUS_STALL_NAK is set. Clear …",721,[[]]],[11,"set_ep_stall_nak","","Raised when any bit in EP_STATUS_STALL_NAK is set. Clear …",721,[[]]],[11,"abort_done","","Raised when any bit in ABORT_DONE is set. Clear by …",721,[[]]],[11,"set_abort_done","","Raised when any bit in ABORT_DONE is set. Clear by …",721,[[]]],[11,"dev_sof","","Set every time the device receives a SOF (Start of Frame) …",721,[[]]],[11,"set_dev_sof","","Set every time the device receives a SOF (Start of Frame) …",721,[[]]],[11,"setup_req","","Device. Source: SIE_STATUS.SETUP_REC",721,[[]]],[11,"set_setup_req","","Device. Source: SIE_STATUS.SETUP_REC",721,[[]]],[11,"dev_resume_from_host","","Set when the device receives a resume from the host. …",721,[[]]],[11,"set_dev_resume_from_host","","Set when the device receives a resume from the host. …",721,[[]]],[11,"dev_suspend","","Set when the device suspend state changes. Cleared by …",721,[[]]],[11,"set_dev_suspend","","Set when the device suspend state changes. Cleared by …",721,[[]]],[11,"dev_conn_dis","","Set when the device connection state changes. Cleared by …",721,[[]]],[11,"set_dev_conn_dis","","Set when the device connection state changes. Cleared by …",721,[[]]],[11,"bus_reset","","Source: SIE_STATUS.BUS_RESET",721,[[]]],[11,"set_bus_reset","","Source: SIE_STATUS.BUS_RESET",721,[[]]],[11,"vbus_detect","","Source: SIE_STATUS.VBUS_DETECT",721,[[]]],[11,"set_vbus_detect","","Source: SIE_STATUS.VBUS_DETECT",721,[[]]],[11,"stall","","Source: SIE_STATUS.STALL_REC",721,[[]]],[11,"set_stall","","Source: SIE_STATUS.STALL_REC",721,[[]]],[11,"error_crc","","Source: SIE_STATUS.CRC_ERROR",721,[[]]],[11,"set_error_crc","","Source: SIE_STATUS.CRC_ERROR",721,[[]]],[11,"error_bit_stuff","","Source: SIE_STATUS.BIT_STUFF_ERROR",721,[[]]],[11,"set_error_bit_stuff","","Source: SIE_STATUS.BIT_STUFF_ERROR",721,[[]]],[11,"error_rx_overflow","","Source: SIE_STATUS.RX_OVERFLOW",721,[[]]],[11,"set_error_rx_overflow","","Source: SIE_STATUS.RX_OVERFLOW",721,[[]]],[11,"error_rx_timeout","","Source: SIE_STATUS.RX_TIMEOUT",721,[[]]],[11,"set_error_rx_timeout","","Source: SIE_STATUS.RX_TIMEOUT",721,[[]]],[11,"error_data_seq","","Source: SIE_STATUS.DATA_SEQ_ERROR",721,[[]]],[11,"set_error_data_seq","","Source: SIE_STATUS.DATA_SEQ_ERROR",721,[[]]],[11,"buff_status","","Raised when any bit in BUFF_STATUS is set. Clear by …",721,[[]]],[11,"set_buff_status","","Raised when any bit in BUFF_STATUS is set. Clear by …",721,[[]]],[11,"trans_complete","","Raised every time SIE_STATUS.TRANS_COMPLETE is set. Clear …",721,[[]]],[11,"set_trans_complete","","Raised every time SIE_STATUS.TRANS_COMPLETE is set. Clear …",721,[[]]],[11,"host_sof","","Host: raised every time the host sends a SOF (Start of …",721,[[]]],[11,"set_host_sof","","Host: raised every time the host sends a SOF (Start of …",721,[[]]],[11,"host_resume","","Host: raised when a device wakes up the host. Cleared by …",721,[[]]],[11,"set_host_resume","","Host: raised when a device wakes up the host. Cleared by …",721,[[]]],[11,"host_conn_dis","","Host: raised when a device is connected or disconnected …",721,[[]]],[11,"set_host_conn_dis","","Host: raised when a device is connected or disconnected …",721,[[]]],[3,"AddrEndp12","","Interrupt endpoint 12. Only valid for HOST mode.",null,null],[11,"to_bits","","",722,[[]]],[11,"from_bits","","",722,[[],["addrendp12",3]]],[11,"intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",722,[[]]],[11,"set_intep_preamble","","Interrupt EP requires preamble (is a low speed device on …",722,[[]]],[11,"intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",722,[[]]],[11,"set_intep_dir","","Direction of the interrupt endpoint. In=0, Out=1",722,[[]]],[11,"endpoint","","Endpoint number of the interrupt endpoint",722,[[]]],[11,"set_endpoint","","Endpoint number of the interrupt endpoint",722,[[]]],[11,"address","","Device address",722,[[]]],[11,"set_address","","Device address",722,[[]]],[3,"UsbctrlRegs","rp2040_pac::usbctrl_regs","USB FS/LS controller device registers",null,null],[11,"from_ptr","","",723,[[]]],[11,"addr_endp","","Device address and endpoint control",723,[[],[["rw",3],["reg",3],["addrendp",3]]]],[11,"addr_endp1","","Interrupt endpoint 1. Only valid for HOST mode.",723,[[],[["reg",3],["addrendp1",3],["rw",3]]]],[11,"addr_endp2","","Interrupt endpoint 2. Only valid for HOST mode.",723,[[],[["reg",3],["addrendp2",3],["rw",3]]]],[11,"addr_endp3","","Interrupt endpoint 3. Only valid for HOST mode.",723,[[],[["addrendp3",3],["rw",3],["reg",3]]]],[11,"addr_endp4","","Interrupt endpoint 4. Only valid for HOST mode.",723,[[],[["reg",3],["addrendp4",3],["rw",3]]]],[11,"addr_endp5","","Interrupt endpoint 5. Only valid for HOST mode.",723,[[],[["reg",3],["addrendp5",3],["rw",3]]]],[11,"addr_endp6","","Interrupt endpoint 6. Only valid for HOST mode.",723,[[],[["addrendp6",3],["reg",3],["rw",3]]]],[11,"addr_endp7","","Interrupt endpoint 7. Only valid for HOST mode.",723,[[],[["addrendp7",3],["rw",3],["reg",3]]]],[11,"addr_endp8","","Interrupt endpoint 8. Only valid for HOST mode.",723,[[],[["addrendp8",3],["reg",3],["rw",3]]]],[11,"addr_endp9","","Interrupt endpoint 9. Only valid for HOST mode.",723,[[],[["reg",3],["addrendp9",3],["rw",3]]]],[11,"addr_endp10","","Interrupt endpoint 10. Only valid for HOST mode.",723,[[],[["reg",3],["addrendp10",3],["rw",3]]]],[11,"addr_endp11","","Interrupt endpoint 11. Only valid for HOST mode.",723,[[],[["reg",3],["addrendp11",3],["rw",3]]]],[11,"addr_endp12","","Interrupt endpoint 12. Only valid for HOST mode.",723,[[],[["rw",3],["addrendp12",3],["reg",3]]]],[11,"addr_endp13","","Interrupt endpoint 13. Only valid for HOST mode.",723,[[],[["reg",3],["addrendp13",3],["rw",3]]]],[11,"addr_endp14","","Interrupt endpoint 14. Only valid for HOST mode.",723,[[],[["reg",3],["addrendp14",3],["rw",3]]]],[11,"addr_endp15","","Interrupt endpoint 15. Only valid for HOST mode.",723,[[],[["addrendp15",3],["rw",3],["reg",3]]]],[11,"main_ctrl","","Main control register",723,[[],[["mainctrl",3],["reg",3],["rw",3]]]],[11,"sof_wr","","Set the SOF (Start of Frame) frame number in the host …",723,[[],[["sofwr",3],["rw",3],["reg",3]]]],[11,"sof_rd","","Read the last SOF (Start of Frame) frame number seen. In …",723,[[],[["sofrd",3],["reg",3],["rw",3]]]],[11,"sie_ctrl","","SIE control register",723,[[],[["reg",3],["rw",3],["siectrl",3]]]],[11,"sie_status","","SIE status register",723,[[],[["siestatus",3],["reg",3],["rw",3]]]],[11,"int_ep_ctrl","","interrupt endpoint control register",723,[[],[["reg",3],["intepctrl",3],["rw",3]]]],[11,"buff_status","","Buffer status register. A bit set here indicates that a …",723,[[],[["buffstatus",3],["rw",3],["reg",3]]]],[11,"buff_cpu_should_handle","","Which of the double buffers should be handled. Only valid …",723,[[],[["reg",3],["buffcpushouldhandle",3],["rw",3]]]],[11,"ep_abort","","Device only: Can be set to ignore the buffer control …",723,[[],[["epabort",3],["rw",3],["reg",3]]]],[11,"ep_abort_done","","Device only: Used in conjunction with <code>EP_ABORT</code>. Set once …",723,[[],[["epabortdone",3],["rw",3],["reg",3]]]],[11,"ep_stall_arm","","Device: this bit must be set in conjunction with the <code>STALL</code>…",723,[[],[["reg",3],["rw",3],["epstallarm",3]]]],[11,"nak_poll","","Used by the host controller. Sets the wait time in …",723,[[],[["rw",3],["nakpoll",3],["reg",3]]]],[11,"ep_status_stall_nak","","Device: bits are set when the <code>IRQ_ON_NAK</code> or <code>IRQ_ON_STALL</code> …",723,[[],[["epstatusstallnak",3],["rw",3],["reg",3]]]],[11,"usb_muxing","","Where to connect the USB controller. Should be to_phy by …",723,[[],[["usbmuxing",3],["rw",3],["reg",3]]]],[11,"usb_pwr","","Overrides for the power signals in the event that the …",723,[[],[["reg",3],["rw",3],["usbpwr",3]]]],[11,"usbphy_direct","","This register allows for direct control of the USB phy. …",723,[[],[["reg",3],["usbphydirect",3],["rw",3]]]],[11,"usbphy_direct_override","","Override enable for each control in usbphy_direct",723,[[],[["usbphydirectoverride",3],["reg",3],["rw",3]]]],[11,"usbphy_trim","","Used to adjust trim values of USB phy pull down resistors.",723,[[],[["reg",3],["usbphytrim",3],["rw",3]]]],[11,"intr","","Raw Interrupts",723,[[],[["intr",3],["reg",3],["rw",3]]]],[11,"inte","","Interrupt Enable",723,[[],[["reg",3],["rw",3],["inte",3]]]],[11,"intf","","Interrupt Force",723,[[],[["intf",3],["reg",3],["rw",3]]]],[11,"ints","","Interrupt status after masking & forcing",723,[[],[["reg",3],["ints",3],["rw",3]]]],[0,"vreg_and_chip_reset","rp2040_pac","",null,null],[0,"fields","rp2040_pac::vreg_and_chip_reset","",null,null],[3,"ChipReset","rp2040_pac::vreg_and_chip_reset::fields","Chip reset control and status",null,null],[11,"to_bits","","",724,[[]]],[11,"from_bits","","",724,[[],["chipreset",3]]],[11,"psm_restart_flag","","This is set by psm_restart from the debugger. Its purpose …",724,[[]]],[11,"set_psm_restart_flag","","This is set by psm_restart from the debugger. Its purpose …",724,[[]]],[11,"had_psm_restart","","Last reset was from the debug port",724,[[]]],[11,"set_had_psm_restart","","Last reset was from the debug port",724,[[]]],[11,"had_run","","Last reset was from the RUN pin",724,[[]]],[11,"set_had_run","","Last reset was from the RUN pin",724,[[]]],[11,"had_por","","Last reset was from the power-on reset or brown-out …",724,[[]]],[11,"set_had_por","","Last reset was from the power-on reset or brown-out …",724,[[]]],[3,"Vreg","","Voltage regulator control and status",null,null],[11,"to_bits","","",725,[[]]],[11,"from_bits","","",725,[[],["vreg",3]]],[11,"rok","","regulation status 0=not in regulation, 1=in regulation",725,[[]]],[11,"set_rok","","regulation status 0=not in regulation, 1=in regulation",725,[[]]],[11,"vsel","","output voltage select 0000 to 0101 - 0.80V 0110 - 0.85V …",725,[[]]],[11,"set_vsel","","output voltage select 0000 to 0101 - 0.80V 0110 - 0.85V …",725,[[]]],[11,"hiz","","high impedance mode select 0=not in high impedance mode, …",725,[[]]],[11,"set_hiz","","high impedance mode select 0=not in high impedance mode, …",725,[[]]],[11,"en","","enable 0=not enabled, 1=enabled",725,[[]]],[11,"set_en","","enable 0=not enabled, 1=enabled",725,[[]]],[3,"Bod","","brown-out detection control",null,null],[11,"to_bits","","",726,[[]]],[11,"from_bits","","",726,[[],["bod",3]]],[11,"vsel","","threshold select 0000 - 0.473V 0001 - 0.516V 0010 - …",726,[[]]],[11,"set_vsel","","threshold select 0000 - 0.473V 0001 - 0.516V 0010 - …",726,[[]]],[11,"en","","enable 0=not enabled, 1=enabled",726,[[]]],[11,"set_en","","enable 0=not enabled, 1=enabled",726,[[]]],[3,"VregAndChipReset","rp2040_pac::vreg_and_chip_reset","control and status for on-chip voltage regulator and chip …",null,null],[11,"from_ptr","","",727,[[]]],[11,"vreg","","Voltage regulator control and status",727,[[],[["reg",3],["vreg",3],["rw",3]]]],[11,"bod","","brown-out detection control",727,[[],[["rw",3],["bod",3],["reg",3]]]],[11,"chip_reset","","Chip reset control and status",727,[[],[["chipreset",3],["rw",3],["reg",3]]]],[0,"watchdog","rp2040_pac","",null,null],[0,"fields","rp2040_pac::watchdog","",null,null],[3,"Tick","rp2040_pac::watchdog::fields","Controls the tick generator",null,null],[11,"to_bits","","",728,[[]]],[11,"from_bits","","",728,[[],["tick",3]]],[11,"count","","Count down timer: the remaining number clk_tick cycles …",728,[[]]],[11,"set_count","","Count down timer: the remaining number clk_tick cycles …",728,[[]]],[11,"running","","Is the tick generator running?",728,[[]]],[11,"set_running","","Is the tick generator running?",728,[[]]],[11,"enable","","start / stop tick generation",728,[[]]],[11,"set_enable","","start / stop tick generation",728,[[]]],[11,"cycles","","Total number of clk_tick cycles before the next tick.",728,[[]]],[11,"set_cycles","","Total number of clk_tick cycles before the next tick.",728,[[]]],[3,"Reason","","Logs the reason for the last reset. Both bits are zero …",null,null],[11,"to_bits","","",729,[[]]],[11,"from_bits","","",729,[[],["reason",3]]],[11,"force","","",729,[[]]],[11,"set_force","","",729,[[]]],[11,"timer","","",729,[[]]],[11,"set_timer","","",729,[[]]],[3,"Ctrl","","Watchdog control The rst_wdsel register determines which …",null,null],[11,"to_bits","","",730,[[]]],[11,"from_bits","","",730,[[],["ctrl",3]]],[11,"trigger","","Trigger a watchdog reset",730,[[]]],[11,"set_trigger","","Trigger a watchdog reset",730,[[]]],[11,"enable","","When not enabled the watchdog timer is paused",730,[[]]],[11,"set_enable","","When not enabled the watchdog timer is paused",730,[[]]],[11,"pause_dbg1","","Pause the watchdog timer when processor 1 is in debug mode",730,[[]]],[11,"set_pause_dbg1","","Pause the watchdog timer when processor 1 is in debug mode",730,[[]]],[11,"pause_dbg0","","Pause the watchdog timer when processor 0 is in debug mode",730,[[]]],[11,"set_pause_dbg0","","Pause the watchdog timer when processor 0 is in debug mode",730,[[]]],[11,"pause_jtag","","Pause the watchdog timer when JTAG is accessing the bus …",730,[[]]],[11,"set_pause_jtag","","Pause the watchdog timer when JTAG is accessing the bus …",730,[[]]],[11,"time","","Indicates the number of ticks / 2 (see errata RP2040-E1) …",730,[[]]],[11,"set_time","","Indicates the number of ticks / 2 (see errata RP2040-E1) …",730,[[]]],[3,"Load","","Load the watchdog timer. The maximum setting is 0xffffff …",null,null],[11,"to_bits","","",731,[[]]],[11,"from_bits","","",731,[[],["load",3]]],[11,"load","","",731,[[]]],[11,"set_load","","",731,[[]]],[3,"Watchdog","rp2040_pac::watchdog","",null,null],[11,"from_ptr","","",732,[[]]],[11,"ctrl","","Watchdog control The rst_wdsel register determines which …",732,[[],[["reg",3],["ctrl",3],["rw",3]]]],[11,"load","","Load the watchdog timer. The maximum setting is 0xffffff …",732,[[],[["load",3],["reg",3],["rw",3]]]],[11,"reason","","Logs the reason for the last reset. Both bits are zero …",732,[[],[["reason",3],["reg",3],["rw",3]]]],[11,"scratch0","","Scratch register. Information persists through soft reset …",732,[[],[["reg",3],["rw",3]]]],[11,"scratch1","","Scratch register. Information persists through soft reset …",732,[[],[["reg",3],["rw",3]]]],[11,"scratch2","","Scratch register. Information persists through soft reset …",732,[[],[["reg",3],["rw",3]]]],[11,"scratch3","","Scratch register. Information persists through soft reset …",732,[[],[["reg",3],["rw",3]]]],[11,"scratch4","","Scratch register. Information persists through soft reset …",732,[[],[["reg",3],["rw",3]]]],[11,"scratch5","","Scratch register. Information persists through soft reset …",732,[[],[["reg",3],["rw",3]]]],[11,"scratch6","","Scratch register. Information persists through soft reset …",732,[[],[["reg",3],["rw",3]]]],[11,"scratch7","","Scratch register. Information persists through soft reset …",732,[[],[["reg",3],["rw",3]]]],[11,"tick","","Controls the tick generator",732,[[],[["tick",3],["reg",3],["rw",3]]]],[0,"xip_ctrl","rp2040_pac","",null,null],[0,"fields","rp2040_pac::xip_ctrl","",null,null],[3,"Flush","rp2040_pac::xip_ctrl::fields","Cache Flush control",null,null],[11,"to_bits","","",733,[[]]],[11,"from_bits","","",733,[[],["flush",3]]],[11,"flush","","Write 1 to flush the cache. This clears the tag memory, …",733,[[]]],[11,"set_flush","","Write 1 to flush the cache. This clears the tag memory, …",733,[[]]],[3,"StreamAddr","","FIFO stream address",null,null],[11,"to_bits","","",734,[[]]],[11,"from_bits","","",734,[[],["streamaddr",3]]],[11,"stream_addr","","The address of the next word to be streamed from flash to …",734,[[]]],[11,"set_stream_addr","","The address of the next word to be streamed from flash to …",734,[[]]],[3,"Stat","","Cache Status",null,null],[11,"to_bits","","",735,[[]]],[11,"from_bits","","",735,[[],["stat",3]]],[11,"fifo_full","","When 1, indicates the XIP streaming FIFO is completely …",735,[[]]],[11,"set_fifo_full","","When 1, indicates the XIP streaming FIFO is completely …",735,[[]]],[11,"fifo_empty","","When 1, indicates the XIP streaming FIFO is completely …",735,[[]]],[11,"set_fifo_empty","","When 1, indicates the XIP streaming FIFO is completely …",735,[[]]],[11,"flush_ready","","Reads as 0 while a cache flush is in progress, and 1 …",735,[[]]],[11,"set_flush_ready","","Reads as 0 while a cache flush is in progress, and 1 …",735,[[]]],[3,"Ctrl","","Cache control",null,null],[11,"to_bits","","",736,[[]]],[11,"from_bits","","",736,[[],["ctrl",3]]],[11,"power_down","","When 1, the cache memories are powered down. They retain …",736,[[]]],[11,"set_power_down","","When 1, the cache memories are powered down. They retain …",736,[[]]],[11,"err_badwrite","","When 1, writes to any alias other than 0x0 (caching, …",736,[[]]],[11,"set_err_badwrite","","When 1, writes to any alias other than 0x0 (caching, …",736,[[]]],[11,"en","","When 1, enable the cache. When the cache is disabled, all …",736,[[]]],[11,"set_en","","When 1, enable the cache. When the cache is disabled, all …",736,[[]]],[3,"StreamCtr","","FIFO stream control",null,null],[11,"to_bits","","",737,[[]]],[11,"from_bits","","",737,[[],["streamctr",3]]],[11,"stream_ctr","","Write a nonzero value to start a streaming read. This …",737,[[]]],[11,"set_stream_ctr","","Write a nonzero value to start a streaming read. This …",737,[[]]],[3,"XipCtrl","rp2040_pac::xip_ctrl","QSPI flash execute-in-place block",null,null],[11,"from_ptr","","",738,[[]]],[11,"ctrl","","Cache control",738,[[],[["reg",3],["ctrl",3],["rw",3]]]],[11,"flush","","Cache Flush control",738,[[],[["flush",3],["reg",3],["rw",3]]]],[11,"stat","","Cache Status",738,[[],[["reg",3],["stat",3],["rw",3]]]],[11,"ctr_hit","","Cache Hit counter A 32 bit saturating counter that …",738,[[],[["reg",3],["rw",3]]]],[11,"ctr_acc","","Cache Access counter A 32 bit saturating counter that …",738,[[],[["reg",3],["rw",3]]]],[11,"stream_addr","","FIFO stream address",738,[[],[["reg",3],["streamaddr",3],["rw",3]]]],[11,"stream_ctr","","FIFO stream control",738,[[],[["reg",3],["rw",3],["streamctr",3]]]],[11,"stream_fifo","","FIFO stream data Streamed data is buffered here, for …",738,[[],[["r",3],["reg",3]]]],[0,"xip_ssi","rp2040_pac","",null,null],[0,"fields","rp2040_pac::xip_ssi","",null,null],[3,"Msticr","rp2040_pac::xip_ssi::fields","Multi-master interrupt clear",null,null],[11,"to_bits","","",739,[[]]],[11,"from_bits","","",739,[[],["msticr",3]]],[11,"msticr","","Clear-on-read multi-master contention interrupt",739,[[]]],[11,"set_msticr","","Clear-on-read multi-master contention interrupt",739,[[]]],[3,"Ctrlr0","","Control register 0",null,null],[11,"to_bits","","",740,[[]]],[11,"from_bits","","",740,[[],["ctrlr0",3]]],[11,"sste","","Slave select toggle enable",740,[[]]],[11,"set_sste","","Slave select toggle enable",740,[[]]],[11,"spi_frf","","SPI frame format",740,[[],["ctrlr0spifrf",3]]],[11,"set_spi_frf","","SPI frame format",740,[[["ctrlr0spifrf",3]]]],[11,"dfs_32","","Data frame size in 32b transfer mode Value of n -> n+1 …",740,[[]]],[11,"set_dfs_32","","Data frame size in 32b transfer mode Value of n -> n+1 …",740,[[]]],[11,"cfs","","Control frame size Value of n -> n+1 clocks per frame.",740,[[]]],[11,"set_cfs","","Control frame size Value of n -> n+1 clocks per frame.",740,[[]]],[11,"srl","","Shift register loop (test mode)",740,[[]]],[11,"set_srl","","Shift register loop (test mode)",740,[[]]],[11,"slv_oe","","Slave output enable",740,[[]]],[11,"set_slv_oe","","Slave output enable",740,[[]]],[11,"tmod","","Transfer mode",740,[[],["ctrlr0tmod",3]]],[11,"set_tmod","","Transfer mode",740,[[["ctrlr0tmod",3]]]],[11,"scpol","","Serial clock polarity",740,[[]]],[11,"set_scpol","","Serial clock polarity",740,[[]]],[11,"scph","","Serial clock phase",740,[[]]],[11,"set_scph","","Serial clock phase",740,[[]]],[11,"frf","","Frame format",740,[[]]],[11,"set_frf","","Frame format",740,[[]]],[11,"dfs","","Data frame size",740,[[]]],[11,"set_dfs","","Data frame size",740,[[]]],[3,"SpiCtrlr0","","SPI control",null,null],[11,"to_bits","","",741,[[]]],[11,"from_bits","","",741,[[],["spictrlr0",3]]],[11,"xip_cmd","","SPI Command to send in XIP mode (INST_L = 8-bit) or to …",741,[[]]],[11,"set_xip_cmd","","SPI Command to send in XIP mode (INST_L = 8-bit) or to …",741,[[]]],[11,"spi_rxds_en","","Read data strobe enable",741,[[]]],[11,"set_spi_rxds_en","","Read data strobe enable",741,[[]]],[11,"inst_ddr_en","","Instruction DDR transfer enable",741,[[]]],[11,"set_inst_ddr_en","","Instruction DDR transfer enable",741,[[]]],[11,"spi_ddr_en","","SPI DDR transfer enable",741,[[]]],[11,"set_spi_ddr_en","","SPI DDR transfer enable",741,[[]]],[11,"wait_cycles","","Wait cycles between control frame transmit and data …",741,[[]]],[11,"set_wait_cycles","","Wait cycles between control frame transmit and data …",741,[[]]],[11,"inst_l","","Instruction length (0/4/8/16b)",741,[[],["spictrlr0instl",3]]],[11,"set_inst_l","","Instruction length (0/4/8/16b)",741,[[["spictrlr0instl",3]]]],[11,"addr_l","","Address length (0b-60b in 4b increments)",741,[[]]],[11,"set_addr_l","","Address length (0b-60b in 4b increments)",741,[[]]],[11,"trans_type","","Address and instruction transfer format",741,[[],["spictrlr0transtype",3]]],[11,"set_trans_type","","Address and instruction transfer format",741,[[["spictrlr0transtype",3]]]],[3,"Rxflr","","RX FIFO level",null,null],[11,"to_bits","","",742,[[]]],[11,"from_bits","","",742,[[],["rxflr",3]]],[11,"rxtfl","","Receive FIFO level",742,[[]]],[11,"set_rxtfl","","Receive FIFO level",742,[[]]],[3,"Baudr","","Baud rate",null,null],[11,"to_bits","","",743,[[]]],[11,"from_bits","","",743,[[],["baudr",3]]],[11,"sckdv","","SSI clock divider",743,[[]]],[11,"set_sckdv","","SSI clock divider",743,[[]]],[3,"Txflr","","TX FIFO level",null,null],[11,"to_bits","","",744,[[]]],[11,"from_bits","","",744,[[],["txflr",3]]],[11,"tftfl","","Transmit FIFO level",744,[[]]],[11,"set_tftfl","","Transmit FIFO level",744,[[]]],[3,"Imr","","Interrupt mask",null,null],[11,"to_bits","","",745,[[]]],[11,"from_bits","","",745,[[],["imr",3]]],[11,"mstim","","Multi-master contention interrupt mask",745,[[]]],[11,"set_mstim","","Multi-master contention interrupt mask",745,[[]]],[11,"rxfim","","Receive FIFO full interrupt mask",745,[[]]],[11,"set_rxfim","","Receive FIFO full interrupt mask",745,[[]]],[11,"rxoim","","Receive FIFO overflow interrupt mask",745,[[]]],[11,"set_rxoim","","Receive FIFO overflow interrupt mask",745,[[]]],[11,"rxuim","","Receive FIFO underflow interrupt mask",745,[[]]],[11,"set_rxuim","","Receive FIFO underflow interrupt mask",745,[[]]],[11,"txoim","","Transmit FIFO overflow interrupt mask",745,[[]]],[11,"set_txoim","","Transmit FIFO overflow interrupt mask",745,[[]]],[11,"txeim","","Transmit FIFO empty interrupt mask",745,[[]]],[11,"set_txeim","","Transmit FIFO empty interrupt mask",745,[[]]],[3,"Isr","","Interrupt status",null,null],[11,"to_bits","","",746,[[]]],[11,"from_bits","","",746,[[],["isr",3]]],[11,"mstis","","Multi-master contention interrupt status",746,[[]]],[11,"set_mstis","","Multi-master contention interrupt status",746,[[]]],[11,"rxfis","","Receive FIFO full interrupt status",746,[[]]],[11,"set_rxfis","","Receive FIFO full interrupt status",746,[[]]],[11,"rxois","","Receive FIFO overflow interrupt status",746,[[]]],[11,"set_rxois","","Receive FIFO overflow interrupt status",746,[[]]],[11,"rxuis","","Receive FIFO underflow interrupt status",746,[[]]],[11,"set_rxuis","","Receive FIFO underflow interrupt status",746,[[]]],[11,"txois","","Transmit FIFO overflow interrupt status",746,[[]]],[11,"set_txois","","Transmit FIFO overflow interrupt status",746,[[]]],[11,"txeis","","Transmit FIFO empty interrupt status",746,[[]]],[11,"set_txeis","","Transmit FIFO empty interrupt status",746,[[]]],[3,"Dmacr","","DMA control",null,null],[11,"to_bits","","",747,[[]]],[11,"from_bits","","",747,[[],["dmacr",3]]],[11,"tdmae","","Transmit DMA enable",747,[[]]],[11,"set_tdmae","","Transmit DMA enable",747,[[]]],[11,"rdmae","","Receive DMA enable",747,[[]]],[11,"set_rdmae","","Receive DMA enable",747,[[]]],[3,"Icr","","Interrupt clear",null,null],[11,"to_bits","","",748,[[]]],[11,"from_bits","","",748,[[],["icr",3]]],[11,"icr","","Clear-on-read all active interrupts",748,[[]]],[11,"set_icr","","Clear-on-read all active interrupts",748,[[]]],[3,"Idr","","Identification register",null,null],[11,"to_bits","","",749,[[]]],[11,"from_bits","","",749,[[],["idr",3]]],[11,"idcode","","Peripheral dentification code",749,[[]]],[11,"set_idcode","","Peripheral dentification code",749,[[]]],[3,"SsiVersionId","","Version ID",null,null],[11,"to_bits","","",750,[[]]],[11,"from_bits","","",750,[[],["ssiversionid",3]]],[11,"ssi_comp_version","","SNPS component version (format X.YY)",750,[[]]],[11,"set_ssi_comp_version","","SNPS component version (format X.YY)",750,[[]]],[3,"Txoicr","","TX FIFO overflow interrupt clear",null,null],[11,"to_bits","","",751,[[]]],[11,"from_bits","","",751,[[],["txoicr",3]]],[11,"txoicr","","Clear-on-read transmit FIFO overflow interrupt",751,[[]]],[11,"set_txoicr","","Clear-on-read transmit FIFO overflow interrupt",751,[[]]],[3,"Dmatdlr","","DMA TX data level",null,null],[11,"to_bits","","",752,[[]]],[11,"from_bits","","",752,[[],["dmatdlr",3]]],[11,"dmatdl","","Transmit data watermark level",752,[[]]],[11,"set_dmatdl","","Transmit data watermark level",752,[[]]],[3,"Dmardlr","","DMA RX data level",null,null],[11,"to_bits","","",753,[[]]],[11,"from_bits","","",753,[[],["dmardlr",3]]],[11,"dmardl","","Receive data watermark level (DMARDLR+1)",753,[[]]],[11,"set_dmardl","","Receive data watermark level (DMARDLR+1)",753,[[]]],[3,"Ssienr","","SSI Enable",null,null],[11,"to_bits","","",754,[[]]],[11,"from_bits","","",754,[[],["ssienr",3]]],[11,"ssi_en","","SSI enable",754,[[]]],[11,"set_ssi_en","","SSI enable",754,[[]]],[3,"Risr","","Raw interrupt status",null,null],[11,"to_bits","","",755,[[]]],[11,"from_bits","","",755,[[],["risr",3]]],[11,"mstir","","Multi-master contention raw interrupt status",755,[[]]],[11,"set_mstir","","Multi-master contention raw interrupt status",755,[[]]],[11,"rxfir","","Receive FIFO full raw interrupt status",755,[[]]],[11,"set_rxfir","","Receive FIFO full raw interrupt status",755,[[]]],[11,"rxoir","","Receive FIFO overflow raw interrupt status",755,[[]]],[11,"set_rxoir","","Receive FIFO overflow raw interrupt status",755,[[]]],[11,"rxuir","","Receive FIFO underflow raw interrupt status",755,[[]]],[11,"set_rxuir","","Receive FIFO underflow raw interrupt status",755,[[]]],[11,"txoir","","Transmit FIFO overflow raw interrupt status",755,[[]]],[11,"set_txoir","","Transmit FIFO overflow raw interrupt status",755,[[]]],[11,"txeir","","Transmit FIFO empty raw interrupt status",755,[[]]],[11,"set_txeir","","Transmit FIFO empty raw interrupt status",755,[[]]],[3,"TxdDriveEdge","","TX drive edge",null,null],[11,"to_bits","","",756,[[]]],[11,"from_bits","","",756,[[],["txddriveedge",3]]],[11,"tde","","TXD drive edge",756,[[]]],[11,"set_tde","","TXD drive edge",756,[[]]],[3,"RxSampleDly","","RX sample delay",null,null],[11,"to_bits","","",757,[[]]],[11,"from_bits","","",757,[[],["rxsampledly",3]]],[11,"rsd","","RXD sample delay (in SCLK cycles)",757,[[]]],[11,"set_rsd","","RXD sample delay (in SCLK cycles)",757,[[]]],[3,"Dr0","","Data Register 0 (of 36)",null,null],[11,"to_bits","","",758,[[]]],[11,"from_bits","","",758,[[],["dr0",3]]],[11,"dr","","First data register of 36",758,[[]]],[11,"set_dr","","First data register of 36",758,[[]]],[3,"Rxoicr","","RX FIFO overflow interrupt clear",null,null],[11,"to_bits","","",759,[[]]],[11,"from_bits","","",759,[[],["rxoicr",3]]],[11,"rxoicr","","Clear-on-read receive FIFO overflow interrupt",759,[[]]],[11,"set_rxoicr","","Clear-on-read receive FIFO overflow interrupt",759,[[]]],[3,"Mwcr","","Microwire Control",null,null],[11,"to_bits","","",760,[[]]],[11,"from_bits","","",760,[[],["mwcr",3]]],[11,"mhs","","Microwire handshaking",760,[[]]],[11,"set_mhs","","Microwire handshaking",760,[[]]],[11,"mdd","","Microwire control",760,[[]]],[11,"set_mdd","","Microwire control",760,[[]]],[11,"mwmod","","Microwire transfer mode",760,[[]]],[11,"set_mwmod","","Microwire transfer mode",760,[[]]],[3,"Rxuicr","","RX FIFO underflow interrupt clear",null,null],[11,"to_bits","","",761,[[]]],[11,"from_bits","","",761,[[],["rxuicr",3]]],[11,"rxuicr","","Clear-on-read receive FIFO underflow interrupt",761,[[]]],[11,"set_rxuicr","","Clear-on-read receive FIFO underflow interrupt",761,[[]]],[3,"Ctrlr1","","Master Control register 1",null,null],[11,"to_bits","","",762,[[]]],[11,"from_bits","","",762,[[],["ctrlr1",3]]],[11,"ndf","","Number of data frames",762,[[]]],[11,"set_ndf","","Number of data frames",762,[[]]],[3,"Txftlr","","TX FIFO threshold level",null,null],[11,"to_bits","","",763,[[]]],[11,"from_bits","","",763,[[],["txftlr",3]]],[11,"tft","","Transmit FIFO threshold",763,[[]]],[11,"set_tft","","Transmit FIFO threshold",763,[[]]],[3,"Ser","","Slave enable",null,null],[11,"to_bits","","",764,[[]]],[11,"from_bits","","",764,[[],["ser",3]]],[11,"ser","","For each bit: 0 -> slave not selected 1 -> slave selected",764,[[]]],[11,"set_ser","","For each bit: 0 -> slave not selected 1 -> slave selected",764,[[]]],[3,"Sr","","Status register",null,null],[11,"to_bits","","",765,[[]]],[11,"from_bits","","",765,[[],["sr",3]]],[11,"dcol","","Data collision error",765,[[]]],[11,"set_dcol","","Data collision error",765,[[]]],[11,"txe","","Transmission error",765,[[]]],[11,"set_txe","","Transmission error",765,[[]]],[11,"rff","","Receive FIFO full",765,[[]]],[11,"set_rff","","Receive FIFO full",765,[[]]],[11,"rfne","","Receive FIFO not empty",765,[[]]],[11,"set_rfne","","Receive FIFO not empty",765,[[]]],[11,"tfe","","Transmit FIFO empty",765,[[]]],[11,"set_tfe","","Transmit FIFO empty",765,[[]]],[11,"tfnf","","Transmit FIFO not full",765,[[]]],[11,"set_tfnf","","Transmit FIFO not full",765,[[]]],[11,"busy","","SSI busy flag",765,[[]]],[11,"set_busy","","SSI busy flag",765,[[]]],[3,"Rxftlr","","RX FIFO threshold level",null,null],[11,"to_bits","","",766,[[]]],[11,"from_bits","","",766,[[],["rxftlr",3]]],[11,"rft","","Receive FIFO threshold",766,[[]]],[11,"set_rft","","Receive FIFO threshold",766,[[]]],[0,"values","rp2040_pac::xip_ssi","",null,null],[3,"SpiCtrlr0TransType","rp2040_pac::xip_ssi::values","SPI control",null,null],[11,"to_bits","","",767,[[]]],[11,"from_bits","","",767,[[],["spictrlr0transtype",3]]],[18,"_1C1A","","Command and address both in standard SPI frame format",767,null],[18,"_1C2A","","Command in standard SPI format, address in format …",767,null],[18,"_2C2A","","Command and address both in format specified by FRF (e.g. …",767,null],[3,"SpiCtrlr0InstL","","SPI control",null,null],[11,"to_bits","","",768,[[]]],[11,"from_bits","","",768,[[],["spictrlr0instl",3]]],[18,"NONE","","No instruction",768,null],[18,"_4B","","4-bit instruction",768,null],[18,"_8B","","8-bit instruction",768,null],[18,"_16B","","16-bit instruction",768,null],[3,"Ctrlr0Tmod","","Control register 0",null,null],[11,"to_bits","","",769,[[]]],[11,"from_bits","","",769,[[],["ctrlr0tmod",3]]],[18,"TX_AND_RX","","Both transmit and receive",769,null],[18,"TX_ONLY","","Transmit only (not for FRF == 0, standard SPI mode)",769,null],[18,"RX_ONLY","","Receive only (not for FRF == 0, standard SPI mode)",769,null],[18,"EEPROM_READ","","EEPROM read mode (TX then RX; RX starts after control …",769,null],[3,"Ctrlr0SpiFrf","","Control register 0",null,null],[11,"to_bits","","",770,[[]]],[11,"from_bits","","",770,[[],["ctrlr0spifrf",3]]],[18,"STD","","Standard 1-bit SPI frame format; 1 bit per SCK, …",770,null],[18,"DUAL","","Dual-SPI frame format; two bits per SCK, half-duplex",770,null],[18,"QUAD","","Quad-SPI frame format; four bits per SCK, half-duplex",770,null],[3,"XipSsi","rp2040_pac::xip_ssi","DW_apb_ssi has the following features: * APB interface …",null,null],[11,"from_ptr","","",771,[[]]],[11,"ctrlr0","","Control register 0",771,[[],[["reg",3],["rw",3],["ctrlr0",3]]]],[11,"ctrlr1","","Master Control register 1",771,[[],[["reg",3],["rw",3],["ctrlr1",3]]]],[11,"ssienr","","SSI Enable",771,[[],[["reg",3],["ssienr",3],["rw",3]]]],[11,"mwcr","","Microwire Control",771,[[],[["mwcr",3],["rw",3],["reg",3]]]],[11,"ser","","Slave enable",771,[[],[["reg",3],["rw",3],["ser",3]]]],[11,"baudr","","Baud rate",771,[[],[["reg",3],["baudr",3],["rw",3]]]],[11,"txftlr","","TX FIFO threshold level",771,[[],[["reg",3],["txftlr",3],["rw",3]]]],[11,"rxftlr","","RX FIFO threshold level",771,[[],[["rw",3],["reg",3],["rxftlr",3]]]],[11,"txflr","","TX FIFO level",771,[[],[["reg",3],["rw",3],["txflr",3]]]],[11,"rxflr","","RX FIFO level",771,[[],[["reg",3],["rxflr",3],["rw",3]]]],[11,"sr","","Status register",771,[[],[["reg",3],["sr",3],["rw",3]]]],[11,"imr","","Interrupt mask",771,[[],[["imr",3],["reg",3],["rw",3]]]],[11,"isr","","Interrupt status",771,[[],[["reg",3],["isr",3],["rw",3]]]],[11,"risr","","Raw interrupt status",771,[[],[["rw",3],["reg",3],["risr",3]]]],[11,"txoicr","","TX FIFO overflow interrupt clear",771,[[],[["txoicr",3],["rw",3],["reg",3]]]],[11,"rxoicr","","RX FIFO overflow interrupt clear",771,[[],[["rw",3],["rxoicr",3],["reg",3]]]],[11,"rxuicr","","RX FIFO underflow interrupt clear",771,[[],[["rw",3],["reg",3],["rxuicr",3]]]],[11,"msticr","","Multi-master interrupt clear",771,[[],[["reg",3],["rw",3],["msticr",3]]]],[11,"icr","","Interrupt clear",771,[[],[["icr",3],["reg",3],["rw",3]]]],[11,"dmacr","","DMA control",771,[[],[["dmacr",3],["rw",3],["reg",3]]]],[11,"dmatdlr","","DMA TX data level",771,[[],[["reg",3],["dmatdlr",3],["rw",3]]]],[11,"dmardlr","","DMA RX data level",771,[[],[["reg",3],["rw",3],["dmardlr",3]]]],[11,"idr","","Identification register",771,[[],[["reg",3],["rw",3],["idr",3]]]],[11,"ssi_version_id","","Version ID",771,[[],[["ssiversionid",3],["reg",3],["rw",3]]]],[11,"dr0","","Data Register 0 (of 36)",771,[[],[["dr0",3],["reg",3],["rw",3]]]],[11,"rx_sample_dly","","RX sample delay",771,[[],[["rxsampledly",3],["rw",3],["reg",3]]]],[11,"spi_ctrlr0","","SPI control",771,[[],[["rw",3],["spictrlr0",3],["reg",3]]]],[11,"txd_drive_edge","","TX drive edge",771,[[],[["reg",3],["rw",3],["txddriveedge",3]]]],[0,"xosc","rp2040_pac","",null,null],[0,"fields","rp2040_pac::xosc","",null,null],[3,"Status","rp2040_pac::xosc::fields","Crystal Oscillator Status",null,null],[11,"to_bits","","",772,[[]]],[11,"from_bits","","",772,[[],["status",3]]],[11,"stable","","Oscillator is running and stable",772,[[]]],[11,"set_stable","","Oscillator is running and stable",772,[[]]],[11,"badwrite","","An invalid value has been written to CTRL_ENABLE or …",772,[[]]],[11,"set_badwrite","","An invalid value has been written to CTRL_ENABLE or …",772,[[]]],[11,"enabled","","Oscillator is enabled but not necessarily running and …",772,[[]]],[11,"set_enabled","","Oscillator is enabled but not necessarily running and …",772,[[]]],[11,"freq_range","","The current frequency range setting, always reads 0",772,[[],["statusfreqrange",3]]],[11,"set_freq_range","","The current frequency range setting, always reads 0",772,[[["statusfreqrange",3]]]],[3,"Count","","A down counter running at the xosc frequency which counts …",null,null],[11,"to_bits","","",773,[[]]],[11,"from_bits","","",773,[[],["count",3]]],[11,"count","","",773,[[]]],[11,"set_count","","",773,[[]]],[3,"Ctrl","","Crystal Oscillator Control",null,null],[11,"to_bits","","",774,[[]]],[11,"from_bits","","",774,[[],["ctrl",3]]],[11,"enable","","On power-up this field is initialised to DISABLE and the …",774,[[],["ctrlenable",3]]],[11,"set_enable","","On power-up this field is initialised to DISABLE and the …",774,[[["ctrlenable",3]]]],[11,"freq_range","","Frequency range. This resets to 0xAA0 and cannot be …",774,[[],["ctrlfreqrange",3]]],[11,"set_freq_range","","Frequency range. This resets to 0xAA0 and cannot be …",774,[[["ctrlfreqrange",3]]]],[3,"Startup","","Controls the startup delay",null,null],[11,"to_bits","","",775,[[]]],[11,"from_bits","","",775,[[],["startup",3]]],[11,"x4","","Multiplies the startup_delay by 4. This is of little …",775,[[]]],[11,"set_x4","","Multiplies the startup_delay by 4. This is of little …",775,[[]]],[11,"delay","","in multiples of 256*xtal_period",775,[[]]],[11,"set_delay","","in multiples of 256*xtal_period",775,[[]]],[0,"values","rp2040_pac::xosc","",null,null],[3,"CtrlFreqRange","rp2040_pac::xosc::values","Crystal Oscillator Control",null,null],[11,"to_bits","","",776,[[]]],[11,"from_bits","","",776,[[],["ctrlfreqrange",3]]],[18,"_1_15MHZ","","",776,null],[18,"RESERVED_1","","",776,null],[18,"RESERVED_2","","",776,null],[18,"RESERVED_3","","",776,null],[3,"CtrlEnable","","Crystal Oscillator Control",null,null],[11,"to_bits","","",777,[[]]],[11,"from_bits","","",777,[[],["ctrlenable",3]]],[18,"DISABLE","","",777,null],[18,"ENABLE","","",777,null],[3,"StatusFreqRange","","Crystal Oscillator Status",null,null],[11,"to_bits","","",778,[[]]],[11,"from_bits","","",778,[[],["statusfreqrange",3]]],[18,"_1_15MHZ","","",778,null],[18,"RESERVED_1","","",778,null],[18,"RESERVED_2","","",778,null],[18,"RESERVED_3","","",778,null],[3,"Xosc","rp2040_pac::xosc","Controls the crystal oscillator",null,null],[11,"from_ptr","","",779,[[]]],[11,"ctrl","","Crystal Oscillator Control",779,[[],[["rw",3],["ctrl",3],["reg",3]]]],[11,"status","","Crystal Oscillator Status",779,[[],[["reg",3],["status",3],["rw",3]]]],[11,"dormant","","Crystal Oscillator pause control This is used to save …",779,[[],[["reg",3],["rw",3]]]],[11,"startup","","Controls the startup delay",779,[[],[["reg",3],["rw",3],["startup",3]]]],[11,"count","","A down counter running at the xosc frequency which counts …",779,[[],[["reg",3],["count",3],["rw",3]]]],[17,"NVIC_PRIO_BITS","rp2040_pac","Number available in the NVIC for configuring priority",null,null],[3,"CorePeripherals","","Core peripherals",null,null],[12,"CBP","","Cache and branch predictor maintenance operations. Not …",780,null],[12,"CPUID","","CPUID",780,null],[12,"DCB","","Debug Control Block",780,null],[12,"DWT","","Data Watchpoint and Trace unit",780,null],[12,"FPB","","Flash Patch and Breakpoint unit. Not available on Armv6-M.",780,null],[12,"FPU","","Floating Point Unit.",780,null],[12,"ICB","","Implementation Control Block.",780,null],[12,"ITM","","Instrumentation Trace Macrocell. Not available on Armv6-M …",780,null],[12,"MPU","","Memory Protection Unit",780,null],[12,"NVIC","","Nested Vector Interrupt Controller",780,null],[12,"SAU","","Security Attribution Unit",780,null],[12,"SCB","","System Control Block",780,null],[12,"SYST","","SysTick: System Timer",780,null],[12,"TPIU","","Trace Port Interface Unit. Not available on Armv6-M.",780,null],[3,"CBP","","Cache and branch predictor maintenance operations",null,null],[3,"CPUID","","CPUID",null,null],[3,"DCB","","Debug Control Block",null,null],[3,"DWT","","Data Watchpoint and Trace unit",null,null],[3,"FPB","","Flash Patch and Breakpoint unit",null,null],[3,"ITM","","Instrumentation Trace Macrocell",null,null],[3,"MPU","","Memory Protection Unit",null,null],[3,"NVIC","","Nested Vector Interrupt Controller",null,null],[3,"SCB","","System Control Block",null,null],[3,"SYST","","SysTick: System Timer",null,null],[3,"TPIU","","Trace Port Interface Unit",null,null],[4,"Interrupt","","Enumeration of all the interrupts.",null,null],[13,"TIMER_IRQ_0","","0 - TIMER_IRQ_0",781,null],[13,"TIMER_IRQ_1","","1 - TIMER_IRQ_1",781,null],[13,"TIMER_IRQ_2","","2 - TIMER_IRQ_2",781,null],[13,"TIMER_IRQ_3","","3 - TIMER_IRQ_3",781,null],[13,"PWM_IRQ_WRAP","","4 - PWM_IRQ_WRAP",781,null],[13,"USBCTRL_IRQ","","5 - USBCTRL_IRQ",781,null],[13,"XIP_IRQ","","6 - XIP_IRQ",781,null],[13,"PIO0_IRQ_0","","7 - PIO0_IRQ_0",781,null],[13,"PIO0_IRQ_1","","8 - PIO0_IRQ_1",781,null],[13,"PIO1_IRQ_0","","9 - PIO1_IRQ_0",781,null],[13,"PIO1_IRQ_1","","10 - PIO1_IRQ_1",781,null],[13,"DMA_IRQ_0","","11 - DMA_IRQ_0",781,null],[13,"DMA_IRQ_1","","12 - DMA_IRQ_1",781,null],[13,"IO_IRQ_BANK0","","13 - IO_IRQ_BANK0",781,null],[13,"IO_IRQ_QSPI","","14 - IO_IRQ_QSPI",781,null],[13,"SIO_IRQ_PROC0","","15 - SIO_IRQ_PROC0",781,null],[13,"SIO_IRQ_PROC1","","16 - SIO_IRQ_PROC1",781,null],[13,"CLOCKS_IRQ","","17 - CLOCKS_IRQ",781,null],[13,"SPI0_IRQ","","18 - SPI0_IRQ",781,null],[13,"SPI1_IRQ","","19 - SPI1_IRQ",781,null],[13,"UART0_IRQ","","20 - UART0_IRQ",781,null],[13,"UART1_IRQ","","21 - UART1_IRQ",781,null],[13,"ADC_IRQ_FIFO","","22 - ADC_IRQ_FIFO",781,null],[13,"I2C0_IRQ","","23 - I2C0_IRQ",781,null],[13,"I2C1_IRQ","","24 - I2C1_IRQ",781,null],[13,"RTC_IRQ","","25 - RTC_IRQ",781,null],[17,"PADS_QSPI","","",null,null],[17,"RTC","","Register block to control RTC",null,null],[17,"UART1","","",null,null],[17,"PLL_USB","","",null,null],[17,"SIO","","Single-cycle IO block Provides core-local and inter-core …",null,null],[17,"I2C1","","",null,null],[17,"SYSCFG","","Register block for various chip control signals",null,null],[17,"PLL_SYS","","",null,null],[17,"ADC","","Control and data interface to SAR ADC",null,null],[17,"PIO1","","",null,null],[17,"DMA","","DMA with separate read and write masters",null,null],[17,"XOSC","","Controls the crystal oscillator",null,null],[17,"CLOCKS","","",null,null],[17,"SPI1","","",null,null],[17,"SYSINFO","","",null,null],[17,"ROSC","","",null,null],[17,"TBMAN","","Testbench manager. Allows the programmer to know what …",null,null],[17,"BUSCTRL","","Register block for busfabric control signals and …",null,null],[17,"PPB","","",null,null],[17,"UART0","","",null,null],[17,"PSM","","",null,null],[17,"IO_QSPI","","",null,null],[17,"I2C0","","DW_apb_i2c address block",null,null],[17,"XIP_CTRL","","QSPI flash execute-in-place block",null,null],[17,"XIP_SSI","","DW_apb_ssi has the following features: * APB interface …",null,null],[17,"IO_BANK0","","",null,null],[17,"RESETS","","",null,null],[17,"PIO0","","Programmable IO block",null,null],[17,"PWM","","Simple PWM",null,null],[17,"WATCHDOG","","",null,null],[17,"PADS_BANK0","","",null,null],[17,"TIMER","","Controls time and alarms time is a 64 bit value …",null,null],[17,"USBCTRL_REGS","","USB FS/LS controller device registers",null,null],[17,"VREG_AND_CHIP_RESET","","control and status for on-chip voltage regulator and chip …",null,null],[17,"SPI0","","",null,null],[11,"from","rp2040_pac::adc::fields","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","rp2040_pac::adc","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","rp2040_pac::busctrl::fields","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","rp2040_pac::busctrl","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","rp2040_pac::clocks::fields","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","rp2040_pac::clocks::values","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","rp2040_pac::clocks","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","rp2040_pac::dma::fields","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","rp2040_pac::dma::values","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"into","","",112,[[]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","rp2040_pac::dma","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"into","","",115,[[]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","rp2040_pac::generic","",782,[[]]],[11,"borrow","","",782,[[]]],[11,"borrow_mut","","",782,[[]]],[11,"try_from","","",782,[[],["result",4]]],[11,"into","","",782,[[]]],[11,"try_into","","",782,[[],["result",4]]],[11,"type_id","","",782,[[],["typeid",3]]],[11,"from","","",783,[[]]],[11,"borrow","","",783,[[]]],[11,"borrow_mut","","",783,[[]]],[11,"try_from","","",783,[[],["result",4]]],[11,"into","","",783,[[]]],[11,"try_into","","",783,[[],["result",4]]],[11,"type_id","","",783,[[],["typeid",3]]],[11,"from","","",784,[[]]],[11,"borrow","","",784,[[]]],[11,"borrow_mut","","",784,[[]]],[11,"try_from","","",784,[[],["result",4]]],[11,"into","","",784,[[]]],[11,"try_into","","",784,[[],["result",4]]],[11,"type_id","","",784,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"into","","",116,[[]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","rp2040_pac::i2c0::fields","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"into","","",117,[[]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"into","","",118,[[]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"into","","",119,[[]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"into","","",120,[[]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"into","","",121,[[]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"into","","",122,[[]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"into","","",123,[[]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"into","","",124,[[]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"into","","",125,[[]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"into","","",126,[[]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"into","","",127,[[]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"into","","",128,[[]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"into","","",129,[[]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"into","","",130,[[]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"into","","",131,[[]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"into","","",132,[[]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"into","","",133,[[]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"into","","",134,[[]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"into","","",135,[[]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"into","","",136,[[]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"into","","",137,[[]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"into","","",138,[[]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"into","","",139,[[]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"into","","",140,[[]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"into","","",141,[[]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"into","","",142,[[]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"into","","",143,[[]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"into","","",144,[[]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"into","","",145,[[]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"into","","",146,[[]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"into","","",147,[[]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"into","","",148,[[]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"into","","",149,[[]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"into","","",150,[[]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"into","","",151,[[]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"into","","",152,[[]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"into","","",153,[[]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"into","","",154,[[]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"into","","",155,[[]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"into","","",156,[[]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"into","","",157,[[]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"into","","",158,[[]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from","rp2040_pac::i2c0::values","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"into","","",159,[[]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"into","","",160,[[]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"into","","",161,[[]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"into","","",162,[[]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"from","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"into","","",163,[[]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"from","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"into","","",164,[[]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"into","","",165,[[]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"into","","",166,[[]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"from","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"into","","",167,[[]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"into","","",168,[[]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"into","","",169,[[]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"into","","",170,[[]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"into","","",171,[[]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"from","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"into","","",172,[[]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"from","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"into","","",173,[[]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"from","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"into","","",174,[[]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"from","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"into","","",175,[[]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"from","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"into","","",176,[[]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"from","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"into","","",177,[[]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"from","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"into","","",178,[[]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"from","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"into","","",179,[[]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"from","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"into","","",180,[[]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"from","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"into","","",181,[[]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"from","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"into","","",182,[[]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"from","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"into","","",183,[[]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"from","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"into","","",184,[[]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"from","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"into","","",185,[[]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"from","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"into","","",186,[[]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"from","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"into","","",187,[[]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"from","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"into","","",188,[[]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"from","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"into","","",189,[[]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"from","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"into","","",190,[[]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"from","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"into","","",191,[[]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"from","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"into","","",192,[[]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"from","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"into","","",193,[[]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"from","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"into","","",194,[[]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"from","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"into","","",195,[[]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"from","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"into","","",196,[[]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"from","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"into","","",197,[[]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"from","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"into","","",198,[[]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"from","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"into","","",199,[[]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"from","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"into","","",200,[[]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"from","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"into","","",201,[[]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"from","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"into","","",202,[[]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"from","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"into","","",203,[[]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"from","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"into","","",204,[[]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"from","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"into","","",205,[[]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"from","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"into","","",206,[[]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"from","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"into","","",207,[[]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"from","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"into","","",208,[[]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"from","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"into","","",209,[[]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"from","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"into","","",210,[[]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"from","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"into","","",211,[[]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"from","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"into","","",212,[[]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"from","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"into","","",213,[[]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"from","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"into","","",214,[[]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"from","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"into","","",215,[[]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"from","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"into","","",216,[[]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"from","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"into","","",217,[[]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"from","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"into","","",218,[[]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"from","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"into","","",219,[[]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"from","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"into","","",220,[[]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"from","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"into","","",221,[[]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"from","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"into","","",222,[[]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"from","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"into","","",223,[[]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"from","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"into","","",224,[[]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"from","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"into","","",225,[[]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"from","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"into","","",226,[[]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"from","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"into","","",227,[[]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"from","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"into","","",228,[[]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"from","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"into","","",229,[[]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"from","","",230,[[]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"into","","",230,[[]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"from","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"into","","",231,[[]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"from","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"into","","",232,[[]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"from","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"into","","",233,[[]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"from","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"into","","",234,[[]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"from","","",235,[[]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"into","","",235,[[]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"from","","",236,[[]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"into","","",236,[[]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"from","","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"into","","",237,[[]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"from","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"into","","",238,[[]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"from","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"into","","",239,[[]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"from","","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"into","","",240,[[]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"from","","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"into","","",241,[[]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"from","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"into","","",242,[[]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"from","","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"into","","",243,[[]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"from","","",244,[[]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"into","","",244,[[]]],[11,"try_into","","",244,[[],["result",4]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"from","","",245,[[]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"into","","",245,[[]]],[11,"try_into","","",245,[[],["result",4]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"from","","",246,[[]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"into","","",246,[[]]],[11,"try_into","","",246,[[],["result",4]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"from","","",247,[[]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"into","","",247,[[]]],[11,"try_into","","",247,[[],["result",4]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"from","","",248,[[]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"into","","",248,[[]]],[11,"try_into","","",248,[[],["result",4]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"from","","",249,[[]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"into","","",249,[[]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"from","rp2040_pac::i2c0","",250,[[]]],[11,"borrow","","",250,[[]]],[11,"borrow_mut","","",250,[[]]],[11,"try_from","","",250,[[],["result",4]]],[11,"into","","",250,[[]]],[11,"try_into","","",250,[[],["result",4]]],[11,"type_id","","",250,[[],["typeid",3]]],[11,"from","rp2040_pac::io::values","",251,[[]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"into","","",251,[[]]],[11,"try_into","","",251,[[],["result",4]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"from","","",252,[[]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"into","","",252,[[]]],[11,"try_into","","",252,[[],["result",4]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"from","","",253,[[]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"into","","",253,[[]]],[11,"try_into","","",253,[[],["result",4]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"from","","",254,[[]]],[11,"borrow","","",254,[[]]],[11,"borrow_mut","","",254,[[]]],[11,"try_from","","",254,[[],["result",4]]],[11,"into","","",254,[[]]],[11,"try_into","","",254,[[],["result",4]]],[11,"type_id","","",254,[[],["typeid",3]]],[11,"from","rp2040_pac::io_bank0::fields","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"into","","",255,[[]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"from","","",256,[[]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"into","","",256,[[]]],[11,"try_into","","",256,[[],["result",4]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"from","","",257,[[]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"into","","",257,[[]]],[11,"try_into","","",257,[[],["result",4]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"from","","",258,[[]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"into","","",258,[[]]],[11,"try_into","","",258,[[],["result",4]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"from","","",259,[[]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"into","","",259,[[]]],[11,"try_into","","",259,[[],["result",4]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"from","","",260,[[]]],[11,"borrow","","",260,[[]]],[11,"borrow_mut","","",260,[[]]],[11,"try_from","","",260,[[],["result",4]]],[11,"into","","",260,[[]]],[11,"try_into","","",260,[[],["result",4]]],[11,"type_id","","",260,[[],["typeid",3]]],[11,"from","","",261,[[]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"into","","",261,[[]]],[11,"try_into","","",261,[[],["result",4]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"from","","",262,[[]]],[11,"borrow","","",262,[[]]],[11,"borrow_mut","","",262,[[]]],[11,"try_from","","",262,[[],["result",4]]],[11,"into","","",262,[[]]],[11,"try_into","","",262,[[],["result",4]]],[11,"type_id","","",262,[[],["typeid",3]]],[11,"from","","",263,[[]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"into","","",263,[[]]],[11,"try_into","","",263,[[],["result",4]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"from","","",264,[[]]],[11,"borrow","","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"into","","",264,[[]]],[11,"try_into","","",264,[[],["result",4]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"from","","",265,[[]]],[11,"borrow","","",265,[[]]],[11,"borrow_mut","","",265,[[]]],[11,"try_from","","",265,[[],["result",4]]],[11,"into","","",265,[[]]],[11,"try_into","","",265,[[],["result",4]]],[11,"type_id","","",265,[[],["typeid",3]]],[11,"from","","",266,[[]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"into","","",266,[[]]],[11,"try_into","","",266,[[],["result",4]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"from","","",267,[[]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"into","","",267,[[]]],[11,"try_into","","",267,[[],["result",4]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"from","","",268,[[]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"into","","",268,[[]]],[11,"try_into","","",268,[[],["result",4]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"from","","",269,[[]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"into","","",269,[[]]],[11,"try_into","","",269,[[],["result",4]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"from","","",270,[[]]],[11,"borrow","","",270,[[]]],[11,"borrow_mut","","",270,[[]]],[11,"try_from","","",270,[[],["result",4]]],[11,"into","","",270,[[]]],[11,"try_into","","",270,[[],["result",4]]],[11,"type_id","","",270,[[],["typeid",3]]],[11,"from","","",271,[[]]],[11,"borrow","","",271,[[]]],[11,"borrow_mut","","",271,[[]]],[11,"try_from","","",271,[[],["result",4]]],[11,"into","","",271,[[]]],[11,"try_into","","",271,[[],["result",4]]],[11,"type_id","","",271,[[],["typeid",3]]],[11,"from","","",272,[[]]],[11,"borrow","","",272,[[]]],[11,"borrow_mut","","",272,[[]]],[11,"try_from","","",272,[[],["result",4]]],[11,"into","","",272,[[]]],[11,"try_into","","",272,[[],["result",4]]],[11,"type_id","","",272,[[],["typeid",3]]],[11,"from","","",273,[[]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"into","","",273,[[]]],[11,"try_into","","",273,[[],["result",4]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"from","","",274,[[]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"into","","",274,[[]]],[11,"try_into","","",274,[[],["result",4]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"from","","",275,[[]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"into","","",275,[[]]],[11,"try_into","","",275,[[],["result",4]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"from","","",276,[[]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"into","","",276,[[]]],[11,"try_into","","",276,[[],["result",4]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"from","","",277,[[]]],[11,"borrow","","",277,[[]]],[11,"borrow_mut","","",277,[[]]],[11,"try_from","","",277,[[],["result",4]]],[11,"into","","",277,[[]]],[11,"try_into","","",277,[[],["result",4]]],[11,"type_id","","",277,[[],["typeid",3]]],[11,"from","","",278,[[]]],[11,"borrow","","",278,[[]]],[11,"borrow_mut","","",278,[[]]],[11,"try_from","","",278,[[],["result",4]]],[11,"into","","",278,[[]]],[11,"try_into","","",278,[[],["result",4]]],[11,"type_id","","",278,[[],["typeid",3]]],[11,"from","","",279,[[]]],[11,"borrow","","",279,[[]]],[11,"borrow_mut","","",279,[[]]],[11,"try_from","","",279,[[],["result",4]]],[11,"into","","",279,[[]]],[11,"try_into","","",279,[[],["result",4]]],[11,"type_id","","",279,[[],["typeid",3]]],[11,"from","","",280,[[]]],[11,"borrow","","",280,[[]]],[11,"borrow_mut","","",280,[[]]],[11,"try_from","","",280,[[],["result",4]]],[11,"into","","",280,[[]]],[11,"try_into","","",280,[[],["result",4]]],[11,"type_id","","",280,[[],["typeid",3]]],[11,"from","","",281,[[]]],[11,"borrow","","",281,[[]]],[11,"borrow_mut","","",281,[[]]],[11,"try_from","","",281,[[],["result",4]]],[11,"into","","",281,[[]]],[11,"try_into","","",281,[[],["result",4]]],[11,"type_id","","",281,[[],["typeid",3]]],[11,"from","","",282,[[]]],[11,"borrow","","",282,[[]]],[11,"borrow_mut","","",282,[[]]],[11,"try_from","","",282,[[],["result",4]]],[11,"into","","",282,[[]]],[11,"try_into","","",282,[[],["result",4]]],[11,"type_id","","",282,[[],["typeid",3]]],[11,"from","","",283,[[]]],[11,"borrow","","",283,[[]]],[11,"borrow_mut","","",283,[[]]],[11,"try_from","","",283,[[],["result",4]]],[11,"into","","",283,[[]]],[11,"try_into","","",283,[[],["result",4]]],[11,"type_id","","",283,[[],["typeid",3]]],[11,"from","","",284,[[]]],[11,"borrow","","",284,[[]]],[11,"borrow_mut","","",284,[[]]],[11,"try_from","","",284,[[],["result",4]]],[11,"into","","",284,[[]]],[11,"try_into","","",284,[[],["result",4]]],[11,"type_id","","",284,[[],["typeid",3]]],[11,"from","","",285,[[]]],[11,"borrow","","",285,[[]]],[11,"borrow_mut","","",285,[[]]],[11,"try_from","","",285,[[],["result",4]]],[11,"into","","",285,[[]]],[11,"try_into","","",285,[[],["result",4]]],[11,"type_id","","",285,[[],["typeid",3]]],[11,"from","","",286,[[]]],[11,"borrow","","",286,[[]]],[11,"borrow_mut","","",286,[[]]],[11,"try_from","","",286,[[],["result",4]]],[11,"into","","",286,[[]]],[11,"try_into","","",286,[[],["result",4]]],[11,"type_id","","",286,[[],["typeid",3]]],[11,"from","","",287,[[]]],[11,"borrow","","",287,[[]]],[11,"borrow_mut","","",287,[[]]],[11,"try_from","","",287,[[],["result",4]]],[11,"into","","",287,[[]]],[11,"try_into","","",287,[[],["result",4]]],[11,"type_id","","",287,[[],["typeid",3]]],[11,"from","","",288,[[]]],[11,"borrow","","",288,[[]]],[11,"borrow_mut","","",288,[[]]],[11,"try_from","","",288,[[],["result",4]]],[11,"into","","",288,[[]]],[11,"try_into","","",288,[[],["result",4]]],[11,"type_id","","",288,[[],["typeid",3]]],[11,"from","","",289,[[]]],[11,"borrow","","",289,[[]]],[11,"borrow_mut","","",289,[[]]],[11,"try_from","","",289,[[],["result",4]]],[11,"into","","",289,[[]]],[11,"try_into","","",289,[[],["result",4]]],[11,"type_id","","",289,[[],["typeid",3]]],[11,"from","","",290,[[]]],[11,"borrow","","",290,[[]]],[11,"borrow_mut","","",290,[[]]],[11,"try_from","","",290,[[],["result",4]]],[11,"into","","",290,[[]]],[11,"try_into","","",290,[[],["result",4]]],[11,"type_id","","",290,[[],["typeid",3]]],[11,"from","","",291,[[]]],[11,"borrow","","",291,[[]]],[11,"borrow_mut","","",291,[[]]],[11,"try_from","","",291,[[],["result",4]]],[11,"into","","",291,[[]]],[11,"try_into","","",291,[[],["result",4]]],[11,"type_id","","",291,[[],["typeid",3]]],[11,"from","","",292,[[]]],[11,"borrow","","",292,[[]]],[11,"borrow_mut","","",292,[[]]],[11,"try_from","","",292,[[],["result",4]]],[11,"into","","",292,[[]]],[11,"try_into","","",292,[[],["result",4]]],[11,"type_id","","",292,[[],["typeid",3]]],[11,"from","","",293,[[]]],[11,"borrow","","",293,[[]]],[11,"borrow_mut","","",293,[[]]],[11,"try_from","","",293,[[],["result",4]]],[11,"into","","",293,[[]]],[11,"try_into","","",293,[[],["result",4]]],[11,"type_id","","",293,[[],["typeid",3]]],[11,"from","","",294,[[]]],[11,"borrow","","",294,[[]]],[11,"borrow_mut","","",294,[[]]],[11,"try_from","","",294,[[],["result",4]]],[11,"into","","",294,[[]]],[11,"try_into","","",294,[[],["result",4]]],[11,"type_id","","",294,[[],["typeid",3]]],[11,"from","","",295,[[]]],[11,"borrow","","",295,[[]]],[11,"borrow_mut","","",295,[[]]],[11,"try_from","","",295,[[],["result",4]]],[11,"into","","",295,[[]]],[11,"try_into","","",295,[[],["result",4]]],[11,"type_id","","",295,[[],["typeid",3]]],[11,"from","","",296,[[]]],[11,"borrow","","",296,[[]]],[11,"borrow_mut","","",296,[[]]],[11,"try_from","","",296,[[],["result",4]]],[11,"into","","",296,[[]]],[11,"try_into","","",296,[[],["result",4]]],[11,"type_id","","",296,[[],["typeid",3]]],[11,"from","","",297,[[]]],[11,"borrow","","",297,[[]]],[11,"borrow_mut","","",297,[[]]],[11,"try_from","","",297,[[],["result",4]]],[11,"into","","",297,[[]]],[11,"try_into","","",297,[[],["result",4]]],[11,"type_id","","",297,[[],["typeid",3]]],[11,"from","","",298,[[]]],[11,"borrow","","",298,[[]]],[11,"borrow_mut","","",298,[[]]],[11,"try_from","","",298,[[],["result",4]]],[11,"into","","",298,[[]]],[11,"try_into","","",298,[[],["result",4]]],[11,"type_id","","",298,[[],["typeid",3]]],[11,"from","","",299,[[]]],[11,"borrow","","",299,[[]]],[11,"borrow_mut","","",299,[[]]],[11,"try_from","","",299,[[],["result",4]]],[11,"into","","",299,[[]]],[11,"try_into","","",299,[[],["result",4]]],[11,"type_id","","",299,[[],["typeid",3]]],[11,"from","","",300,[[]]],[11,"borrow","","",300,[[]]],[11,"borrow_mut","","",300,[[]]],[11,"try_from","","",300,[[],["result",4]]],[11,"into","","",300,[[]]],[11,"try_into","","",300,[[],["result",4]]],[11,"type_id","","",300,[[],["typeid",3]]],[11,"from","","",301,[[]]],[11,"borrow","","",301,[[]]],[11,"borrow_mut","","",301,[[]]],[11,"try_from","","",301,[[],["result",4]]],[11,"into","","",301,[[]]],[11,"try_into","","",301,[[],["result",4]]],[11,"type_id","","",301,[[],["typeid",3]]],[11,"from","","",302,[[]]],[11,"borrow","","",302,[[]]],[11,"borrow_mut","","",302,[[]]],[11,"try_from","","",302,[[],["result",4]]],[11,"into","","",302,[[]]],[11,"try_into","","",302,[[],["result",4]]],[11,"type_id","","",302,[[],["typeid",3]]],[11,"from","","",303,[[]]],[11,"borrow","","",303,[[]]],[11,"borrow_mut","","",303,[[]]],[11,"try_from","","",303,[[],["result",4]]],[11,"into","","",303,[[]]],[11,"try_into","","",303,[[],["result",4]]],[11,"type_id","","",303,[[],["typeid",3]]],[11,"from","","",304,[[]]],[11,"borrow","","",304,[[]]],[11,"borrow_mut","","",304,[[]]],[11,"try_from","","",304,[[],["result",4]]],[11,"into","","",304,[[]]],[11,"try_into","","",304,[[],["result",4]]],[11,"type_id","","",304,[[],["typeid",3]]],[11,"from","","",305,[[]]],[11,"borrow","","",305,[[]]],[11,"borrow_mut","","",305,[[]]],[11,"try_from","","",305,[[],["result",4]]],[11,"into","","",305,[[]]],[11,"try_into","","",305,[[],["result",4]]],[11,"type_id","","",305,[[],["typeid",3]]],[11,"from","","",306,[[]]],[11,"borrow","","",306,[[]]],[11,"borrow_mut","","",306,[[]]],[11,"try_from","","",306,[[],["result",4]]],[11,"into","","",306,[[]]],[11,"try_into","","",306,[[],["result",4]]],[11,"type_id","","",306,[[],["typeid",3]]],[11,"from","","",307,[[]]],[11,"borrow","","",307,[[]]],[11,"borrow_mut","","",307,[[]]],[11,"try_from","","",307,[[],["result",4]]],[11,"into","","",307,[[]]],[11,"try_into","","",307,[[],["result",4]]],[11,"type_id","","",307,[[],["typeid",3]]],[11,"from","","",308,[[]]],[11,"borrow","","",308,[[]]],[11,"borrow_mut","","",308,[[]]],[11,"try_from","","",308,[[],["result",4]]],[11,"into","","",308,[[]]],[11,"try_into","","",308,[[],["result",4]]],[11,"type_id","","",308,[[],["typeid",3]]],[11,"from","","",309,[[]]],[11,"borrow","","",309,[[]]],[11,"borrow_mut","","",309,[[]]],[11,"try_from","","",309,[[],["result",4]]],[11,"into","","",309,[[]]],[11,"try_into","","",309,[[],["result",4]]],[11,"type_id","","",309,[[],["typeid",3]]],[11,"from","","",310,[[]]],[11,"borrow","","",310,[[]]],[11,"borrow_mut","","",310,[[]]],[11,"try_from","","",310,[[],["result",4]]],[11,"into","","",310,[[]]],[11,"try_into","","",310,[[],["result",4]]],[11,"type_id","","",310,[[],["typeid",3]]],[11,"from","","",311,[[]]],[11,"borrow","","",311,[[]]],[11,"borrow_mut","","",311,[[]]],[11,"try_from","","",311,[[],["result",4]]],[11,"into","","",311,[[]]],[11,"try_into","","",311,[[],["result",4]]],[11,"type_id","","",311,[[],["typeid",3]]],[11,"from","","",312,[[]]],[11,"borrow","","",312,[[]]],[11,"borrow_mut","","",312,[[]]],[11,"try_from","","",312,[[],["result",4]]],[11,"into","","",312,[[]]],[11,"try_into","","",312,[[],["result",4]]],[11,"type_id","","",312,[[],["typeid",3]]],[11,"from","","",313,[[]]],[11,"borrow","","",313,[[]]],[11,"borrow_mut","","",313,[[]]],[11,"try_from","","",313,[[],["result",4]]],[11,"into","","",313,[[]]],[11,"try_into","","",313,[[],["result",4]]],[11,"type_id","","",313,[[],["typeid",3]]],[11,"from","","",314,[[]]],[11,"borrow","","",314,[[]]],[11,"borrow_mut","","",314,[[]]],[11,"try_from","","",314,[[],["result",4]]],[11,"into","","",314,[[]]],[11,"try_into","","",314,[[],["result",4]]],[11,"type_id","","",314,[[],["typeid",3]]],[11,"from","","",315,[[]]],[11,"borrow","","",315,[[]]],[11,"borrow_mut","","",315,[[]]],[11,"try_from","","",315,[[],["result",4]]],[11,"into","","",315,[[]]],[11,"try_into","","",315,[[],["result",4]]],[11,"type_id","","",315,[[],["typeid",3]]],[11,"from","","",316,[[]]],[11,"borrow","","",316,[[]]],[11,"borrow_mut","","",316,[[]]],[11,"try_from","","",316,[[],["result",4]]],[11,"into","","",316,[[]]],[11,"try_into","","",316,[[],["result",4]]],[11,"type_id","","",316,[[],["typeid",3]]],[11,"from","","",317,[[]]],[11,"borrow","","",317,[[]]],[11,"borrow_mut","","",317,[[]]],[11,"try_from","","",317,[[],["result",4]]],[11,"into","","",317,[[]]],[11,"try_into","","",317,[[],["result",4]]],[11,"type_id","","",317,[[],["typeid",3]]],[11,"from","","",318,[[]]],[11,"borrow","","",318,[[]]],[11,"borrow_mut","","",318,[[]]],[11,"try_from","","",318,[[],["result",4]]],[11,"into","","",318,[[]]],[11,"try_into","","",318,[[],["result",4]]],[11,"type_id","","",318,[[],["typeid",3]]],[11,"from","","",319,[[]]],[11,"borrow","","",319,[[]]],[11,"borrow_mut","","",319,[[]]],[11,"try_from","","",319,[[],["result",4]]],[11,"into","","",319,[[]]],[11,"try_into","","",319,[[],["result",4]]],[11,"type_id","","",319,[[],["typeid",3]]],[11,"from","","",320,[[]]],[11,"borrow","","",320,[[]]],[11,"borrow_mut","","",320,[[]]],[11,"try_from","","",320,[[],["result",4]]],[11,"into","","",320,[[]]],[11,"try_into","","",320,[[],["result",4]]],[11,"type_id","","",320,[[],["typeid",3]]],[11,"from","","",321,[[]]],[11,"borrow","","",321,[[]]],[11,"borrow_mut","","",321,[[]]],[11,"try_from","","",321,[[],["result",4]]],[11,"into","","",321,[[]]],[11,"try_into","","",321,[[],["result",4]]],[11,"type_id","","",321,[[],["typeid",3]]],[11,"from","","",322,[[]]],[11,"borrow","","",322,[[]]],[11,"borrow_mut","","",322,[[]]],[11,"try_from","","",322,[[],["result",4]]],[11,"into","","",322,[[]]],[11,"try_into","","",322,[[],["result",4]]],[11,"type_id","","",322,[[],["typeid",3]]],[11,"from","","",323,[[]]],[11,"borrow","","",323,[[]]],[11,"borrow_mut","","",323,[[]]],[11,"try_from","","",323,[[],["result",4]]],[11,"into","","",323,[[]]],[11,"try_into","","",323,[[],["result",4]]],[11,"type_id","","",323,[[],["typeid",3]]],[11,"from","","",324,[[]]],[11,"borrow","","",324,[[]]],[11,"borrow_mut","","",324,[[]]],[11,"try_from","","",324,[[],["result",4]]],[11,"into","","",324,[[]]],[11,"try_into","","",324,[[],["result",4]]],[11,"type_id","","",324,[[],["typeid",3]]],[11,"from","","",325,[[]]],[11,"borrow","","",325,[[]]],[11,"borrow_mut","","",325,[[]]],[11,"try_from","","",325,[[],["result",4]]],[11,"into","","",325,[[]]],[11,"try_into","","",325,[[],["result",4]]],[11,"type_id","","",325,[[],["typeid",3]]],[11,"from","","",326,[[]]],[11,"borrow","","",326,[[]]],[11,"borrow_mut","","",326,[[]]],[11,"try_from","","",326,[[],["result",4]]],[11,"into","","",326,[[]]],[11,"try_into","","",326,[[],["result",4]]],[11,"type_id","","",326,[[],["typeid",3]]],[11,"from","","",327,[[]]],[11,"borrow","","",327,[[]]],[11,"borrow_mut","","",327,[[]]],[11,"try_from","","",327,[[],["result",4]]],[11,"into","","",327,[[]]],[11,"try_into","","",327,[[],["result",4]]],[11,"type_id","","",327,[[],["typeid",3]]],[11,"from","","",328,[[]]],[11,"borrow","","",328,[[]]],[11,"borrow_mut","","",328,[[]]],[11,"try_from","","",328,[[],["result",4]]],[11,"into","","",328,[[]]],[11,"try_into","","",328,[[],["result",4]]],[11,"type_id","","",328,[[],["typeid",3]]],[11,"from","","",329,[[]]],[11,"borrow","","",329,[[]]],[11,"borrow_mut","","",329,[[]]],[11,"try_from","","",329,[[],["result",4]]],[11,"into","","",329,[[]]],[11,"try_into","","",329,[[],["result",4]]],[11,"type_id","","",329,[[],["typeid",3]]],[11,"from","","",330,[[]]],[11,"borrow","","",330,[[]]],[11,"borrow_mut","","",330,[[]]],[11,"try_from","","",330,[[],["result",4]]],[11,"into","","",330,[[]]],[11,"try_into","","",330,[[],["result",4]]],[11,"type_id","","",330,[[],["typeid",3]]],[11,"from","","",331,[[]]],[11,"borrow","","",331,[[]]],[11,"borrow_mut","","",331,[[]]],[11,"try_from","","",331,[[],["result",4]]],[11,"into","","",331,[[]]],[11,"try_into","","",331,[[],["result",4]]],[11,"type_id","","",331,[[],["typeid",3]]],[11,"from","","",332,[[]]],[11,"borrow","","",332,[[]]],[11,"borrow_mut","","",332,[[]]],[11,"try_from","","",332,[[],["result",4]]],[11,"into","","",332,[[]]],[11,"try_into","","",332,[[],["result",4]]],[11,"type_id","","",332,[[],["typeid",3]]],[11,"from","","",333,[[]]],[11,"borrow","","",333,[[]]],[11,"borrow_mut","","",333,[[]]],[11,"try_from","","",333,[[],["result",4]]],[11,"into","","",333,[[]]],[11,"try_into","","",333,[[],["result",4]]],[11,"type_id","","",333,[[],["typeid",3]]],[11,"from","","",334,[[]]],[11,"borrow","","",334,[[]]],[11,"borrow_mut","","",334,[[]]],[11,"try_from","","",334,[[],["result",4]]],[11,"into","","",334,[[]]],[11,"try_into","","",334,[[],["result",4]]],[11,"type_id","","",334,[[],["typeid",3]]],[11,"from","","",335,[[]]],[11,"borrow","","",335,[[]]],[11,"borrow_mut","","",335,[[]]],[11,"try_from","","",335,[[],["result",4]]],[11,"into","","",335,[[]]],[11,"try_into","","",335,[[],["result",4]]],[11,"type_id","","",335,[[],["typeid",3]]],[11,"from","","",336,[[]]],[11,"borrow","","",336,[[]]],[11,"borrow_mut","","",336,[[]]],[11,"try_from","","",336,[[],["result",4]]],[11,"into","","",336,[[]]],[11,"try_into","","",336,[[],["result",4]]],[11,"type_id","","",336,[[],["typeid",3]]],[11,"from","","",337,[[]]],[11,"borrow","","",337,[[]]],[11,"borrow_mut","","",337,[[]]],[11,"try_from","","",337,[[],["result",4]]],[11,"into","","",337,[[]]],[11,"try_into","","",337,[[],["result",4]]],[11,"type_id","","",337,[[],["typeid",3]]],[11,"from","","",338,[[]]],[11,"borrow","","",338,[[]]],[11,"borrow_mut","","",338,[[]]],[11,"try_from","","",338,[[],["result",4]]],[11,"into","","",338,[[]]],[11,"try_into","","",338,[[],["result",4]]],[11,"type_id","","",338,[[],["typeid",3]]],[11,"from","","",339,[[]]],[11,"borrow","","",339,[[]]],[11,"borrow_mut","","",339,[[]]],[11,"try_from","","",339,[[],["result",4]]],[11,"into","","",339,[[]]],[11,"try_into","","",339,[[],["result",4]]],[11,"type_id","","",339,[[],["typeid",3]]],[11,"from","","",340,[[]]],[11,"borrow","","",340,[[]]],[11,"borrow_mut","","",340,[[]]],[11,"try_from","","",340,[[],["result",4]]],[11,"into","","",340,[[]]],[11,"try_into","","",340,[[],["result",4]]],[11,"type_id","","",340,[[],["typeid",3]]],[11,"from","","",341,[[]]],[11,"borrow","","",341,[[]]],[11,"borrow_mut","","",341,[[]]],[11,"try_from","","",341,[[],["result",4]]],[11,"into","","",341,[[]]],[11,"try_into","","",341,[[],["result",4]]],[11,"type_id","","",341,[[],["typeid",3]]],[11,"from","","",342,[[]]],[11,"borrow","","",342,[[]]],[11,"borrow_mut","","",342,[[]]],[11,"try_from","","",342,[[],["result",4]]],[11,"into","","",342,[[]]],[11,"try_into","","",342,[[],["result",4]]],[11,"type_id","","",342,[[],["typeid",3]]],[11,"from","","",343,[[]]],[11,"borrow","","",343,[[]]],[11,"borrow_mut","","",343,[[]]],[11,"try_from","","",343,[[],["result",4]]],[11,"into","","",343,[[]]],[11,"try_into","","",343,[[],["result",4]]],[11,"type_id","","",343,[[],["typeid",3]]],[11,"from","","",344,[[]]],[11,"borrow","","",344,[[]]],[11,"borrow_mut","","",344,[[]]],[11,"try_from","","",344,[[],["result",4]]],[11,"into","","",344,[[]]],[11,"try_into","","",344,[[],["result",4]]],[11,"type_id","","",344,[[],["typeid",3]]],[11,"from","","",345,[[]]],[11,"borrow","","",345,[[]]],[11,"borrow_mut","","",345,[[]]],[11,"try_from","","",345,[[],["result",4]]],[11,"into","","",345,[[]]],[11,"try_into","","",345,[[],["result",4]]],[11,"type_id","","",345,[[],["typeid",3]]],[11,"from","","",346,[[]]],[11,"borrow","","",346,[[]]],[11,"borrow_mut","","",346,[[]]],[11,"try_from","","",346,[[],["result",4]]],[11,"into","","",346,[[]]],[11,"try_into","","",346,[[],["result",4]]],[11,"type_id","","",346,[[],["typeid",3]]],[11,"from","","",347,[[]]],[11,"borrow","","",347,[[]]],[11,"borrow_mut","","",347,[[]]],[11,"try_from","","",347,[[],["result",4]]],[11,"into","","",347,[[]]],[11,"try_into","","",347,[[],["result",4]]],[11,"type_id","","",347,[[],["typeid",3]]],[11,"from","","",348,[[]]],[11,"borrow","","",348,[[]]],[11,"borrow_mut","","",348,[[]]],[11,"try_from","","",348,[[],["result",4]]],[11,"into","","",348,[[]]],[11,"try_into","","",348,[[],["result",4]]],[11,"type_id","","",348,[[],["typeid",3]]],[11,"from","","",349,[[]]],[11,"borrow","","",349,[[]]],[11,"borrow_mut","","",349,[[]]],[11,"try_from","","",349,[[],["result",4]]],[11,"into","","",349,[[]]],[11,"try_into","","",349,[[],["result",4]]],[11,"type_id","","",349,[[],["typeid",3]]],[11,"from","","",350,[[]]],[11,"borrow","","",350,[[]]],[11,"borrow_mut","","",350,[[]]],[11,"try_from","","",350,[[],["result",4]]],[11,"into","","",350,[[]]],[11,"try_into","","",350,[[],["result",4]]],[11,"type_id","","",350,[[],["typeid",3]]],[11,"from","","",351,[[]]],[11,"borrow","","",351,[[]]],[11,"borrow_mut","","",351,[[]]],[11,"try_from","","",351,[[],["result",4]]],[11,"into","","",351,[[]]],[11,"try_into","","",351,[[],["result",4]]],[11,"type_id","","",351,[[],["typeid",3]]],[11,"from","","",352,[[]]],[11,"borrow","","",352,[[]]],[11,"borrow_mut","","",352,[[]]],[11,"try_from","","",352,[[],["result",4]]],[11,"into","","",352,[[]]],[11,"try_into","","",352,[[],["result",4]]],[11,"type_id","","",352,[[],["typeid",3]]],[11,"from","","",353,[[]]],[11,"borrow","","",353,[[]]],[11,"borrow_mut","","",353,[[]]],[11,"try_from","","",353,[[],["result",4]]],[11,"into","","",353,[[]]],[11,"try_into","","",353,[[],["result",4]]],[11,"type_id","","",353,[[],["typeid",3]]],[11,"from","","",354,[[]]],[11,"borrow","","",354,[[]]],[11,"borrow_mut","","",354,[[]]],[11,"try_from","","",354,[[],["result",4]]],[11,"into","","",354,[[]]],[11,"try_into","","",354,[[],["result",4]]],[11,"type_id","","",354,[[],["typeid",3]]],[11,"from","rp2040_pac::io_bank0::values","",355,[[]]],[11,"borrow","","",355,[[]]],[11,"borrow_mut","","",355,[[]]],[11,"try_from","","",355,[[],["result",4]]],[11,"into","","",355,[[]]],[11,"try_into","","",355,[[],["result",4]]],[11,"type_id","","",355,[[],["typeid",3]]],[11,"from","","",356,[[]]],[11,"borrow","","",356,[[]]],[11,"borrow_mut","","",356,[[]]],[11,"try_from","","",356,[[],["result",4]]],[11,"into","","",356,[[]]],[11,"try_into","","",356,[[],["result",4]]],[11,"type_id","","",356,[[],["typeid",3]]],[11,"from","","",357,[[]]],[11,"borrow","","",357,[[]]],[11,"borrow_mut","","",357,[[]]],[11,"try_from","","",357,[[],["result",4]]],[11,"into","","",357,[[]]],[11,"try_into","","",357,[[],["result",4]]],[11,"type_id","","",357,[[],["typeid",3]]],[11,"from","","",358,[[]]],[11,"borrow","","",358,[[]]],[11,"borrow_mut","","",358,[[]]],[11,"try_from","","",358,[[],["result",4]]],[11,"into","","",358,[[]]],[11,"try_into","","",358,[[],["result",4]]],[11,"type_id","","",358,[[],["typeid",3]]],[11,"from","","",359,[[]]],[11,"borrow","","",359,[[]]],[11,"borrow_mut","","",359,[[]]],[11,"try_from","","",359,[[],["result",4]]],[11,"into","","",359,[[]]],[11,"try_into","","",359,[[],["result",4]]],[11,"type_id","","",359,[[],["typeid",3]]],[11,"from","","",360,[[]]],[11,"borrow","","",360,[[]]],[11,"borrow_mut","","",360,[[]]],[11,"try_from","","",360,[[],["result",4]]],[11,"into","","",360,[[]]],[11,"try_into","","",360,[[],["result",4]]],[11,"type_id","","",360,[[],["typeid",3]]],[11,"from","","",361,[[]]],[11,"borrow","","",361,[[]]],[11,"borrow_mut","","",361,[[]]],[11,"try_from","","",361,[[],["result",4]]],[11,"into","","",361,[[]]],[11,"try_into","","",361,[[],["result",4]]],[11,"type_id","","",361,[[],["typeid",3]]],[11,"from","","",362,[[]]],[11,"borrow","","",362,[[]]],[11,"borrow_mut","","",362,[[]]],[11,"try_from","","",362,[[],["result",4]]],[11,"into","","",362,[[]]],[11,"try_into","","",362,[[],["result",4]]],[11,"type_id","","",362,[[],["typeid",3]]],[11,"from","","",363,[[]]],[11,"borrow","","",363,[[]]],[11,"borrow_mut","","",363,[[]]],[11,"try_from","","",363,[[],["result",4]]],[11,"into","","",363,[[]]],[11,"try_into","","",363,[[],["result",4]]],[11,"type_id","","",363,[[],["typeid",3]]],[11,"from","","",364,[[]]],[11,"borrow","","",364,[[]]],[11,"borrow_mut","","",364,[[]]],[11,"try_from","","",364,[[],["result",4]]],[11,"into","","",364,[[]]],[11,"try_into","","",364,[[],["result",4]]],[11,"type_id","","",364,[[],["typeid",3]]],[11,"from","","",365,[[]]],[11,"borrow","","",365,[[]]],[11,"borrow_mut","","",365,[[]]],[11,"try_from","","",365,[[],["result",4]]],[11,"into","","",365,[[]]],[11,"try_into","","",365,[[],["result",4]]],[11,"type_id","","",365,[[],["typeid",3]]],[11,"from","","",366,[[]]],[11,"borrow","","",366,[[]]],[11,"borrow_mut","","",366,[[]]],[11,"try_from","","",366,[[],["result",4]]],[11,"into","","",366,[[]]],[11,"try_into","","",366,[[],["result",4]]],[11,"type_id","","",366,[[],["typeid",3]]],[11,"from","","",367,[[]]],[11,"borrow","","",367,[[]]],[11,"borrow_mut","","",367,[[]]],[11,"try_from","","",367,[[],["result",4]]],[11,"into","","",367,[[]]],[11,"try_into","","",367,[[],["result",4]]],[11,"type_id","","",367,[[],["typeid",3]]],[11,"from","","",368,[[]]],[11,"borrow","","",368,[[]]],[11,"borrow_mut","","",368,[[]]],[11,"try_from","","",368,[[],["result",4]]],[11,"into","","",368,[[]]],[11,"try_into","","",368,[[],["result",4]]],[11,"type_id","","",368,[[],["typeid",3]]],[11,"from","","",369,[[]]],[11,"borrow","","",369,[[]]],[11,"borrow_mut","","",369,[[]]],[11,"try_from","","",369,[[],["result",4]]],[11,"into","","",369,[[]]],[11,"try_into","","",369,[[],["result",4]]],[11,"type_id","","",369,[[],["typeid",3]]],[11,"from","","",370,[[]]],[11,"borrow","","",370,[[]]],[11,"borrow_mut","","",370,[[]]],[11,"try_from","","",370,[[],["result",4]]],[11,"into","","",370,[[]]],[11,"try_into","","",370,[[],["result",4]]],[11,"type_id","","",370,[[],["typeid",3]]],[11,"from","","",371,[[]]],[11,"borrow","","",371,[[]]],[11,"borrow_mut","","",371,[[]]],[11,"try_from","","",371,[[],["result",4]]],[11,"into","","",371,[[]]],[11,"try_into","","",371,[[],["result",4]]],[11,"type_id","","",371,[[],["typeid",3]]],[11,"from","","",372,[[]]],[11,"borrow","","",372,[[]]],[11,"borrow_mut","","",372,[[]]],[11,"try_from","","",372,[[],["result",4]]],[11,"into","","",372,[[]]],[11,"try_into","","",372,[[],["result",4]]],[11,"type_id","","",372,[[],["typeid",3]]],[11,"from","","",373,[[]]],[11,"borrow","","",373,[[]]],[11,"borrow_mut","","",373,[[]]],[11,"try_from","","",373,[[],["result",4]]],[11,"into","","",373,[[]]],[11,"try_into","","",373,[[],["result",4]]],[11,"type_id","","",373,[[],["typeid",3]]],[11,"from","","",374,[[]]],[11,"borrow","","",374,[[]]],[11,"borrow_mut","","",374,[[]]],[11,"try_from","","",374,[[],["result",4]]],[11,"into","","",374,[[]]],[11,"try_into","","",374,[[],["result",4]]],[11,"type_id","","",374,[[],["typeid",3]]],[11,"from","","",375,[[]]],[11,"borrow","","",375,[[]]],[11,"borrow_mut","","",375,[[]]],[11,"try_from","","",375,[[],["result",4]]],[11,"into","","",375,[[]]],[11,"try_into","","",375,[[],["result",4]]],[11,"type_id","","",375,[[],["typeid",3]]],[11,"from","","",376,[[]]],[11,"borrow","","",376,[[]]],[11,"borrow_mut","","",376,[[]]],[11,"try_from","","",376,[[],["result",4]]],[11,"into","","",376,[[]]],[11,"try_into","","",376,[[],["result",4]]],[11,"type_id","","",376,[[],["typeid",3]]],[11,"from","","",377,[[]]],[11,"borrow","","",377,[[]]],[11,"borrow_mut","","",377,[[]]],[11,"try_from","","",377,[[],["result",4]]],[11,"into","","",377,[[]]],[11,"try_into","","",377,[[],["result",4]]],[11,"type_id","","",377,[[],["typeid",3]]],[11,"from","","",378,[[]]],[11,"borrow","","",378,[[]]],[11,"borrow_mut","","",378,[[]]],[11,"try_from","","",378,[[],["result",4]]],[11,"into","","",378,[[]]],[11,"try_into","","",378,[[],["result",4]]],[11,"type_id","","",378,[[],["typeid",3]]],[11,"from","","",379,[[]]],[11,"borrow","","",379,[[]]],[11,"borrow_mut","","",379,[[]]],[11,"try_from","","",379,[[],["result",4]]],[11,"into","","",379,[[]]],[11,"try_into","","",379,[[],["result",4]]],[11,"type_id","","",379,[[],["typeid",3]]],[11,"from","","",380,[[]]],[11,"borrow","","",380,[[]]],[11,"borrow_mut","","",380,[[]]],[11,"try_from","","",380,[[],["result",4]]],[11,"into","","",380,[[]]],[11,"try_into","","",380,[[],["result",4]]],[11,"type_id","","",380,[[],["typeid",3]]],[11,"from","","",381,[[]]],[11,"borrow","","",381,[[]]],[11,"borrow_mut","","",381,[[]]],[11,"try_from","","",381,[[],["result",4]]],[11,"into","","",381,[[]]],[11,"try_into","","",381,[[],["result",4]]],[11,"type_id","","",381,[[],["typeid",3]]],[11,"from","","",382,[[]]],[11,"borrow","","",382,[[]]],[11,"borrow_mut","","",382,[[]]],[11,"try_from","","",382,[[],["result",4]]],[11,"into","","",382,[[]]],[11,"try_into","","",382,[[],["result",4]]],[11,"type_id","","",382,[[],["typeid",3]]],[11,"from","","",383,[[]]],[11,"borrow","","",383,[[]]],[11,"borrow_mut","","",383,[[]]],[11,"try_from","","",383,[[],["result",4]]],[11,"into","","",383,[[]]],[11,"try_into","","",383,[[],["result",4]]],[11,"type_id","","",383,[[],["typeid",3]]],[11,"from","","",384,[[]]],[11,"borrow","","",384,[[]]],[11,"borrow_mut","","",384,[[]]],[11,"try_from","","",384,[[],["result",4]]],[11,"into","","",384,[[]]],[11,"try_into","","",384,[[],["result",4]]],[11,"type_id","","",384,[[],["typeid",3]]],[11,"from","rp2040_pac::io_bank0","",385,[[]]],[11,"borrow","","",385,[[]]],[11,"borrow_mut","","",385,[[]]],[11,"try_from","","",385,[[],["result",4]]],[11,"into","","",385,[[]]],[11,"try_into","","",385,[[],["result",4]]],[11,"type_id","","",385,[[],["typeid",3]]],[11,"from","rp2040_pac::io_qspi::fields","",386,[[]]],[11,"borrow","","",386,[[]]],[11,"borrow_mut","","",386,[[]]],[11,"try_from","","",386,[[],["result",4]]],[11,"into","","",386,[[]]],[11,"try_into","","",386,[[],["result",4]]],[11,"type_id","","",386,[[],["typeid",3]]],[11,"from","","",387,[[]]],[11,"borrow","","",387,[[]]],[11,"borrow_mut","","",387,[[]]],[11,"try_from","","",387,[[],["result",4]]],[11,"into","","",387,[[]]],[11,"try_into","","",387,[[],["result",4]]],[11,"type_id","","",387,[[],["typeid",3]]],[11,"from","","",388,[[]]],[11,"borrow","","",388,[[]]],[11,"borrow_mut","","",388,[[]]],[11,"try_from","","",388,[[],["result",4]]],[11,"into","","",388,[[]]],[11,"try_into","","",388,[[],["result",4]]],[11,"type_id","","",388,[[],["typeid",3]]],[11,"from","","",389,[[]]],[11,"borrow","","",389,[[]]],[11,"borrow_mut","","",389,[[]]],[11,"try_from","","",389,[[],["result",4]]],[11,"into","","",389,[[]]],[11,"try_into","","",389,[[],["result",4]]],[11,"type_id","","",389,[[],["typeid",3]]],[11,"from","","",390,[[]]],[11,"borrow","","",390,[[]]],[11,"borrow_mut","","",390,[[]]],[11,"try_from","","",390,[[],["result",4]]],[11,"into","","",390,[[]]],[11,"try_into","","",390,[[],["result",4]]],[11,"type_id","","",390,[[],["typeid",3]]],[11,"from","","",391,[[]]],[11,"borrow","","",391,[[]]],[11,"borrow_mut","","",391,[[]]],[11,"try_from","","",391,[[],["result",4]]],[11,"into","","",391,[[]]],[11,"try_into","","",391,[[],["result",4]]],[11,"type_id","","",391,[[],["typeid",3]]],[11,"from","","",392,[[]]],[11,"borrow","","",392,[[]]],[11,"borrow_mut","","",392,[[]]],[11,"try_from","","",392,[[],["result",4]]],[11,"into","","",392,[[]]],[11,"try_into","","",392,[[],["result",4]]],[11,"type_id","","",392,[[],["typeid",3]]],[11,"from","","",393,[[]]],[11,"borrow","","",393,[[]]],[11,"borrow_mut","","",393,[[]]],[11,"try_from","","",393,[[],["result",4]]],[11,"into","","",393,[[]]],[11,"try_into","","",393,[[],["result",4]]],[11,"type_id","","",393,[[],["typeid",3]]],[11,"from","","",394,[[]]],[11,"borrow","","",394,[[]]],[11,"borrow_mut","","",394,[[]]],[11,"try_from","","",394,[[],["result",4]]],[11,"into","","",394,[[]]],[11,"try_into","","",394,[[],["result",4]]],[11,"type_id","","",394,[[],["typeid",3]]],[11,"from","","",395,[[]]],[11,"borrow","","",395,[[]]],[11,"borrow_mut","","",395,[[]]],[11,"try_from","","",395,[[],["result",4]]],[11,"into","","",395,[[]]],[11,"try_into","","",395,[[],["result",4]]],[11,"type_id","","",395,[[],["typeid",3]]],[11,"from","","",396,[[]]],[11,"borrow","","",396,[[]]],[11,"borrow_mut","","",396,[[]]],[11,"try_from","","",396,[[],["result",4]]],[11,"into","","",396,[[]]],[11,"try_into","","",396,[[],["result",4]]],[11,"type_id","","",396,[[],["typeid",3]]],[11,"from","","",397,[[]]],[11,"borrow","","",397,[[]]],[11,"borrow_mut","","",397,[[]]],[11,"try_from","","",397,[[],["result",4]]],[11,"into","","",397,[[]]],[11,"try_into","","",397,[[],["result",4]]],[11,"type_id","","",397,[[],["typeid",3]]],[11,"from","","",398,[[]]],[11,"borrow","","",398,[[]]],[11,"borrow_mut","","",398,[[]]],[11,"try_from","","",398,[[],["result",4]]],[11,"into","","",398,[[]]],[11,"try_into","","",398,[[],["result",4]]],[11,"type_id","","",398,[[],["typeid",3]]],[11,"from","","",399,[[]]],[11,"borrow","","",399,[[]]],[11,"borrow_mut","","",399,[[]]],[11,"try_from","","",399,[[],["result",4]]],[11,"into","","",399,[[]]],[11,"try_into","","",399,[[],["result",4]]],[11,"type_id","","",399,[[],["typeid",3]]],[11,"from","","",400,[[]]],[11,"borrow","","",400,[[]]],[11,"borrow_mut","","",400,[[]]],[11,"try_from","","",400,[[],["result",4]]],[11,"into","","",400,[[]]],[11,"try_into","","",400,[[],["result",4]]],[11,"type_id","","",400,[[],["typeid",3]]],[11,"from","","",401,[[]]],[11,"borrow","","",401,[[]]],[11,"borrow_mut","","",401,[[]]],[11,"try_from","","",401,[[],["result",4]]],[11,"into","","",401,[[]]],[11,"try_into","","",401,[[],["result",4]]],[11,"type_id","","",401,[[],["typeid",3]]],[11,"from","","",402,[[]]],[11,"borrow","","",402,[[]]],[11,"borrow_mut","","",402,[[]]],[11,"try_from","","",402,[[],["result",4]]],[11,"into","","",402,[[]]],[11,"try_into","","",402,[[],["result",4]]],[11,"type_id","","",402,[[],["typeid",3]]],[11,"from","","",403,[[]]],[11,"borrow","","",403,[[]]],[11,"borrow_mut","","",403,[[]]],[11,"try_from","","",403,[[],["result",4]]],[11,"into","","",403,[[]]],[11,"try_into","","",403,[[],["result",4]]],[11,"type_id","","",403,[[],["typeid",3]]],[11,"from","","",404,[[]]],[11,"borrow","","",404,[[]]],[11,"borrow_mut","","",404,[[]]],[11,"try_from","","",404,[[],["result",4]]],[11,"into","","",404,[[]]],[11,"try_into","","",404,[[],["result",4]]],[11,"type_id","","",404,[[],["typeid",3]]],[11,"from","","",405,[[]]],[11,"borrow","","",405,[[]]],[11,"borrow_mut","","",405,[[]]],[11,"try_from","","",405,[[],["result",4]]],[11,"into","","",405,[[]]],[11,"try_into","","",405,[[],["result",4]]],[11,"type_id","","",405,[[],["typeid",3]]],[11,"from","","",406,[[]]],[11,"borrow","","",406,[[]]],[11,"borrow_mut","","",406,[[]]],[11,"try_from","","",406,[[],["result",4]]],[11,"into","","",406,[[]]],[11,"try_into","","",406,[[],["result",4]]],[11,"type_id","","",406,[[],["typeid",3]]],[11,"from","","",407,[[]]],[11,"borrow","","",407,[[]]],[11,"borrow_mut","","",407,[[]]],[11,"try_from","","",407,[[],["result",4]]],[11,"into","","",407,[[]]],[11,"try_into","","",407,[[],["result",4]]],[11,"type_id","","",407,[[],["typeid",3]]],[11,"from","rp2040_pac::io_qspi::values","",408,[[]]],[11,"borrow","","",408,[[]]],[11,"borrow_mut","","",408,[[]]],[11,"try_from","","",408,[[],["result",4]]],[11,"into","","",408,[[]]],[11,"try_into","","",408,[[],["result",4]]],[11,"type_id","","",408,[[],["typeid",3]]],[11,"from","","",409,[[]]],[11,"borrow","","",409,[[]]],[11,"borrow_mut","","",409,[[]]],[11,"try_from","","",409,[[],["result",4]]],[11,"into","","",409,[[]]],[11,"try_into","","",409,[[],["result",4]]],[11,"type_id","","",409,[[],["typeid",3]]],[11,"from","","",410,[[]]],[11,"borrow","","",410,[[]]],[11,"borrow_mut","","",410,[[]]],[11,"try_from","","",410,[[],["result",4]]],[11,"into","","",410,[[]]],[11,"try_into","","",410,[[],["result",4]]],[11,"type_id","","",410,[[],["typeid",3]]],[11,"from","","",411,[[]]],[11,"borrow","","",411,[[]]],[11,"borrow_mut","","",411,[[]]],[11,"try_from","","",411,[[],["result",4]]],[11,"into","","",411,[[]]],[11,"try_into","","",411,[[],["result",4]]],[11,"type_id","","",411,[[],["typeid",3]]],[11,"from","","",412,[[]]],[11,"borrow","","",412,[[]]],[11,"borrow_mut","","",412,[[]]],[11,"try_from","","",412,[[],["result",4]]],[11,"into","","",412,[[]]],[11,"try_into","","",412,[[],["result",4]]],[11,"type_id","","",412,[[],["typeid",3]]],[11,"from","","",413,[[]]],[11,"borrow","","",413,[[]]],[11,"borrow_mut","","",413,[[]]],[11,"try_from","","",413,[[],["result",4]]],[11,"into","","",413,[[]]],[11,"try_into","","",413,[[],["result",4]]],[11,"type_id","","",413,[[],["typeid",3]]],[11,"from","rp2040_pac::io_qspi","",414,[[]]],[11,"borrow","","",414,[[]]],[11,"borrow_mut","","",414,[[]]],[11,"try_from","","",414,[[],["result",4]]],[11,"into","","",414,[[]]],[11,"try_into","","",414,[[],["result",4]]],[11,"type_id","","",414,[[],["typeid",3]]],[11,"from","rp2040_pac::pads::values","",415,[[]]],[11,"borrow","","",415,[[]]],[11,"borrow_mut","","",415,[[]]],[11,"try_from","","",415,[[],["result",4]]],[11,"into","","",415,[[]]],[11,"try_into","","",415,[[],["result",4]]],[11,"type_id","","",415,[[],["typeid",3]]],[11,"from","","",416,[[]]],[11,"borrow","","",416,[[]]],[11,"borrow_mut","","",416,[[]]],[11,"try_from","","",416,[[],["result",4]]],[11,"into","","",416,[[]]],[11,"try_into","","",416,[[],["result",4]]],[11,"type_id","","",416,[[],["typeid",3]]],[11,"from","rp2040_pac::pads_bank0::fields","",417,[[]]],[11,"borrow","","",417,[[]]],[11,"borrow_mut","","",417,[[]]],[11,"try_from","","",417,[[],["result",4]]],[11,"into","","",417,[[]]],[11,"try_into","","",417,[[],["result",4]]],[11,"type_id","","",417,[[],["typeid",3]]],[11,"from","","",418,[[]]],[11,"borrow","","",418,[[]]],[11,"borrow_mut","","",418,[[]]],[11,"try_from","","",418,[[],["result",4]]],[11,"into","","",418,[[]]],[11,"try_into","","",418,[[],["result",4]]],[11,"type_id","","",418,[[],["typeid",3]]],[11,"from","","",419,[[]]],[11,"borrow","","",419,[[]]],[11,"borrow_mut","","",419,[[]]],[11,"try_from","","",419,[[],["result",4]]],[11,"into","","",419,[[]]],[11,"try_into","","",419,[[],["result",4]]],[11,"type_id","","",419,[[],["typeid",3]]],[11,"from","","",420,[[]]],[11,"borrow","","",420,[[]]],[11,"borrow_mut","","",420,[[]]],[11,"try_from","","",420,[[],["result",4]]],[11,"into","","",420,[[]]],[11,"try_into","","",420,[[],["result",4]]],[11,"type_id","","",420,[[],["typeid",3]]],[11,"from","","",421,[[]]],[11,"borrow","","",421,[[]]],[11,"borrow_mut","","",421,[[]]],[11,"try_from","","",421,[[],["result",4]]],[11,"into","","",421,[[]]],[11,"try_into","","",421,[[],["result",4]]],[11,"type_id","","",421,[[],["typeid",3]]],[11,"from","","",422,[[]]],[11,"borrow","","",422,[[]]],[11,"borrow_mut","","",422,[[]]],[11,"try_from","","",422,[[],["result",4]]],[11,"into","","",422,[[]]],[11,"try_into","","",422,[[],["result",4]]],[11,"type_id","","",422,[[],["typeid",3]]],[11,"from","","",423,[[]]],[11,"borrow","","",423,[[]]],[11,"borrow_mut","","",423,[[]]],[11,"try_from","","",423,[[],["result",4]]],[11,"into","","",423,[[]]],[11,"try_into","","",423,[[],["result",4]]],[11,"type_id","","",423,[[],["typeid",3]]],[11,"from","","",424,[[]]],[11,"borrow","","",424,[[]]],[11,"borrow_mut","","",424,[[]]],[11,"try_from","","",424,[[],["result",4]]],[11,"into","","",424,[[]]],[11,"try_into","","",424,[[],["result",4]]],[11,"type_id","","",424,[[],["typeid",3]]],[11,"from","","",425,[[]]],[11,"borrow","","",425,[[]]],[11,"borrow_mut","","",425,[[]]],[11,"try_from","","",425,[[],["result",4]]],[11,"into","","",425,[[]]],[11,"try_into","","",425,[[],["result",4]]],[11,"type_id","","",425,[[],["typeid",3]]],[11,"from","","",426,[[]]],[11,"borrow","","",426,[[]]],[11,"borrow_mut","","",426,[[]]],[11,"try_from","","",426,[[],["result",4]]],[11,"into","","",426,[[]]],[11,"try_into","","",426,[[],["result",4]]],[11,"type_id","","",426,[[],["typeid",3]]],[11,"from","","",427,[[]]],[11,"borrow","","",427,[[]]],[11,"borrow_mut","","",427,[[]]],[11,"try_from","","",427,[[],["result",4]]],[11,"into","","",427,[[]]],[11,"try_into","","",427,[[],["result",4]]],[11,"type_id","","",427,[[],["typeid",3]]],[11,"from","","",428,[[]]],[11,"borrow","","",428,[[]]],[11,"borrow_mut","","",428,[[]]],[11,"try_from","","",428,[[],["result",4]]],[11,"into","","",428,[[]]],[11,"try_into","","",428,[[],["result",4]]],[11,"type_id","","",428,[[],["typeid",3]]],[11,"from","","",429,[[]]],[11,"borrow","","",429,[[]]],[11,"borrow_mut","","",429,[[]]],[11,"try_from","","",429,[[],["result",4]]],[11,"into","","",429,[[]]],[11,"try_into","","",429,[[],["result",4]]],[11,"type_id","","",429,[[],["typeid",3]]],[11,"from","","",430,[[]]],[11,"borrow","","",430,[[]]],[11,"borrow_mut","","",430,[[]]],[11,"try_from","","",430,[[],["result",4]]],[11,"into","","",430,[[]]],[11,"try_into","","",430,[[],["result",4]]],[11,"type_id","","",430,[[],["typeid",3]]],[11,"from","","",431,[[]]],[11,"borrow","","",431,[[]]],[11,"borrow_mut","","",431,[[]]],[11,"try_from","","",431,[[],["result",4]]],[11,"into","","",431,[[]]],[11,"try_into","","",431,[[],["result",4]]],[11,"type_id","","",431,[[],["typeid",3]]],[11,"from","","",432,[[]]],[11,"borrow","","",432,[[]]],[11,"borrow_mut","","",432,[[]]],[11,"try_from","","",432,[[],["result",4]]],[11,"into","","",432,[[]]],[11,"try_into","","",432,[[],["result",4]]],[11,"type_id","","",432,[[],["typeid",3]]],[11,"from","","",433,[[]]],[11,"borrow","","",433,[[]]],[11,"borrow_mut","","",433,[[]]],[11,"try_from","","",433,[[],["result",4]]],[11,"into","","",433,[[]]],[11,"try_into","","",433,[[],["result",4]]],[11,"type_id","","",433,[[],["typeid",3]]],[11,"from","","",434,[[]]],[11,"borrow","","",434,[[]]],[11,"borrow_mut","","",434,[[]]],[11,"try_from","","",434,[[],["result",4]]],[11,"into","","",434,[[]]],[11,"try_into","","",434,[[],["result",4]]],[11,"type_id","","",434,[[],["typeid",3]]],[11,"from","","",435,[[]]],[11,"borrow","","",435,[[]]],[11,"borrow_mut","","",435,[[]]],[11,"try_from","","",435,[[],["result",4]]],[11,"into","","",435,[[]]],[11,"try_into","","",435,[[],["result",4]]],[11,"type_id","","",435,[[],["typeid",3]]],[11,"from","","",436,[[]]],[11,"borrow","","",436,[[]]],[11,"borrow_mut","","",436,[[]]],[11,"try_from","","",436,[[],["result",4]]],[11,"into","","",436,[[]]],[11,"try_into","","",436,[[],["result",4]]],[11,"type_id","","",436,[[],["typeid",3]]],[11,"from","","",437,[[]]],[11,"borrow","","",437,[[]]],[11,"borrow_mut","","",437,[[]]],[11,"try_from","","",437,[[],["result",4]]],[11,"into","","",437,[[]]],[11,"try_into","","",437,[[],["result",4]]],[11,"type_id","","",437,[[],["typeid",3]]],[11,"from","","",438,[[]]],[11,"borrow","","",438,[[]]],[11,"borrow_mut","","",438,[[]]],[11,"try_from","","",438,[[],["result",4]]],[11,"into","","",438,[[]]],[11,"try_into","","",438,[[],["result",4]]],[11,"type_id","","",438,[[],["typeid",3]]],[11,"from","","",439,[[]]],[11,"borrow","","",439,[[]]],[11,"borrow_mut","","",439,[[]]],[11,"try_from","","",439,[[],["result",4]]],[11,"into","","",439,[[]]],[11,"try_into","","",439,[[],["result",4]]],[11,"type_id","","",439,[[],["typeid",3]]],[11,"from","","",440,[[]]],[11,"borrow","","",440,[[]]],[11,"borrow_mut","","",440,[[]]],[11,"try_from","","",440,[[],["result",4]]],[11,"into","","",440,[[]]],[11,"try_into","","",440,[[],["result",4]]],[11,"type_id","","",440,[[],["typeid",3]]],[11,"from","","",441,[[]]],[11,"borrow","","",441,[[]]],[11,"borrow_mut","","",441,[[]]],[11,"try_from","","",441,[[],["result",4]]],[11,"into","","",441,[[]]],[11,"try_into","","",441,[[],["result",4]]],[11,"type_id","","",441,[[],["typeid",3]]],[11,"from","","",442,[[]]],[11,"borrow","","",442,[[]]],[11,"borrow_mut","","",442,[[]]],[11,"try_from","","",442,[[],["result",4]]],[11,"into","","",442,[[]]],[11,"try_into","","",442,[[],["result",4]]],[11,"type_id","","",442,[[],["typeid",3]]],[11,"from","","",443,[[]]],[11,"borrow","","",443,[[]]],[11,"borrow_mut","","",443,[[]]],[11,"try_from","","",443,[[],["result",4]]],[11,"into","","",443,[[]]],[11,"try_into","","",443,[[],["result",4]]],[11,"type_id","","",443,[[],["typeid",3]]],[11,"from","","",444,[[]]],[11,"borrow","","",444,[[]]],[11,"borrow_mut","","",444,[[]]],[11,"try_from","","",444,[[],["result",4]]],[11,"into","","",444,[[]]],[11,"try_into","","",444,[[],["result",4]]],[11,"type_id","","",444,[[],["typeid",3]]],[11,"from","","",445,[[]]],[11,"borrow","","",445,[[]]],[11,"borrow_mut","","",445,[[]]],[11,"try_from","","",445,[[],["result",4]]],[11,"into","","",445,[[]]],[11,"try_into","","",445,[[],["result",4]]],[11,"type_id","","",445,[[],["typeid",3]]],[11,"from","","",446,[[]]],[11,"borrow","","",446,[[]]],[11,"borrow_mut","","",446,[[]]],[11,"try_from","","",446,[[],["result",4]]],[11,"into","","",446,[[]]],[11,"try_into","","",446,[[],["result",4]]],[11,"type_id","","",446,[[],["typeid",3]]],[11,"from","","",447,[[]]],[11,"borrow","","",447,[[]]],[11,"borrow_mut","","",447,[[]]],[11,"try_from","","",447,[[],["result",4]]],[11,"into","","",447,[[]]],[11,"try_into","","",447,[[],["result",4]]],[11,"type_id","","",447,[[],["typeid",3]]],[11,"from","","",448,[[]]],[11,"borrow","","",448,[[]]],[11,"borrow_mut","","",448,[[]]],[11,"try_from","","",448,[[],["result",4]]],[11,"into","","",448,[[]]],[11,"try_into","","",448,[[],["result",4]]],[11,"type_id","","",448,[[],["typeid",3]]],[11,"from","","",449,[[]]],[11,"borrow","","",449,[[]]],[11,"borrow_mut","","",449,[[]]],[11,"try_from","","",449,[[],["result",4]]],[11,"into","","",449,[[]]],[11,"try_into","","",449,[[],["result",4]]],[11,"type_id","","",449,[[],["typeid",3]]],[11,"from","rp2040_pac::pads_bank0","",450,[[]]],[11,"borrow","","",450,[[]]],[11,"borrow_mut","","",450,[[]]],[11,"try_from","","",450,[[],["result",4]]],[11,"into","","",450,[[]]],[11,"try_into","","",450,[[],["result",4]]],[11,"type_id","","",450,[[],["typeid",3]]],[11,"from","rp2040_pac::pads_qspi::fields","",451,[[]]],[11,"borrow","","",451,[[]]],[11,"borrow_mut","","",451,[[]]],[11,"try_from","","",451,[[],["result",4]]],[11,"into","","",451,[[]]],[11,"try_into","","",451,[[],["result",4]]],[11,"type_id","","",451,[[],["typeid",3]]],[11,"from","","",452,[[]]],[11,"borrow","","",452,[[]]],[11,"borrow_mut","","",452,[[]]],[11,"try_from","","",452,[[],["result",4]]],[11,"into","","",452,[[]]],[11,"try_into","","",452,[[],["result",4]]],[11,"type_id","","",452,[[],["typeid",3]]],[11,"from","","",453,[[]]],[11,"borrow","","",453,[[]]],[11,"borrow_mut","","",453,[[]]],[11,"try_from","","",453,[[],["result",4]]],[11,"into","","",453,[[]]],[11,"try_into","","",453,[[],["result",4]]],[11,"type_id","","",453,[[],["typeid",3]]],[11,"from","","",454,[[]]],[11,"borrow","","",454,[[]]],[11,"borrow_mut","","",454,[[]]],[11,"try_from","","",454,[[],["result",4]]],[11,"into","","",454,[[]]],[11,"try_into","","",454,[[],["result",4]]],[11,"type_id","","",454,[[],["typeid",3]]],[11,"from","","",455,[[]]],[11,"borrow","","",455,[[]]],[11,"borrow_mut","","",455,[[]]],[11,"try_from","","",455,[[],["result",4]]],[11,"into","","",455,[[]]],[11,"try_into","","",455,[[],["result",4]]],[11,"type_id","","",455,[[],["typeid",3]]],[11,"from","","",456,[[]]],[11,"borrow","","",456,[[]]],[11,"borrow_mut","","",456,[[]]],[11,"try_from","","",456,[[],["result",4]]],[11,"into","","",456,[[]]],[11,"try_into","","",456,[[],["result",4]]],[11,"type_id","","",456,[[],["typeid",3]]],[11,"from","","",457,[[]]],[11,"borrow","","",457,[[]]],[11,"borrow_mut","","",457,[[]]],[11,"try_from","","",457,[[],["result",4]]],[11,"into","","",457,[[]]],[11,"try_into","","",457,[[],["result",4]]],[11,"type_id","","",457,[[],["typeid",3]]],[11,"from","rp2040_pac::pads_qspi","",458,[[]]],[11,"borrow","","",458,[[]]],[11,"borrow_mut","","",458,[[]]],[11,"try_from","","",458,[[],["result",4]]],[11,"into","","",458,[[]]],[11,"try_into","","",458,[[],["result",4]]],[11,"type_id","","",458,[[],["typeid",3]]],[11,"from","rp2040_pac::pio0::fields","",459,[[]]],[11,"borrow","","",459,[[]]],[11,"borrow_mut","","",459,[[]]],[11,"try_from","","",459,[[],["result",4]]],[11,"into","","",459,[[]]],[11,"try_into","","",459,[[],["result",4]]],[11,"type_id","","",459,[[],["typeid",3]]],[11,"from","","",460,[[]]],[11,"borrow","","",460,[[]]],[11,"borrow_mut","","",460,[[]]],[11,"try_from","","",460,[[],["result",4]]],[11,"into","","",460,[[]]],[11,"try_into","","",460,[[],["result",4]]],[11,"type_id","","",460,[[],["typeid",3]]],[11,"from","","",461,[[]]],[11,"borrow","","",461,[[]]],[11,"borrow_mut","","",461,[[]]],[11,"try_from","","",461,[[],["result",4]]],[11,"into","","",461,[[]]],[11,"try_into","","",461,[[],["result",4]]],[11,"type_id","","",461,[[],["typeid",3]]],[11,"from","","",462,[[]]],[11,"borrow","","",462,[[]]],[11,"borrow_mut","","",462,[[]]],[11,"try_from","","",462,[[],["result",4]]],[11,"into","","",462,[[]]],[11,"try_into","","",462,[[],["result",4]]],[11,"type_id","","",462,[[],["typeid",3]]],[11,"from","","",463,[[]]],[11,"borrow","","",463,[[]]],[11,"borrow_mut","","",463,[[]]],[11,"try_from","","",463,[[],["result",4]]],[11,"into","","",463,[[]]],[11,"try_into","","",463,[[],["result",4]]],[11,"type_id","","",463,[[],["typeid",3]]],[11,"from","","",464,[[]]],[11,"borrow","","",464,[[]]],[11,"borrow_mut","","",464,[[]]],[11,"try_from","","",464,[[],["result",4]]],[11,"into","","",464,[[]]],[11,"try_into","","",464,[[],["result",4]]],[11,"type_id","","",464,[[],["typeid",3]]],[11,"from","","",465,[[]]],[11,"borrow","","",465,[[]]],[11,"borrow_mut","","",465,[[]]],[11,"try_from","","",465,[[],["result",4]]],[11,"into","","",465,[[]]],[11,"try_into","","",465,[[],["result",4]]],[11,"type_id","","",465,[[],["typeid",3]]],[11,"from","","",466,[[]]],[11,"borrow","","",466,[[]]],[11,"borrow_mut","","",466,[[]]],[11,"try_from","","",466,[[],["result",4]]],[11,"into","","",466,[[]]],[11,"try_into","","",466,[[],["result",4]]],[11,"type_id","","",466,[[],["typeid",3]]],[11,"from","","",467,[[]]],[11,"borrow","","",467,[[]]],[11,"borrow_mut","","",467,[[]]],[11,"try_from","","",467,[[],["result",4]]],[11,"into","","",467,[[]]],[11,"try_into","","",467,[[],["result",4]]],[11,"type_id","","",467,[[],["typeid",3]]],[11,"from","","",468,[[]]],[11,"borrow","","",468,[[]]],[11,"borrow_mut","","",468,[[]]],[11,"try_from","","",468,[[],["result",4]]],[11,"into","","",468,[[]]],[11,"try_into","","",468,[[],["result",4]]],[11,"type_id","","",468,[[],["typeid",3]]],[11,"from","","",469,[[]]],[11,"borrow","","",469,[[]]],[11,"borrow_mut","","",469,[[]]],[11,"try_from","","",469,[[],["result",4]]],[11,"into","","",469,[[]]],[11,"try_into","","",469,[[],["result",4]]],[11,"type_id","","",469,[[],["typeid",3]]],[11,"from","","",470,[[]]],[11,"borrow","","",470,[[]]],[11,"borrow_mut","","",470,[[]]],[11,"try_from","","",470,[[],["result",4]]],[11,"into","","",470,[[]]],[11,"try_into","","",470,[[],["result",4]]],[11,"type_id","","",470,[[],["typeid",3]]],[11,"from","","",471,[[]]],[11,"borrow","","",471,[[]]],[11,"borrow_mut","","",471,[[]]],[11,"try_from","","",471,[[],["result",4]]],[11,"into","","",471,[[]]],[11,"try_into","","",471,[[],["result",4]]],[11,"type_id","","",471,[[],["typeid",3]]],[11,"from","","",472,[[]]],[11,"borrow","","",472,[[]]],[11,"borrow_mut","","",472,[[]]],[11,"try_from","","",472,[[],["result",4]]],[11,"into","","",472,[[]]],[11,"try_into","","",472,[[],["result",4]]],[11,"type_id","","",472,[[],["typeid",3]]],[11,"from","","",473,[[]]],[11,"borrow","","",473,[[]]],[11,"borrow_mut","","",473,[[]]],[11,"try_from","","",473,[[],["result",4]]],[11,"into","","",473,[[]]],[11,"try_into","","",473,[[],["result",4]]],[11,"type_id","","",473,[[],["typeid",3]]],[11,"from","rp2040_pac::pio0::values","",474,[[]]],[11,"borrow","","",474,[[]]],[11,"borrow_mut","","",474,[[]]],[11,"try_from","","",474,[[],["result",4]]],[11,"into","","",474,[[]]],[11,"try_into","","",474,[[],["result",4]]],[11,"type_id","","",474,[[],["typeid",3]]],[11,"from","rp2040_pac::pio0","",475,[[]]],[11,"borrow","","",475,[[]]],[11,"borrow_mut","","",475,[[]]],[11,"try_from","","",475,[[],["result",4]]],[11,"into","","",475,[[]]],[11,"try_into","","",475,[[],["result",4]]],[11,"type_id","","",475,[[],["typeid",3]]],[11,"from","","",476,[[]]],[11,"borrow","","",476,[[]]],[11,"borrow_mut","","",476,[[]]],[11,"try_from","","",476,[[],["result",4]]],[11,"into","","",476,[[]]],[11,"try_into","","",476,[[],["result",4]]],[11,"type_id","","",476,[[],["typeid",3]]],[11,"from","","",477,[[]]],[11,"borrow","","",477,[[]]],[11,"borrow_mut","","",477,[[]]],[11,"try_from","","",477,[[],["result",4]]],[11,"into","","",477,[[]]],[11,"try_into","","",477,[[],["result",4]]],[11,"type_id","","",477,[[],["typeid",3]]],[11,"from","rp2040_pac::pll_sys::fields","",478,[[]]],[11,"borrow","","",478,[[]]],[11,"borrow_mut","","",478,[[]]],[11,"try_from","","",478,[[],["result",4]]],[11,"into","","",478,[[]]],[11,"try_into","","",478,[[],["result",4]]],[11,"type_id","","",478,[[],["typeid",3]]],[11,"from","","",479,[[]]],[11,"borrow","","",479,[[]]],[11,"borrow_mut","","",479,[[]]],[11,"try_from","","",479,[[],["result",4]]],[11,"into","","",479,[[]]],[11,"try_into","","",479,[[],["result",4]]],[11,"type_id","","",479,[[],["typeid",3]]],[11,"from","","",480,[[]]],[11,"borrow","","",480,[[]]],[11,"borrow_mut","","",480,[[]]],[11,"try_from","","",480,[[],["result",4]]],[11,"into","","",480,[[]]],[11,"try_into","","",480,[[],["result",4]]],[11,"type_id","","",480,[[],["typeid",3]]],[11,"from","","",481,[[]]],[11,"borrow","","",481,[[]]],[11,"borrow_mut","","",481,[[]]],[11,"try_from","","",481,[[],["result",4]]],[11,"into","","",481,[[]]],[11,"try_into","","",481,[[],["result",4]]],[11,"type_id","","",481,[[],["typeid",3]]],[11,"from","rp2040_pac::pll_sys","",482,[[]]],[11,"borrow","","",482,[[]]],[11,"borrow_mut","","",482,[[]]],[11,"try_from","","",482,[[],["result",4]]],[11,"into","","",482,[[]]],[11,"try_into","","",482,[[],["result",4]]],[11,"type_id","","",482,[[],["typeid",3]]],[11,"from","rp2040_pac::ppb::fields","",483,[[]]],[11,"borrow","","",483,[[]]],[11,"borrow_mut","","",483,[[]]],[11,"try_from","","",483,[[],["result",4]]],[11,"into","","",483,[[]]],[11,"try_into","","",483,[[],["result",4]]],[11,"type_id","","",483,[[],["typeid",3]]],[11,"from","","",484,[[]]],[11,"borrow","","",484,[[]]],[11,"borrow_mut","","",484,[[]]],[11,"try_from","","",484,[[],["result",4]]],[11,"into","","",484,[[]]],[11,"try_into","","",484,[[],["result",4]]],[11,"type_id","","",484,[[],["typeid",3]]],[11,"from","","",485,[[]]],[11,"borrow","","",485,[[]]],[11,"borrow_mut","","",485,[[]]],[11,"try_from","","",485,[[],["result",4]]],[11,"into","","",485,[[]]],[11,"try_into","","",485,[[],["result",4]]],[11,"type_id","","",485,[[],["typeid",3]]],[11,"from","","",486,[[]]],[11,"borrow","","",486,[[]]],[11,"borrow_mut","","",486,[[]]],[11,"try_from","","",486,[[],["result",4]]],[11,"into","","",486,[[]]],[11,"try_into","","",486,[[],["result",4]]],[11,"type_id","","",486,[[],["typeid",3]]],[11,"from","","",487,[[]]],[11,"borrow","","",487,[[]]],[11,"borrow_mut","","",487,[[]]],[11,"try_from","","",487,[[],["result",4]]],[11,"into","","",487,[[]]],[11,"try_into","","",487,[[],["result",4]]],[11,"type_id","","",487,[[],["typeid",3]]],[11,"from","","",488,[[]]],[11,"borrow","","",488,[[]]],[11,"borrow_mut","","",488,[[]]],[11,"try_from","","",488,[[],["result",4]]],[11,"into","","",488,[[]]],[11,"try_into","","",488,[[],["result",4]]],[11,"type_id","","",488,[[],["typeid",3]]],[11,"from","","",489,[[]]],[11,"borrow","","",489,[[]]],[11,"borrow_mut","","",489,[[]]],[11,"try_from","","",489,[[],["result",4]]],[11,"into","","",489,[[]]],[11,"try_into","","",489,[[],["result",4]]],[11,"type_id","","",489,[[],["typeid",3]]],[11,"from","","",490,[[]]],[11,"borrow","","",490,[[]]],[11,"borrow_mut","","",490,[[]]],[11,"try_from","","",490,[[],["result",4]]],[11,"into","","",490,[[]]],[11,"try_into","","",490,[[],["result",4]]],[11,"type_id","","",490,[[],["typeid",3]]],[11,"from","","",491,[[]]],[11,"borrow","","",491,[[]]],[11,"borrow_mut","","",491,[[]]],[11,"try_from","","",491,[[],["result",4]]],[11,"into","","",491,[[]]],[11,"try_into","","",491,[[],["result",4]]],[11,"type_id","","",491,[[],["typeid",3]]],[11,"from","","",492,[[]]],[11,"borrow","","",492,[[]]],[11,"borrow_mut","","",492,[[]]],[11,"try_from","","",492,[[],["result",4]]],[11,"into","","",492,[[]]],[11,"try_into","","",492,[[],["result",4]]],[11,"type_id","","",492,[[],["typeid",3]]],[11,"from","","",493,[[]]],[11,"borrow","","",493,[[]]],[11,"borrow_mut","","",493,[[]]],[11,"try_from","","",493,[[],["result",4]]],[11,"into","","",493,[[]]],[11,"try_into","","",493,[[],["result",4]]],[11,"type_id","","",493,[[],["typeid",3]]],[11,"from","","",494,[[]]],[11,"borrow","","",494,[[]]],[11,"borrow_mut","","",494,[[]]],[11,"try_from","","",494,[[],["result",4]]],[11,"into","","",494,[[]]],[11,"try_into","","",494,[[],["result",4]]],[11,"type_id","","",494,[[],["typeid",3]]],[11,"from","","",495,[[]]],[11,"borrow","","",495,[[]]],[11,"borrow_mut","","",495,[[]]],[11,"try_from","","",495,[[],["result",4]]],[11,"into","","",495,[[]]],[11,"try_into","","",495,[[],["result",4]]],[11,"type_id","","",495,[[],["typeid",3]]],[11,"from","","",496,[[]]],[11,"borrow","","",496,[[]]],[11,"borrow_mut","","",496,[[]]],[11,"try_from","","",496,[[],["result",4]]],[11,"into","","",496,[[]]],[11,"try_into","","",496,[[],["result",4]]],[11,"type_id","","",496,[[],["typeid",3]]],[11,"from","","",497,[[]]],[11,"borrow","","",497,[[]]],[11,"borrow_mut","","",497,[[]]],[11,"try_from","","",497,[[],["result",4]]],[11,"into","","",497,[[]]],[11,"try_into","","",497,[[],["result",4]]],[11,"type_id","","",497,[[],["typeid",3]]],[11,"from","","",498,[[]]],[11,"borrow","","",498,[[]]],[11,"borrow_mut","","",498,[[]]],[11,"try_from","","",498,[[],["result",4]]],[11,"into","","",498,[[]]],[11,"try_into","","",498,[[],["result",4]]],[11,"type_id","","",498,[[],["typeid",3]]],[11,"from","","",499,[[]]],[11,"borrow","","",499,[[]]],[11,"borrow_mut","","",499,[[]]],[11,"try_from","","",499,[[],["result",4]]],[11,"into","","",499,[[]]],[11,"try_into","","",499,[[],["result",4]]],[11,"type_id","","",499,[[],["typeid",3]]],[11,"from","","",500,[[]]],[11,"borrow","","",500,[[]]],[11,"borrow_mut","","",500,[[]]],[11,"try_from","","",500,[[],["result",4]]],[11,"into","","",500,[[]]],[11,"try_into","","",500,[[],["result",4]]],[11,"type_id","","",500,[[],["typeid",3]]],[11,"from","","",501,[[]]],[11,"borrow","","",501,[[]]],[11,"borrow_mut","","",501,[[]]],[11,"try_from","","",501,[[],["result",4]]],[11,"into","","",501,[[]]],[11,"try_into","","",501,[[],["result",4]]],[11,"type_id","","",501,[[],["typeid",3]]],[11,"from","","",502,[[]]],[11,"borrow","","",502,[[]]],[11,"borrow_mut","","",502,[[]]],[11,"try_from","","",502,[[],["result",4]]],[11,"into","","",502,[[]]],[11,"try_into","","",502,[[],["result",4]]],[11,"type_id","","",502,[[],["typeid",3]]],[11,"from","","",503,[[]]],[11,"borrow","","",503,[[]]],[11,"borrow_mut","","",503,[[]]],[11,"try_from","","",503,[[],["result",4]]],[11,"into","","",503,[[]]],[11,"try_into","","",503,[[],["result",4]]],[11,"type_id","","",503,[[],["typeid",3]]],[11,"from","","",504,[[]]],[11,"borrow","","",504,[[]]],[11,"borrow_mut","","",504,[[]]],[11,"try_from","","",504,[[],["result",4]]],[11,"into","","",504,[[]]],[11,"try_into","","",504,[[],["result",4]]],[11,"type_id","","",504,[[],["typeid",3]]],[11,"from","","",505,[[]]],[11,"borrow","","",505,[[]]],[11,"borrow_mut","","",505,[[]]],[11,"try_from","","",505,[[],["result",4]]],[11,"into","","",505,[[]]],[11,"try_into","","",505,[[],["result",4]]],[11,"type_id","","",505,[[],["typeid",3]]],[11,"from","","",506,[[]]],[11,"borrow","","",506,[[]]],[11,"borrow_mut","","",506,[[]]],[11,"try_from","","",506,[[],["result",4]]],[11,"into","","",506,[[]]],[11,"try_into","","",506,[[],["result",4]]],[11,"type_id","","",506,[[],["typeid",3]]],[11,"from","","",507,[[]]],[11,"borrow","","",507,[[]]],[11,"borrow_mut","","",507,[[]]],[11,"try_from","","",507,[[],["result",4]]],[11,"into","","",507,[[]]],[11,"try_into","","",507,[[],["result",4]]],[11,"type_id","","",507,[[],["typeid",3]]],[11,"from","","",508,[[]]],[11,"borrow","","",508,[[]]],[11,"borrow_mut","","",508,[[]]],[11,"try_from","","",508,[[],["result",4]]],[11,"into","","",508,[[]]],[11,"try_into","","",508,[[],["result",4]]],[11,"type_id","","",508,[[],["typeid",3]]],[11,"from","","",509,[[]]],[11,"borrow","","",509,[[]]],[11,"borrow_mut","","",509,[[]]],[11,"try_from","","",509,[[],["result",4]]],[11,"into","","",509,[[]]],[11,"try_into","","",509,[[],["result",4]]],[11,"type_id","","",509,[[],["typeid",3]]],[11,"from","","",510,[[]]],[11,"borrow","","",510,[[]]],[11,"borrow_mut","","",510,[[]]],[11,"try_from","","",510,[[],["result",4]]],[11,"into","","",510,[[]]],[11,"try_into","","",510,[[],["result",4]]],[11,"type_id","","",510,[[],["typeid",3]]],[11,"from","","",511,[[]]],[11,"borrow","","",511,[[]]],[11,"borrow_mut","","",511,[[]]],[11,"try_from","","",511,[[],["result",4]]],[11,"into","","",511,[[]]],[11,"try_into","","",511,[[],["result",4]]],[11,"type_id","","",511,[[],["typeid",3]]],[11,"from","","",512,[[]]],[11,"borrow","","",512,[[]]],[11,"borrow_mut","","",512,[[]]],[11,"try_from","","",512,[[],["result",4]]],[11,"into","","",512,[[]]],[11,"try_into","","",512,[[],["result",4]]],[11,"type_id","","",512,[[],["typeid",3]]],[11,"from","rp2040_pac::ppb","",513,[[]]],[11,"borrow","","",513,[[]]],[11,"borrow_mut","","",513,[[]]],[11,"try_from","","",513,[[],["result",4]]],[11,"into","","",513,[[]]],[11,"try_into","","",513,[[],["result",4]]],[11,"type_id","","",513,[[],["typeid",3]]],[11,"from","rp2040_pac::psm::fields","",514,[[]]],[11,"borrow","","",514,[[]]],[11,"borrow_mut","","",514,[[]]],[11,"try_from","","",514,[[],["result",4]]],[11,"into","","",514,[[]]],[11,"try_into","","",514,[[],["result",4]]],[11,"type_id","","",514,[[],["typeid",3]]],[11,"from","","",515,[[]]],[11,"borrow","","",515,[[]]],[11,"borrow_mut","","",515,[[]]],[11,"try_from","","",515,[[],["result",4]]],[11,"into","","",515,[[]]],[11,"try_into","","",515,[[],["result",4]]],[11,"type_id","","",515,[[],["typeid",3]]],[11,"from","","",516,[[]]],[11,"borrow","","",516,[[]]],[11,"borrow_mut","","",516,[[]]],[11,"try_from","","",516,[[],["result",4]]],[11,"into","","",516,[[]]],[11,"try_into","","",516,[[],["result",4]]],[11,"type_id","","",516,[[],["typeid",3]]],[11,"from","","",517,[[]]],[11,"borrow","","",517,[[]]],[11,"borrow_mut","","",517,[[]]],[11,"try_from","","",517,[[],["result",4]]],[11,"into","","",517,[[]]],[11,"try_into","","",517,[[],["result",4]]],[11,"type_id","","",517,[[],["typeid",3]]],[11,"from","rp2040_pac::psm","",518,[[]]],[11,"borrow","","",518,[[]]],[11,"borrow_mut","","",518,[[]]],[11,"try_from","","",518,[[],["result",4]]],[11,"into","","",518,[[]]],[11,"try_into","","",518,[[],["result",4]]],[11,"type_id","","",518,[[],["typeid",3]]],[11,"from","rp2040_pac::pwm::fields","",519,[[]]],[11,"borrow","","",519,[[]]],[11,"borrow_mut","","",519,[[]]],[11,"try_from","","",519,[[],["result",4]]],[11,"into","","",519,[[]]],[11,"try_into","","",519,[[],["result",4]]],[11,"type_id","","",519,[[],["typeid",3]]],[11,"from","","",520,[[]]],[11,"borrow","","",520,[[]]],[11,"borrow_mut","","",520,[[]]],[11,"try_from","","",520,[[],["result",4]]],[11,"into","","",520,[[]]],[11,"try_into","","",520,[[],["result",4]]],[11,"type_id","","",520,[[],["typeid",3]]],[11,"from","","",521,[[]]],[11,"borrow","","",521,[[]]],[11,"borrow_mut","","",521,[[]]],[11,"try_from","","",521,[[],["result",4]]],[11,"into","","",521,[[]]],[11,"try_into","","",521,[[],["result",4]]],[11,"type_id","","",521,[[],["typeid",3]]],[11,"from","","",522,[[]]],[11,"borrow","","",522,[[]]],[11,"borrow_mut","","",522,[[]]],[11,"try_from","","",522,[[],["result",4]]],[11,"into","","",522,[[]]],[11,"try_into","","",522,[[],["result",4]]],[11,"type_id","","",522,[[],["typeid",3]]],[11,"from","","",523,[[]]],[11,"borrow","","",523,[[]]],[11,"borrow_mut","","",523,[[]]],[11,"try_from","","",523,[[],["result",4]]],[11,"into","","",523,[[]]],[11,"try_into","","",523,[[],["result",4]]],[11,"type_id","","",523,[[],["typeid",3]]],[11,"from","","",524,[[]]],[11,"borrow","","",524,[[]]],[11,"borrow_mut","","",524,[[]]],[11,"try_from","","",524,[[],["result",4]]],[11,"into","","",524,[[]]],[11,"try_into","","",524,[[],["result",4]]],[11,"type_id","","",524,[[],["typeid",3]]],[11,"from","","",525,[[]]],[11,"borrow","","",525,[[]]],[11,"borrow_mut","","",525,[[]]],[11,"try_from","","",525,[[],["result",4]]],[11,"into","","",525,[[]]],[11,"try_into","","",525,[[],["result",4]]],[11,"type_id","","",525,[[],["typeid",3]]],[11,"from","","",526,[[]]],[11,"borrow","","",526,[[]]],[11,"borrow_mut","","",526,[[]]],[11,"try_from","","",526,[[],["result",4]]],[11,"into","","",526,[[]]],[11,"try_into","","",526,[[],["result",4]]],[11,"type_id","","",526,[[],["typeid",3]]],[11,"from","","",527,[[]]],[11,"borrow","","",527,[[]]],[11,"borrow_mut","","",527,[[]]],[11,"try_from","","",527,[[],["result",4]]],[11,"into","","",527,[[]]],[11,"try_into","","",527,[[],["result",4]]],[11,"type_id","","",527,[[],["typeid",3]]],[11,"from","","",528,[[]]],[11,"borrow","","",528,[[]]],[11,"borrow_mut","","",528,[[]]],[11,"try_from","","",528,[[],["result",4]]],[11,"into","","",528,[[]]],[11,"try_into","","",528,[[],["result",4]]],[11,"type_id","","",528,[[],["typeid",3]]],[11,"from","","",529,[[]]],[11,"borrow","","",529,[[]]],[11,"borrow_mut","","",529,[[]]],[11,"try_from","","",529,[[],["result",4]]],[11,"into","","",529,[[]]],[11,"try_into","","",529,[[],["result",4]]],[11,"type_id","","",529,[[],["typeid",3]]],[11,"from","","",530,[[]]],[11,"borrow","","",530,[[]]],[11,"borrow_mut","","",530,[[]]],[11,"try_from","","",530,[[],["result",4]]],[11,"into","","",530,[[]]],[11,"try_into","","",530,[[],["result",4]]],[11,"type_id","","",530,[[],["typeid",3]]],[11,"from","","",531,[[]]],[11,"borrow","","",531,[[]]],[11,"borrow_mut","","",531,[[]]],[11,"try_from","","",531,[[],["result",4]]],[11,"into","","",531,[[]]],[11,"try_into","","",531,[[],["result",4]]],[11,"type_id","","",531,[[],["typeid",3]]],[11,"from","","",532,[[]]],[11,"borrow","","",532,[[]]],[11,"borrow_mut","","",532,[[]]],[11,"try_from","","",532,[[],["result",4]]],[11,"into","","",532,[[]]],[11,"try_into","","",532,[[],["result",4]]],[11,"type_id","","",532,[[],["typeid",3]]],[11,"from","","",533,[[]]],[11,"borrow","","",533,[[]]],[11,"borrow_mut","","",533,[[]]],[11,"try_from","","",533,[[],["result",4]]],[11,"into","","",533,[[]]],[11,"try_into","","",533,[[],["result",4]]],[11,"type_id","","",533,[[],["typeid",3]]],[11,"from","","",534,[[]]],[11,"borrow","","",534,[[]]],[11,"borrow_mut","","",534,[[]]],[11,"try_from","","",534,[[],["result",4]]],[11,"into","","",534,[[]]],[11,"try_into","","",534,[[],["result",4]]],[11,"type_id","","",534,[[],["typeid",3]]],[11,"from","","",535,[[]]],[11,"borrow","","",535,[[]]],[11,"borrow_mut","","",535,[[]]],[11,"try_from","","",535,[[],["result",4]]],[11,"into","","",535,[[]]],[11,"try_into","","",535,[[],["result",4]]],[11,"type_id","","",535,[[],["typeid",3]]],[11,"from","","",536,[[]]],[11,"borrow","","",536,[[]]],[11,"borrow_mut","","",536,[[]]],[11,"try_from","","",536,[[],["result",4]]],[11,"into","","",536,[[]]],[11,"try_into","","",536,[[],["result",4]]],[11,"type_id","","",536,[[],["typeid",3]]],[11,"from","","",537,[[]]],[11,"borrow","","",537,[[]]],[11,"borrow_mut","","",537,[[]]],[11,"try_from","","",537,[[],["result",4]]],[11,"into","","",537,[[]]],[11,"try_into","","",537,[[],["result",4]]],[11,"type_id","","",537,[[],["typeid",3]]],[11,"from","","",538,[[]]],[11,"borrow","","",538,[[]]],[11,"borrow_mut","","",538,[[]]],[11,"try_from","","",538,[[],["result",4]]],[11,"into","","",538,[[]]],[11,"try_into","","",538,[[],["result",4]]],[11,"type_id","","",538,[[],["typeid",3]]],[11,"from","","",539,[[]]],[11,"borrow","","",539,[[]]],[11,"borrow_mut","","",539,[[]]],[11,"try_from","","",539,[[],["result",4]]],[11,"into","","",539,[[]]],[11,"try_into","","",539,[[],["result",4]]],[11,"type_id","","",539,[[],["typeid",3]]],[11,"from","","",540,[[]]],[11,"borrow","","",540,[[]]],[11,"borrow_mut","","",540,[[]]],[11,"try_from","","",540,[[],["result",4]]],[11,"into","","",540,[[]]],[11,"try_into","","",540,[[],["result",4]]],[11,"type_id","","",540,[[],["typeid",3]]],[11,"from","","",541,[[]]],[11,"borrow","","",541,[[]]],[11,"borrow_mut","","",541,[[]]],[11,"try_from","","",541,[[],["result",4]]],[11,"into","","",541,[[]]],[11,"try_into","","",541,[[],["result",4]]],[11,"type_id","","",541,[[],["typeid",3]]],[11,"from","","",542,[[]]],[11,"borrow","","",542,[[]]],[11,"borrow_mut","","",542,[[]]],[11,"try_from","","",542,[[],["result",4]]],[11,"into","","",542,[[]]],[11,"try_into","","",542,[[],["result",4]]],[11,"type_id","","",542,[[],["typeid",3]]],[11,"from","","",543,[[]]],[11,"borrow","","",543,[[]]],[11,"borrow_mut","","",543,[[]]],[11,"try_from","","",543,[[],["result",4]]],[11,"into","","",543,[[]]],[11,"try_into","","",543,[[],["result",4]]],[11,"type_id","","",543,[[],["typeid",3]]],[11,"from","","",544,[[]]],[11,"borrow","","",544,[[]]],[11,"borrow_mut","","",544,[[]]],[11,"try_from","","",544,[[],["result",4]]],[11,"into","","",544,[[]]],[11,"try_into","","",544,[[],["result",4]]],[11,"type_id","","",544,[[],["typeid",3]]],[11,"from","","",545,[[]]],[11,"borrow","","",545,[[]]],[11,"borrow_mut","","",545,[[]]],[11,"try_from","","",545,[[],["result",4]]],[11,"into","","",545,[[]]],[11,"try_into","","",545,[[],["result",4]]],[11,"type_id","","",545,[[],["typeid",3]]],[11,"from","","",546,[[]]],[11,"borrow","","",546,[[]]],[11,"borrow_mut","","",546,[[]]],[11,"try_from","","",546,[[],["result",4]]],[11,"into","","",546,[[]]],[11,"try_into","","",546,[[],["result",4]]],[11,"type_id","","",546,[[],["typeid",3]]],[11,"from","","",547,[[]]],[11,"borrow","","",547,[[]]],[11,"borrow_mut","","",547,[[]]],[11,"try_from","","",547,[[],["result",4]]],[11,"into","","",547,[[]]],[11,"try_into","","",547,[[],["result",4]]],[11,"type_id","","",547,[[],["typeid",3]]],[11,"from","","",548,[[]]],[11,"borrow","","",548,[[]]],[11,"borrow_mut","","",548,[[]]],[11,"try_from","","",548,[[],["result",4]]],[11,"into","","",548,[[]]],[11,"try_into","","",548,[[],["result",4]]],[11,"type_id","","",548,[[],["typeid",3]]],[11,"from","","",549,[[]]],[11,"borrow","","",549,[[]]],[11,"borrow_mut","","",549,[[]]],[11,"try_from","","",549,[[],["result",4]]],[11,"into","","",549,[[]]],[11,"try_into","","",549,[[],["result",4]]],[11,"type_id","","",549,[[],["typeid",3]]],[11,"from","","",550,[[]]],[11,"borrow","","",550,[[]]],[11,"borrow_mut","","",550,[[]]],[11,"try_from","","",550,[[],["result",4]]],[11,"into","","",550,[[]]],[11,"try_into","","",550,[[],["result",4]]],[11,"type_id","","",550,[[],["typeid",3]]],[11,"from","","",551,[[]]],[11,"borrow","","",551,[[]]],[11,"borrow_mut","","",551,[[]]],[11,"try_from","","",551,[[],["result",4]]],[11,"into","","",551,[[]]],[11,"try_into","","",551,[[],["result",4]]],[11,"type_id","","",551,[[],["typeid",3]]],[11,"from","","",552,[[]]],[11,"borrow","","",552,[[]]],[11,"borrow_mut","","",552,[[]]],[11,"try_from","","",552,[[],["result",4]]],[11,"into","","",552,[[]]],[11,"try_into","","",552,[[],["result",4]]],[11,"type_id","","",552,[[],["typeid",3]]],[11,"from","","",553,[[]]],[11,"borrow","","",553,[[]]],[11,"borrow_mut","","",553,[[]]],[11,"try_from","","",553,[[],["result",4]]],[11,"into","","",553,[[]]],[11,"try_into","","",553,[[],["result",4]]],[11,"type_id","","",553,[[],["typeid",3]]],[11,"from","","",554,[[]]],[11,"borrow","","",554,[[]]],[11,"borrow_mut","","",554,[[]]],[11,"try_from","","",554,[[],["result",4]]],[11,"into","","",554,[[]]],[11,"try_into","","",554,[[],["result",4]]],[11,"type_id","","",554,[[],["typeid",3]]],[11,"from","","",555,[[]]],[11,"borrow","","",555,[[]]],[11,"borrow_mut","","",555,[[]]],[11,"try_from","","",555,[[],["result",4]]],[11,"into","","",555,[[]]],[11,"try_into","","",555,[[],["result",4]]],[11,"type_id","","",555,[[],["typeid",3]]],[11,"from","","",556,[[]]],[11,"borrow","","",556,[[]]],[11,"borrow_mut","","",556,[[]]],[11,"try_from","","",556,[[],["result",4]]],[11,"into","","",556,[[]]],[11,"try_into","","",556,[[],["result",4]]],[11,"type_id","","",556,[[],["typeid",3]]],[11,"from","","",557,[[]]],[11,"borrow","","",557,[[]]],[11,"borrow_mut","","",557,[[]]],[11,"try_from","","",557,[[],["result",4]]],[11,"into","","",557,[[]]],[11,"try_into","","",557,[[],["result",4]]],[11,"type_id","","",557,[[],["typeid",3]]],[11,"from","","",558,[[]]],[11,"borrow","","",558,[[]]],[11,"borrow_mut","","",558,[[]]],[11,"try_from","","",558,[[],["result",4]]],[11,"into","","",558,[[]]],[11,"try_into","","",558,[[],["result",4]]],[11,"type_id","","",558,[[],["typeid",3]]],[11,"from","","",559,[[]]],[11,"borrow","","",559,[[]]],[11,"borrow_mut","","",559,[[]]],[11,"try_from","","",559,[[],["result",4]]],[11,"into","","",559,[[]]],[11,"try_into","","",559,[[],["result",4]]],[11,"type_id","","",559,[[],["typeid",3]]],[11,"from","","",560,[[]]],[11,"borrow","","",560,[[]]],[11,"borrow_mut","","",560,[[]]],[11,"try_from","","",560,[[],["result",4]]],[11,"into","","",560,[[]]],[11,"try_into","","",560,[[],["result",4]]],[11,"type_id","","",560,[[],["typeid",3]]],[11,"from","","",561,[[]]],[11,"borrow","","",561,[[]]],[11,"borrow_mut","","",561,[[]]],[11,"try_from","","",561,[[],["result",4]]],[11,"into","","",561,[[]]],[11,"try_into","","",561,[[],["result",4]]],[11,"type_id","","",561,[[],["typeid",3]]],[11,"from","","",562,[[]]],[11,"borrow","","",562,[[]]],[11,"borrow_mut","","",562,[[]]],[11,"try_from","","",562,[[],["result",4]]],[11,"into","","",562,[[]]],[11,"try_into","","",562,[[],["result",4]]],[11,"type_id","","",562,[[],["typeid",3]]],[11,"from","","",563,[[]]],[11,"borrow","","",563,[[]]],[11,"borrow_mut","","",563,[[]]],[11,"try_from","","",563,[[],["result",4]]],[11,"into","","",563,[[]]],[11,"try_into","","",563,[[],["result",4]]],[11,"type_id","","",563,[[],["typeid",3]]],[11,"from","rp2040_pac::pwm::values","",564,[[]]],[11,"borrow","","",564,[[]]],[11,"borrow_mut","","",564,[[]]],[11,"try_from","","",564,[[],["result",4]]],[11,"into","","",564,[[]]],[11,"try_into","","",564,[[],["result",4]]],[11,"type_id","","",564,[[],["typeid",3]]],[11,"from","rp2040_pac::pwm","",565,[[]]],[11,"borrow","","",565,[[]]],[11,"borrow_mut","","",565,[[]]],[11,"try_from","","",565,[[],["result",4]]],[11,"into","","",565,[[]]],[11,"try_into","","",565,[[],["result",4]]],[11,"type_id","","",565,[[],["typeid",3]]],[11,"from","rp2040_pac::resets::fields","",566,[[]]],[11,"borrow","","",566,[[]]],[11,"borrow_mut","","",566,[[]]],[11,"try_from","","",566,[[],["result",4]]],[11,"into","","",566,[[]]],[11,"try_into","","",566,[[],["result",4]]],[11,"type_id","","",566,[[],["typeid",3]]],[11,"from","","",567,[[]]],[11,"borrow","","",567,[[]]],[11,"borrow_mut","","",567,[[]]],[11,"try_from","","",567,[[],["result",4]]],[11,"into","","",567,[[]]],[11,"try_into","","",567,[[],["result",4]]],[11,"type_id","","",567,[[],["typeid",3]]],[11,"from","rp2040_pac::resets","",568,[[]]],[11,"borrow","","",568,[[]]],[11,"borrow_mut","","",568,[[]]],[11,"try_from","","",568,[[],["result",4]]],[11,"into","","",568,[[]]],[11,"try_into","","",568,[[],["result",4]]],[11,"type_id","","",568,[[],["typeid",3]]],[11,"from","rp2040_pac::rosc::fields","",569,[[]]],[11,"borrow","","",569,[[]]],[11,"borrow_mut","","",569,[[]]],[11,"try_from","","",569,[[],["result",4]]],[11,"into","","",569,[[]]],[11,"try_into","","",569,[[],["result",4]]],[11,"type_id","","",569,[[],["typeid",3]]],[11,"from","","",570,[[]]],[11,"borrow","","",570,[[]]],[11,"borrow_mut","","",570,[[]]],[11,"try_from","","",570,[[],["result",4]]],[11,"into","","",570,[[]]],[11,"try_into","","",570,[[],["result",4]]],[11,"type_id","","",570,[[],["typeid",3]]],[11,"from","","",571,[[]]],[11,"borrow","","",571,[[]]],[11,"borrow_mut","","",571,[[]]],[11,"try_from","","",571,[[],["result",4]]],[11,"into","","",571,[[]]],[11,"try_into","","",571,[[],["result",4]]],[11,"type_id","","",571,[[],["typeid",3]]],[11,"from","","",572,[[]]],[11,"borrow","","",572,[[]]],[11,"borrow_mut","","",572,[[]]],[11,"try_from","","",572,[[],["result",4]]],[11,"into","","",572,[[]]],[11,"try_into","","",572,[[],["result",4]]],[11,"type_id","","",572,[[],["typeid",3]]],[11,"from","","",573,[[]]],[11,"borrow","","",573,[[]]],[11,"borrow_mut","","",573,[[]]],[11,"try_from","","",573,[[],["result",4]]],[11,"into","","",573,[[]]],[11,"try_into","","",573,[[],["result",4]]],[11,"type_id","","",573,[[],["typeid",3]]],[11,"from","","",574,[[]]],[11,"borrow","","",574,[[]]],[11,"borrow_mut","","",574,[[]]],[11,"try_from","","",574,[[],["result",4]]],[11,"into","","",574,[[]]],[11,"try_into","","",574,[[],["result",4]]],[11,"type_id","","",574,[[],["typeid",3]]],[11,"from","","",575,[[]]],[11,"borrow","","",575,[[]]],[11,"borrow_mut","","",575,[[]]],[11,"try_from","","",575,[[],["result",4]]],[11,"into","","",575,[[]]],[11,"try_into","","",575,[[],["result",4]]],[11,"type_id","","",575,[[],["typeid",3]]],[11,"from","","",576,[[]]],[11,"borrow","","",576,[[]]],[11,"borrow_mut","","",576,[[]]],[11,"try_from","","",576,[[],["result",4]]],[11,"into","","",576,[[]]],[11,"try_into","","",576,[[],["result",4]]],[11,"type_id","","",576,[[],["typeid",3]]],[11,"from","rp2040_pac::rosc::values","",577,[[]]],[11,"borrow","","",577,[[]]],[11,"borrow_mut","","",577,[[]]],[11,"try_from","","",577,[[],["result",4]]],[11,"into","","",577,[[]]],[11,"try_into","","",577,[[],["result",4]]],[11,"type_id","","",577,[[],["typeid",3]]],[11,"from","","",578,[[]]],[11,"borrow","","",578,[[]]],[11,"borrow_mut","","",578,[[]]],[11,"try_from","","",578,[[],["result",4]]],[11,"into","","",578,[[]]],[11,"try_into","","",578,[[],["result",4]]],[11,"type_id","","",578,[[],["typeid",3]]],[11,"from","","",579,[[]]],[11,"borrow","","",579,[[]]],[11,"borrow_mut","","",579,[[]]],[11,"try_from","","",579,[[],["result",4]]],[11,"into","","",579,[[]]],[11,"try_into","","",579,[[],["result",4]]],[11,"type_id","","",579,[[],["typeid",3]]],[11,"from","","",580,[[]]],[11,"borrow","","",580,[[]]],[11,"borrow_mut","","",580,[[]]],[11,"try_from","","",580,[[],["result",4]]],[11,"into","","",580,[[]]],[11,"try_into","","",580,[[],["result",4]]],[11,"type_id","","",580,[[],["typeid",3]]],[11,"from","rp2040_pac::rosc","",581,[[]]],[11,"borrow","","",581,[[]]],[11,"borrow_mut","","",581,[[]]],[11,"try_from","","",581,[[],["result",4]]],[11,"into","","",581,[[]]],[11,"try_into","","",581,[[],["result",4]]],[11,"type_id","","",581,[[],["typeid",3]]],[11,"from","rp2040_pac::rtc::fields","",582,[[]]],[11,"borrow","","",582,[[]]],[11,"borrow_mut","","",582,[[]]],[11,"try_from","","",582,[[],["result",4]]],[11,"into","","",582,[[]]],[11,"try_into","","",582,[[],["result",4]]],[11,"type_id","","",582,[[],["typeid",3]]],[11,"from","","",583,[[]]],[11,"borrow","","",583,[[]]],[11,"borrow_mut","","",583,[[]]],[11,"try_from","","",583,[[],["result",4]]],[11,"into","","",583,[[]]],[11,"try_into","","",583,[[],["result",4]]],[11,"type_id","","",583,[[],["typeid",3]]],[11,"from","","",584,[[]]],[11,"borrow","","",584,[[]]],[11,"borrow_mut","","",584,[[]]],[11,"try_from","","",584,[[],["result",4]]],[11,"into","","",584,[[]]],[11,"try_into","","",584,[[],["result",4]]],[11,"type_id","","",584,[[],["typeid",3]]],[11,"from","","",585,[[]]],[11,"borrow","","",585,[[]]],[11,"borrow_mut","","",585,[[]]],[11,"try_from","","",585,[[],["result",4]]],[11,"into","","",585,[[]]],[11,"try_into","","",585,[[],["result",4]]],[11,"type_id","","",585,[[],["typeid",3]]],[11,"from","","",586,[[]]],[11,"borrow","","",586,[[]]],[11,"borrow_mut","","",586,[[]]],[11,"try_from","","",586,[[],["result",4]]],[11,"into","","",586,[[]]],[11,"try_into","","",586,[[],["result",4]]],[11,"type_id","","",586,[[],["typeid",3]]],[11,"from","","",587,[[]]],[11,"borrow","","",587,[[]]],[11,"borrow_mut","","",587,[[]]],[11,"try_from","","",587,[[],["result",4]]],[11,"into","","",587,[[]]],[11,"try_into","","",587,[[],["result",4]]],[11,"type_id","","",587,[[],["typeid",3]]],[11,"from","","",588,[[]]],[11,"borrow","","",588,[[]]],[11,"borrow_mut","","",588,[[]]],[11,"try_from","","",588,[[],["result",4]]],[11,"into","","",588,[[]]],[11,"try_into","","",588,[[],["result",4]]],[11,"type_id","","",588,[[],["typeid",3]]],[11,"from","","",589,[[]]],[11,"borrow","","",589,[[]]],[11,"borrow_mut","","",589,[[]]],[11,"try_from","","",589,[[],["result",4]]],[11,"into","","",589,[[]]],[11,"try_into","","",589,[[],["result",4]]],[11,"type_id","","",589,[[],["typeid",3]]],[11,"from","","",590,[[]]],[11,"borrow","","",590,[[]]],[11,"borrow_mut","","",590,[[]]],[11,"try_from","","",590,[[],["result",4]]],[11,"into","","",590,[[]]],[11,"try_into","","",590,[[],["result",4]]],[11,"type_id","","",590,[[],["typeid",3]]],[11,"from","","",591,[[]]],[11,"borrow","","",591,[[]]],[11,"borrow_mut","","",591,[[]]],[11,"try_from","","",591,[[],["result",4]]],[11,"into","","",591,[[]]],[11,"try_into","","",591,[[],["result",4]]],[11,"type_id","","",591,[[],["typeid",3]]],[11,"from","","",592,[[]]],[11,"borrow","","",592,[[]]],[11,"borrow_mut","","",592,[[]]],[11,"try_from","","",592,[[],["result",4]]],[11,"into","","",592,[[]]],[11,"try_into","","",592,[[],["result",4]]],[11,"type_id","","",592,[[],["typeid",3]]],[11,"from","","",593,[[]]],[11,"borrow","","",593,[[]]],[11,"borrow_mut","","",593,[[]]],[11,"try_from","","",593,[[],["result",4]]],[11,"into","","",593,[[]]],[11,"try_into","","",593,[[],["result",4]]],[11,"type_id","","",593,[[],["typeid",3]]],[11,"from","rp2040_pac::rtc","",594,[[]]],[11,"borrow","","",594,[[]]],[11,"borrow_mut","","",594,[[]]],[11,"try_from","","",594,[[],["result",4]]],[11,"into","","",594,[[]]],[11,"try_into","","",594,[[],["result",4]]],[11,"type_id","","",594,[[],["typeid",3]]],[11,"from","rp2040_pac::sio::fields","",595,[[]]],[11,"borrow","","",595,[[]]],[11,"borrow_mut","","",595,[[]]],[11,"try_from","","",595,[[],["result",4]]],[11,"into","","",595,[[]]],[11,"try_into","","",595,[[],["result",4]]],[11,"type_id","","",595,[[],["typeid",3]]],[11,"from","","",596,[[]]],[11,"borrow","","",596,[[]]],[11,"borrow_mut","","",596,[[]]],[11,"try_from","","",596,[[],["result",4]]],[11,"into","","",596,[[]]],[11,"try_into","","",596,[[],["result",4]]],[11,"type_id","","",596,[[],["typeid",3]]],[11,"from","","",597,[[]]],[11,"borrow","","",597,[[]]],[11,"borrow_mut","","",597,[[]]],[11,"try_from","","",597,[[],["result",4]]],[11,"into","","",597,[[]]],[11,"try_into","","",597,[[],["result",4]]],[11,"type_id","","",597,[[],["typeid",3]]],[11,"from","","",598,[[]]],[11,"borrow","","",598,[[]]],[11,"borrow_mut","","",598,[[]]],[11,"try_from","","",598,[[],["result",4]]],[11,"into","","",598,[[]]],[11,"try_into","","",598,[[],["result",4]]],[11,"type_id","","",598,[[],["typeid",3]]],[11,"from","","",599,[[]]],[11,"borrow","","",599,[[]]],[11,"borrow_mut","","",599,[[]]],[11,"try_from","","",599,[[],["result",4]]],[11,"into","","",599,[[]]],[11,"try_into","","",599,[[],["result",4]]],[11,"type_id","","",599,[[],["typeid",3]]],[11,"from","","",600,[[]]],[11,"borrow","","",600,[[]]],[11,"borrow_mut","","",600,[[]]],[11,"try_from","","",600,[[],["result",4]]],[11,"into","","",600,[[]]],[11,"try_into","","",600,[[],["result",4]]],[11,"type_id","","",600,[[],["typeid",3]]],[11,"from","","",601,[[]]],[11,"borrow","","",601,[[]]],[11,"borrow_mut","","",601,[[]]],[11,"try_from","","",601,[[],["result",4]]],[11,"into","","",601,[[]]],[11,"try_into","","",601,[[],["result",4]]],[11,"type_id","","",601,[[],["typeid",3]]],[11,"from","","",602,[[]]],[11,"borrow","","",602,[[]]],[11,"borrow_mut","","",602,[[]]],[11,"try_from","","",602,[[],["result",4]]],[11,"into","","",602,[[]]],[11,"try_into","","",602,[[],["result",4]]],[11,"type_id","","",602,[[],["typeid",3]]],[11,"from","","",603,[[]]],[11,"borrow","","",603,[[]]],[11,"borrow_mut","","",603,[[]]],[11,"try_from","","",603,[[],["result",4]]],[11,"into","","",603,[[]]],[11,"try_into","","",603,[[],["result",4]]],[11,"type_id","","",603,[[],["typeid",3]]],[11,"from","","",604,[[]]],[11,"borrow","","",604,[[]]],[11,"borrow_mut","","",604,[[]]],[11,"try_from","","",604,[[],["result",4]]],[11,"into","","",604,[[]]],[11,"try_into","","",604,[[],["result",4]]],[11,"type_id","","",604,[[],["typeid",3]]],[11,"from","","",605,[[]]],[11,"borrow","","",605,[[]]],[11,"borrow_mut","","",605,[[]]],[11,"try_from","","",605,[[],["result",4]]],[11,"into","","",605,[[]]],[11,"try_into","","",605,[[],["result",4]]],[11,"type_id","","",605,[[],["typeid",3]]],[11,"from","","",606,[[]]],[11,"borrow","","",606,[[]]],[11,"borrow_mut","","",606,[[]]],[11,"try_from","","",606,[[],["result",4]]],[11,"into","","",606,[[]]],[11,"try_into","","",606,[[],["result",4]]],[11,"type_id","","",606,[[],["typeid",3]]],[11,"from","","",607,[[]]],[11,"borrow","","",607,[[]]],[11,"borrow_mut","","",607,[[]]],[11,"try_from","","",607,[[],["result",4]]],[11,"into","","",607,[[]]],[11,"try_into","","",607,[[],["result",4]]],[11,"type_id","","",607,[[],["typeid",3]]],[11,"from","","",608,[[]]],[11,"borrow","","",608,[[]]],[11,"borrow_mut","","",608,[[]]],[11,"try_from","","",608,[[],["result",4]]],[11,"into","","",608,[[]]],[11,"try_into","","",608,[[],["result",4]]],[11,"type_id","","",608,[[],["typeid",3]]],[11,"from","","",609,[[]]],[11,"borrow","","",609,[[]]],[11,"borrow_mut","","",609,[[]]],[11,"try_from","","",609,[[],["result",4]]],[11,"into","","",609,[[]]],[11,"try_into","","",609,[[],["result",4]]],[11,"type_id","","",609,[[],["typeid",3]]],[11,"from","","",610,[[]]],[11,"borrow","","",610,[[]]],[11,"borrow_mut","","",610,[[]]],[11,"try_from","","",610,[[],["result",4]]],[11,"into","","",610,[[]]],[11,"try_into","","",610,[[],["result",4]]],[11,"type_id","","",610,[[],["typeid",3]]],[11,"from","","",611,[[]]],[11,"borrow","","",611,[[]]],[11,"borrow_mut","","",611,[[]]],[11,"try_from","","",611,[[],["result",4]]],[11,"into","","",611,[[]]],[11,"try_into","","",611,[[],["result",4]]],[11,"type_id","","",611,[[],["typeid",3]]],[11,"from","","",612,[[]]],[11,"borrow","","",612,[[]]],[11,"borrow_mut","","",612,[[]]],[11,"try_from","","",612,[[],["result",4]]],[11,"into","","",612,[[]]],[11,"try_into","","",612,[[],["result",4]]],[11,"type_id","","",612,[[],["typeid",3]]],[11,"from","","",613,[[]]],[11,"borrow","","",613,[[]]],[11,"borrow_mut","","",613,[[]]],[11,"try_from","","",613,[[],["result",4]]],[11,"into","","",613,[[]]],[11,"try_into","","",613,[[],["result",4]]],[11,"type_id","","",613,[[],["typeid",3]]],[11,"from","","",614,[[]]],[11,"borrow","","",614,[[]]],[11,"borrow_mut","","",614,[[]]],[11,"try_from","","",614,[[],["result",4]]],[11,"into","","",614,[[]]],[11,"try_into","","",614,[[],["result",4]]],[11,"type_id","","",614,[[],["typeid",3]]],[11,"from","","",615,[[]]],[11,"borrow","","",615,[[]]],[11,"borrow_mut","","",615,[[]]],[11,"try_from","","",615,[[],["result",4]]],[11,"into","","",615,[[]]],[11,"try_into","","",615,[[],["result",4]]],[11,"type_id","","",615,[[],["typeid",3]]],[11,"from","","",616,[[]]],[11,"borrow","","",616,[[]]],[11,"borrow_mut","","",616,[[]]],[11,"try_from","","",616,[[],["result",4]]],[11,"into","","",616,[[]]],[11,"try_into","","",616,[[],["result",4]]],[11,"type_id","","",616,[[],["typeid",3]]],[11,"from","","",617,[[]]],[11,"borrow","","",617,[[]]],[11,"borrow_mut","","",617,[[]]],[11,"try_from","","",617,[[],["result",4]]],[11,"into","","",617,[[]]],[11,"try_into","","",617,[[],["result",4]]],[11,"type_id","","",617,[[],["typeid",3]]],[11,"from","","",618,[[]]],[11,"borrow","","",618,[[]]],[11,"borrow_mut","","",618,[[]]],[11,"try_from","","",618,[[],["result",4]]],[11,"into","","",618,[[]]],[11,"try_into","","",618,[[],["result",4]]],[11,"type_id","","",618,[[],["typeid",3]]],[11,"from","","",619,[[]]],[11,"borrow","","",619,[[]]],[11,"borrow_mut","","",619,[[]]],[11,"try_from","","",619,[[],["result",4]]],[11,"into","","",619,[[]]],[11,"try_into","","",619,[[],["result",4]]],[11,"type_id","","",619,[[],["typeid",3]]],[11,"from","","",620,[[]]],[11,"borrow","","",620,[[]]],[11,"borrow_mut","","",620,[[]]],[11,"try_from","","",620,[[],["result",4]]],[11,"into","","",620,[[]]],[11,"try_into","","",620,[[],["result",4]]],[11,"type_id","","",620,[[],["typeid",3]]],[11,"from","","",621,[[]]],[11,"borrow","","",621,[[]]],[11,"borrow_mut","","",621,[[]]],[11,"try_from","","",621,[[],["result",4]]],[11,"into","","",621,[[]]],[11,"try_into","","",621,[[],["result",4]]],[11,"type_id","","",621,[[],["typeid",3]]],[11,"from","","",622,[[]]],[11,"borrow","","",622,[[]]],[11,"borrow_mut","","",622,[[]]],[11,"try_from","","",622,[[],["result",4]]],[11,"into","","",622,[[]]],[11,"try_into","","",622,[[],["result",4]]],[11,"type_id","","",622,[[],["typeid",3]]],[11,"from","rp2040_pac::sio","",623,[[]]],[11,"borrow","","",623,[[]]],[11,"borrow_mut","","",623,[[]]],[11,"try_from","","",623,[[],["result",4]]],[11,"into","","",623,[[]]],[11,"try_into","","",623,[[],["result",4]]],[11,"type_id","","",623,[[],["typeid",3]]],[11,"from","rp2040_pac::spi0::fields","",624,[[]]],[11,"borrow","","",624,[[]]],[11,"borrow_mut","","",624,[[]]],[11,"try_from","","",624,[[],["result",4]]],[11,"into","","",624,[[]]],[11,"try_into","","",624,[[],["result",4]]],[11,"type_id","","",624,[[],["typeid",3]]],[11,"from","","",625,[[]]],[11,"borrow","","",625,[[]]],[11,"borrow_mut","","",625,[[]]],[11,"try_from","","",625,[[],["result",4]]],[11,"into","","",625,[[]]],[11,"try_into","","",625,[[],["result",4]]],[11,"type_id","","",625,[[],["typeid",3]]],[11,"from","","",626,[[]]],[11,"borrow","","",626,[[]]],[11,"borrow_mut","","",626,[[]]],[11,"try_from","","",626,[[],["result",4]]],[11,"into","","",626,[[]]],[11,"try_into","","",626,[[],["result",4]]],[11,"type_id","","",626,[[],["typeid",3]]],[11,"from","","",627,[[]]],[11,"borrow","","",627,[[]]],[11,"borrow_mut","","",627,[[]]],[11,"try_from","","",627,[[],["result",4]]],[11,"into","","",627,[[]]],[11,"try_into","","",627,[[],["result",4]]],[11,"type_id","","",627,[[],["typeid",3]]],[11,"from","","",628,[[]]],[11,"borrow","","",628,[[]]],[11,"borrow_mut","","",628,[[]]],[11,"try_from","","",628,[[],["result",4]]],[11,"into","","",628,[[]]],[11,"try_into","","",628,[[],["result",4]]],[11,"type_id","","",628,[[],["typeid",3]]],[11,"from","","",629,[[]]],[11,"borrow","","",629,[[]]],[11,"borrow_mut","","",629,[[]]],[11,"try_from","","",629,[[],["result",4]]],[11,"into","","",629,[[]]],[11,"try_into","","",629,[[],["result",4]]],[11,"type_id","","",629,[[],["typeid",3]]],[11,"from","","",630,[[]]],[11,"borrow","","",630,[[]]],[11,"borrow_mut","","",630,[[]]],[11,"try_from","","",630,[[],["result",4]]],[11,"into","","",630,[[]]],[11,"try_into","","",630,[[],["result",4]]],[11,"type_id","","",630,[[],["typeid",3]]],[11,"from","","",631,[[]]],[11,"borrow","","",631,[[]]],[11,"borrow_mut","","",631,[[]]],[11,"try_from","","",631,[[],["result",4]]],[11,"into","","",631,[[]]],[11,"try_into","","",631,[[],["result",4]]],[11,"type_id","","",631,[[],["typeid",3]]],[11,"from","","",632,[[]]],[11,"borrow","","",632,[[]]],[11,"borrow_mut","","",632,[[]]],[11,"try_from","","",632,[[],["result",4]]],[11,"into","","",632,[[]]],[11,"try_into","","",632,[[],["result",4]]],[11,"type_id","","",632,[[],["typeid",3]]],[11,"from","","",633,[[]]],[11,"borrow","","",633,[[]]],[11,"borrow_mut","","",633,[[]]],[11,"try_from","","",633,[[],["result",4]]],[11,"into","","",633,[[]]],[11,"try_into","","",633,[[],["result",4]]],[11,"type_id","","",633,[[],["typeid",3]]],[11,"from","","",634,[[]]],[11,"borrow","","",634,[[]]],[11,"borrow_mut","","",634,[[]]],[11,"try_from","","",634,[[],["result",4]]],[11,"into","","",634,[[]]],[11,"try_into","","",634,[[],["result",4]]],[11,"type_id","","",634,[[],["typeid",3]]],[11,"from","","",635,[[]]],[11,"borrow","","",635,[[]]],[11,"borrow_mut","","",635,[[]]],[11,"try_from","","",635,[[],["result",4]]],[11,"into","","",635,[[]]],[11,"try_into","","",635,[[],["result",4]]],[11,"type_id","","",635,[[],["typeid",3]]],[11,"from","","",636,[[]]],[11,"borrow","","",636,[[]]],[11,"borrow_mut","","",636,[[]]],[11,"try_from","","",636,[[],["result",4]]],[11,"into","","",636,[[]]],[11,"try_into","","",636,[[],["result",4]]],[11,"type_id","","",636,[[],["typeid",3]]],[11,"from","","",637,[[]]],[11,"borrow","","",637,[[]]],[11,"borrow_mut","","",637,[[]]],[11,"try_from","","",637,[[],["result",4]]],[11,"into","","",637,[[]]],[11,"try_into","","",637,[[],["result",4]]],[11,"type_id","","",637,[[],["typeid",3]]],[11,"from","","",638,[[]]],[11,"borrow","","",638,[[]]],[11,"borrow_mut","","",638,[[]]],[11,"try_from","","",638,[[],["result",4]]],[11,"into","","",638,[[]]],[11,"try_into","","",638,[[],["result",4]]],[11,"type_id","","",638,[[],["typeid",3]]],[11,"from","","",639,[[]]],[11,"borrow","","",639,[[]]],[11,"borrow_mut","","",639,[[]]],[11,"try_from","","",639,[[],["result",4]]],[11,"into","","",639,[[]]],[11,"try_into","","",639,[[],["result",4]]],[11,"type_id","","",639,[[],["typeid",3]]],[11,"from","","",640,[[]]],[11,"borrow","","",640,[[]]],[11,"borrow_mut","","",640,[[]]],[11,"try_from","","",640,[[],["result",4]]],[11,"into","","",640,[[]]],[11,"try_into","","",640,[[],["result",4]]],[11,"type_id","","",640,[[],["typeid",3]]],[11,"from","","",641,[[]]],[11,"borrow","","",641,[[]]],[11,"borrow_mut","","",641,[[]]],[11,"try_from","","",641,[[],["result",4]]],[11,"into","","",641,[[]]],[11,"try_into","","",641,[[],["result",4]]],[11,"type_id","","",641,[[],["typeid",3]]],[11,"from","rp2040_pac::spi0","",642,[[]]],[11,"borrow","","",642,[[]]],[11,"borrow_mut","","",642,[[]]],[11,"try_from","","",642,[[],["result",4]]],[11,"into","","",642,[[]]],[11,"try_into","","",642,[[],["result",4]]],[11,"type_id","","",642,[[],["typeid",3]]],[11,"from","rp2040_pac::syscfg::fields","",643,[[]]],[11,"borrow","","",643,[[]]],[11,"borrow_mut","","",643,[[]]],[11,"try_from","","",643,[[],["result",4]]],[11,"into","","",643,[[]]],[11,"try_into","","",643,[[],["result",4]]],[11,"type_id","","",643,[[],["typeid",3]]],[11,"from","","",644,[[]]],[11,"borrow","","",644,[[]]],[11,"borrow_mut","","",644,[[]]],[11,"try_from","","",644,[[],["result",4]]],[11,"into","","",644,[[]]],[11,"try_into","","",644,[[],["result",4]]],[11,"type_id","","",644,[[],["typeid",3]]],[11,"from","","",645,[[]]],[11,"borrow","","",645,[[]]],[11,"borrow_mut","","",645,[[]]],[11,"try_from","","",645,[[],["result",4]]],[11,"into","","",645,[[]]],[11,"try_into","","",645,[[],["result",4]]],[11,"type_id","","",645,[[],["typeid",3]]],[11,"from","","",646,[[]]],[11,"borrow","","",646,[[]]],[11,"borrow_mut","","",646,[[]]],[11,"try_from","","",646,[[],["result",4]]],[11,"into","","",646,[[]]],[11,"try_into","","",646,[[],["result",4]]],[11,"type_id","","",646,[[],["typeid",3]]],[11,"from","","",647,[[]]],[11,"borrow","","",647,[[]]],[11,"borrow_mut","","",647,[[]]],[11,"try_from","","",647,[[],["result",4]]],[11,"into","","",647,[[]]],[11,"try_into","","",647,[[],["result",4]]],[11,"type_id","","",647,[[],["typeid",3]]],[11,"from","rp2040_pac::syscfg","",648,[[]]],[11,"borrow","","",648,[[]]],[11,"borrow_mut","","",648,[[]]],[11,"try_from","","",648,[[],["result",4]]],[11,"into","","",648,[[]]],[11,"try_into","","",648,[[],["result",4]]],[11,"type_id","","",648,[[],["typeid",3]]],[11,"from","rp2040_pac::sysinfo::fields","",649,[[]]],[11,"borrow","","",649,[[]]],[11,"borrow_mut","","",649,[[]]],[11,"try_from","","",649,[[],["result",4]]],[11,"into","","",649,[[]]],[11,"try_into","","",649,[[],["result",4]]],[11,"type_id","","",649,[[],["typeid",3]]],[11,"from","","",650,[[]]],[11,"borrow","","",650,[[]]],[11,"borrow_mut","","",650,[[]]],[11,"try_from","","",650,[[],["result",4]]],[11,"into","","",650,[[]]],[11,"try_into","","",650,[[],["result",4]]],[11,"type_id","","",650,[[],["typeid",3]]],[11,"from","rp2040_pac::sysinfo","",651,[[]]],[11,"borrow","","",651,[[]]],[11,"borrow_mut","","",651,[[]]],[11,"try_from","","",651,[[],["result",4]]],[11,"into","","",651,[[]]],[11,"try_into","","",651,[[],["result",4]]],[11,"type_id","","",651,[[],["typeid",3]]],[11,"from","rp2040_pac::tbman::fields","",652,[[]]],[11,"borrow","","",652,[[]]],[11,"borrow_mut","","",652,[[]]],[11,"try_from","","",652,[[],["result",4]]],[11,"into","","",652,[[]]],[11,"try_into","","",652,[[],["result",4]]],[11,"type_id","","",652,[[],["typeid",3]]],[11,"from","rp2040_pac::tbman","",653,[[]]],[11,"borrow","","",653,[[]]],[11,"borrow_mut","","",653,[[]]],[11,"try_from","","",653,[[],["result",4]]],[11,"into","","",653,[[]]],[11,"try_into","","",653,[[],["result",4]]],[11,"type_id","","",653,[[],["typeid",3]]],[11,"from","rp2040_pac::timer::fields","",654,[[]]],[11,"borrow","","",654,[[]]],[11,"borrow_mut","","",654,[[]]],[11,"try_from","","",654,[[],["result",4]]],[11,"into","","",654,[[]]],[11,"try_into","","",654,[[],["result",4]]],[11,"type_id","","",654,[[],["typeid",3]]],[11,"from","","",655,[[]]],[11,"borrow","","",655,[[]]],[11,"borrow_mut","","",655,[[]]],[11,"try_from","","",655,[[],["result",4]]],[11,"into","","",655,[[]]],[11,"try_into","","",655,[[],["result",4]]],[11,"type_id","","",655,[[],["typeid",3]]],[11,"from","","",656,[[]]],[11,"borrow","","",656,[[]]],[11,"borrow_mut","","",656,[[]]],[11,"try_from","","",656,[[],["result",4]]],[11,"into","","",656,[[]]],[11,"try_into","","",656,[[],["result",4]]],[11,"type_id","","",656,[[],["typeid",3]]],[11,"from","","",657,[[]]],[11,"borrow","","",657,[[]]],[11,"borrow_mut","","",657,[[]]],[11,"try_from","","",657,[[],["result",4]]],[11,"into","","",657,[[]]],[11,"try_into","","",657,[[],["result",4]]],[11,"type_id","","",657,[[],["typeid",3]]],[11,"from","","",658,[[]]],[11,"borrow","","",658,[[]]],[11,"borrow_mut","","",658,[[]]],[11,"try_from","","",658,[[],["result",4]]],[11,"into","","",658,[[]]],[11,"try_into","","",658,[[],["result",4]]],[11,"type_id","","",658,[[],["typeid",3]]],[11,"from","","",659,[[]]],[11,"borrow","","",659,[[]]],[11,"borrow_mut","","",659,[[]]],[11,"try_from","","",659,[[],["result",4]]],[11,"into","","",659,[[]]],[11,"try_into","","",659,[[],["result",4]]],[11,"type_id","","",659,[[],["typeid",3]]],[11,"from","","",660,[[]]],[11,"borrow","","",660,[[]]],[11,"borrow_mut","","",660,[[]]],[11,"try_from","","",660,[[],["result",4]]],[11,"into","","",660,[[]]],[11,"try_into","","",660,[[],["result",4]]],[11,"type_id","","",660,[[],["typeid",3]]],[11,"from","rp2040_pac::timer","",661,[[]]],[11,"borrow","","",661,[[]]],[11,"borrow_mut","","",661,[[]]],[11,"try_from","","",661,[[],["result",4]]],[11,"into","","",661,[[]]],[11,"try_into","","",661,[[],["result",4]]],[11,"type_id","","",661,[[],["typeid",3]]],[11,"from","rp2040_pac::uart0::fields","",662,[[]]],[11,"borrow","","",662,[[]]],[11,"borrow_mut","","",662,[[]]],[11,"try_from","","",662,[[],["result",4]]],[11,"into","","",662,[[]]],[11,"try_into","","",662,[[],["result",4]]],[11,"type_id","","",662,[[],["typeid",3]]],[11,"from","","",663,[[]]],[11,"borrow","","",663,[[]]],[11,"borrow_mut","","",663,[[]]],[11,"try_from","","",663,[[],["result",4]]],[11,"into","","",663,[[]]],[11,"try_into","","",663,[[],["result",4]]],[11,"type_id","","",663,[[],["typeid",3]]],[11,"from","","",664,[[]]],[11,"borrow","","",664,[[]]],[11,"borrow_mut","","",664,[[]]],[11,"try_from","","",664,[[],["result",4]]],[11,"into","","",664,[[]]],[11,"try_into","","",664,[[],["result",4]]],[11,"type_id","","",664,[[],["typeid",3]]],[11,"from","","",665,[[]]],[11,"borrow","","",665,[[]]],[11,"borrow_mut","","",665,[[]]],[11,"try_from","","",665,[[],["result",4]]],[11,"into","","",665,[[]]],[11,"try_into","","",665,[[],["result",4]]],[11,"type_id","","",665,[[],["typeid",3]]],[11,"from","","",666,[[]]],[11,"borrow","","",666,[[]]],[11,"borrow_mut","","",666,[[]]],[11,"try_from","","",666,[[],["result",4]]],[11,"into","","",666,[[]]],[11,"try_into","","",666,[[],["result",4]]],[11,"type_id","","",666,[[],["typeid",3]]],[11,"from","","",667,[[]]],[11,"borrow","","",667,[[]]],[11,"borrow_mut","","",667,[[]]],[11,"try_from","","",667,[[],["result",4]]],[11,"into","","",667,[[]]],[11,"try_into","","",667,[[],["result",4]]],[11,"type_id","","",667,[[],["typeid",3]]],[11,"from","","",668,[[]]],[11,"borrow","","",668,[[]]],[11,"borrow_mut","","",668,[[]]],[11,"try_from","","",668,[[],["result",4]]],[11,"into","","",668,[[]]],[11,"try_into","","",668,[[],["result",4]]],[11,"type_id","","",668,[[],["typeid",3]]],[11,"from","","",669,[[]]],[11,"borrow","","",669,[[]]],[11,"borrow_mut","","",669,[[]]],[11,"try_from","","",669,[[],["result",4]]],[11,"into","","",669,[[]]],[11,"try_into","","",669,[[],["result",4]]],[11,"type_id","","",669,[[],["typeid",3]]],[11,"from","","",670,[[]]],[11,"borrow","","",670,[[]]],[11,"borrow_mut","","",670,[[]]],[11,"try_from","","",670,[[],["result",4]]],[11,"into","","",670,[[]]],[11,"try_into","","",670,[[],["result",4]]],[11,"type_id","","",670,[[],["typeid",3]]],[11,"from","","",671,[[]]],[11,"borrow","","",671,[[]]],[11,"borrow_mut","","",671,[[]]],[11,"try_from","","",671,[[],["result",4]]],[11,"into","","",671,[[]]],[11,"try_into","","",671,[[],["result",4]]],[11,"type_id","","",671,[[],["typeid",3]]],[11,"from","","",672,[[]]],[11,"borrow","","",672,[[]]],[11,"borrow_mut","","",672,[[]]],[11,"try_from","","",672,[[],["result",4]]],[11,"into","","",672,[[]]],[11,"try_into","","",672,[[],["result",4]]],[11,"type_id","","",672,[[],["typeid",3]]],[11,"from","","",673,[[]]],[11,"borrow","","",673,[[]]],[11,"borrow_mut","","",673,[[]]],[11,"try_from","","",673,[[],["result",4]]],[11,"into","","",673,[[]]],[11,"try_into","","",673,[[],["result",4]]],[11,"type_id","","",673,[[],["typeid",3]]],[11,"from","","",674,[[]]],[11,"borrow","","",674,[[]]],[11,"borrow_mut","","",674,[[]]],[11,"try_from","","",674,[[],["result",4]]],[11,"into","","",674,[[]]],[11,"try_into","","",674,[[],["result",4]]],[11,"type_id","","",674,[[],["typeid",3]]],[11,"from","","",675,[[]]],[11,"borrow","","",675,[[]]],[11,"borrow_mut","","",675,[[]]],[11,"try_from","","",675,[[],["result",4]]],[11,"into","","",675,[[]]],[11,"try_into","","",675,[[],["result",4]]],[11,"type_id","","",675,[[],["typeid",3]]],[11,"from","","",676,[[]]],[11,"borrow","","",676,[[]]],[11,"borrow_mut","","",676,[[]]],[11,"try_from","","",676,[[],["result",4]]],[11,"into","","",676,[[]]],[11,"try_into","","",676,[[],["result",4]]],[11,"type_id","","",676,[[],["typeid",3]]],[11,"from","","",677,[[]]],[11,"borrow","","",677,[[]]],[11,"borrow_mut","","",677,[[]]],[11,"try_from","","",677,[[],["result",4]]],[11,"into","","",677,[[]]],[11,"try_into","","",677,[[],["result",4]]],[11,"type_id","","",677,[[],["typeid",3]]],[11,"from","","",678,[[]]],[11,"borrow","","",678,[[]]],[11,"borrow_mut","","",678,[[]]],[11,"try_from","","",678,[[],["result",4]]],[11,"into","","",678,[[]]],[11,"try_into","","",678,[[],["result",4]]],[11,"type_id","","",678,[[],["typeid",3]]],[11,"from","","",679,[[]]],[11,"borrow","","",679,[[]]],[11,"borrow_mut","","",679,[[]]],[11,"try_from","","",679,[[],["result",4]]],[11,"into","","",679,[[]]],[11,"try_into","","",679,[[],["result",4]]],[11,"type_id","","",679,[[],["typeid",3]]],[11,"from","","",680,[[]]],[11,"borrow","","",680,[[]]],[11,"borrow_mut","","",680,[[]]],[11,"try_from","","",680,[[],["result",4]]],[11,"into","","",680,[[]]],[11,"try_into","","",680,[[],["result",4]]],[11,"type_id","","",680,[[],["typeid",3]]],[11,"from","","",681,[[]]],[11,"borrow","","",681,[[]]],[11,"borrow_mut","","",681,[[]]],[11,"try_from","","",681,[[],["result",4]]],[11,"into","","",681,[[]]],[11,"try_into","","",681,[[],["result",4]]],[11,"type_id","","",681,[[],["typeid",3]]],[11,"from","","",682,[[]]],[11,"borrow","","",682,[[]]],[11,"borrow_mut","","",682,[[]]],[11,"try_from","","",682,[[],["result",4]]],[11,"into","","",682,[[]]],[11,"try_into","","",682,[[],["result",4]]],[11,"type_id","","",682,[[],["typeid",3]]],[11,"from","","",683,[[]]],[11,"borrow","","",683,[[]]],[11,"borrow_mut","","",683,[[]]],[11,"try_from","","",683,[[],["result",4]]],[11,"into","","",683,[[]]],[11,"try_into","","",683,[[],["result",4]]],[11,"type_id","","",683,[[],["typeid",3]]],[11,"from","rp2040_pac::uart0","",684,[[]]],[11,"borrow","","",684,[[]]],[11,"borrow_mut","","",684,[[]]],[11,"try_from","","",684,[[],["result",4]]],[11,"into","","",684,[[]]],[11,"try_into","","",684,[[],["result",4]]],[11,"type_id","","",684,[[],["typeid",3]]],[11,"from","rp2040_pac::usbctrl_regs::fields","",685,[[]]],[11,"borrow","","",685,[[]]],[11,"borrow_mut","","",685,[[]]],[11,"try_from","","",685,[[],["result",4]]],[11,"into","","",685,[[]]],[11,"try_into","","",685,[[],["result",4]]],[11,"type_id","","",685,[[],["typeid",3]]],[11,"from","","",686,[[]]],[11,"borrow","","",686,[[]]],[11,"borrow_mut","","",686,[[]]],[11,"try_from","","",686,[[],["result",4]]],[11,"into","","",686,[[]]],[11,"try_into","","",686,[[],["result",4]]],[11,"type_id","","",686,[[],["typeid",3]]],[11,"from","","",687,[[]]],[11,"borrow","","",687,[[]]],[11,"borrow_mut","","",687,[[]]],[11,"try_from","","",687,[[],["result",4]]],[11,"into","","",687,[[]]],[11,"try_into","","",687,[[],["result",4]]],[11,"type_id","","",687,[[],["typeid",3]]],[11,"from","","",688,[[]]],[11,"borrow","","",688,[[]]],[11,"borrow_mut","","",688,[[]]],[11,"try_from","","",688,[[],["result",4]]],[11,"into","","",688,[[]]],[11,"try_into","","",688,[[],["result",4]]],[11,"type_id","","",688,[[],["typeid",3]]],[11,"from","","",689,[[]]],[11,"borrow","","",689,[[]]],[11,"borrow_mut","","",689,[[]]],[11,"try_from","","",689,[[],["result",4]]],[11,"into","","",689,[[]]],[11,"try_into","","",689,[[],["result",4]]],[11,"type_id","","",689,[[],["typeid",3]]],[11,"from","","",690,[[]]],[11,"borrow","","",690,[[]]],[11,"borrow_mut","","",690,[[]]],[11,"try_from","","",690,[[],["result",4]]],[11,"into","","",690,[[]]],[11,"try_into","","",690,[[],["result",4]]],[11,"type_id","","",690,[[],["typeid",3]]],[11,"from","","",691,[[]]],[11,"borrow","","",691,[[]]],[11,"borrow_mut","","",691,[[]]],[11,"try_from","","",691,[[],["result",4]]],[11,"into","","",691,[[]]],[11,"try_into","","",691,[[],["result",4]]],[11,"type_id","","",691,[[],["typeid",3]]],[11,"from","","",692,[[]]],[11,"borrow","","",692,[[]]],[11,"borrow_mut","","",692,[[]]],[11,"try_from","","",692,[[],["result",4]]],[11,"into","","",692,[[]]],[11,"try_into","","",692,[[],["result",4]]],[11,"type_id","","",692,[[],["typeid",3]]],[11,"from","","",693,[[]]],[11,"borrow","","",693,[[]]],[11,"borrow_mut","","",693,[[]]],[11,"try_from","","",693,[[],["result",4]]],[11,"into","","",693,[[]]],[11,"try_into","","",693,[[],["result",4]]],[11,"type_id","","",693,[[],["typeid",3]]],[11,"from","","",694,[[]]],[11,"borrow","","",694,[[]]],[11,"borrow_mut","","",694,[[]]],[11,"try_from","","",694,[[],["result",4]]],[11,"into","","",694,[[]]],[11,"try_into","","",694,[[],["result",4]]],[11,"type_id","","",694,[[],["typeid",3]]],[11,"from","","",695,[[]]],[11,"borrow","","",695,[[]]],[11,"borrow_mut","","",695,[[]]],[11,"try_from","","",695,[[],["result",4]]],[11,"into","","",695,[[]]],[11,"try_into","","",695,[[],["result",4]]],[11,"type_id","","",695,[[],["typeid",3]]],[11,"from","","",696,[[]]],[11,"borrow","","",696,[[]]],[11,"borrow_mut","","",696,[[]]],[11,"try_from","","",696,[[],["result",4]]],[11,"into","","",696,[[]]],[11,"try_into","","",696,[[],["result",4]]],[11,"type_id","","",696,[[],["typeid",3]]],[11,"from","","",697,[[]]],[11,"borrow","","",697,[[]]],[11,"borrow_mut","","",697,[[]]],[11,"try_from","","",697,[[],["result",4]]],[11,"into","","",697,[[]]],[11,"try_into","","",697,[[],["result",4]]],[11,"type_id","","",697,[[],["typeid",3]]],[11,"from","","",698,[[]]],[11,"borrow","","",698,[[]]],[11,"borrow_mut","","",698,[[]]],[11,"try_from","","",698,[[],["result",4]]],[11,"into","","",698,[[]]],[11,"try_into","","",698,[[],["result",4]]],[11,"type_id","","",698,[[],["typeid",3]]],[11,"from","","",699,[[]]],[11,"borrow","","",699,[[]]],[11,"borrow_mut","","",699,[[]]],[11,"try_from","","",699,[[],["result",4]]],[11,"into","","",699,[[]]],[11,"try_into","","",699,[[],["result",4]]],[11,"type_id","","",699,[[],["typeid",3]]],[11,"from","","",700,[[]]],[11,"borrow","","",700,[[]]],[11,"borrow_mut","","",700,[[]]],[11,"try_from","","",700,[[],["result",4]]],[11,"into","","",700,[[]]],[11,"try_into","","",700,[[],["result",4]]],[11,"type_id","","",700,[[],["typeid",3]]],[11,"from","","",701,[[]]],[11,"borrow","","",701,[[]]],[11,"borrow_mut","","",701,[[]]],[11,"try_from","","",701,[[],["result",4]]],[11,"into","","",701,[[]]],[11,"try_into","","",701,[[],["result",4]]],[11,"type_id","","",701,[[],["typeid",3]]],[11,"from","","",702,[[]]],[11,"borrow","","",702,[[]]],[11,"borrow_mut","","",702,[[]]],[11,"try_from","","",702,[[],["result",4]]],[11,"into","","",702,[[]]],[11,"try_into","","",702,[[],["result",4]]],[11,"type_id","","",702,[[],["typeid",3]]],[11,"from","","",703,[[]]],[11,"borrow","","",703,[[]]],[11,"borrow_mut","","",703,[[]]],[11,"try_from","","",703,[[],["result",4]]],[11,"into","","",703,[[]]],[11,"try_into","","",703,[[],["result",4]]],[11,"type_id","","",703,[[],["typeid",3]]],[11,"from","","",704,[[]]],[11,"borrow","","",704,[[]]],[11,"borrow_mut","","",704,[[]]],[11,"try_from","","",704,[[],["result",4]]],[11,"into","","",704,[[]]],[11,"try_into","","",704,[[],["result",4]]],[11,"type_id","","",704,[[],["typeid",3]]],[11,"from","","",705,[[]]],[11,"borrow","","",705,[[]]],[11,"borrow_mut","","",705,[[]]],[11,"try_from","","",705,[[],["result",4]]],[11,"into","","",705,[[]]],[11,"try_into","","",705,[[],["result",4]]],[11,"type_id","","",705,[[],["typeid",3]]],[11,"from","","",706,[[]]],[11,"borrow","","",706,[[]]],[11,"borrow_mut","","",706,[[]]],[11,"try_from","","",706,[[],["result",4]]],[11,"into","","",706,[[]]],[11,"try_into","","",706,[[],["result",4]]],[11,"type_id","","",706,[[],["typeid",3]]],[11,"from","","",707,[[]]],[11,"borrow","","",707,[[]]],[11,"borrow_mut","","",707,[[]]],[11,"try_from","","",707,[[],["result",4]]],[11,"into","","",707,[[]]],[11,"try_into","","",707,[[],["result",4]]],[11,"type_id","","",707,[[],["typeid",3]]],[11,"from","","",708,[[]]],[11,"borrow","","",708,[[]]],[11,"borrow_mut","","",708,[[]]],[11,"try_from","","",708,[[],["result",4]]],[11,"into","","",708,[[]]],[11,"try_into","","",708,[[],["result",4]]],[11,"type_id","","",708,[[],["typeid",3]]],[11,"from","","",709,[[]]],[11,"borrow","","",709,[[]]],[11,"borrow_mut","","",709,[[]]],[11,"try_from","","",709,[[],["result",4]]],[11,"into","","",709,[[]]],[11,"try_into","","",709,[[],["result",4]]],[11,"type_id","","",709,[[],["typeid",3]]],[11,"from","","",710,[[]]],[11,"borrow","","",710,[[]]],[11,"borrow_mut","","",710,[[]]],[11,"try_from","","",710,[[],["result",4]]],[11,"into","","",710,[[]]],[11,"try_into","","",710,[[],["result",4]]],[11,"type_id","","",710,[[],["typeid",3]]],[11,"from","","",711,[[]]],[11,"borrow","","",711,[[]]],[11,"borrow_mut","","",711,[[]]],[11,"try_from","","",711,[[],["result",4]]],[11,"into","","",711,[[]]],[11,"try_into","","",711,[[],["result",4]]],[11,"type_id","","",711,[[],["typeid",3]]],[11,"from","","",712,[[]]],[11,"borrow","","",712,[[]]],[11,"borrow_mut","","",712,[[]]],[11,"try_from","","",712,[[],["result",4]]],[11,"into","","",712,[[]]],[11,"try_into","","",712,[[],["result",4]]],[11,"type_id","","",712,[[],["typeid",3]]],[11,"from","","",713,[[]]],[11,"borrow","","",713,[[]]],[11,"borrow_mut","","",713,[[]]],[11,"try_from","","",713,[[],["result",4]]],[11,"into","","",713,[[]]],[11,"try_into","","",713,[[],["result",4]]],[11,"type_id","","",713,[[],["typeid",3]]],[11,"from","","",714,[[]]],[11,"borrow","","",714,[[]]],[11,"borrow_mut","","",714,[[]]],[11,"try_from","","",714,[[],["result",4]]],[11,"into","","",714,[[]]],[11,"try_into","","",714,[[],["result",4]]],[11,"type_id","","",714,[[],["typeid",3]]],[11,"from","","",715,[[]]],[11,"borrow","","",715,[[]]],[11,"borrow_mut","","",715,[[]]],[11,"try_from","","",715,[[],["result",4]]],[11,"into","","",715,[[]]],[11,"try_into","","",715,[[],["result",4]]],[11,"type_id","","",715,[[],["typeid",3]]],[11,"from","","",716,[[]]],[11,"borrow","","",716,[[]]],[11,"borrow_mut","","",716,[[]]],[11,"try_from","","",716,[[],["result",4]]],[11,"into","","",716,[[]]],[11,"try_into","","",716,[[],["result",4]]],[11,"type_id","","",716,[[],["typeid",3]]],[11,"from","","",717,[[]]],[11,"borrow","","",717,[[]]],[11,"borrow_mut","","",717,[[]]],[11,"try_from","","",717,[[],["result",4]]],[11,"into","","",717,[[]]],[11,"try_into","","",717,[[],["result",4]]],[11,"type_id","","",717,[[],["typeid",3]]],[11,"from","","",718,[[]]],[11,"borrow","","",718,[[]]],[11,"borrow_mut","","",718,[[]]],[11,"try_from","","",718,[[],["result",4]]],[11,"into","","",718,[[]]],[11,"try_into","","",718,[[],["result",4]]],[11,"type_id","","",718,[[],["typeid",3]]],[11,"from","","",719,[[]]],[11,"borrow","","",719,[[]]],[11,"borrow_mut","","",719,[[]]],[11,"try_from","","",719,[[],["result",4]]],[11,"into","","",719,[[]]],[11,"try_into","","",719,[[],["result",4]]],[11,"type_id","","",719,[[],["typeid",3]]],[11,"from","","",720,[[]]],[11,"borrow","","",720,[[]]],[11,"borrow_mut","","",720,[[]]],[11,"try_from","","",720,[[],["result",4]]],[11,"into","","",720,[[]]],[11,"try_into","","",720,[[],["result",4]]],[11,"type_id","","",720,[[],["typeid",3]]],[11,"from","","",721,[[]]],[11,"borrow","","",721,[[]]],[11,"borrow_mut","","",721,[[]]],[11,"try_from","","",721,[[],["result",4]]],[11,"into","","",721,[[]]],[11,"try_into","","",721,[[],["result",4]]],[11,"type_id","","",721,[[],["typeid",3]]],[11,"from","","",722,[[]]],[11,"borrow","","",722,[[]]],[11,"borrow_mut","","",722,[[]]],[11,"try_from","","",722,[[],["result",4]]],[11,"into","","",722,[[]]],[11,"try_into","","",722,[[],["result",4]]],[11,"type_id","","",722,[[],["typeid",3]]],[11,"from","rp2040_pac::usbctrl_regs","",723,[[]]],[11,"borrow","","",723,[[]]],[11,"borrow_mut","","",723,[[]]],[11,"try_from","","",723,[[],["result",4]]],[11,"into","","",723,[[]]],[11,"try_into","","",723,[[],["result",4]]],[11,"type_id","","",723,[[],["typeid",3]]],[11,"from","rp2040_pac::vreg_and_chip_reset::fields","",724,[[]]],[11,"borrow","","",724,[[]]],[11,"borrow_mut","","",724,[[]]],[11,"try_from","","",724,[[],["result",4]]],[11,"into","","",724,[[]]],[11,"try_into","","",724,[[],["result",4]]],[11,"type_id","","",724,[[],["typeid",3]]],[11,"from","","",725,[[]]],[11,"borrow","","",725,[[]]],[11,"borrow_mut","","",725,[[]]],[11,"try_from","","",725,[[],["result",4]]],[11,"into","","",725,[[]]],[11,"try_into","","",725,[[],["result",4]]],[11,"type_id","","",725,[[],["typeid",3]]],[11,"from","","",726,[[]]],[11,"borrow","","",726,[[]]],[11,"borrow_mut","","",726,[[]]],[11,"try_from","","",726,[[],["result",4]]],[11,"into","","",726,[[]]],[11,"try_into","","",726,[[],["result",4]]],[11,"type_id","","",726,[[],["typeid",3]]],[11,"from","rp2040_pac::vreg_and_chip_reset","",727,[[]]],[11,"borrow","","",727,[[]]],[11,"borrow_mut","","",727,[[]]],[11,"try_from","","",727,[[],["result",4]]],[11,"into","","",727,[[]]],[11,"try_into","","",727,[[],["result",4]]],[11,"type_id","","",727,[[],["typeid",3]]],[11,"from","rp2040_pac::watchdog::fields","",728,[[]]],[11,"borrow","","",728,[[]]],[11,"borrow_mut","","",728,[[]]],[11,"try_from","","",728,[[],["result",4]]],[11,"into","","",728,[[]]],[11,"try_into","","",728,[[],["result",4]]],[11,"type_id","","",728,[[],["typeid",3]]],[11,"from","","",729,[[]]],[11,"borrow","","",729,[[]]],[11,"borrow_mut","","",729,[[]]],[11,"try_from","","",729,[[],["result",4]]],[11,"into","","",729,[[]]],[11,"try_into","","",729,[[],["result",4]]],[11,"type_id","","",729,[[],["typeid",3]]],[11,"from","","",730,[[]]],[11,"borrow","","",730,[[]]],[11,"borrow_mut","","",730,[[]]],[11,"try_from","","",730,[[],["result",4]]],[11,"into","","",730,[[]]],[11,"try_into","","",730,[[],["result",4]]],[11,"type_id","","",730,[[],["typeid",3]]],[11,"from","","",731,[[]]],[11,"borrow","","",731,[[]]],[11,"borrow_mut","","",731,[[]]],[11,"try_from","","",731,[[],["result",4]]],[11,"into","","",731,[[]]],[11,"try_into","","",731,[[],["result",4]]],[11,"type_id","","",731,[[],["typeid",3]]],[11,"from","rp2040_pac::watchdog","",732,[[]]],[11,"borrow","","",732,[[]]],[11,"borrow_mut","","",732,[[]]],[11,"try_from","","",732,[[],["result",4]]],[11,"into","","",732,[[]]],[11,"try_into","","",732,[[],["result",4]]],[11,"type_id","","",732,[[],["typeid",3]]],[11,"from","rp2040_pac::xip_ctrl::fields","",733,[[]]],[11,"borrow","","",733,[[]]],[11,"borrow_mut","","",733,[[]]],[11,"try_from","","",733,[[],["result",4]]],[11,"into","","",733,[[]]],[11,"try_into","","",733,[[],["result",4]]],[11,"type_id","","",733,[[],["typeid",3]]],[11,"from","","",734,[[]]],[11,"borrow","","",734,[[]]],[11,"borrow_mut","","",734,[[]]],[11,"try_from","","",734,[[],["result",4]]],[11,"into","","",734,[[]]],[11,"try_into","","",734,[[],["result",4]]],[11,"type_id","","",734,[[],["typeid",3]]],[11,"from","","",735,[[]]],[11,"borrow","","",735,[[]]],[11,"borrow_mut","","",735,[[]]],[11,"try_from","","",735,[[],["result",4]]],[11,"into","","",735,[[]]],[11,"try_into","","",735,[[],["result",4]]],[11,"type_id","","",735,[[],["typeid",3]]],[11,"from","","",736,[[]]],[11,"borrow","","",736,[[]]],[11,"borrow_mut","","",736,[[]]],[11,"try_from","","",736,[[],["result",4]]],[11,"into","","",736,[[]]],[11,"try_into","","",736,[[],["result",4]]],[11,"type_id","","",736,[[],["typeid",3]]],[11,"from","","",737,[[]]],[11,"borrow","","",737,[[]]],[11,"borrow_mut","","",737,[[]]],[11,"try_from","","",737,[[],["result",4]]],[11,"into","","",737,[[]]],[11,"try_into","","",737,[[],["result",4]]],[11,"type_id","","",737,[[],["typeid",3]]],[11,"from","rp2040_pac::xip_ctrl","",738,[[]]],[11,"borrow","","",738,[[]]],[11,"borrow_mut","","",738,[[]]],[11,"try_from","","",738,[[],["result",4]]],[11,"into","","",738,[[]]],[11,"try_into","","",738,[[],["result",4]]],[11,"type_id","","",738,[[],["typeid",3]]],[11,"from","rp2040_pac::xip_ssi::fields","",739,[[]]],[11,"borrow","","",739,[[]]],[11,"borrow_mut","","",739,[[]]],[11,"try_from","","",739,[[],["result",4]]],[11,"into","","",739,[[]]],[11,"try_into","","",739,[[],["result",4]]],[11,"type_id","","",739,[[],["typeid",3]]],[11,"from","","",740,[[]]],[11,"borrow","","",740,[[]]],[11,"borrow_mut","","",740,[[]]],[11,"try_from","","",740,[[],["result",4]]],[11,"into","","",740,[[]]],[11,"try_into","","",740,[[],["result",4]]],[11,"type_id","","",740,[[],["typeid",3]]],[11,"from","","",741,[[]]],[11,"borrow","","",741,[[]]],[11,"borrow_mut","","",741,[[]]],[11,"try_from","","",741,[[],["result",4]]],[11,"into","","",741,[[]]],[11,"try_into","","",741,[[],["result",4]]],[11,"type_id","","",741,[[],["typeid",3]]],[11,"from","","",742,[[]]],[11,"borrow","","",742,[[]]],[11,"borrow_mut","","",742,[[]]],[11,"try_from","","",742,[[],["result",4]]],[11,"into","","",742,[[]]],[11,"try_into","","",742,[[],["result",4]]],[11,"type_id","","",742,[[],["typeid",3]]],[11,"from","","",743,[[]]],[11,"borrow","","",743,[[]]],[11,"borrow_mut","","",743,[[]]],[11,"try_from","","",743,[[],["result",4]]],[11,"into","","",743,[[]]],[11,"try_into","","",743,[[],["result",4]]],[11,"type_id","","",743,[[],["typeid",3]]],[11,"from","","",744,[[]]],[11,"borrow","","",744,[[]]],[11,"borrow_mut","","",744,[[]]],[11,"try_from","","",744,[[],["result",4]]],[11,"into","","",744,[[]]],[11,"try_into","","",744,[[],["result",4]]],[11,"type_id","","",744,[[],["typeid",3]]],[11,"from","","",745,[[]]],[11,"borrow","","",745,[[]]],[11,"borrow_mut","","",745,[[]]],[11,"try_from","","",745,[[],["result",4]]],[11,"into","","",745,[[]]],[11,"try_into","","",745,[[],["result",4]]],[11,"type_id","","",745,[[],["typeid",3]]],[11,"from","","",746,[[]]],[11,"borrow","","",746,[[]]],[11,"borrow_mut","","",746,[[]]],[11,"try_from","","",746,[[],["result",4]]],[11,"into","","",746,[[]]],[11,"try_into","","",746,[[],["result",4]]],[11,"type_id","","",746,[[],["typeid",3]]],[11,"from","","",747,[[]]],[11,"borrow","","",747,[[]]],[11,"borrow_mut","","",747,[[]]],[11,"try_from","","",747,[[],["result",4]]],[11,"into","","",747,[[]]],[11,"try_into","","",747,[[],["result",4]]],[11,"type_id","","",747,[[],["typeid",3]]],[11,"from","","",748,[[]]],[11,"borrow","","",748,[[]]],[11,"borrow_mut","","",748,[[]]],[11,"try_from","","",748,[[],["result",4]]],[11,"into","","",748,[[]]],[11,"try_into","","",748,[[],["result",4]]],[11,"type_id","","",748,[[],["typeid",3]]],[11,"from","","",749,[[]]],[11,"borrow","","",749,[[]]],[11,"borrow_mut","","",749,[[]]],[11,"try_from","","",749,[[],["result",4]]],[11,"into","","",749,[[]]],[11,"try_into","","",749,[[],["result",4]]],[11,"type_id","","",749,[[],["typeid",3]]],[11,"from","","",750,[[]]],[11,"borrow","","",750,[[]]],[11,"borrow_mut","","",750,[[]]],[11,"try_from","","",750,[[],["result",4]]],[11,"into","","",750,[[]]],[11,"try_into","","",750,[[],["result",4]]],[11,"type_id","","",750,[[],["typeid",3]]],[11,"from","","",751,[[]]],[11,"borrow","","",751,[[]]],[11,"borrow_mut","","",751,[[]]],[11,"try_from","","",751,[[],["result",4]]],[11,"into","","",751,[[]]],[11,"try_into","","",751,[[],["result",4]]],[11,"type_id","","",751,[[],["typeid",3]]],[11,"from","","",752,[[]]],[11,"borrow","","",752,[[]]],[11,"borrow_mut","","",752,[[]]],[11,"try_from","","",752,[[],["result",4]]],[11,"into","","",752,[[]]],[11,"try_into","","",752,[[],["result",4]]],[11,"type_id","","",752,[[],["typeid",3]]],[11,"from","","",753,[[]]],[11,"borrow","","",753,[[]]],[11,"borrow_mut","","",753,[[]]],[11,"try_from","","",753,[[],["result",4]]],[11,"into","","",753,[[]]],[11,"try_into","","",753,[[],["result",4]]],[11,"type_id","","",753,[[],["typeid",3]]],[11,"from","","",754,[[]]],[11,"borrow","","",754,[[]]],[11,"borrow_mut","","",754,[[]]],[11,"try_from","","",754,[[],["result",4]]],[11,"into","","",754,[[]]],[11,"try_into","","",754,[[],["result",4]]],[11,"type_id","","",754,[[],["typeid",3]]],[11,"from","","",755,[[]]],[11,"borrow","","",755,[[]]],[11,"borrow_mut","","",755,[[]]],[11,"try_from","","",755,[[],["result",4]]],[11,"into","","",755,[[]]],[11,"try_into","","",755,[[],["result",4]]],[11,"type_id","","",755,[[],["typeid",3]]],[11,"from","","",756,[[]]],[11,"borrow","","",756,[[]]],[11,"borrow_mut","","",756,[[]]],[11,"try_from","","",756,[[],["result",4]]],[11,"into","","",756,[[]]],[11,"try_into","","",756,[[],["result",4]]],[11,"type_id","","",756,[[],["typeid",3]]],[11,"from","","",757,[[]]],[11,"borrow","","",757,[[]]],[11,"borrow_mut","","",757,[[]]],[11,"try_from","","",757,[[],["result",4]]],[11,"into","","",757,[[]]],[11,"try_into","","",757,[[],["result",4]]],[11,"type_id","","",757,[[],["typeid",3]]],[11,"from","","",758,[[]]],[11,"borrow","","",758,[[]]],[11,"borrow_mut","","",758,[[]]],[11,"try_from","","",758,[[],["result",4]]],[11,"into","","",758,[[]]],[11,"try_into","","",758,[[],["result",4]]],[11,"type_id","","",758,[[],["typeid",3]]],[11,"from","","",759,[[]]],[11,"borrow","","",759,[[]]],[11,"borrow_mut","","",759,[[]]],[11,"try_from","","",759,[[],["result",4]]],[11,"into","","",759,[[]]],[11,"try_into","","",759,[[],["result",4]]],[11,"type_id","","",759,[[],["typeid",3]]],[11,"from","","",760,[[]]],[11,"borrow","","",760,[[]]],[11,"borrow_mut","","",760,[[]]],[11,"try_from","","",760,[[],["result",4]]],[11,"into","","",760,[[]]],[11,"try_into","","",760,[[],["result",4]]],[11,"type_id","","",760,[[],["typeid",3]]],[11,"from","","",761,[[]]],[11,"borrow","","",761,[[]]],[11,"borrow_mut","","",761,[[]]],[11,"try_from","","",761,[[],["result",4]]],[11,"into","","",761,[[]]],[11,"try_into","","",761,[[],["result",4]]],[11,"type_id","","",761,[[],["typeid",3]]],[11,"from","","",762,[[]]],[11,"borrow","","",762,[[]]],[11,"borrow_mut","","",762,[[]]],[11,"try_from","","",762,[[],["result",4]]],[11,"into","","",762,[[]]],[11,"try_into","","",762,[[],["result",4]]],[11,"type_id","","",762,[[],["typeid",3]]],[11,"from","","",763,[[]]],[11,"borrow","","",763,[[]]],[11,"borrow_mut","","",763,[[]]],[11,"try_from","","",763,[[],["result",4]]],[11,"into","","",763,[[]]],[11,"try_into","","",763,[[],["result",4]]],[11,"type_id","","",763,[[],["typeid",3]]],[11,"from","","",764,[[]]],[11,"borrow","","",764,[[]]],[11,"borrow_mut","","",764,[[]]],[11,"try_from","","",764,[[],["result",4]]],[11,"into","","",764,[[]]],[11,"try_into","","",764,[[],["result",4]]],[11,"type_id","","",764,[[],["typeid",3]]],[11,"from","","",765,[[]]],[11,"borrow","","",765,[[]]],[11,"borrow_mut","","",765,[[]]],[11,"try_from","","",765,[[],["result",4]]],[11,"into","","",765,[[]]],[11,"try_into","","",765,[[],["result",4]]],[11,"type_id","","",765,[[],["typeid",3]]],[11,"from","","",766,[[]]],[11,"borrow","","",766,[[]]],[11,"borrow_mut","","",766,[[]]],[11,"try_from","","",766,[[],["result",4]]],[11,"into","","",766,[[]]],[11,"try_into","","",766,[[],["result",4]]],[11,"type_id","","",766,[[],["typeid",3]]],[11,"from","rp2040_pac::xip_ssi::values","",767,[[]]],[11,"borrow","","",767,[[]]],[11,"borrow_mut","","",767,[[]]],[11,"try_from","","",767,[[],["result",4]]],[11,"into","","",767,[[]]],[11,"try_into","","",767,[[],["result",4]]],[11,"type_id","","",767,[[],["typeid",3]]],[11,"from","","",768,[[]]],[11,"borrow","","",768,[[]]],[11,"borrow_mut","","",768,[[]]],[11,"try_from","","",768,[[],["result",4]]],[11,"into","","",768,[[]]],[11,"try_into","","",768,[[],["result",4]]],[11,"type_id","","",768,[[],["typeid",3]]],[11,"from","","",769,[[]]],[11,"borrow","","",769,[[]]],[11,"borrow_mut","","",769,[[]]],[11,"try_from","","",769,[[],["result",4]]],[11,"into","","",769,[[]]],[11,"try_into","","",769,[[],["result",4]]],[11,"type_id","","",769,[[],["typeid",3]]],[11,"from","","",770,[[]]],[11,"borrow","","",770,[[]]],[11,"borrow_mut","","",770,[[]]],[11,"try_from","","",770,[[],["result",4]]],[11,"into","","",770,[[]]],[11,"try_into","","",770,[[],["result",4]]],[11,"type_id","","",770,[[],["typeid",3]]],[11,"from","rp2040_pac::xip_ssi","",771,[[]]],[11,"borrow","","",771,[[]]],[11,"borrow_mut","","",771,[[]]],[11,"try_from","","",771,[[],["result",4]]],[11,"into","","",771,[[]]],[11,"try_into","","",771,[[],["result",4]]],[11,"type_id","","",771,[[],["typeid",3]]],[11,"from","rp2040_pac::xosc::fields","",772,[[]]],[11,"borrow","","",772,[[]]],[11,"borrow_mut","","",772,[[]]],[11,"try_from","","",772,[[],["result",4]]],[11,"into","","",772,[[]]],[11,"try_into","","",772,[[],["result",4]]],[11,"type_id","","",772,[[],["typeid",3]]],[11,"from","","",773,[[]]],[11,"borrow","","",773,[[]]],[11,"borrow_mut","","",773,[[]]],[11,"try_from","","",773,[[],["result",4]]],[11,"into","","",773,[[]]],[11,"try_into","","",773,[[],["result",4]]],[11,"type_id","","",773,[[],["typeid",3]]],[11,"from","","",774,[[]]],[11,"borrow","","",774,[[]]],[11,"borrow_mut","","",774,[[]]],[11,"try_from","","",774,[[],["result",4]]],[11,"into","","",774,[[]]],[11,"try_into","","",774,[[],["result",4]]],[11,"type_id","","",774,[[],["typeid",3]]],[11,"from","","",775,[[]]],[11,"borrow","","",775,[[]]],[11,"borrow_mut","","",775,[[]]],[11,"try_from","","",775,[[],["result",4]]],[11,"into","","",775,[[]]],[11,"try_into","","",775,[[],["result",4]]],[11,"type_id","","",775,[[],["typeid",3]]],[11,"from","rp2040_pac::xosc::values","",776,[[]]],[11,"borrow","","",776,[[]]],[11,"borrow_mut","","",776,[[]]],[11,"try_from","","",776,[[],["result",4]]],[11,"into","","",776,[[]]],[11,"try_into","","",776,[[],["result",4]]],[11,"type_id","","",776,[[],["typeid",3]]],[11,"from","","",777,[[]]],[11,"borrow","","",777,[[]]],[11,"borrow_mut","","",777,[[]]],[11,"try_from","","",777,[[],["result",4]]],[11,"into","","",777,[[]]],[11,"try_into","","",777,[[],["result",4]]],[11,"type_id","","",777,[[],["typeid",3]]],[11,"from","","",778,[[]]],[11,"borrow","","",778,[[]]],[11,"borrow_mut","","",778,[[]]],[11,"try_from","","",778,[[],["result",4]]],[11,"into","","",778,[[]]],[11,"try_into","","",778,[[],["result",4]]],[11,"type_id","","",778,[[],["typeid",3]]],[11,"from","rp2040_pac::xosc","",779,[[]]],[11,"borrow","","",779,[[]]],[11,"borrow_mut","","",779,[[]]],[11,"try_from","","",779,[[],["result",4]]],[11,"into","","",779,[[]]],[11,"try_into","","",779,[[],["result",4]]],[11,"type_id","","",779,[[],["typeid",3]]],[11,"from","rp2040_pac","",780,[[]]],[11,"borrow","","",780,[[]]],[11,"borrow_mut","","",780,[[]]],[11,"try_from","","",780,[[],["result",4]]],[11,"into","","",780,[[]]],[11,"try_into","","",780,[[],["result",4]]],[11,"type_id","","",780,[[],["typeid",3]]],[11,"from","","",785,[[]]],[11,"borrow","","",785,[[]]],[11,"borrow_mut","","",785,[[]]],[11,"try_from","","",785,[[],["result",4]]],[11,"into","","",785,[[]]],[11,"try_into","","",785,[[],["result",4]]],[11,"type_id","","",785,[[],["typeid",3]]],[11,"from","","",786,[[]]],[11,"borrow","","",786,[[]]],[11,"borrow_mut","","",786,[[]]],[11,"try_from","","",786,[[],["result",4]]],[11,"into","","",786,[[]]],[11,"try_into","","",786,[[],["result",4]]],[11,"type_id","","",786,[[],["typeid",3]]],[11,"from","","",787,[[]]],[11,"borrow","","",787,[[]]],[11,"borrow_mut","","",787,[[]]],[11,"try_from","","",787,[[],["result",4]]],[11,"into","","",787,[[]]],[11,"try_into","","",787,[[],["result",4]]],[11,"type_id","","",787,[[],["typeid",3]]],[11,"from","","",788,[[]]],[11,"borrow","","",788,[[]]],[11,"borrow_mut","","",788,[[]]],[11,"try_from","","",788,[[],["result",4]]],[11,"into","","",788,[[]]],[11,"try_into","","",788,[[],["result",4]]],[11,"type_id","","",788,[[],["typeid",3]]],[11,"from","","",789,[[]]],[11,"borrow","","",789,[[]]],[11,"borrow_mut","","",789,[[]]],[11,"try_from","","",789,[[],["result",4]]],[11,"into","","",789,[[]]],[11,"try_into","","",789,[[],["result",4]]],[11,"type_id","","",789,[[],["typeid",3]]],[11,"from","","",790,[[]]],[11,"borrow","","",790,[[]]],[11,"borrow_mut","","",790,[[]]],[11,"try_from","","",790,[[],["result",4]]],[11,"into","","",790,[[]]],[11,"try_into","","",790,[[],["result",4]]],[11,"type_id","","",790,[[],["typeid",3]]],[11,"from","","",791,[[]]],[11,"borrow","","",791,[[]]],[11,"borrow_mut","","",791,[[]]],[11,"try_from","","",791,[[],["result",4]]],[11,"into","","",791,[[]]],[11,"try_into","","",791,[[],["result",4]]],[11,"type_id","","",791,[[],["typeid",3]]],[11,"from","","",792,[[]]],[11,"borrow","","",792,[[]]],[11,"borrow_mut","","",792,[[]]],[11,"try_from","","",792,[[],["result",4]]],[11,"into","","",792,[[]]],[11,"try_into","","",792,[[],["result",4]]],[11,"type_id","","",792,[[],["typeid",3]]],[11,"from","","",793,[[]]],[11,"borrow","","",793,[[]]],[11,"borrow_mut","","",793,[[]]],[11,"try_from","","",793,[[],["result",4]]],[11,"into","","",793,[[]]],[11,"try_into","","",793,[[],["result",4]]],[11,"type_id","","",793,[[],["typeid",3]]],[11,"from","","",794,[[]]],[11,"borrow","","",794,[[]]],[11,"borrow_mut","","",794,[[]]],[11,"try_from","","",794,[[],["result",4]]],[11,"into","","",794,[[]]],[11,"try_into","","",794,[[],["result",4]]],[11,"type_id","","",794,[[],["typeid",3]]],[11,"from","","",795,[[]]],[11,"borrow","","",795,[[]]],[11,"borrow_mut","","",795,[[]]],[11,"try_from","","",795,[[],["result",4]]],[11,"into","","",795,[[]]],[11,"try_into","","",795,[[],["result",4]]],[11,"type_id","","",795,[[],["typeid",3]]],[11,"from","","",781,[[]]],[11,"borrow","","",781,[[]]],[11,"borrow_mut","","",781,[[]]],[11,"try_from","","",781,[[],["result",4]]],[11,"into","","",781,[[]]],[11,"try_into","","",781,[[],["result",4]]],[11,"type_id","","",781,[[],["typeid",3]]],[11,"deref","","",790,[[]]],[11,"deref","","",789,[[]]],[11,"deref","","",791,[[]]],[11,"deref","","",792,[[]]],[11,"deref","","",785,[[]]],[11,"deref","","",795,[[]]],[11,"deref","","",786,[[]]],[11,"deref","","",787,[[]]],[11,"deref","","",788,[[]]],[11,"deref","","",794,[[]]],[11,"deref","","",793,[[]]],[11,"deref_mut","","",790,[[]]],[11,"fmt","","",781,[[["formatter",3]],["result",6]]],[11,"eq","","",781,[[["interrupt",4]]]],[11,"clone","","",781,[[],["interrupt",4]]],[11,"clone","rp2040_pac::adc","",9,[[],["adc",3]]],[11,"clone","rp2040_pac::adc::fields","",0,[[],["cs",3]]],[11,"clone","","",1,[[],["inte",3]]],[11,"clone","","",2,[[],["ints",3]]],[11,"clone","","",3,[[],["intf",3]]],[11,"clone","","",4,[[],["fcs",3]]],[11,"clone","","",5,[[],["intr",3]]],[11,"clone","","",6,[[],["result",3]]],[11,"clone","","",7,[[],["div",3]]],[11,"clone","","",8,[[],["fifo",3]]],[11,"clone","rp2040_pac::busctrl","",20,[[],["busctrl",3]]],[11,"clone","rp2040_pac::busctrl::fields","",10,[[],["perfsel1",3]]],[11,"clone","","",11,[[],["perfsel3",3]]],[11,"clone","","",12,[[],["perfctr3",3]]],[11,"clone","","",13,[[],["perfsel2",3]]],[11,"clone","","",14,[[],["perfctr2",3]]],[11,"clone","","",15,[[],["perfctr0",3]]],[11,"clone","","",16,[[],["perfctr1",3]]],[11,"clone","","",17,[[],["perfsel0",3]]],[11,"clone","","",18,[[],["buspriorityack",3]]],[11,"clone","","",19,[[],["buspriority",3]]],[11,"clone","rp2040_pac::clocks","",73,[[],["clocks",3]]],[11,"clone","rp2040_pac::clocks::fields","",21,[[],["clkgpout0div",3]]],[11,"clone","","",22,[[],["clkrefdiv",3]]],[11,"clone","","",23,[[],["clkadcctrl",3]]],[11,"clone","","",24,[[],["intr",3]]],[11,"clone","","",25,[[],["clksysresusstatus",3]]],[11,"clone","","",26,[[],["wakeen0",3]]],[11,"clone","","",27,[[],["clkgpout3ctrl",3]]],[11,"clone","","",28,[[],["clkadcdiv",3]]],[11,"clone","","",29,[[],["clksysdiv",3]]],[11,"clone","","",30,[[],["fc0interval",3]]],[11,"clone","","",31,[[],["clksysresusctrl",3]]],[11,"clone","","",32,[[],["sleepen0",3]]],[11,"clone","","",33,[[],["clkperictrl",3]]],[11,"clone","","",34,[[],["clksysctrl",3]]],[11,"clone","","",35,[[],["clkrtcctrl",3]]],[11,"clone","","",36,[[],["enabled1",3]]],[11,"clone","","",37,[[],["clkgpout3div",3]]],[11,"clone","","",38,[[],["wakeen1",3]]],[11,"clone","","",39,[[],["clkrefctrl",3]]],[11,"clone","","",40,[[],["clkgpout1ctrl",3]]],[11,"clone","","",41,[[],["fc0status",3]]],[11,"clone","","",42,[[],["fc0minkhz",3]]],[11,"clone","","",43,[[],["clkgpout0ctrl",3]]],[11,"clone","","",44,[[],["ints",3]]],[11,"clone","","",45,[[],["clkgpout1div",3]]],[11,"clone","","",46,[[],["enabled0",3]]],[11,"clone","","",47,[[],["clkgpout2ctrl",3]]],[11,"clone","","",48,[[],["fc0result",3]]],[11,"clone","","",49,[[],["fc0src",3]]],[11,"clone","","",50,[[],["fc0delay",3]]],[11,"clone","","",51,[[],["clkrtcdiv",3]]],[11,"clone","","",52,[[],["clkusbdiv",3]]],[11,"clone","","",53,[[],["inte",3]]],[11,"clone","","",54,[[],["fc0refkhz",3]]],[11,"clone","","",55,[[],["fc0maxkhz",3]]],[11,"clone","","",56,[[],["intf",3]]],[11,"clone","","",57,[[],["sleepen1",3]]],[11,"clone","","",58,[[],["clkgpout2div",3]]],[11,"clone","","",59,[[],["clkusbctrl",3]]],[11,"clone","rp2040_pac::clocks::values","",60,[[],["clkgpout2ctrlauxsrc",3]]],[11,"clone","","",61,[[],["clkgpout0ctrlauxsrc",3]]],[11,"clone","","",62,[[],["clkgpout1ctrlauxsrc",3]]],[11,"clone","","",63,[[],["clkperictrlauxsrc",3]]],[11,"clone","","",64,[[],["clksysctrlsrc",3]]],[11,"clone","","",65,[[],["clkadcctrlauxsrc",3]]],[11,"clone","","",66,[[],["clkrefctrlsrc",3]]],[11,"clone","","",67,[[],["clkgpout3ctrlauxsrc",3]]],[11,"clone","","",68,[[],["clkrefctrlauxsrc",3]]],[11,"clone","","",69,[[],["clksysctrlauxsrc",3]]],[11,"clone","","",70,[[],["clkusbctrlauxsrc",3]]],[11,"clone","","",71,[[],["fc0srcfc0src",3]]],[11,"clone","","",72,[[],["clkrtcctrlauxsrc",3]]],[11,"clone","rp2040_pac::dma","",115,[[],["dma",3]]],[11,"clone","rp2040_pac::dma::fields","",74,[[],["ch8dbgctdreq",3]]],[11,"clone","","",75,[[],["ch10dbgctdreq",3]]],[11,"clone","","",76,[[],["ch11ctrltrig",3]]],[11,"clone","","",77,[[],["nchannels",3]]],[11,"clone","","",78,[[],["ch3dbgctdreq",3]]],[11,"clone","","",79,[[],["intf1",3]]],[11,"clone","","",80,[[],["ch1dbgctdreq",3]]],[11,"clone","","",81,[[],["ints0",3]]],[11,"clone","","",82,[[],["ch2dbgctdreq",3]]],[11,"clone","","",83,[[],["ch1ctrltrig",3]]],[11,"clone","","",84,[[],["chanabort",3]]],[11,"clone","","",85,[[],["ch0ctrltrig",3]]],[11,"clone","","",86,[[],["ch4dbgctdreq",3]]],[11,"clone","","",87,[[],["ch7ctrltrig",3]]],[11,"clone","","",88,[[],["inte0",3]]],[11,"clone","","",89,[[],["ch9dbgctdreq",3]]],[11,"clone","","",90,[[],["fifolevels",3]]],[11,"clone","","",91,[[],["ch10ctrltrig",3]]],[11,"clone","","",92,[[],["ch6ctrltrig",3]]],[11,"clone","","",93,[[],["ch3ctrltrig",3]]],[11,"clone","","",94,[[],["ch5ctrltrig",3]]],[11,"clone","","",95,[[],["ch9ctrltrig",3]]],[11,"clone","","",96,[[],["ch5dbgctdreq",3]]],[11,"clone","","",97,[[],["timer1",3]]],[11,"clone","","",98,[[],["ch11dbgctdreq",3]]],[11,"clone","","",99,[[],["ch2ctrltrig",3]]],[11,"clone","","",100,[[],["ch0dbgctdreq",3]]],[11,"clone","","",101,[[],["timer0",3]]],[11,"clone","","",102,[[],["intf0",3]]],[11,"clone","","",103,[[],["ch6dbgctdreq",3]]],[11,"clone","","",104,[[],["ch8ctrltrig",3]]],[11,"clone","","",105,[[],["inte1",3]]],[11,"clone","","",106,[[],["ch7dbgctdreq",3]]],[11,"clone","","",107,[[],["ints1",3]]],[11,"clone","","",108,[[],["sniffctrl",3]]],[11,"clone","","",109,[[],["ch4ctrltrig",3]]],[11,"clone","","",110,[[],["intr",3]]],[11,"clone","","",111,[[],["multichantrigger",3]]],[11,"clone","rp2040_pac::dma::values","",112,[[],["datasize",3]]],[11,"clone","","",113,[[],["sniffctrlcalc",3]]],[11,"clone","","",114,[[],["treqsel",3]]],[11,"clone","rp2040_pac::generic","",782,[[],["rw",3]]],[11,"clone","","",783,[[],["r",3]]],[11,"clone","","",784,[[],["w",3]]],[11,"clone","","",116,[[],["reg",3]]],[11,"clone","rp2040_pac::i2c0","",250,[[],["i2c0",3]]],[11,"clone","rp2040_pac::i2c0::fields","",117,[[],["icackgeneralcall",3]]],[11,"clone","","",118,[[],["icsdasetup",3]]],[11,"clone","","",119,[[],["icstatus",3]]],[11,"clone","","",120,[[],["icsar",3]]],[11,"clone","","",121,[[],["icdmatdlr",3]]],[11,"clone","","",122,[[],["icclrintr",3]]],[11,"clone","","",123,[[],["iccon",3]]],[11,"clone","","",124,[[],["ictxabrtsource",3]]],[11,"clone","","",125,[[],["icenablestatus",3]]],[11,"clone","","",126,[[],["ictxflr",3]]],[11,"clone","","",127,[[],["icclrrxdone",3]]],[11,"clone","","",128,[[],["icrxflr",3]]],[11,"clone","","",129,[[],["icclrrxunder",3]]],[11,"clone","","",130,[[],["icclrtxabrt",3]]],[11,"clone","","",131,[[],["icdmacr",3]]],[11,"clone","","",132,[[],["icenable",3]]],[11,"clone","","",133,[[],["icrawintrstat",3]]],[11,"clone","","",134,[[],["icdmardlr",3]]],[11,"clone","","",135,[[],["iccomptype",3]]],[11,"clone","","",136,[[],["icclrstopdet",3]]],[11,"clone","","",137,[[],["icclrstartdet",3]]],[11,"clone","","",138,[[],["icclrrestartdet",3]]],[11,"clone","","",139,[[],["icfssclhcnt",3]]],[11,"clone","","",140,[[],["icclrrxover",3]]],[11,"clone","","",141,[[],["icssscllcnt",3]]],[11,"clone","","",142,[[],["icfsspklen",3]]],[11,"clone","","",143,[[],["icdatacmd",3]]],[11,"clone","","",144,[[],["ictxtl",3]]],[11,"clone","","",145,[[],["icintrstat",3]]],[11,"clone","","",146,[[],["ictar",3]]],[11,"clone","","",147,[[],["icslvdatanackonly",3]]],[11,"clone","","",148,[[],["icsssclhcnt",3]]],[11,"clone","","",149,[[],["icintrmask",3]]],[11,"clone","","",150,[[],["icclrrdreq",3]]],[11,"clone","","",151,[[],["iccompversion",3]]],[11,"clone","","",152,[[],["icfsscllcnt",3]]],[11,"clone","","",153,[[],["icclrgencall",3]]],[11,"clone","","",154,[[],["icsdahold",3]]],[11,"clone","","",155,[[],["icrxtl",3]]],[11,"clone","","",156,[[],["iccompparam1",3]]],[11,"clone","","",157,[[],["icclractivity",3]]],[11,"clone","","",158,[[],["icclrtxover",3]]],[11,"clone","rp2040_pac::i2c0::values","",159,[[],["icintrstatrstartdet",3]]],[11,"clone","","",160,[[],["icconic10bitaddrmaster",3]]],[11,"clone","","",161,[[],["icrawintrstatrxfull",3]]],[11,"clone","","",162,[[],["icackgeneralcallackgencall",3]]],[11,"clone","","",163,[[],["icstatusrfne",3]]],[11,"clone","","",164,[[],["icintrmaskmgencall",3]]],[11,"clone","","",165,[[],["icconicrestarten",3]]],[11,"clone","","",166,[[],["icdatacmdcmd",3]]],[11,"clone","","",167,[[],["icenablestatusslvdisabledwhilebusy",3]]],[11,"clone","","",168,[[],["ictxabrtsourceabrtslvarblost",3]]],[11,"clone","","",169,[[],["ictxabrtsourceabrtsbyteackdet",3]]],[11,"clone","","",170,[[],["icintrstatractivity",3]]],[11,"clone","","",171,[[],["ictarspecial",3]]],[11,"clone","","",172,[[],["ictxabrtsourceabrthsackdet",3]]],[11,"clone","","",173,[[],["icenabletxcmdblock",3]]],[11,"clone","","",174,[[],["icrawintrstatrestartdet",3]]],[11,"clone","","",175,[[],["icrawintrstatactivity",3]]],[11,"clone","","",176,[[],["ictxabrtsourceabrtslvflushtxfifo",3]]],[11,"clone","","",177,[[],["ictxabrtsourceabrt10brdnorstrt",3]]],[11,"clone","","",178,[[],["iccontxemptyctrl",3]]],[11,"clone","","",179,[[],["icintrstatrgencall",3]]],[11,"clone","","",180,[[],["icdmacrtdmae",3]]],[11,"clone","","",181,[[],["icdmacrrdmae",3]]],[11,"clone","","",182,[[],["icrawintrstattxempty",3]]],[11,"clone","","",183,[[],["icconmastermode",3]]],[11,"clone","","",184,[[],["ictxabrtsourceabrt10addr2noack",3]]],[11,"clone","","",185,[[],["icintrstatrtxempty",3]]],[11,"clone","","",186,[[],["icintrmaskmrxover",3]]],[11,"clone","","",187,[[],["ictxabrtsourceabrtmasterdis",3]]],[11,"clone","","",188,[[],["icstatusmstactivity",3]]],[11,"clone","","",189,[[],["icintrmaskmrxdone",3]]],[11,"clone","","",190,[[],["ictxabrtsourceabrtslvrdintx",3]]],[11,"clone","","",191,[[],["icintrstatrrxunder",3]]],[11,"clone","","",192,[[],["icenableabort",3]]],[11,"clone","","",193,[[],["icintrstatrrestartdet",3]]],[11,"clone","","",194,[[],["icintrstatrrxdone",3]]],[11,"clone","","",195,[[],["ictxabrtsourceabrt7baddrnoack",3]]],[11,"clone","","",196,[[],["icstatusrff",3]]],[11,"clone","","",197,[[],["icintrmaskmtxabrt",3]]],[11,"clone","","",198,[[],["icintrstatrtxabrt",3]]],[11,"clone","","",199,[[],["icintrmaskmrxunder",3]]],[11,"clone","","",200,[[],["icrawintrstatstopdet",3]]],[11,"clone","","",201,[[],["icenablestatusslvrxdatalost",3]]],[11,"clone","","",202,[[],["ictxabrtsourceabrtgcallread",3]]],[11,"clone","","",203,[[],["icintrmaskmtxempty",3]]],[11,"clone","","",204,[[],["ictxabrtsourceabrtsbytenorstrt",3]]],[11,"clone","","",205,[[],["icenableenable",3]]],[11,"clone","","",206,[[],["ictxabrtsourceabrtuserabrt",3]]],[11,"clone","","",207,[[],["icintrmaskmrdreq",3]]],[11,"clone","","",208,[[],["icintrmaskmrestartdet",3]]],[11,"clone","","",209,[[],["icrawintrstatrdreq",3]]],[11,"clone","","",210,[[],["ictargcorstart",3]]],[11,"clone","","",211,[[],["icintrmaskmmasteronholdreadonly",3]]],[11,"clone","","",212,[[],["ictxabrtsourceabrthsnorstrt",3]]],[11,"clone","","",213,[[],["icstatusactivity",3]]],[11,"clone","","",214,[[],["ictxabrtsourceabrtgcallnoack",3]]],[11,"clone","","",215,[[],["icconstopdetifaddressed",3]]],[11,"clone","","",216,[[],["icstatustfe",3]]],[11,"clone","","",217,[[],["icrawintrstatrxover",3]]],[11,"clone","","",218,[[],["icintrstatrtxover",3]]],[11,"clone","","",219,[[],["icstatusslvactivity",3]]],[11,"clone","","",220,[[],["icrawintrstatstartdet",3]]],[11,"clone","","",221,[[],["icrawintrstattxabrt",3]]],[11,"clone","","",222,[[],["icdatacmdrestart",3]]],[11,"clone","","",223,[[],["ictxabrtsourcearblost",3]]],[11,"clone","","",224,[[],["icstatustfnf",3]]],[11,"clone","","",225,[[],["icintrstatrmasteronhold",3]]],[11,"clone","","",226,[[],["icrawintrstatrxdone",3]]],[11,"clone","","",227,[[],["icrawintrstatrxunder",3]]],[11,"clone","","",228,[[],["ictxabrtsourceabrttxdatanoack",3]]],[11,"clone","","",229,[[],["icslvdatanackonlynack",3]]],[11,"clone","","",230,[[],["icconspeed",3]]],[11,"clone","","",231,[[],["icdatacmdfirstdatabyte",3]]],[11,"clone","","",232,[[],["icintrstatrstopdet",3]]],[11,"clone","","",233,[[],["icenablestatusicen",3]]],[11,"clone","","",234,[[],["icintrstatrrdreq",3]]],[11,"clone","","",235,[[],["icintrstatrrxfull",3]]],[11,"clone","","",236,[[],["icintrmaskmstartdet",3]]],[11,"clone","","",237,[[],["icconrxfifofullhldctrl",3]]],[11,"clone","","",238,[[],["icconic10bitaddrslave",3]]],[11,"clone","","",239,[[],["icintrmaskmstopdet",3]]],[11,"clone","","",240,[[],["icintrmaskmactivity",3]]],[11,"clone","","",241,[[],["icdatacmdstop",3]]],[11,"clone","","",242,[[],["icintrmaskmtxover",3]]],[11,"clone","","",243,[[],["icintrmaskmrxfull",3]]],[11,"clone","","",244,[[],["icrawintrstatgencall",3]]],[11,"clone","","",245,[[],["ictxabrtsourceabrt10addr1noack",3]]],[11,"clone","","",246,[[],["icconicslavedisable",3]]],[11,"clone","","",247,[[],["icrawintrstatmasteronhold",3]]],[11,"clone","","",248,[[],["icrawintrstattxover",3]]],[11,"clone","","",249,[[],["icintrstatrrxover",3]]],[11,"clone","rp2040_pac::io::values","",251,[[],["irqover",3]]],[11,"clone","","",252,[[],["outover",3]]],[11,"clone","","",253,[[],["oeover",3]]],[11,"clone","","",254,[[],["inover",3]]],[11,"clone","rp2040_pac::io_bank0","",385,[[],["iobank0",3]]],[11,"clone","rp2040_pac::io_bank0::fields","",255,[[],["gpio28status",3]]],[11,"clone","","",256,[[],["gpio23status",3]]],[11,"clone","","",257,[[],["gpio15status",3]]],[11,"clone","","",258,[[],["proc0ints3",3]]],[11,"clone","","",259,[[],["dormantwakeintf1",3]]],[11,"clone","","",260,[[],["dormantwakeints3",3]]],[11,"clone","","",261,[[],["proc0ints2",3]]],[11,"clone","","",262,[[],["gpio2ctrl",3]]],[11,"clone","","",263,[[],["gpio7ctrl",3]]],[11,"clone","","",264,[[],["gpio22status",3]]],[11,"clone","","",265,[[],["gpio21status",3]]],[11,"clone","","",266,[[],["gpio22ctrl",3]]],[11,"clone","","",267,[[],["gpio29ctrl",3]]],[11,"clone","","",268,[[],["proc0inte3",3]]],[11,"clone","","",269,[[],["dormantwakeinte0",3]]],[11,"clone","","",270,[[],["gpio10status",3]]],[11,"clone","","",271,[[],["proc1intf0",3]]],[11,"clone","","",272,[[],["gpio16status",3]]],[11,"clone","","",273,[[],["dormantwakeinte1",3]]],[11,"clone","","",274,[[],["gpio26ctrl",3]]],[11,"clone","","",275,[[],["proc1ints2",3]]],[11,"clone","","",276,[[],["proc1inte1",3]]],[11,"clone","","",277,[[],["proc1inte2",3]]],[11,"clone","","",278,[[],["proc0inte2",3]]],[11,"clone","","",279,[[],["gpio18ctrl",3]]],[11,"clone","","",280,[[],["dormantwakeinte3",3]]],[11,"clone","","",281,[[],["gpio8status",3]]],[11,"clone","","",282,[[],["gpio24ctrl",3]]],[11,"clone","","",283,[[],["proc1intf3",3]]],[11,"clone","","",284,[[],["gpio5status",3]]],[11,"clone","","",285,[[],["gpio0status",3]]],[11,"clone","","",286,[[],["gpio1status",3]]],[11,"clone","","",287,[[],["proc1ints1",3]]],[11,"clone","","",288,[[],["proc1ints0",3]]],[11,"clone","","",289,[[],["intr1",3]]],[11,"clone","","",290,[[],["gpio12ctrl",3]]],[11,"clone","","",291,[[],["proc0ints1",3]]],[11,"clone","","",292,[[],["gpio3status",3]]],[11,"clone","","",293,[[],["gpio13status",3]]],[11,"clone","","",294,[[],["gpio15ctrl",3]]],[11,"clone","","",295,[[],["gpio14ctrl",3]]],[11,"clone","","",296,[[],["gpio8ctrl",3]]],[11,"clone","","",297,[[],["proc0ints0",3]]],[11,"clone","","",298,[[],["dormantwakeintf0",3]]],[11,"clone","","",299,[[],["gpio19status",3]]],[11,"clone","","",300,[[],["gpio24status",3]]],[11,"clone","","",301,[[],["gpio5ctrl",3]]],[11,"clone","","",302,[[],["gpio23ctrl",3]]],[11,"clone","","",303,[[],["dormantwakeintf2",3]]],[11,"clone","","",304,[[],["gpio9ctrl",3]]],[11,"clone","","",305,[[],["proc1inte0",3]]],[11,"clone","","",306,[[],["gpio29status",3]]],[11,"clone","","",307,[[],["gpio2status",3]]],[11,"clone","","",308,[[],["gpio17ctrl",3]]],[11,"clone","","",309,[[],["intr2",3]]],[11,"clone","","",310,[[],["proc0intf2",3]]],[11,"clone","","",311,[[],["gpio17status",3]]],[11,"clone","","",312,[[],["gpio10ctrl",3]]],[11,"clone","","",313,[[],["intr3",3]]],[11,"clone","","",314,[[],["gpio20ctrl",3]]],[11,"clone","","",315,[[],["proc1inte3",3]]],[11,"clone","","",316,[[],["gpio18status",3]]],[11,"clone","","",317,[[],["dormantwakeints2",3]]],[11,"clone","","",318,[[],["proc1ints3",3]]],[11,"clone","","",319,[[],["gpio27ctrl",3]]],[11,"clone","","",320,[[],["gpio21ctrl",3]]],[11,"clone","","",321,[[],["gpio4status",3]]],[11,"clone","","",322,[[],["proc0intf0",3]]],[11,"clone","","",323,[[],["gpio28ctrl",3]]],[11,"clone","","",324,[[],["dormantwakeinte2",3]]],[11,"clone","","",325,[[],["gpio11status",3]]],[11,"clone","","",326,[[],["proc0inte0",3]]],[11,"clone","","",327,[[],["intr0",3]]],[11,"clone","","",328,[[],["gpio12status",3]]],[11,"clone","","",329,[[],["gpio11ctrl",3]]],[11,"clone","","",330,[[],["proc1intf1",3]]],[11,"clone","","",331,[[],["proc0intf1",3]]],[11,"clone","","",332,[[],["gpio6ctrl",3]]],[11,"clone","","",333,[[],["proc1intf2",3]]],[11,"clone","","",334,[[],["gpio16ctrl",3]]],[11,"clone","","",335,[[],["gpio20status",3]]],[11,"clone","","",336,[[],["gpio3ctrl",3]]],[11,"clone","","",337,[[],["gpio1ctrl",3]]],[11,"clone","","",338,[[],["gpio25status",3]]],[11,"clone","","",339,[[],["gpio14status",3]]],[11,"clone","","",340,[[],["gpio27status",3]]],[11,"clone","","",341,[[],["gpio6status",3]]],[11,"clone","","",342,[[],["gpio26status",3]]],[11,"clone","","",343,[[],["proc0intf3",3]]],[11,"clone","","",344,[[],["dormantwakeints1",3]]],[11,"clone","","",345,[[],["gpio9status",3]]],[11,"clone","","",346,[[],["dormantwakeints0",3]]],[11,"clone","","",347,[[],["proc0inte1",3]]],[11,"clone","","",348,[[],["gpio7status",3]]],[11,"clone","","",349,[[],["gpio13ctrl",3]]],[11,"clone","","",350,[[],["gpio19ctrl",3]]],[11,"clone","","",351,[[],["dormantwakeintf3",3]]],[11,"clone","","",352,[[],["gpio25ctrl",3]]],[11,"clone","","",353,[[],["gpio4ctrl",3]]],[11,"clone","","",354,[[],["gpio0ctrl",3]]],[11,"clone","rp2040_pac::io_bank0::values","",355,[[],["gpio10ctrlfuncsel",3]]],[11,"clone","","",356,[[],["gpio25ctrlfuncsel",3]]],[11,"clone","","",357,[[],["gpio9ctrlfuncsel",3]]],[11,"clone","","",358,[[],["gpio28ctrlfuncsel",3]]],[11,"clone","","",359,[[],["gpio29ctrlfuncsel",3]]],[11,"clone","","",360,[[],["gpio17ctrlfuncsel",3]]],[11,"clone","","",361,[[],["gpio7ctrlfuncsel",3]]],[11,"clone","","",362,[[],["gpio5ctrlfuncsel",3]]],[11,"clone","","",363,[[],["gpio13ctrlfuncsel",3]]],[11,"clone","","",364,[[],["gpio24ctrlfuncsel",3]]],[11,"clone","","",365,[[],["gpio27ctrlfuncsel",3]]],[11,"clone","","",366,[[],["gpio11ctrlfuncsel",3]]],[11,"clone","","",367,[[],["gpio14ctrlfuncsel",3]]],[11,"clone","","",368,[[],["gpio4ctrlfuncsel",3]]],[11,"clone","","",369,[[],["gpio16ctrlfuncsel",3]]],[11,"clone","","",370,[[],["gpio8ctrlfuncsel",3]]],[11,"clone","","",371,[[],["gpio2ctrlfuncsel",3]]],[11,"clone","","",372,[[],["gpio22ctrlfuncsel",3]]],[11,"clone","","",373,[[],["gpio0ctrlfuncsel",3]]],[11,"clone","","",374,[[],["gpio23ctrlfuncsel",3]]],[11,"clone","","",375,[[],["gpio12ctrlfuncsel",3]]],[11,"clone","","",376,[[],["gpio20ctrlfuncsel",3]]],[11,"clone","","",377,[[],["gpio19ctrlfuncsel",3]]],[11,"clone","","",378,[[],["gpio6ctrlfuncsel",3]]],[11,"clone","","",379,[[],["gpio26ctrlfuncsel",3]]],[11,"clone","","",380,[[],["gpio15ctrlfuncsel",3]]],[11,"clone","","",381,[[],["gpio18ctrlfuncsel",3]]],[11,"clone","","",382,[[],["gpio1ctrlfuncsel",3]]],[11,"clone","","",383,[[],["gpio21ctrlfuncsel",3]]],[11,"clone","","",384,[[],["gpio3ctrlfuncsel",3]]],[11,"clone","rp2040_pac::io_qspi","",414,[[],["ioqspi",3]]],[11,"clone","rp2040_pac::io_qspi::fields","",386,[[],["gpioqspisclkctrl",3]]],[11,"clone","","",387,[[],["gpioqspisclkstatus",3]]],[11,"clone","","",388,[[],["proc1ints",3]]],[11,"clone","","",389,[[],["proc0ints",3]]],[11,"clone","","",390,[[],["gpioqspissstatus",3]]],[11,"clone","","",391,[[],["proc0inte",3]]],[11,"clone","","",392,[[],["gpioqspisd3ctrl",3]]],[11,"clone","","",393,[[],["gpioqspisd1ctrl",3]]],[11,"clone","","",394,[[],["gpioqspissctrl",3]]],[11,"clone","","",395,[[],["gpioqspisd3status",3]]],[11,"clone","","",396,[[],["intr",3]]],[11,"clone","","",397,[[],["gpioqspisd2ctrl",3]]],[11,"clone","","",398,[[],["gpioqspisd2status",3]]],[11,"clone","","",399,[[],["gpioqspisd0ctrl",3]]],[11,"clone","","",400,[[],["gpioqspisd1status",3]]],[11,"clone","","",401,[[],["gpioqspisd0status",3]]],[11,"clone","","",402,[[],["dormantwakeintf",3]]],[11,"clone","","",403,[[],["dormantwakeints",3]]],[11,"clone","","",404,[[],["proc1intf",3]]],[11,"clone","","",405,[[],["proc0intf",3]]],[11,"clone","","",406,[[],["dormantwakeinte",3]]],[11,"clone","","",407,[[],["proc1inte",3]]],[11,"clone","rp2040_pac::io_qspi::values","",408,[[],["gpioqspisclkctrlfuncsel",3]]],[11,"clone","","",409,[[],["gpioqspisd2ctrlfuncsel",3]]],[11,"clone","","",410,[[],["gpioqspisd3ctrlfuncsel",3]]],[11,"clone","","",411,[[],["gpioqspissctrlfuncsel",3]]],[11,"clone","","",412,[[],["gpioqspisd1ctrlfuncsel",3]]],[11,"clone","","",413,[[],["gpioqspisd0ctrlfuncsel",3]]],[11,"clone","rp2040_pac::pads::values","",415,[[],["drive",3]]],[11,"clone","","",416,[[],["voltageselect",3]]],[11,"clone","rp2040_pac::pads_bank0","",450,[[],["padsbank0",3]]],[11,"clone","rp2040_pac::pads_bank0::fields","",417,[[],["gpio28",3]]],[11,"clone","","",418,[[],["gpio27",3]]],[11,"clone","","",419,[[],["gpio16",3]]],[11,"clone","","",420,[[],["gpio20",3]]],[11,"clone","","",421,[[],["gpio19",3]]],[11,"clone","","",422,[[],["gpio22",3]]],[11,"clone","","",423,[[],["gpio29",3]]],[11,"clone","","",424,[[],["gpio11",3]]],[11,"clone","","",425,[[],["gpio25",3]]],[11,"clone","","",426,[[],["gpio10",3]]],[11,"clone","","",427,[[],["gpio6",3]]],[11,"clone","","",428,[[],["gpio18",3]]],[11,"clone","","",429,[[],["voltageselect",3]]],[11,"clone","","",430,[[],["gpio0",3]]],[11,"clone","","",431,[[],["gpio15",3]]],[11,"clone","","",432,[[],["gpio13",3]]],[11,"clone","","",433,[[],["swd",3]]],[11,"clone","","",434,[[],["gpio12",3]]],[11,"clone","","",435,[[],["gpio5",3]]],[11,"clone","","",436,[[],["swclk",3]]],[11,"clone","","",437,[[],["gpio24",3]]],[11,"clone","","",438,[[],["gpio3",3]]],[11,"clone","","",439,[[],["gpio14",3]]],[11,"clone","","",440,[[],["gpio2",3]]],[11,"clone","","",441,[[],["gpio1",3]]],[11,"clone","","",442,[[],["gpio26",3]]],[11,"clone","","",443,[[],["gpio23",3]]],[11,"clone","","",444,[[],["gpio4",3]]],[11,"clone","","",445,[[],["gpio7",3]]],[11,"clone","","",446,[[],["gpio9",3]]],[11,"clone","","",447,[[],["gpio17",3]]],[11,"clone","","",448,[[],["gpio8",3]]],[11,"clone","","",449,[[],["gpio21",3]]],[11,"clone","rp2040_pac::pads_qspi","",458,[[],["padsqspi",3]]],[11,"clone","rp2040_pac::pads_qspi::fields","",451,[[],["gpioqspisd1",3]]],[11,"clone","","",452,[[],["gpioqspiss",3]]],[11,"clone","","",453,[[],["gpioqspisclk",3]]],[11,"clone","","",454,[[],["gpioqspisd2",3]]],[11,"clone","","",455,[[],["voltageselect",3]]],[11,"clone","","",456,[[],["gpioqspisd3",3]]],[11,"clone","","",457,[[],["gpioqspisd0",3]]],[11,"clone","rp2040_pac::pio0","",475,[[],["pio0",3]]],[11,"clone","","",476,[[],["statemachine",3]]],[11,"clone","","",477,[[],["irq",3]]],[11,"clone","rp2040_pac::pio0::fields","",459,[[],["flevel",3]]],[11,"clone","","",460,[[],["intr",3]]],[11,"clone","","",461,[[],["dbgcfginfo",3]]],[11,"clone","","",462,[[],["irq",3]]],[11,"clone","","",463,[[],["smpinctrl",3]]],[11,"clone","","",464,[[],["fdebug",3]]],[11,"clone","","",465,[[],["smshiftctrl",3]]],[11,"clone","","",466,[[],["irqforce",3]]],[11,"clone","","",467,[[],["smexecctrl",3]]],[11,"clone","","",468,[[],["fstat",3]]],[11,"clone","","",469,[[],["ctrl",3]]],[11,"clone","","",470,[[],["smclkdiv",3]]],[11,"clone","","",471,[[],["sminstr",3]]],[11,"clone","","",472,[[],["smaddr",3]]],[11,"clone","","",473,[[],["instrmem",3]]],[11,"clone","rp2040_pac::pio0::values","",474,[[],["smexecctrlstatussel",3]]],[11,"clone","rp2040_pac::pll_sys","",482,[[],["pllsys",3]]],[11,"clone","rp2040_pac::pll_sys::fields","",478,[[],["cs",3]]],[11,"clone","","",479,[[],["pwr",3]]],[11,"clone","","",480,[[],["prim",3]]],[11,"clone","","",481,[[],["fbdivint",3]]],[11,"clone","rp2040_pac::ppb","",513,[[],["ppb",3]]],[11,"clone","rp2040_pac::ppb::fields","",483,[[],["nvicicer",3]]],[11,"clone","","",484,[[],["mpuctrl",3]]],[11,"clone","","",485,[[],["ccr",3]]],[11,"clone","","",486,[[],["cpuid",3]]],[11,"clone","","",487,[[],["icsr",3]]],[11,"clone","","",488,[[],["systcsr",3]]],[11,"clone","","",489,[[],["mputype",3]]],[11,"clone","","",490,[[],["systcvr",3]]],[11,"clone","","",491,[[],["nvicipr0",3]]],[11,"clone","","",492,[[],["nvicipr4",3]]],[11,"clone","","",493,[[],["aircr",3]]],[11,"clone","","",494,[[],["systcalib",3]]],[11,"clone","","",495,[[],["nviciser",3]]],[11,"clone","","",496,[[],["scr",3]]],[11,"clone","","",497,[[],["nvicipr6",3]]],[11,"clone","","",498,[[],["nvicipr2",3]]],[11,"clone","","",499,[[],["nvicispr",3]]],[11,"clone","","",500,[[],["mpurbar",3]]],[11,"clone","","",501,[[],["nvicicpr",3]]],[11,"clone","","",502,[[],["shcsr",3]]],[11,"clone","","",503,[[],["shpr3",3]]],[11,"clone","","",504,[[],["vtor",3]]],[11,"clone","","",505,[[],["systrvr",3]]],[11,"clone","","",506,[[],["shpr2",3]]],[11,"clone","","",507,[[],["nvicipr7",3]]],[11,"clone","","",508,[[],["nvicipr5",3]]],[11,"clone","","",509,[[],["nvicipr1",3]]],[11,"clone","","",510,[[],["nvicipr3",3]]],[11,"clone","","",511,[[],["mpurasr",3]]],[11,"clone","","",512,[[],["mpurnr",3]]],[11,"clone","rp2040_pac::psm","",518,[[],["psm",3]]],[11,"clone","rp2040_pac::psm::fields","",514,[[],["frceoff",3]]],[11,"clone","","",515,[[],["wdsel",3]]],[11,"clone","","",516,[[],["frceon",3]]],[11,"clone","","",517,[[],["done",3]]],[11,"clone","rp2040_pac::pwm","",565,[[],["pwm",3]]],[11,"clone","rp2040_pac::pwm::fields","",519,[[],["ch0top",3]]],[11,"clone","","",520,[[],["ch2top",3]]],[11,"clone","","",521,[[],["ch4ctr",3]]],[11,"clone","","",522,[[],["ch0csr",3]]],[11,"clone","","",523,[[],["ch4div",3]]],[11,"clone","","",524,[[],["ch0cc",3]]],[11,"clone","","",525,[[],["ch2csr",3]]],[11,"clone","","",526,[[],["ch3cc",3]]],[11,"clone","","",527,[[],["ch1ctr",3]]],[11,"clone","","",528,[[],["ch4top",3]]],[11,"clone","","",529,[[],["ch3csr",3]]],[11,"clone","","",530,[[],["ch2cc",3]]],[11,"clone","","",531,[[],["ch6div",3]]],[11,"clone","","",532,[[],["ch5csr",3]]],[11,"clone","","",533,[[],["ch6cc",3]]],[11,"clone","","",534,[[],["ints",3]]],[11,"clone","","",535,[[],["intf",3]]],[11,"clone","","",536,[[],["ch1top",3]]],[11,"clone","","",537,[[],["ch2div",3]]],[11,"clone","","",538,[[],["ch4csr",3]]],[11,"clone","","",539,[[],["ch3div",3]]],[11,"clone","","",540,[[],["ch6top",3]]],[11,"clone","","",541,[[],["ch1div",3]]],[11,"clone","","",542,[[],["en",3]]],[11,"clone","","",543,[[],["ch7ctr",3]]],[11,"clone","","",544,[[],["ch4cc",3]]],[11,"clone","","",545,[[],["ch5cc",3]]],[11,"clone","","",546,[[],["ch1cc",3]]],[11,"clone","","",547,[[],["ch7div",3]]],[11,"clone","","",548,[[],["ch5ctr",3]]],[11,"clone","","",549,[[],["ch6ctr",3]]],[11,"clone","","",550,[[],["ch3top",3]]],[11,"clone","","",551,[[],["ch6csr",3]]],[11,"clone","","",552,[[],["ch7cc",3]]],[11,"clone","","",553,[[],["ch3ctr",3]]],[11,"clone","","",554,[[],["ch1csr",3]]],[11,"clone","","",555,[[],["ch7top",3]]],[11,"clone","","",556,[[],["ch0ctr",3]]],[11,"clone","","",557,[[],["ch0div",3]]],[11,"clone","","",558,[[],["ch2ctr",3]]],[11,"clone","","",559,[[],["ch5div",3]]],[11,"clone","","",560,[[],["intr",3]]],[11,"clone","","",561,[[],["ch7csr",3]]],[11,"clone","","",562,[[],["inte",3]]],[11,"clone","","",563,[[],["ch5top",3]]],[11,"clone","rp2040_pac::pwm::values","",564,[[],["divmode",3]]],[11,"clone","rp2040_pac::resets","",568,[[],["resets",3]]],[11,"clone","rp2040_pac::resets::fields","",566,[[],["peripherals",3]]],[11,"clone","","",567,[[],["wdsel",3]]],[11,"clone","rp2040_pac::rosc","",581,[[],["rosc",3]]],[11,"clone","rp2040_pac::rosc::fields","",569,[[],["phase",3]]],[11,"clone","","",570,[[],["randombit",3]]],[11,"clone","","",571,[[],["status",3]]],[11,"clone","","",572,[[],["ctrl",3]]],[11,"clone","","",573,[[],["freqb",3]]],[11,"clone","","",574,[[],["freqa",3]]],[11,"clone","","",575,[[],["count",3]]],[11,"clone","","",576,[[],["div",3]]],[11,"clone","rp2040_pac::rosc::values","",577,[[],["ctrlfreqrange",3]]],[11,"clone","","",578,[[],["passwd",3]]],[11,"clone","","",579,[[],["ctrlenable",3]]],[11,"clone","","",580,[[],["divdiv",3]]],[11,"clone","rp2040_pac::rtc","",594,[[],["rtc",3]]],[11,"clone","rp2040_pac::rtc::fields","",582,[[],["intf",3]]],[11,"clone","","",583,[[],["inte",3]]],[11,"clone","","",584,[[],["setup1",3]]],[11,"clone","","",585,[[],["setup0",3]]],[11,"clone","","",586,[[],["clkdivm1",3]]],[11,"clone","","",587,[[],["rtc0",3]]],[11,"clone","","",588,[[],["irqsetup0",3]]],[11,"clone","","",589,[[],["irqsetup1",3]]],[11,"clone","","",590,[[],["ints",3]]],[11,"clone","","",591,[[],["rtc1",3]]],[11,"clone","","",592,[[],["intr",3]]],[11,"clone","","",593,[[],["ctrl",3]]],[11,"clone","rp2040_pac::sio","",623,[[],["sio",3]]],[11,"clone","rp2040_pac::sio::fields","",595,[[],["interp1ctrllane0",3]]],[11,"clone","","",596,[[],["interp1accum0add",3]]],[11,"clone","","",597,[[],["gpiohiout",3]]],[11,"clone","","",598,[[],["gpiohioutxor",3]]],[11,"clone","","",599,[[],["interp0ctrllane0",3]]],[11,"clone","","",600,[[],["gpiohioutset",3]]],[11,"clone","","",601,[[],["gpiooe",3]]],[11,"clone","","",602,[[],["gpiohioutclr",3]]],[11,"clone","","",603,[[],["interp1accum1add",3]]],[11,"clone","","",604,[[],["gpiohioe",3]]],[11,"clone","","",605,[[],["gpiohiin",3]]],[11,"clone","","",606,[[],["gpiooeset",3]]],[11,"clone","","",607,[[],["gpiooutset",3]]],[11,"clone","","",608,[[],["gpiohioexor",3]]],[11,"clone","","",609,[[],["gpiooutxor",3]]],[11,"clone","","",610,[[],["divcsr",3]]],[11,"clone","","",611,[[],["gpiooeclr",3]]],[11,"clone","","",612,[[],["fifost",3]]],[11,"clone","","",613,[[],["gpiohioeset",3]]],[11,"clone","","",614,[[],["interp0accum0add",3]]],[11,"clone","","",615,[[],["interp0accum1add",3]]],[11,"clone","","",616,[[],["gpioout",3]]],[11,"clone","","",617,[[],["gpioin",3]]],[11,"clone","","",618,[[],["gpiohioeclr",3]]],[11,"clone","","",619,[[],["interp0ctrllane1",3]]],[11,"clone","","",620,[[],["gpiooexor",3]]],[11,"clone","","",621,[[],["gpiooutclr",3]]],[11,"clone","","",622,[[],["interp1ctrllane1",3]]],[11,"clone","rp2040_pac::spi0","",642,[[],["spi0",3]]],[11,"clone","rp2040_pac::spi0::fields","",624,[[],["sspperiphid0",3]]],[11,"clone","","",625,[[],["sspsr",3]]],[11,"clone","","",626,[[],["sspperiphid1",3]]],[11,"clone","","",627,[[],["sspcpsr",3]]],[11,"clone","","",628,[[],["sspcr0",3]]],[11,"clone","","",629,[[],["sspmis",3]]],[11,"clone","","",630,[[],["ssppcellid1",3]]],[11,"clone","","",631,[[],["ssppcellid0",3]]],[11,"clone","","",632,[[],["sspperiphid3",3]]],[11,"clone","","",633,[[],["sspdr",3]]],[11,"clone","","",634,[[],["ssppcellid2",3]]],[11,"clone","","",635,[[],["sspris",3]]],[11,"clone","","",636,[[],["sspcr1",3]]],[11,"clone","","",637,[[],["ssppcellid3",3]]],[11,"clone","","",638,[[],["sspdmacr",3]]],[11,"clone","","",639,[[],["sspperiphid2",3]]],[11,"clone","","",640,[[],["sspimsc",3]]],[11,"clone","","",641,[[],["sspicr",3]]],[11,"clone","rp2040_pac::syscfg","",648,[[],["syscfg",3]]],[11,"clone","rp2040_pac::syscfg::fields","",643,[[],["procinsyncbypass",3]]],[11,"clone","","",644,[[],["mempowerdown",3]]],[11,"clone","","",645,[[],["procconfig",3]]],[11,"clone","","",646,[[],["dbgforce",3]]],[11,"clone","","",647,[[],["procinsyncbypasshi",3]]],[11,"clone","rp2040_pac::sysinfo","",651,[[],["sysinfo",3]]],[11,"clone","rp2040_pac::sysinfo::fields","",649,[[],["platform",3]]],[11,"clone","","",650,[[],["chipid",3]]],[11,"clone","rp2040_pac::tbman","",653,[[],["tbman",3]]],[11,"clone","rp2040_pac::tbman::fields","",652,[[],["platform",3]]],[11,"clone","rp2040_pac::timer","",661,[[],["timer",3]]],[11,"clone","rp2040_pac::timer::fields","",654,[[],["dbgpause",3]]],[11,"clone","","",655,[[],["pause",3]]],[11,"clone","","",656,[[],["inte",3]]],[11,"clone","","",657,[[],["armed",3]]],[11,"clone","","",658,[[],["ints",3]]],[11,"clone","","",659,[[],["intf",3]]],[11,"clone","","",660,[[],["intr",3]]],[11,"clone","rp2040_pac::uart0","",684,[[],["uart0",3]]],[11,"clone","rp2040_pac::uart0::fields","",662,[[],["uartibrd",3]]],[11,"clone","","",663,[[],["uartperiphid3",3]]],[11,"clone","","",664,[[],["uartpcellid1",3]]],[11,"clone","","",665,[[],["uartdr",3]]],[11,"clone","","",666,[[],["uartmis",3]]],[11,"clone","","",667,[[],["uartperiphid2",3]]],[11,"clone","","",668,[[],["uartperiphid1",3]]],[11,"clone","","",669,[[],["uartris",3]]],[11,"clone","","",670,[[],["uartpcellid2",3]]],[11,"clone","","",671,[[],["uartpcellid3",3]]],[11,"clone","","",672,[[],["uartlcrh",3]]],[11,"clone","","",673,[[],["uartperiphid0",3]]],[11,"clone","","",674,[[],["uartfbrd",3]]],[11,"clone","","",675,[[],["uartimsc",3]]],[11,"clone","","",676,[[],["uarticr",3]]],[11,"clone","","",677,[[],["uartfr",3]]],[11,"clone","","",678,[[],["uartifls",3]]],[11,"clone","","",679,[[],["uartilpr",3]]],[11,"clone","","",680,[[],["uartdmacr",3]]],[11,"clone","","",681,[[],["uartcr",3]]],[11,"clone","","",682,[[],["uartpcellid0",3]]],[11,"clone","","",683,[[],["uartrsr",3]]],[11,"clone","rp2040_pac::usbctrl_regs","",723,[[],["usbctrlregs",3]]],[11,"clone","rp2040_pac::usbctrl_regs::fields","",685,[[],["usbphytrim",3]]],[11,"clone","","",686,[[],["addrendp8",3]]],[11,"clone","","",687,[[],["sofrd",3]]],[11,"clone","","",688,[[],["usbpwr",3]]],[11,"clone","","",689,[[],["epstatusstallnak",3]]],[11,"clone","","",690,[[],["addrendp10",3]]],[11,"clone","","",691,[[],["mainctrl",3]]],[11,"clone","","",692,[[],["siestatus",3]]],[11,"clone","","",693,[[],["nakpoll",3]]],[11,"clone","","",694,[[],["addrendp13",3]]],[11,"clone","","",695,[[],["addrendp7",3]]],[11,"clone","","",696,[[],["inte",3]]],[11,"clone","","",697,[[],["addrendp4",3]]],[11,"clone","","",698,[[],["addrendp14",3]]],[11,"clone","","",699,[[],["addrendp",3]]],[11,"clone","","",700,[[],["addrendp15",3]]],[11,"clone","","",701,[[],["intr",3]]],[11,"clone","","",702,[[],["addrendp11",3]]],[11,"clone","","",703,[[],["buffstatus",3]]],[11,"clone","","",704,[[],["sofwr",3]]],[11,"clone","","",705,[[],["epabortdone",3]]],[11,"clone","","",706,[[],["usbphydirect",3]]],[11,"clone","","",707,[[],["addrendp6",3]]],[11,"clone","","",708,[[],["buffcpushouldhandle",3]]],[11,"clone","","",709,[[],["ints",3]]],[11,"clone","","",710,[[],["usbmuxing",3]]],[11,"clone","","",711,[[],["intepctrl",3]]],[11,"clone","","",712,[[],["addrendp2",3]]],[11,"clone","","",713,[[],["addrendp5",3]]],[11,"clone","","",714,[[],["epstallarm",3]]],[11,"clone","","",715,[[],["addrendp3",3]]],[11,"clone","","",716,[[],["epabort",3]]],[11,"clone","","",717,[[],["usbphydirectoverride",3]]],[11,"clone","","",718,[[],["siectrl",3]]],[11,"clone","","",719,[[],["addrendp9",3]]],[11,"clone","","",720,[[],["addrendp1",3]]],[11,"clone","","",721,[[],["intf",3]]],[11,"clone","","",722,[[],["addrendp12",3]]],[11,"clone","rp2040_pac::vreg_and_chip_reset","",727,[[],["vregandchipreset",3]]],[11,"clone","rp2040_pac::vreg_and_chip_reset::fields","",724,[[],["chipreset",3]]],[11,"clone","","",725,[[],["vreg",3]]],[11,"clone","","",726,[[],["bod",3]]],[11,"clone","rp2040_pac::watchdog","",732,[[],["watchdog",3]]],[11,"clone","rp2040_pac::watchdog::fields","",728,[[],["tick",3]]],[11,"clone","","",729,[[],["reason",3]]],[11,"clone","","",730,[[],["ctrl",3]]],[11,"clone","","",731,[[],["load",3]]],[11,"clone","rp2040_pac::xip_ctrl","",738,[[],["xipctrl",3]]],[11,"clone","rp2040_pac::xip_ctrl::fields","",733,[[],["flush",3]]],[11,"clone","","",734,[[],["streamaddr",3]]],[11,"clone","","",735,[[],["stat",3]]],[11,"clone","","",736,[[],["ctrl",3]]],[11,"clone","","",737,[[],["streamctr",3]]],[11,"clone","rp2040_pac::xip_ssi","",771,[[],["xipssi",3]]],[11,"clone","rp2040_pac::xip_ssi::fields","",739,[[],["msticr",3]]],[11,"clone","","",740,[[],["ctrlr0",3]]],[11,"clone","","",741,[[],["spictrlr0",3]]],[11,"clone","","",742,[[],["rxflr",3]]],[11,"clone","","",743,[[],["baudr",3]]],[11,"clone","","",744,[[],["txflr",3]]],[11,"clone","","",745,[[],["imr",3]]],[11,"clone","","",746,[[],["isr",3]]],[11,"clone","","",747,[[],["dmacr",3]]],[11,"clone","","",748,[[],["icr",3]]],[11,"clone","","",749,[[],["idr",3]]],[11,"clone","","",750,[[],["ssiversionid",3]]],[11,"clone","","",751,[[],["txoicr",3]]],[11,"clone","","",752,[[],["dmatdlr",3]]],[11,"clone","","",753,[[],["dmardlr",3]]],[11,"clone","","",754,[[],["ssienr",3]]],[11,"clone","","",755,[[],["risr",3]]],[11,"clone","","",756,[[],["txddriveedge",3]]],[11,"clone","","",757,[[],["rxsampledly",3]]],[11,"clone","","",758,[[],["dr0",3]]],[11,"clone","","",759,[[],["rxoicr",3]]],[11,"clone","","",760,[[],["mwcr",3]]],[11,"clone","","",761,[[],["rxuicr",3]]],[11,"clone","","",762,[[],["ctrlr1",3]]],[11,"clone","","",763,[[],["txftlr",3]]],[11,"clone","","",764,[[],["ser",3]]],[11,"clone","","",765,[[],["sr",3]]],[11,"clone","","",766,[[],["rxftlr",3]]],[11,"clone","rp2040_pac::xip_ssi::values","",767,[[],["spictrlr0transtype",3]]],[11,"clone","","",768,[[],["spictrlr0instl",3]]],[11,"clone","","",769,[[],["ctrlr0tmod",3]]],[11,"clone","","",770,[[],["ctrlr0spifrf",3]]],[11,"clone","rp2040_pac::xosc","",779,[[],["xosc",3]]],[11,"clone","rp2040_pac::xosc::fields","",772,[[],["status",3]]],[11,"clone","","",773,[[],["count",3]]],[11,"clone","","",774,[[],["ctrl",3]]],[11,"clone","","",775,[[],["startup",3]]],[11,"clone","rp2040_pac::xosc::values","",776,[[],["ctrlfreqrange",3]]],[11,"clone","","",777,[[],["ctrlenable",3]]],[11,"clone","","",778,[[],["statusfreqrange",3]]],[11,"number","rp2040_pac","",781,[[]]],[11,"take","","Returns all the core peripherals <em>once</em>",780,[[],[["option",4],["peripherals",3]]]],[11,"steal","","Unchecked version of <code>Peripherals::take</code>",780,[[],["peripherals",3]]],[11,"iciallu","","I-cache invalidate all to PoU",785,[[]]],[11,"icimvau","","I-cache invalidate by MVA to PoU",785,[[]]],[11,"dcimvac","","D-cache invalidate by MVA to PoC",785,[[]]],[11,"dcisw","","D-cache invalidate by set-way",785,[[]]],[11,"dccmvau","","D-cache clean by MVA to PoU",785,[[]]],[11,"dccmvac","","D-cache clean by MVA to PoC",785,[[]]],[11,"dccsw","","D-cache clean by set-way",785,[[]]],[11,"dccimvac","","D-cache clean and invalidate by MVA to PoC",785,[[]]],[11,"dccisw","","D-cache clean and invalidate by set-way",785,[[]]],[11,"bpiall","","Branch predictor invalidate all",785,[[]]],[18,"PTR","","Pointer to the register block",785,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",785,[[]]],[11,"select_cache","","Selects the current CCSIDR",786,[[["csselrcachetype",4]]]],[11,"cache_num_sets_ways","","Returns the number of sets and ways in the selected cache",786,[[["csselrcachetype",4]]]],[11,"cache_dminline","","Returns log2 of the number of words in the smallest cache …",786,[[]]],[11,"cache_iminline","","Returns log2 of the number of words in the smallest cache …",786,[[]]],[18,"PTR","","Pointer to the register block",786,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",786,[[]]],[11,"enable_trace","","Enables TRACE. This is for example required by the …",787,[[]]],[11,"disable_trace","","Disables TRACE. See <code>DCB::enable_trace()</code> for more details",787,[[]]],[11,"is_debugger_attached","","Is there a debugger attached? (see note)",787,[[]]],[18,"PTR","","Pointer to the register block",787,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",787,[[]]],[11,"enable_cycle_counter","","Enables the cycle counter",788,[[]]],[11,"get_cycle_count","","Returns the current clock cycle count",788,[[]]],[11,"unlock","","Removes the software lock on the DWT",788,[[]]],[18,"PTR","","Pointer to the register block",788,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",788,[[]]],[18,"PTR","","Pointer to the register block",789,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",789,[[]]],[18,"PTR","","Pointer to the register block",790,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",790,[[]]],[18,"PTR","","Pointer to the register block",791,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",791,[[]]],[11,"request","","Request an IRQ in software",792,[[]]],[11,"mask","","Disables <code>interrupt</code>",792,[[]]],[11,"unmask","","Enables <code>interrupt</code>",792,[[]]],[11,"get_priority","","Returns the NVIC priority of <code>interrupt</code>",792,[[]]],[11,"is_active","","Is <code>interrupt</code> active or pre-empted and stacked",792,[[]]],[11,"is_enabled","","Checks if <code>interrupt</code> is enabled",792,[[]]],[11,"is_pending","","Checks if <code>interrupt</code> is pending",792,[[]]],[11,"pend","","Forces <code>interrupt</code> into pending state",792,[[]]],[11,"set_priority","","Sets the \\\"priority\\\" of <code>interrupt</code> to <code>prio</code>",792,[[]]],[11,"unpend","","Clears <code>interrupt</code>\'s pending state",792,[[]]],[18,"PTR","","Pointer to the register block",792,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",792,[[]]],[11,"vect_active","","Returns the active exception number",793,[[],["vectactive",4]]],[11,"enable_icache","","Enables I-cache if currently disabled.",793,[[]]],[11,"disable_icache","","Disables I-cache if currently enabled.",793,[[]]],[11,"icache_enabled","","Returns whether the I-cache is currently enabled.",793,[[]]],[11,"invalidate_icache","","Invalidates the entire I-cache.",793,[[]]],[11,"enable_dcache","","Enables D-cache if currently disabled.",793,[[["cpuid",3]]]],[11,"disable_dcache","","Disables D-cache if currently enabled.",793,[[["cpuid",3]]]],[11,"dcache_enabled","","Returns whether the D-cache is currently enabled.",793,[[]]],[11,"clean_dcache","","Cleans the entire D-cache.",793,[[["cpuid",3]]]],[11,"clean_invalidate_dcache","","Cleans and invalidates the entire D-cache.",793,[[["cpuid",3]]]],[11,"invalidate_dcache_by_address","","Invalidates D-cache by address.",793,[[]]],[11,"invalidate_dcache_by_ref","","Invalidates an object from the D-cache.",793,[[]]],[11,"invalidate_dcache_by_slice","","Invalidates a slice from the D-cache.",793,[[]]],[11,"clean_dcache_by_address","","Cleans D-cache by address.",793,[[]]],[11,"clean_dcache_by_ref","","Cleans an object from the D-cache.",793,[[]]],[11,"clean_dcache_by_slice","","Cleans a slice from D-cache.",793,[[]]],[11,"clean_invalidate_dcache_by_address","","Cleans and invalidates D-cache by address.",793,[[]]],[11,"set_sleepdeep","","Set the SLEEPDEEP bit in the SCR register",793,[[]]],[11,"clear_sleepdeep","","Clear the SLEEPDEEP bit in the SCR register",793,[[]]],[11,"set_sleeponexit","","Set the SLEEPONEXIT bit in the SCR register",793,[[]]],[11,"clear_sleeponexit","","Clear the SLEEPONEXIT bit in the SCR register",793,[[]]],[11,"sys_reset","","Initiate a system reset request to reset the MCU",793,[[]]],[11,"set_pendsv","","Set the PENDSVSET bit in the ICSR register which will …",793,[[]]],[11,"is_pendsv_pending","","Check if PENDSVSET bit in the ICSR register is set …",793,[[]]],[11,"clear_pendsv","","Set the PENDSVCLR bit in the ICSR register which will …",793,[[]]],[11,"set_pendst","","Set the PENDSTSET bit in the ICSR register which will …",793,[[]]],[11,"is_pendst_pending","","Check if PENDSTSET bit in the ICSR register is set …",793,[[]]],[11,"clear_pendst","","Set the PENDSTCLR bit in the ICSR register which will …",793,[[]]],[11,"get_priority","","Returns the hardware priority of <code>system_handler</code>",793,[[["systemhandler",4]]]],[11,"set_priority","","Sets the hardware priority of <code>system_handler</code> to <code>prio</code>",793,[[["systemhandler",4]]]],[11,"enable","","Enable the exception",793,[[["exception",4]]]],[11,"disable","","Disable the exception",793,[[["exception",4]]]],[11,"is_enabled","","Check if an exception is enabled",793,[[["exception",4]]]],[18,"PTR","","Pointer to the register block",793,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",793,[[]]],[11,"clear_current","","Clears current value to 0",794,[[]]],[11,"disable_counter","","Disables counter",794,[[]]],[11,"disable_interrupt","","Disables SysTick interrupt",794,[[]]],[11,"enable_counter","","Enables counter",794,[[]]],[11,"enable_interrupt","","Enables SysTick interrupt",794,[[]]],[11,"get_clock_source","","Gets clock source",794,[[],["systclksource",4]]],[11,"get_current","","Gets current value",794,[[]]],[11,"get_reload","","Gets reload value",794,[[]]],[11,"get_ticks_per_10ms","","Returns the reload value with which the counter would …",794,[[]]],[11,"has_reference_clock","","Checks if an external reference clock is available",794,[[]]],[11,"has_wrapped","","Checks if the counter wrapped (underflowed) since the …",794,[[]]],[11,"is_counter_enabled","","Checks if counter is enabled",794,[[]]],[11,"is_interrupt_enabled","","Checks if SysTick interrupt is enabled",794,[[]]],[11,"is_precise","","Checks if the calibration value is precise",794,[[]]],[11,"set_clock_source","","Sets clock source",794,[[["systclksource",4]]]],[11,"set_reload","","Sets reload value",794,[[]]],[18,"PTR","","Pointer to the register block",794,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",794,[[]]],[18,"PTR","","Pointer to the register block",795,null],[11,"ptr","","Returns a pointer to the register block (to be deprecated …",795,[[]]]],"p":[[3,"Cs"],[3,"Inte"],[3,"Ints"],[3,"Intf"],[3,"Fcs"],[3,"Intr"],[3,"Result"],[3,"Div"],[3,"Fifo"],[3,"Adc"],[3,"Perfsel1"],[3,"Perfsel3"],[3,"Perfctr3"],[3,"Perfsel2"],[3,"Perfctr2"],[3,"Perfctr0"],[3,"Perfctr1"],[3,"Perfsel0"],[3,"BusPriorityAck"],[3,"BusPriority"],[3,"Busctrl"],[3,"ClkGpout0Div"],[3,"ClkRefDiv"],[3,"ClkAdcCtrl"],[3,"Intr"],[3,"ClkSysResusStatus"],[3,"WakeEn0"],[3,"ClkGpout3Ctrl"],[3,"ClkAdcDiv"],[3,"ClkSysDiv"],[3,"Fc0Interval"],[3,"ClkSysResusCtrl"],[3,"SleepEn0"],[3,"ClkPeriCtrl"],[3,"ClkSysCtrl"],[3,"ClkRtcCtrl"],[3,"Enabled1"],[3,"ClkGpout3Div"],[3,"WakeEn1"],[3,"ClkRefCtrl"],[3,"ClkGpout1Ctrl"],[3,"Fc0Status"],[3,"Fc0MinKhz"],[3,"ClkGpout0Ctrl"],[3,"Ints"],[3,"ClkGpout1Div"],[3,"Enabled0"],[3,"ClkGpout2Ctrl"],[3,"Fc0Result"],[3,"Fc0Src"],[3,"Fc0Delay"],[3,"ClkRtcDiv"],[3,"ClkUsbDiv"],[3,"Inte"],[3,"Fc0RefKhz"],[3,"Fc0MaxKhz"],[3,"Intf"],[3,"SleepEn1"],[3,"ClkGpout2Div"],[3,"ClkUsbCtrl"],[3,"ClkGpout2CtrlAuxsrc"],[3,"ClkGpout0CtrlAuxsrc"],[3,"ClkGpout1CtrlAuxsrc"],[3,"ClkPeriCtrlAuxsrc"],[3,"ClkSysCtrlSrc"],[3,"ClkAdcCtrlAuxsrc"],[3,"ClkRefCtrlSrc"],[3,"ClkGpout3CtrlAuxsrc"],[3,"ClkRefCtrlAuxsrc"],[3,"ClkSysCtrlAuxsrc"],[3,"ClkUsbCtrlAuxsrc"],[3,"Fc0SrcFc0Src"],[3,"ClkRtcCtrlAuxsrc"],[3,"Clocks"],[3,"Ch8DbgCtdreq"],[3,"Ch10DbgCtdreq"],[3,"Ch11CtrlTrig"],[3,"NChannels"],[3,"Ch3DbgCtdreq"],[3,"Intf1"],[3,"Ch1DbgCtdreq"],[3,"Ints0"],[3,"Ch2DbgCtdreq"],[3,"Ch1CtrlTrig"],[3,"ChanAbort"],[3,"Ch0CtrlTrig"],[3,"Ch4DbgCtdreq"],[3,"Ch7CtrlTrig"],[3,"Inte0"],[3,"Ch9DbgCtdreq"],[3,"FifoLevels"],[3,"Ch10CtrlTrig"],[3,"Ch6CtrlTrig"],[3,"Ch3CtrlTrig"],[3,"Ch5CtrlTrig"],[3,"Ch9CtrlTrig"],[3,"Ch5DbgCtdreq"],[3,"Timer1"],[3,"Ch11DbgCtdreq"],[3,"Ch2CtrlTrig"],[3,"Ch0DbgCtdreq"],[3,"Timer0"],[3,"Intf0"],[3,"Ch6DbgCtdreq"],[3,"Ch8CtrlTrig"],[3,"Inte1"],[3,"Ch7DbgCtdreq"],[3,"Ints1"],[3,"SniffCtrl"],[3,"Ch4CtrlTrig"],[3,"Intr"],[3,"MultiChanTrigger"],[3,"DataSize"],[3,"SniffCtrlCalc"],[3,"TreqSel"],[3,"Dma"],[3,"Reg"],[3,"IcAckGeneralCall"],[3,"IcSdaSetup"],[3,"IcStatus"],[3,"IcSar"],[3,"IcDmaTdlr"],[3,"IcClrIntr"],[3,"IcCon"],[3,"IcTxAbrtSource"],[3,"IcEnableStatus"],[3,"IcTxflr"],[3,"IcClrRxDone"],[3,"IcRxflr"],[3,"IcClrRxUnder"],[3,"IcClrTxAbrt"],[3,"IcDmaCr"],[3,"IcEnable"],[3,"IcRawIntrStat"],[3,"IcDmaRdlr"],[3,"IcCompType"],[3,"IcClrStopDet"],[3,"IcClrStartDet"],[3,"IcClrRestartDet"],[3,"IcFsSclHcnt"],[3,"IcClrRxOver"],[3,"IcSsSclLcnt"],[3,"IcFsSpklen"],[3,"IcDataCmd"],[3,"IcTxTl"],[3,"IcIntrStat"],[3,"IcTar"],[3,"IcSlvDataNackOnly"],[3,"IcSsSclHcnt"],[3,"IcIntrMask"],[3,"IcClrRdReq"],[3,"IcCompVersion"],[3,"IcFsSclLcnt"],[3,"IcClrGenCall"],[3,"IcSdaHold"],[3,"IcRxTl"],[3,"IcCompParam1"],[3,"IcClrActivity"],[3,"IcClrTxOver"],[3,"IcIntrStatRStartDet"],[3,"IcConIc10bitaddrMaster"],[3,"IcRawIntrStatRxFull"],[3,"IcAckGeneralCallAckGenCall"],[3,"IcStatusRfne"],[3,"IcIntrMaskMGenCall"],[3,"IcConIcRestartEn"],[3,"IcDataCmdCmd"],[3,"IcEnableStatusSlvDisabledWhileBusy"],[3,"IcTxAbrtSourceAbrtSlvArblost"],[3,"IcTxAbrtSourceAbrtSbyteAckdet"],[3,"IcIntrStatRActivity"],[3,"IcTarSpecial"],[3,"IcTxAbrtSourceAbrtHsAckdet"],[3,"IcEnableTxCmdBlock"],[3,"IcRawIntrStatRestartDet"],[3,"IcRawIntrStatActivity"],[3,"IcTxAbrtSourceAbrtSlvflushTxfifo"],[3,"IcTxAbrtSourceAbrt10bRdNorstrt"],[3,"IcConTxEmptyCtrl"],[3,"IcIntrStatRGenCall"],[3,"IcDmaCrTdmae"],[3,"IcDmaCrRdmae"],[3,"IcRawIntrStatTxEmpty"],[3,"IcConMasterMode"],[3,"IcTxAbrtSourceAbrt10addr2Noack"],[3,"IcIntrStatRTxEmpty"],[3,"IcIntrMaskMRxOver"],[3,"IcTxAbrtSourceAbrtMasterDis"],[3,"IcStatusMstActivity"],[3,"IcIntrMaskMRxDone"],[3,"IcTxAbrtSourceAbrtSlvrdIntx"],[3,"IcIntrStatRRxUnder"],[3,"IcEnableAbort"],[3,"IcIntrStatRRestartDet"],[3,"IcIntrStatRRxDone"],[3,"IcTxAbrtSourceAbrt7bAddrNoack"],[3,"IcStatusRff"],[3,"IcIntrMaskMTxAbrt"],[3,"IcIntrStatRTxAbrt"],[3,"IcIntrMaskMRxUnder"],[3,"IcRawIntrStatStopDet"],[3,"IcEnableStatusSlvRxDataLost"],[3,"IcTxAbrtSourceAbrtGcallRead"],[3,"IcIntrMaskMTxEmpty"],[3,"IcTxAbrtSourceAbrtSbyteNorstrt"],[3,"IcEnableEnable"],[3,"IcTxAbrtSourceAbrtUserAbrt"],[3,"IcIntrMaskMRdReq"],[3,"IcIntrMaskMRestartDet"],[3,"IcRawIntrStatRdReq"],[3,"IcTarGcOrStart"],[3,"IcIntrMaskMMasterOnHoldReadOnly"],[3,"IcTxAbrtSourceAbrtHsNorstrt"],[3,"IcStatusActivity"],[3,"IcTxAbrtSourceAbrtGcallNoack"],[3,"IcConStopDetIfaddressed"],[3,"IcStatusTfe"],[3,"IcRawIntrStatRxOver"],[3,"IcIntrStatRTxOver"],[3,"IcStatusSlvActivity"],[3,"IcRawIntrStatStartDet"],[3,"IcRawIntrStatTxAbrt"],[3,"IcDataCmdRestart"],[3,"IcTxAbrtSourceArbLost"],[3,"IcStatusTfnf"],[3,"IcIntrStatRMasterOnHold"],[3,"IcRawIntrStatRxDone"],[3,"IcRawIntrStatRxUnder"],[3,"IcTxAbrtSourceAbrtTxdataNoack"],[3,"IcSlvDataNackOnlyNack"],[3,"IcConSpeed"],[3,"IcDataCmdFirstDataByte"],[3,"IcIntrStatRStopDet"],[3,"IcEnableStatusIcEn"],[3,"IcIntrStatRRdReq"],[3,"IcIntrStatRRxFull"],[3,"IcIntrMaskMStartDet"],[3,"IcConRxFifoFullHldCtrl"],[3,"IcConIc10bitaddrSlave"],[3,"IcIntrMaskMStopDet"],[3,"IcIntrMaskMActivity"],[3,"IcDataCmdStop"],[3,"IcIntrMaskMTxOver"],[3,"IcIntrMaskMRxFull"],[3,"IcRawIntrStatGenCall"],[3,"IcTxAbrtSourceAbrt10addr1Noack"],[3,"IcConIcSlaveDisable"],[3,"IcRawIntrStatMasterOnHold"],[3,"IcRawIntrStatTxOver"],[3,"IcIntrStatRRxOver"],[3,"I2c0"],[3,"Irqover"],[3,"Outover"],[3,"Oeover"],[3,"Inover"],[3,"Gpio28Status"],[3,"Gpio23Status"],[3,"Gpio15Status"],[3,"Proc0Ints3"],[3,"DormantWakeIntf1"],[3,"DormantWakeInts3"],[3,"Proc0Ints2"],[3,"Gpio2Ctrl"],[3,"Gpio7Ctrl"],[3,"Gpio22Status"],[3,"Gpio21Status"],[3,"Gpio22Ctrl"],[3,"Gpio29Ctrl"],[3,"Proc0Inte3"],[3,"DormantWakeInte0"],[3,"Gpio10Status"],[3,"Proc1Intf0"],[3,"Gpio16Status"],[3,"DormantWakeInte1"],[3,"Gpio26Ctrl"],[3,"Proc1Ints2"],[3,"Proc1Inte1"],[3,"Proc1Inte2"],[3,"Proc0Inte2"],[3,"Gpio18Ctrl"],[3,"DormantWakeInte3"],[3,"Gpio8Status"],[3,"Gpio24Ctrl"],[3,"Proc1Intf3"],[3,"Gpio5Status"],[3,"Gpio0Status"],[3,"Gpio1Status"],[3,"Proc1Ints1"],[3,"Proc1Ints0"],[3,"Intr1"],[3,"Gpio12Ctrl"],[3,"Proc0Ints1"],[3,"Gpio3Status"],[3,"Gpio13Status"],[3,"Gpio15Ctrl"],[3,"Gpio14Ctrl"],[3,"Gpio8Ctrl"],[3,"Proc0Ints0"],[3,"DormantWakeIntf0"],[3,"Gpio19Status"],[3,"Gpio24Status"],[3,"Gpio5Ctrl"],[3,"Gpio23Ctrl"],[3,"DormantWakeIntf2"],[3,"Gpio9Ctrl"],[3,"Proc1Inte0"],[3,"Gpio29Status"],[3,"Gpio2Status"],[3,"Gpio17Ctrl"],[3,"Intr2"],[3,"Proc0Intf2"],[3,"Gpio17Status"],[3,"Gpio10Ctrl"],[3,"Intr3"],[3,"Gpio20Ctrl"],[3,"Proc1Inte3"],[3,"Gpio18Status"],[3,"DormantWakeInts2"],[3,"Proc1Ints3"],[3,"Gpio27Ctrl"],[3,"Gpio21Ctrl"],[3,"Gpio4Status"],[3,"Proc0Intf0"],[3,"Gpio28Ctrl"],[3,"DormantWakeInte2"],[3,"Gpio11Status"],[3,"Proc0Inte0"],[3,"Intr0"],[3,"Gpio12Status"],[3,"Gpio11Ctrl"],[3,"Proc1Intf1"],[3,"Proc0Intf1"],[3,"Gpio6Ctrl"],[3,"Proc1Intf2"],[3,"Gpio16Ctrl"],[3,"Gpio20Status"],[3,"Gpio3Ctrl"],[3,"Gpio1Ctrl"],[3,"Gpio25Status"],[3,"Gpio14Status"],[3,"Gpio27Status"],[3,"Gpio6Status"],[3,"Gpio26Status"],[3,"Proc0Intf3"],[3,"DormantWakeInts1"],[3,"Gpio9Status"],[3,"DormantWakeInts0"],[3,"Proc0Inte1"],[3,"Gpio7Status"],[3,"Gpio13Ctrl"],[3,"Gpio19Ctrl"],[3,"DormantWakeIntf3"],[3,"Gpio25Ctrl"],[3,"Gpio4Ctrl"],[3,"Gpio0Ctrl"],[3,"Gpio10CtrlFuncsel"],[3,"Gpio25CtrlFuncsel"],[3,"Gpio9CtrlFuncsel"],[3,"Gpio28CtrlFuncsel"],[3,"Gpio29CtrlFuncsel"],[3,"Gpio17CtrlFuncsel"],[3,"Gpio7CtrlFuncsel"],[3,"Gpio5CtrlFuncsel"],[3,"Gpio13CtrlFuncsel"],[3,"Gpio24CtrlFuncsel"],[3,"Gpio27CtrlFuncsel"],[3,"Gpio11CtrlFuncsel"],[3,"Gpio14CtrlFuncsel"],[3,"Gpio4CtrlFuncsel"],[3,"Gpio16CtrlFuncsel"],[3,"Gpio8CtrlFuncsel"],[3,"Gpio2CtrlFuncsel"],[3,"Gpio22CtrlFuncsel"],[3,"Gpio0CtrlFuncsel"],[3,"Gpio23CtrlFuncsel"],[3,"Gpio12CtrlFuncsel"],[3,"Gpio20CtrlFuncsel"],[3,"Gpio19CtrlFuncsel"],[3,"Gpio6CtrlFuncsel"],[3,"Gpio26CtrlFuncsel"],[3,"Gpio15CtrlFuncsel"],[3,"Gpio18CtrlFuncsel"],[3,"Gpio1CtrlFuncsel"],[3,"Gpio21CtrlFuncsel"],[3,"Gpio3CtrlFuncsel"],[3,"IoBank0"],[3,"GpioQspiSclkCtrl"],[3,"GpioQspiSclkStatus"],[3,"Proc1Ints"],[3,"Proc0Ints"],[3,"GpioQspiSsStatus"],[3,"Proc0Inte"],[3,"GpioQspiSd3Ctrl"],[3,"GpioQspiSd1Ctrl"],[3,"GpioQspiSsCtrl"],[3,"GpioQspiSd3Status"],[3,"Intr"],[3,"GpioQspiSd2Ctrl"],[3,"GpioQspiSd2Status"],[3,"GpioQspiSd0Ctrl"],[3,"GpioQspiSd1Status"],[3,"GpioQspiSd0Status"],[3,"DormantWakeIntf"],[3,"DormantWakeInts"],[3,"Proc1Intf"],[3,"Proc0Intf"],[3,"DormantWakeInte"],[3,"Proc1Inte"],[3,"GpioQspiSclkCtrlFuncsel"],[3,"GpioQspiSd2CtrlFuncsel"],[3,"GpioQspiSd3CtrlFuncsel"],[3,"GpioQspiSsCtrlFuncsel"],[3,"GpioQspiSd1CtrlFuncsel"],[3,"GpioQspiSd0CtrlFuncsel"],[3,"IoQspi"],[3,"Drive"],[3,"VoltageSelect"],[3,"Gpio28"],[3,"Gpio27"],[3,"Gpio16"],[3,"Gpio20"],[3,"Gpio19"],[3,"Gpio22"],[3,"Gpio29"],[3,"Gpio11"],[3,"Gpio25"],[3,"Gpio10"],[3,"Gpio6"],[3,"Gpio18"],[3,"VoltageSelect"],[3,"Gpio0"],[3,"Gpio15"],[3,"Gpio13"],[3,"Swd"],[3,"Gpio12"],[3,"Gpio5"],[3,"Swclk"],[3,"Gpio24"],[3,"Gpio3"],[3,"Gpio14"],[3,"Gpio2"],[3,"Gpio1"],[3,"Gpio26"],[3,"Gpio23"],[3,"Gpio4"],[3,"Gpio7"],[3,"Gpio9"],[3,"Gpio17"],[3,"Gpio8"],[3,"Gpio21"],[3,"PadsBank0"],[3,"GpioQspiSd1"],[3,"GpioQspiSs"],[3,"GpioQspiSclk"],[3,"GpioQspiSd2"],[3,"VoltageSelect"],[3,"GpioQspiSd3"],[3,"GpioQspiSd0"],[3,"PadsQspi"],[3,"Flevel"],[3,"Intr"],[3,"DbgCfginfo"],[3,"Irq"],[3,"SmPinctrl"],[3,"Fdebug"],[3,"SmShiftctrl"],[3,"IrqForce"],[3,"SmExecctrl"],[3,"Fstat"],[3,"Ctrl"],[3,"SmClkdiv"],[3,"SmInstr"],[3,"SmAddr"],[3,"InstrMem"],[3,"SmExecctrlStatusSel"],[3,"Pio0"],[3,"StateMachine"],[3,"Irq"],[3,"Cs"],[3,"Pwr"],[3,"Prim"],[3,"FbdivInt"],[3,"PllSys"],[3,"NvicIcer"],[3,"MpuCtrl"],[3,"Ccr"],[3,"Cpuid"],[3,"Icsr"],[3,"SystCsr"],[3,"MpuType"],[3,"SystCvr"],[3,"NvicIpr0"],[3,"NvicIpr4"],[3,"Aircr"],[3,"SystCalib"],[3,"NvicIser"],[3,"Scr"],[3,"NvicIpr6"],[3,"NvicIpr2"],[3,"NvicIspr"],[3,"MpuRbar"],[3,"NvicIcpr"],[3,"Shcsr"],[3,"Shpr3"],[3,"Vtor"],[3,"SystRvr"],[3,"Shpr2"],[3,"NvicIpr7"],[3,"NvicIpr5"],[3,"NvicIpr1"],[3,"NvicIpr3"],[3,"MpuRasr"],[3,"MpuRnr"],[3,"Ppb"],[3,"FrceOff"],[3,"Wdsel"],[3,"FrceOn"],[3,"Done"],[3,"Psm"],[3,"Ch0Top"],[3,"Ch2Top"],[3,"Ch4Ctr"],[3,"Ch0Csr"],[3,"Ch4Div"],[3,"Ch0Cc"],[3,"Ch2Csr"],[3,"Ch3Cc"],[3,"Ch1Ctr"],[3,"Ch4Top"],[3,"Ch3Csr"],[3,"Ch2Cc"],[3,"Ch6Div"],[3,"Ch5Csr"],[3,"Ch6Cc"],[3,"Ints"],[3,"Intf"],[3,"Ch1Top"],[3,"Ch2Div"],[3,"Ch4Csr"],[3,"Ch3Div"],[3,"Ch6Top"],[3,"Ch1Div"],[3,"En"],[3,"Ch7Ctr"],[3,"Ch4Cc"],[3,"Ch5Cc"],[3,"Ch1Cc"],[3,"Ch7Div"],[3,"Ch5Ctr"],[3,"Ch6Ctr"],[3,"Ch3Top"],[3,"Ch6Csr"],[3,"Ch7Cc"],[3,"Ch3Ctr"],[3,"Ch1Csr"],[3,"Ch7Top"],[3,"Ch0Ctr"],[3,"Ch0Div"],[3,"Ch2Ctr"],[3,"Ch5Div"],[3,"Intr"],[3,"Ch7Csr"],[3,"Inte"],[3,"Ch5Top"],[3,"Divmode"],[3,"Pwm"],[3,"Peripherals"],[3,"Wdsel"],[3,"Resets"],[3,"Phase"],[3,"Randombit"],[3,"Status"],[3,"Ctrl"],[3,"Freqb"],[3,"Freqa"],[3,"Count"],[3,"Div"],[3,"CtrlFreqRange"],[3,"Passwd"],[3,"CtrlEnable"],[3,"DivDiv"],[3,"Rosc"],[3,"Intf"],[3,"Inte"],[3,"Setup1"],[3,"Setup0"],[3,"ClkdivM1"],[3,"Rtc0"],[3,"IrqSetup0"],[3,"IrqSetup1"],[3,"Ints"],[3,"Rtc1"],[3,"Intr"],[3,"Ctrl"],[3,"Rtc"],[3,"Interp1CtrlLane0"],[3,"Interp1Accum0Add"],[3,"GpioHiOut"],[3,"GpioHiOutXor"],[3,"Interp0CtrlLane0"],[3,"GpioHiOutSet"],[3,"GpioOe"],[3,"GpioHiOutClr"],[3,"Interp1Accum1Add"],[3,"GpioHiOe"],[3,"GpioHiIn"],[3,"GpioOeSet"],[3,"GpioOutSet"],[3,"GpioHiOeXor"],[3,"GpioOutXor"],[3,"DivCsr"],[3,"GpioOeClr"],[3,"FifoSt"],[3,"GpioHiOeSet"],[3,"Interp0Accum0Add"],[3,"Interp0Accum1Add"],[3,"GpioOut"],[3,"GpioIn"],[3,"GpioHiOeClr"],[3,"Interp0CtrlLane1"],[3,"GpioOeXor"],[3,"GpioOutClr"],[3,"Interp1CtrlLane1"],[3,"Sio"],[3,"Sspperiphid0"],[3,"Sspsr"],[3,"Sspperiphid1"],[3,"Sspcpsr"],[3,"Sspcr0"],[3,"Sspmis"],[3,"Ssppcellid1"],[3,"Ssppcellid0"],[3,"Sspperiphid3"],[3,"Sspdr"],[3,"Ssppcellid2"],[3,"Sspris"],[3,"Sspcr1"],[3,"Ssppcellid3"],[3,"Sspdmacr"],[3,"Sspperiphid2"],[3,"Sspimsc"],[3,"Sspicr"],[3,"Spi0"],[3,"ProcInSyncBypass"],[3,"Mempowerdown"],[3,"ProcConfig"],[3,"Dbgforce"],[3,"ProcInSyncBypassHi"],[3,"Syscfg"],[3,"Platform"],[3,"ChipId"],[3,"Sysinfo"],[3,"Platform"],[3,"Tbman"],[3,"Dbgpause"],[3,"Pause"],[3,"Inte"],[3,"Armed"],[3,"Ints"],[3,"Intf"],[3,"Intr"],[3,"Timer"],[3,"Uartibrd"],[3,"Uartperiphid3"],[3,"Uartpcellid1"],[3,"Uartdr"],[3,"Uartmis"],[3,"Uartperiphid2"],[3,"Uartperiphid1"],[3,"Uartris"],[3,"Uartpcellid2"],[3,"Uartpcellid3"],[3,"UartlcrH"],[3,"Uartperiphid0"],[3,"Uartfbrd"],[3,"Uartimsc"],[3,"Uarticr"],[3,"Uartfr"],[3,"Uartifls"],[3,"Uartilpr"],[3,"Uartdmacr"],[3,"Uartcr"],[3,"Uartpcellid0"],[3,"Uartrsr"],[3,"Uart0"],[3,"UsbphyTrim"],[3,"AddrEndp8"],[3,"SofRd"],[3,"UsbPwr"],[3,"EpStatusStallNak"],[3,"AddrEndp10"],[3,"MainCtrl"],[3,"SieStatus"],[3,"NakPoll"],[3,"AddrEndp13"],[3,"AddrEndp7"],[3,"Inte"],[3,"AddrEndp4"],[3,"AddrEndp14"],[3,"AddrEndp"],[3,"AddrEndp15"],[3,"Intr"],[3,"AddrEndp11"],[3,"BuffStatus"],[3,"SofWr"],[3,"EpAbortDone"],[3,"UsbphyDirect"],[3,"AddrEndp6"],[3,"BuffCpuShouldHandle"],[3,"Ints"],[3,"UsbMuxing"],[3,"IntEpCtrl"],[3,"AddrEndp2"],[3,"AddrEndp5"],[3,"EpStallArm"],[3,"AddrEndp3"],[3,"EpAbort"],[3,"UsbphyDirectOverride"],[3,"SieCtrl"],[3,"AddrEndp9"],[3,"AddrEndp1"],[3,"Intf"],[3,"AddrEndp12"],[3,"UsbctrlRegs"],[3,"ChipReset"],[3,"Vreg"],[3,"Bod"],[3,"VregAndChipReset"],[3,"Tick"],[3,"Reason"],[3,"Ctrl"],[3,"Load"],[3,"Watchdog"],[3,"Flush"],[3,"StreamAddr"],[3,"Stat"],[3,"Ctrl"],[3,"StreamCtr"],[3,"XipCtrl"],[3,"Msticr"],[3,"Ctrlr0"],[3,"SpiCtrlr0"],[3,"Rxflr"],[3,"Baudr"],[3,"Txflr"],[3,"Imr"],[3,"Isr"],[3,"Dmacr"],[3,"Icr"],[3,"Idr"],[3,"SsiVersionId"],[3,"Txoicr"],[3,"Dmatdlr"],[3,"Dmardlr"],[3,"Ssienr"],[3,"Risr"],[3,"TxdDriveEdge"],[3,"RxSampleDly"],[3,"Dr0"],[3,"Rxoicr"],[3,"Mwcr"],[3,"Rxuicr"],[3,"Ctrlr1"],[3,"Txftlr"],[3,"Ser"],[3,"Sr"],[3,"Rxftlr"],[3,"SpiCtrlr0TransType"],[3,"SpiCtrlr0InstL"],[3,"Ctrlr0Tmod"],[3,"Ctrlr0SpiFrf"],[3,"XipSsi"],[3,"Status"],[3,"Count"],[3,"Ctrl"],[3,"Startup"],[3,"CtrlFreqRange"],[3,"CtrlEnable"],[3,"StatusFreqRange"],[3,"Xosc"],[3,"CorePeripherals"],[4,"Interrupt"],[3,"RW"],[3,"R"],[3,"W"],[3,"CBP"],[3,"CPUID"],[3,"DCB"],[3,"DWT"],[3,"FPB"],[3,"ITM"],[3,"MPU"],[3,"NVIC"],[3,"SCB"],[3,"SYST"],[3,"TPIU"]]},\
"vcell":{"doc":"Just like <code>Cell</code> but with volatile read / write operations","i":[[3,"VolatileCell","vcell","Just like <code>Cell</code> but with volatile read / write operations",null,null],[11,"new","","Creates a new <code>VolatileCell</code> containing the given value",0,[[]]],[11,"get","","Returns a copy of the contained value",0,[[]]],[11,"set","","Sets the contained value",0,[[]]],[11,"as_ptr","","Returns a raw pointer to the underlying data in the cell",0,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]]],"p":[[3,"VolatileCell"]]},\
"void":{"doc":"VoidThe uninhabited void type for use in statically …","i":[[4,"Void","void","The empty type for cases which can\'t occur.",null,null],[5,"unreachable","","A safe version of <code>intrinsincs::unreachable</code>.",null,[[["void",4]]]],[8,"ResultVoidExt","","Extensions to <code>Result<T, Void></code>",null,null],[10,"void_unwrap","","Get the value out of a wrapper.",0,[[]]],[8,"ResultVoidErrExt","","Extensions to <code>Result<Void, E></code>",null,null],[10,"void_unwrap_err","","Get the error out of a wrapper.",1,[[]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"eq","","",2,[[]]],[11,"partial_cmp","","",2,[[],[["ordering",4],["option",4]]]],[11,"clone","","",2,[[],["void",4]]]],"p":[[8,"ResultVoidExt"],[8,"ResultVoidErrExt"],[4,"Void"]]},\
"volatile_register":{"doc":"Volatile access to memory mapped hardware registers","i":[[3,"RO","volatile_register","Read-Only register",null,null],[11,"read","","Reads the value of the register",0,[[]]],[3,"RW","","Read-Write register",null,null],[11,"modify","","Performs a read-modify-write operation",1,[[]]],[11,"read","","Reads the value of the register",1,[[]]],[11,"write","","Writes a <code>value</code> into the register",1,[[]]],[3,"WO","","Write-Only register",null,null],[11,"write","","Writes <code>value</code> into the register",2,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]]],"p":[[3,"RO"],[3,"RW"],[3,"WO"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);